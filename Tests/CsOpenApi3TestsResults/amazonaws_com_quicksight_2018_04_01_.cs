//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelIngestionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidParameterValueException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalFailureException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAccountCustomizationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountCustomization AccountCustomization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountCustomization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultEmailCustomizationTemplate { get; set; }
	}
	
	/// <summary>
	/// The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAccountSubscriptionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SignupResponse SignupResponse { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A <code>SignupResponse</code> object that contains a summary of a newly created account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IAMUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userLoginName")]
		public string UserLoginName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="directoryType")]
		public string DirectoryType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PreconditionNotMetException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_SUCCESSFUL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_SUCCESSFUL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 6,
	}
	
	/// <summary>
	/// A string parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// An integer parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegerParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int[] Values { get; set; }
	}
	
	/// <summary>
	/// A decimal parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double[] Values { get; set; }
	}
	
	/// <summary>
	/// A date-time parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Permission for the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourcePermission
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Principal { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Actions { get; set; }
	}
	
	/// <summary>
	/// The source template of an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSourceTemplate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetReference[] DataSetReferences { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Dataset reference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetReference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetPlaceholder { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetArn { get; set; }
	}
	
	/// <summary>
	/// A data set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetIdentifierDeclaration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Identifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetArn { get; set; }
	}
	
	/// <summary>
	/// A sheet is an object that contains a set of visuals that are viewed together on one page in a paginated report. Every analysis and dashboard must contain at least one sheet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SheetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterControl[] ParameterControls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterControl[] FilterControls { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visual[] Visuals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetTextBox[] TextBoxes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout[] Layouts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlLayout[] SheetControlLayouts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetContentType ContentType { get; set; }
	}
	
	/// <summary>
	/// <p>The control of a parameter that users can interact with in a dashboard or an analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterControl
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDateTimePickerControl DateTimePicker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterListControl List { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDropDownControl Dropdown { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterTextFieldControl TextField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterTextAreaControl TextArea { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterSliderControl Slider { get; set; }
	}
	
	/// <summary>
	/// A control from a date parameter that specifies date and time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterDateTimePickerControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimePickerControlDisplayOptions DisplayOptions { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimePickerControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTimeFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// The share label options for the labels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration FontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Visibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIDDEN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VISIBLE = 1,
	}
	
	/// <summary>
	/// Configures the display properties of the given text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FontConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FontSize FontSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontDecoration FontDecoration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FontColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontWeight FontWeight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontStyle FontStyle { get; set; }
	}
	
	/// <summary>
	/// The option that determines the text display size.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FontSize
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RelativeFontSize Relative { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RelativeFontSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTRA_SMALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMALL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LARGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTRA_LARGE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FontDecoration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDERLINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
	}
	
	/// <summary>
	/// The option that determines the text display weight, or boldness.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FontWeight
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FontWeightName Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FontWeightName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOLD = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FontStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITALIC = 1,
	}
	
	/// <summary>
	/// A control to display info icons for filters and parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetControlInfoIconLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InfoIconText { get; set; }
	}
	
	/// <summary>
	/// A control to display a list with buttons or boxes that are used to select either a single value or multiple values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterListControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListControlDisplayOptions DisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlListType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterSelectableValues SelectableValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CascadingControlConfiguration CascadingControlConfiguration { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListControlSearchOptions SearchOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListControlSelectAllOptions SelectAllOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// The configuration of the search options in a list control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListControlSearchOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The configuration of the <code>Select all</code> options in a list control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListControlSelectAllOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SheetControlListType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_SELECT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_SELECT = 1,
	}
	
	/// <summary>
	/// A list of selectable values that are used in a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterSelectableValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier LinkToDataSetColumn { get; set; }
	}
	
	/// <summary>
	/// A column of a data set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnIdentifier
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CascadingControlConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CascadingControlSource[] SourceControls { get; set; }
	}
	
	/// <summary>
	/// The source controls that are used in a <code>CascadingControlConfiguration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CascadingControlSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceSheetControlId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier ColumnToMatch { get; set; }
	}
	
	/// <summary>
	/// A control to display a dropdown list with buttons that are used to select a single value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterDropDownControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DropDownControlDisplayOptions DisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlListType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterSelectableValues SelectableValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CascadingControlConfiguration CascadingControlConfiguration { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DropDownControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListControlSelectAllOptions SelectAllOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// A control to display a text box that is used to enter a single entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterTextFieldControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextFieldControlDisplayOptions DisplayOptions { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextFieldControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextControlPlaceholderOptions PlaceholderOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// The configuration of the placeholder options in a text control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextControlPlaceholderOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// A control to display a text box that is used to enter multiple entries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterTextAreaControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Delimiter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextAreaControlDisplayOptions DisplayOptions { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextAreaControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextControlPlaceholderOptions PlaceholderOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterSliderControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SliderControlDisplayOptions DisplayOptions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double MaximumValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double MinimumValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StepSize { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SliderControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// <p>The control of a filter that is used to interact with a dashboard or an analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterControl
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilterDateTimePickerControl DateTimePicker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterListControl List { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterDropDownControl Dropdown { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterTextFieldControl TextField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterTextAreaControl TextArea { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterSliderControl Slider { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterRelativeDateTimeControl RelativeDateTime { get; set; }
	}
	
	/// <summary>
	/// A control from a date filter that is used to specify date and time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterDateTimePickerControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimePickerControlDisplayOptions DisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlDateTimePickerType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SheetControlDateTimePickerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_VALUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_RANGE = 1,
	}
	
	/// <summary>
	/// A control to display a list of buttons or boxes. This is used to select either a single value or multiple values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterListControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListControlDisplayOptions DisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlListType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterSelectableValues SelectableValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CascadingControlConfiguration CascadingControlConfiguration { get; set; }
	}
	
	/// <summary>
	/// A list of selectable values that are used in a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterSelectableValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// A control to display a dropdown list with buttons that are used to select a single value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterDropDownControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DropDownControlDisplayOptions DisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlListType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterSelectableValues SelectableValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CascadingControlConfiguration CascadingControlConfiguration { get; set; }
	}
	
	/// <summary>
	/// A control to display a text box that is used to enter a single entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterTextFieldControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextFieldControlDisplayOptions DisplayOptions { get; set; }
	}
	
	/// <summary>
	/// A control to display a text box that is used to enter multiple entries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterTextAreaControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Delimiter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextAreaControlDisplayOptions DisplayOptions { get; set; }
	}
	
	/// <summary>
	/// A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterSliderControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SliderControlDisplayOptions DisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlSliderType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double MaximumValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double MinimumValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StepSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SheetControlSliderType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_POINT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANGE = 1,
	}
	
	/// <summary>
	/// A control from a date filter that is used to specify the relative date.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterRelativeDateTimeControl
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterControlId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceFilterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelativeDateTimeControlDisplayOptions DisplayOptions { get; set; }
	}
	
	/// <summary>
	/// The display options of a control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RelativeDateTimeControlDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions TitleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTimeFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlInfoIconLabelOptions InfoIconLabelOptions { get; set; }
	}
	
	/// <summary>
	/// <p>A visual displayed on a sheet in an analysis, dashboard, or template.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Visual
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableVisual TableVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableVisual PivotTableVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BarChartVisual BarChartVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KPIVisual KPIVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PieChartVisual PieChartVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartVisual GaugeChartVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartVisual LineChartVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HeatMapVisual HeatMapVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TreeMapVisual TreeMapVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialMapVisual GeospatialMapVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilledMapVisual FilledMapVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartVisual FunnelChartVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScatterPlotVisual ScatterPlotVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComboChartVisual ComboChartVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotVisual BoxPlotVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaterfallVisual WaterfallVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HistogramVisual HistogramVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudVisual WordCloudVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightVisual InsightVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SankeyDiagramVisual SankeyDiagramVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomContentVisual CustomContentVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EmptyVisual EmptyVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartVisual RadarChartVisual { get; set; }
	}
	
	/// <summary>
	/// <p>A table visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/tabular.html">Using tables as visuals</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableConditionalFormatting ConditionalFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The title label options for a visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualTitleLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ShortFormatText FormatText { get; set; }
	}
	
	/// <summary>
	/// <p>The text format for the title.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShortFormatText
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PlainText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RichText { get; set; }
	}
	
	/// <summary>
	/// The subtitle label options for a visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualSubtitleLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LongFormatText FormatText { get; set; }
	}
	
	/// <summary>
	/// <p>The text format for a subtitle.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LongFormatText
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PlainText { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RichText { get; set; }
	}
	
	/// <summary>
	/// The configuration for a <code>TableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableOptions TableOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TotalOptions TotalOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldOptions FieldOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TablePaginatedReportOptions PaginatedReportOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableInlineVisualization[] TableInlineVisualizations { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells for a table visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableAggregatedFieldWells TableAggregatedFieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableUnaggregatedFieldWells TableUnaggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field well for the table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The dimension type field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionField
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericalDimensionField NumericalDimensionField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoricalDimensionField CategoricalDimensionField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateDimensionField DateDimensionField { get; set; }
	}
	
	/// <summary>
	/// The dimension type field with numerical type columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericalDimensionField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFormatConfiguration FormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// Formatting configuration for number fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumberFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericFormatConfiguration FormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>The options that determine the numeric format configuration.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumberDisplayFormatConfiguration NumberDisplayFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDisplayFormatConfiguration CurrencyDisplayFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PercentageDisplayFormatConfiguration PercentageDisplayFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The options that determine the number display format configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumberDisplayFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericSeparatorConfiguration SeparatorConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalPlacesConfiguration DecimalPlacesConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberScale NumberScale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NegativeValueConfiguration NegativeValueConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NullValueFormatConfiguration NullValueFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The options that determine the numeric separator configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericSeparatorConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericSeparatorSymbol DecimalSeparator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThousandSeparatorOptions ThousandsSeparator { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NumericSeparatorSymbol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMA = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPACE = 2,
	}
	
	/// <summary>
	/// The options that determine the thousands separator configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThousandSeparatorOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericSeparatorSymbol Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The option that determines the decimal places configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalPlacesConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int DecimalPlaces { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NumberScale
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THOUSANDS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILLIONS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILLIONS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRILLIONS = 5,
	}
	
	/// <summary>
	/// The options that determine the negative value configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NegativeValueConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NegativeValueDisplayMode DisplayMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NegativeValueDisplayMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSITIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEGATIVE = 1,
	}
	
	/// <summary>
	/// The options that determine the null value format configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NullValueFormatConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NullString { get; set; }
	}
	
	/// <summary>
	/// The options that determine the currency display format configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrencyDisplayFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericSeparatorConfiguration SeparatorConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalPlacesConfiguration DecimalPlacesConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberScale NumberScale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NegativeValueConfiguration NegativeValueConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NullValueFormatConfiguration NullValueFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The options that determine the percentage display format configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PercentageDisplayFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericSeparatorConfiguration SeparatorConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalPlacesConfiguration DecimalPlacesConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NegativeValueConfiguration NegativeValueConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NullValueFormatConfiguration NullValueFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The dimension type field with categorical type columns..
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoricalDimensionField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFormatConfiguration FormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// Formatting configuration for string fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NullValueFormatConfiguration NullValueFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericFormatConfiguration NumericFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The dimension type field with date type columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateDimensionField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity DateGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeFormatConfiguration FormatConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TimeGranularity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUARTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOUR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUTE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECOND = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILLISECOND = 8,
	}
	
	/// <summary>
	/// Formatting configuration for <code>DateTime</code> fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTimeFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NullValueFormatConfiguration NullValueFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericFormatConfiguration NumericFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The measure (metric) type field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MeasureField
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericalMeasureField NumericalMeasureField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoricalMeasureField CategoricalMeasureField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateMeasureField DateMeasureField { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedMeasureField CalculatedMeasureField { get; set; }
	}
	
	/// <summary>
	/// The measure type field with numerical type columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericalMeasureField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericalAggregationFunction AggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFormatConfiguration FormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// Aggregation for numerical values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericalAggregationFunction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleNumericalAggregationFunction SimpleNumericalAggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PercentileAggregation PercentileAggregation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimpleNumericalAggregationFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VAR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VARP = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEV = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEVP = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIAN = 10,
	}
	
	/// <summary>
	/// An aggregation based on the percentile of values in a dimension or measure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PercentileAggregation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PercentileValue { get; set; }
	}
	
	/// <summary>
	/// The measure type field with categorical type columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoricalMeasureField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoricalAggregationFunction AggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringFormatConfiguration FormatConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CategoricalAggregationFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 1,
	}
	
	/// <summary>
	/// The measure type field with date type columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateMeasureField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateAggregationFunction AggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeFormatConfiguration FormatConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DateAggregationFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 3,
	}
	
	/// <summary>
	/// The table calculation measure field for pivot tables.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CalculatedMeasureField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
	}
	
	/// <summary>
	/// The unaggregated field well for the table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableUnaggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UnaggregatedField[] Values { get; set; }
	}
	
	/// <summary>
	/// The unaggregated field for a table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnaggregatedField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FormatConfiguration FormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The formatting configuration for all types of field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringFormatConfiguration StringFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberFormatConfiguration NumberFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeFormatConfiguration DateTimeFormatConfiguration { get; set; }
	}
	
	/// <summary>
	/// The sort configuration for a <code>TableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] RowSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaginationConfiguration PaginationConfiguration { get; set; }
	}
	
	/// <summary>
	/// The field sort options in a chart configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldSortOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSort FieldSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnSort ColumnSort { get; set; }
	}
	
	/// <summary>
	/// The sort configuration for a field in a field well.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldSort
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SortDirection Direction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	/// <summary>
	/// The sort configuration for a column that is not used in a field well.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnSort
	{
		
		/// <summary>
		/// A column of a data set.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier SortBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SortDirection Direction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction AggregationFunction { get; set; }
	}
	
	/// <summary>
	/// <p>An aggregation function aggregates values from a dimension or measure.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AggregationFunction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericalAggregationFunction NumericalAggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoricalAggregationFunction CategoricalAggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateAggregationFunction DateAggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeAggregationFunction AttributeAggregationFunction { get; set; }
	}
	
	/// <summary>
	/// Aggregation for attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeAggregationFunction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleAttributeAggregationFunction SimpleAttributeAggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ValueForMultipleValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SimpleAttributeAggregationFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIQUE_VALUE = 0,
	}
	
	/// <summary>
	/// The pagination configuration for a table visual or boxplot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaginationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int PageSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int PageNumber { get; set; }
	}
	
	/// <summary>
	/// The table options for a table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableOrientation Orientation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle HeaderStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle CellStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowAlternateColorOptions RowAlternateColorOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableOrientation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERTICAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HORIZONTAL = 1,
	}
	
	/// <summary>
	/// The table cell style for a cell in pivot table or table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableCellStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration FontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextWrap TextWrap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HorizontalTextAlignment HorizontalTextAlignment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VerticalTextAlignment VerticalTextAlignment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackgroundColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Height { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GlobalTableBorderOptions Border { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TextWrap
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WRAP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HorizontalTextAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CENTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerticalTextAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIDDLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTOM = 2,
	}
	
	/// <summary>
	/// Determines the border options for a table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlobalTableBorderOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions UniformBorder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableSideBorderOptions SideSpecificBorder { get; set; }
	}
	
	/// <summary>
	/// The border options for a table border.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableBorderOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Thickness { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderStyle Style { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableBorderStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLID = 1,
	}
	
	/// <summary>
	/// The side border options for a table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableSideBorderOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions InnerVertical { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions InnerHorizontal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions Left { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions Right { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions Top { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableBorderOptions Bottom { get; set; }
	}
	
	/// <summary>
	/// Determines the row alternate color options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RowAlternateColorOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RowAlternateColors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WidgetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// The total options for a table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TotalOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility TotalsVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableTotalsPlacement Placement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableTotalsScrollStatus ScrollStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle TotalCellStyle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableTotalsPlacement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		END = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableTotalsScrollStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PINNED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCROLLED = 1,
	}
	
	/// <summary>
	/// The field options for a table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldOption[] SelectedFieldOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Order { get; set; }
	}
	
	/// <summary>
	/// The options for a table field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Width { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldURLConfiguration URLStyling { get; set; }
	}
	
	/// <summary>
	/// The URL configuration for a table field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldURLConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldLinkConfiguration LinkConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldImageConfiguration ImageConfiguration { get; set; }
	}
	
	/// <summary>
	/// The link configuration of a table field URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldLinkConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public URLTargetConfiguration Target { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TableFieldLinkContentConfiguration Content { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum URLTargetConfiguration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW_TAB = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW_WINDOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAME_TAB = 2,
	}
	
	/// <summary>
	/// The URL content (text, icon) for the table link configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldLinkContentConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldCustomTextContent CustomTextContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldCustomIconContent CustomIconContent { get; set; }
	}
	
	/// <summary>
	/// The custom text content (value, font configuration) for the table link content configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldCustomTextContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration FontConfiguration { get; set; }
	}
	
	/// <summary>
	/// The custom icon content for the table link content configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldCustomIconContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableFieldIconSetType Icon { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableFieldIconSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINK = 0,
	}
	
	/// <summary>
	/// The image configuration of a table field URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableFieldImageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellImageSizingConfiguration SizingOptions { get; set; }
	}
	
	/// <summary>
	/// The sizing options for the table image configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableCellImageSizingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellImageScalingConfiguration TableCellImageScalingConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TableCellImageScalingConfiguration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIT_TO_CELL_HEIGHT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIT_TO_CELL_WIDTH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOT_SCALE = 2,
	}
	
	/// <summary>
	/// The paginated report options for a table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TablePaginatedReportOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility VerticalOverflowVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility OverflowColumnHeaderVisibility { get; set; }
	}
	
	/// <summary>
	/// The inline visualization of a specific type to display within a chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableInlineVisualization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataBarsOptions DataBars { get; set; }
	}
	
	/// <summary>
	/// The options for data bars.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataBarsOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PositiveColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NegativeColor { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting for a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableConditionalFormattingOption[] ConditionalFormattingOptions { get; set; }
	}
	
	/// <summary>
	/// Conditional formatting options for a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableConditionalFormattingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellConditionalFormatting Cell { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableRowConditionalFormatting Row { get; set; }
	}
	
	/// <summary>
	/// The cell conditional formatting option for a table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableCellConditionalFormatting
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextConditionalFormat TextFormat { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting for the text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextConditionalFormat
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor BackgroundColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor TextColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIcon Icon { get; set; }
	}
	
	/// <summary>
	/// The formatting configuration for the color.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingColor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingSolidColor Solid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingGradientColor Gradient { get; set; }
	}
	
	/// <summary>
	/// Formatting configuration for solid color.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingSolidColor
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// Formatting configuration for gradient color.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingGradientColor
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GradientColor Color { get; set; }
	}
	
	/// <summary>
	/// Determines the gradient color settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GradientColor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GradientStop[] Stops { get; set; }
	}
	
	/// <summary>
	/// Determines the gradient stop configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GradientStop
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double GradientOffset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DataValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// The formatting configuration for the icon.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingIcon
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIconSet IconSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingCustomIconCondition CustomCondition { get; set; }
	}
	
	/// <summary>
	/// Formatting configuration for icon set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingIconSet
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIconSetType IconSetType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConditionalFormattingIconSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLUS_MINUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHECK_X = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREE_COLOR_ARROW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREE_GRAY_ARROW = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CARET_UP_MINUS_DOWN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREE_SHAPE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREE_CIRCLE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLAGS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BARS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOUR_COLOR_ARROW = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOUR_GRAY_ARROW = 10,
	}
	
	/// <summary>
	/// Determines the custom condition for an icon set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingCustomIconCondition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingCustomIconOptions IconOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIconDisplayConfiguration DisplayConfiguration { get; set; }
	}
	
	/// <summary>
	/// Custom icon options for an icon set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingCustomIconOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Icon Icon { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UnicodeIcon { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Icon
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CARET_UP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CARET_DOWN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLUS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_UP = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_DOWN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_LEFT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_UP_LEFT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_DOWN_LEFT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_RIGHT = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_UP_RIGHT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARROW_DOWN_RIGHT = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FACE_UP = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FACE_DOWN = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FACE_FLAT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_BAR = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWO_BAR = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREE_BAR = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CIRCLE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIANGLE = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQUARE = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLAG = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THUMBS_UP = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THUMBS_DOWN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHECKMARK = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		X = 25,
	}
	
	/// <summary>
	/// Determines the icon display configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalFormattingIconDisplayConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIconDisplayOption IconDisplayOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConditionalFormattingIconDisplayOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICON_ONLY = 0,
	}
	
	/// <summary>
	/// The conditional formatting of a table row.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableRowConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor BackgroundColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor TextColor { get; set; }
	}
	
	/// <summary>
	/// A custom action defined on a visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualCustomAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CustomActionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomActionTrigger Trigger { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomActionOperation[] ActionOperations { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VisualCustomActionTrigger
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_POINT_CLICK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_POINT_MENU = 1,
	}
	
	/// <summary>
	/// <p>The operation that is defined by the custom action.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualCustomActionOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomActionFilterOperation FilterOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomActionNavigationOperation NavigationOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomActionURLOperation URLOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomActionSetParametersOperation SetParametersOperation { get; set; }
	}
	
	/// <summary>
	/// The filter operation that filters data included in a visual or in an entire sheet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomActionFilterOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterOperationSelectedFieldsConfiguration SelectedFieldsConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterOperationTargetVisualsConfiguration TargetVisualsConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration of selected fields in the<code>CustomActionFilterOperation</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterOperationSelectedFieldsConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SelectedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelectedFieldOptions SelectedFieldOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier[] SelectedColumns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SelectedFieldOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_FIELDS = 0,
	}
	
	/// <summary>
	/// <p>The configuration of target visuals that you want to be filtered.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterOperationTargetVisualsConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SameSheetTargetVisualConfiguration SameSheetTargetVisualConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration of the same-sheet target visuals that you want to be filtered.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SameSheetTargetVisualConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetVisuals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TargetVisualOptions TargetVisualOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetVisualOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_VISUALS = 0,
	}
	
	/// <summary>
	/// <p>The navigation operation that navigates between different sheets in the same analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomActionNavigationOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LocalNavigationConfiguration LocalNavigationConfiguration { get; set; }
	}
	
	/// <summary>
	/// The navigation configuration for <code>CustomActionNavigationOperation</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LocalNavigationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetSheetId { get; set; }
	}
	
	/// <summary>
	/// The URL operation that opens a link to another webpage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomActionURLOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string URLTemplate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public URLTargetConfiguration URLTarget { get; set; }
	}
	
	/// <summary>
	/// The set parameter operation that sets parameters in custom action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomActionSetParametersOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SetParameterValueConfiguration[] ParameterValueConfigurations { get; set; }
	}
	
	/// <summary>
	/// The configuration of adding parameters in action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetParameterValueConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationParameterName { get; set; }
		
		/// <summary>
		/// <p>The configuration of destination parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DestinationParameterValueConfiguration Value { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration of destination parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DestinationParameterValueConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomValuesConfiguration CustomValuesConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelectAllValueOptions SelectAllValueOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceField { get; set; }
		
		/// <summary>
		/// A column of a data set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier SourceColumn { get; set; }
	}
	
	/// <summary>
	/// The configuration of custom values for the destination parameter in <code>DestinationParameterValueConfiguration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomValuesConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeNullValue { get; set; }
		
		/// <summary>
		/// <p>The customized parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomParameterValues CustomValues { get; set; }
	}
	
	/// <summary>
	/// <p>The customized parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomParameterValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StringValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IntegerValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DecimalValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DateTimeValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SelectAllValueOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_VALUES = 0,
	}
	
	/// <summary>
	/// <p>A pivot table.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/pivot-table.html">Using pivot tables</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableConditionalFormatting ConditionalFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration for a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableOptions TableOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableTotalOptions TotalOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldOptions FieldOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTablePaginatedReportOptions PaginatedReportOptions { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells for a pivot table visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableAggregatedFieldWells PivotTableAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field well for the pivot table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Rows { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Columns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The sort configuration for a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotFieldSortOptions[] FieldSortOptions { get; set; }
	}
	
	/// <summary>
	/// The field sort options for a pivot table sort configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotFieldSortOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PivotTableSortBy SortBy { get; set; }
	}
	
	/// <summary>
	/// The sort by field for the field sort options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableSortBy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSort Field { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnSort Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPathSort DataPath { get; set; }
	}
	
	/// <summary>
	/// Allows data paths to be sorted by a specific data value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPathSort
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SortDirection Direction { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataPathValue[] SortPaths { get; set; }
	}
	
	/// <summary>
	/// The data path that needs to be sorted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPathValue
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldValue { get; set; }
	}
	
	/// <summary>
	/// The table options for a pivot table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableMetricPlacement MetricPlacement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility SingleMetricVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility ColumnNamesVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility ToggleButtonsVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle ColumnHeaderStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle RowHeaderStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle CellStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle RowFieldNamesStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowAlternateColorOptions RowAlternateColorOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility CollapsedRowDimensionsVisibility { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PivotTableMetricPlacement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN = 1,
	}
	
	/// <summary>
	/// The total options for a pivot table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableTotalOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SubtotalOptions RowSubtotalOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SubtotalOptions ColumnSubtotalOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTotalOptions RowTotalOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTotalOptions ColumnTotalOptions { get; set; }
	}
	
	/// <summary>
	/// The subtotal options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubtotalOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility TotalsVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableSubtotalLevel FieldLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldSubtotalOptions[] FieldLevelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle TotalCellStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle ValueCellStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle MetricHeaderCellStyle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PivotTableSubtotalLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST = 2,
	}
	
	/// <summary>
	/// The optional configuration of subtotals cells.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableFieldSubtotalOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
	}
	
	/// <summary>
	/// The optional configuration of totals cells in a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTotalOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility TotalsVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableTotalsPlacement Placement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableTotalsScrollStatus ScrollStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle TotalCellStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle ValueCellStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TableCellStyle MetricHeaderCellStyle { get; set; }
	}
	
	/// <summary>
	/// The field options for a pivot table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableFieldOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldOption[] SelectedFieldOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableDataPathOption[] DataPathOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldCollapseStateOption[] CollapseStateOptions { get; set; }
	}
	
	/// <summary>
	/// The selected field options for the pivot table field options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableFieldOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The data path options for the pivot table field options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableDataPathOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataPathValue[] DataPathList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Width { get; set; }
	}
	
	/// <summary>
	/// The collapse state options for the pivot table field options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableFieldCollapseStateOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldCollapseStateTarget Target { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableFieldCollapseState State { get; set; }
	}
	
	/// <summary>
	/// The target of a pivot table field collapse state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableFieldCollapseStateTarget
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPathValue[] FieldDataPathValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PivotTableFieldCollapseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLLAPSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPANDED = 1,
	}
	
	/// <summary>
	/// The paginated report options for a pivot table visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTablePaginatedReportOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility VerticalOverflowVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility OverflowColumnHeaderVisibility { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting for a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableConditionalFormattingOption[] ConditionalFormattingOptions { get; set; }
	}
	
	/// <summary>
	/// Conditional formatting options for a <code>PivotTableVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableConditionalFormattingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableCellConditionalFormatting Cell { get; set; }
	}
	
	/// <summary>
	/// The cell conditional formatting option for a pivot table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableCellConditionalFormatting
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextConditionalFormat TextFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableConditionalFormattingScope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableConditionalFormattingScope[] Scopes { get; set; }
	}
	
	/// <summary>
	/// The scope of the cell for conditional formatting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PivotTableConditionalFormattingScope
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PivotTableConditionalFormattingScopeRole Role { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PivotTableConditionalFormattingScopeRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIELD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIELD_TOTAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRAND_TOTAL = 2,
	}
	
	/// <summary>
	/// <p>A bar chart.</p> <p>The <code>BarChartVisual</code> structure describes a visual that is a member of the bar chart family. The following charts can be described using this structure:</p> <ul> <li> <p>Horizontal bar chart</p> </li> <li> <p>Vertical bar chart</p> </li> <li> <p>Horizontal stacked bar chart</p> </li> <li> <p>Vertical stacked bar chart</p> </li> <li> <p>Horizontal stacked 100% bar chart</p> </li> <li> <p>Vertical stacked 100% bar chart</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/bar-charts.html">Using bar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BarChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BarChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>BarChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BarChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BarChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BarChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BarChartOrientation Orientation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BarsArrangement BarsArrangement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesOptions SmallMultiplesOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions CategoryAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions ValueAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ValueLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ColorLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLine[] ReferenceLines { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContributionAnalysisDefault[] ContributionAnalysisDefaults { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of a <code>BarChartVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BarChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BarChartAggregatedFieldWells BarChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field wells of a bar chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BarChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Colors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] SmallMultiples { get; set; }
	}
	
	/// <summary>
	/// sort-configuration-description
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BarChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] ColorSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration ColorItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] SmallMultiplesSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration SmallMultiplesLimitConfiguration { get; set; }
	}
	
	/// <summary>
	/// The limit configuration of the visual display for an axis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemsLimitConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OtherCategories OtherCategories { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OtherCategories
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCLUDE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUDE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BarChartOrientation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HORIZONTAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERTICAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BarsArrangement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTERED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STACKED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STACKED_PERCENT = 2,
	}
	
	/// <summary>
	/// The visual display options for the visual palette.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualPalette
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChartColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPathColor[] ColorMap { get; set; }
	}
	
	/// <summary>
	/// The color map that determines the color options for a particular element.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPathColor
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataPathValue Element { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
	}
	
	/// <summary>
	/// Options that determine the layout and display options of a chart's small multiples.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SmallMultiplesOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxVisibleRows { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxVisibleColumns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PanelConfiguration PanelConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesAxisProperties XAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesAxisProperties YAxis { get; set; }
	}
	
	/// <summary>
	/// A collection of options that configure how each panel displays in a small multiples chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PanelConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PanelTitleOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility BorderVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BorderThickness { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PanelBorderStyle BorderStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BorderColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility GutterVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GutterSpacing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility BackgroundVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackgroundColor { get; set; }
	}
	
	/// <summary>
	/// The options that determine the title styles for each small multiples panel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PanelTitleOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		/// <summary>
		/// Configures the display properties of the given text.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration FontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HorizontalTextAlignment HorizontalTextAlignment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PanelBorderStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASHED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOTTED = 2,
	}
	
	/// <summary>
	/// Configures the properties of a chart's axes that are used by small multiples panels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SmallMultiplesAxisProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesAxisScale Scale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesAxisPlacement Placement { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SmallMultiplesAxisScale
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEPENDENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SmallMultiplesAxisPlacement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTSIDE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSIDE = 1,
	}
	
	/// <summary>
	/// The display options for the axis label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AxisTickLabelOptions TickLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility AxisLineVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility GridLineVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDataOptions DataOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScrollBarOptions ScrollbarOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AxisOffset { get; set; }
	}
	
	/// <summary>
	/// The tick label options of an axis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisTickLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions LabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RotationAngle { get; set; }
	}
	
	/// <summary>
	/// <p>The data options for an axis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisDataOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericAxisOptions NumericAxisOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateAxisOptions DateAxisOptions { get; set; }
	}
	
	/// <summary>
	/// The options for an axis with a numeric field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericAxisOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AxisScale Scale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayRange Range { get; set; }
	}
	
	/// <summary>
	/// <p>The scale setup options for a numeric axis display.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisScale
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AxisLinearScale Linear { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisLogarithmicScale Logarithmic { get; set; }
	}
	
	/// <summary>
	/// <p>The liner axis scale setup.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisLinearScale
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StepCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StepSize { get; set; }
	}
	
	/// <summary>
	/// The logarithmic axis scale setup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisLogarithmicScale
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Base { get; set; }
	}
	
	/// <summary>
	/// <p>The range setup of a numeric axis display range.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisDisplayRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayMinMaxRange MinMax { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayDataDrivenRange DataDriven { get; set; }
	}
	
	/// <summary>
	/// The minimum and maximum setup for an axis display range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisDisplayMinMaxRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Minimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Maximum { get; set; }
	}
	
	/// <summary>
	/// The options that are saved for future extension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisDisplayDataDrivenRange
	{
	}
	
	/// <summary>
	/// The options that determine how a date axis is displayed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateAxisOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility MissingDateVisibility { get; set; }
	}
	
	/// <summary>
	/// The visual display options for a data zoom scroll bar.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScrollBarOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisibleRangeOptions VisibleRange { get; set; }
	}
	
	/// <summary>
	/// The range options for the data zoom scroll bar.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisibleRangeOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PercentVisibleRange PercentRange { get; set; }
	}
	
	/// <summary>
	/// The percent range in the visible range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PercentVisibleRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> From { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> To { get; set; }
	}
	
	/// <summary>
	/// The label options for an axis on a chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChartAxisLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility SortIconVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisLabelOptions[] AxisLabelOptions { get; set; }
	}
	
	/// <summary>
	/// The label options for a chart axis. You must specify the field that the label is targeted to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration FontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisLabelReferenceOptions ApplyTo { get; set; }
	}
	
	/// <summary>
	/// The reference that specifies where the axis label is applied to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AxisLabelReferenceOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
	}
	
	/// <summary>
	/// The options for the legend setup of a visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LegendOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendPosition Position { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Width { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Height { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LegendPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 3,
	}
	
	/// <summary>
	/// The options that determine the presentation of the data labels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility CategoryLabelVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility MeasureLabelVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelType[] DataLabelTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelPosition Position { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelContent LabelContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration LabelFontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LabelColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOverlap Overlap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility TotalsVisibility { get; set; }
	}
	
	/// <summary>
	/// <p>The option that determines the data label type.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataLabelType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldLabelType FieldLabelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPathLabelType DataPathLabelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RangeEndsLabelType RangeEndsLabelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MinimumLabelType MinimumLabelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MaximumLabelType MaximumLabelType { get; set; }
	}
	
	/// <summary>
	/// The field label type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldLabelType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The option that specifies individual data values for labels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPathLabelType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The range ends label type of a data path label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RangeEndsLabelType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The minimum label of a data path label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MinimumLabelType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The maximum label of a data path label.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MaximumLabelType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataLabelPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSIDE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTSIDE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEFT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTOM = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHT = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataLabelContent
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALUE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALUE_AND_PERCENT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataLabelOverlap
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLE_OVERLAP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLE_OVERLAP = 1,
	}
	
	/// <summary>
	/// The display options for the visual tooltip.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooltipOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility TooltipVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelectedTooltipType SelectedTooltipType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldBasedTooltip FieldBasedTooltip { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SelectedTooltipType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETAILED = 1,
	}
	
	/// <summary>
	/// The setup for the detailed tooltip.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldBasedTooltip
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility AggregationVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipTitleType TooltipTitleType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipItem[] TooltipFields { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TooltipTitleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY_VALUE = 1,
	}
	
	/// <summary>
	/// <p>The tooltip.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooltipItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldTooltipItem FieldTooltipItem { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnTooltipItem ColumnTooltipItem { get; set; }
	}
	
	/// <summary>
	/// The tooltip item for the fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldTooltipItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Label { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The tooltip item for the columns that are not part of a field well.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnTooltipItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Label { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction Aggregation { get; set; }
	}
	
	/// <summary>
	/// The reference line visual display options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLine
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineDataConfiguration DataConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineStyleConfiguration StyleConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineLabelConfiguration LabelConfiguration { get; set; }
	}
	
	/// <summary>
	/// The data configuration of the reference line.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineDataConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineStaticDataConfiguration StaticConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineDynamicDataConfiguration DynamicConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisBinding AxisBinding { get; set; }
	}
	
	/// <summary>
	/// The static data configuration of the reference line data configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineStaticDataConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// The dynamic configuration of the reference line data configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineDynamicDataConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction MeasureAggregationFunction { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NumericalAggregationFunction Calculation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AxisBinding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY_YAXIS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECONDARY_YAXIS = 1,
	}
	
	/// <summary>
	/// The style configuration of the reference line.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineStyleConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PanelBorderStyle Pattern { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// The label configuration of a reference line.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineLabelConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineValueLabelConfiguration ValueLabelConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineCustomLabelConfiguration CustomLabelConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration FontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FontColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineLabelHorizontalPosition HorizontalPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineLabelVerticalPosition VerticalPosition { get; set; }
	}
	
	/// <summary>
	/// The value label configuration of the label in a reference line.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineValueLabelConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLineValueLabelRelativePosition RelativePosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericFormatConfiguration FormatConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReferenceLineValueLabelRelativePosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEFORE_CUSTOM_LABEL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFTER_CUSTOM_LABEL = 1,
	}
	
	/// <summary>
	/// The configuration for a custom label on a <code>ReferenceLine</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceLineCustomLabelConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CustomLabel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReferenceLineLabelHorizontalPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CENTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReferenceLineLabelVerticalPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABOVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BELOW = 1,
	}
	
	/// <summary>
	/// The contribution analysis visual display for a line, pie, or bar chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContributionAnalysisDefault
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MeasureFieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier[] ContributorDimensions { get; set; }
	}
	
	/// <summary>
	/// The option that determines the hierarchy of the fields for a visual element.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnHierarchy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExplicitHierarchy ExplicitHierarchy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeHierarchy DateTimeHierarchy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PredefinedHierarchy PredefinedHierarchy { get; set; }
	}
	
	/// <summary>
	/// The option that determines the hierarchy of the fields that are built within a visual's field wells. These fields can't be duplicated to other visuals.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExplicitHierarchy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier[] Columns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DrillDownFilter[] DrillDownFilters { get; set; }
	}
	
	/// <summary>
	/// <p>The drill down filter for the column hierarchies.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DrillDownFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericEqualityDrillDownFilter NumericEqualityFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryDrillDownFilter CategoryFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeDrillDownFilter TimeRangeFilter { get; set; }
	}
	
	/// <summary>
	/// The category drill down filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericEqualityDrillDownFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// The numeric equality type drill down filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoryDrillDownFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] CategoryValues { get; set; }
	}
	
	/// <summary>
	/// The time range drill down filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRangeDrillDownFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RangeMinimum { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RangeMaximum { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
	}
	
	/// <summary>
	/// The option that determines the hierarchy of any <code>DateTime</code> fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeHierarchy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DrillDownFilter[] DrillDownFilters { get; set; }
	}
	
	/// <summary>
	/// The option that determines the hierarchy of the fields that are defined during data preparation. These fields are available to use in any analysis that uses the data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PredefinedHierarchy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier[] Columns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DrillDownFilter[] DrillDownFilters { get; set; }
	}
	
	/// <summary>
	/// <p>A key performance indicator (KPI).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/kpi.html">Using KPIs</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KPIConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KPIConditionalFormatting ConditionalFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public KPIFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KPISortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KPIOptions KPIOptions { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] TargetValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] TrendGroups { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPISortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] TrendGroupSort { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProgressBarOptions ProgressBar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrendArrowOptions TrendArrows { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecondaryValueOptions SecondaryValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComparisonConfiguration Comparison { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PrimaryValueDisplayType PrimaryValueDisplayType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration PrimaryValueFontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration SecondaryValueFontConfiguration { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of the progress bar of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProgressBarOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of trend arrows in a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrendArrowOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of the secondary value of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecondaryValueOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The comparison display configuration of a KPI or gauge chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComparisonConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComparisonMethod ComparisonMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComparisonFormatConfiguration ComparisonFormat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIFFERENCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT_DIFFERENCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT = 2,
	}
	
	/// <summary>
	/// <p>The format of the comparison.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComparisonFormatConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumberDisplayFormatConfiguration NumberDisplayFormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PercentageDisplayFormatConfiguration PercentageDisplayFormatConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PrimaryValueDisplayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIDDEN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPARISON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTUAL = 2,
	}
	
	/// <summary>
	/// The conditional formatting of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public KPIConditionalFormattingOption[] ConditionalFormattingOptions { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting options of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIConditionalFormattingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public KPIPrimaryValueConditionalFormatting PrimaryValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KPIProgressBarConditionalFormatting ProgressBar { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting for the primary value of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIPrimaryValueConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor TextColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIcon Icon { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting for the progress bar of a KPI visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KPIProgressBarConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor ForegroundColor { get; set; }
	}
	
	/// <summary>
	/// <p>A pie or donut chart.</p> <p>The <code>PieChartVisual</code> structure describes a visual that is a member of the pie chart family.</p> <p>The following charts can be described by using this structure:</p> <ul> <li> <p>Pie charts</p> </li> <li> <p>Donut charts</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/pie-chart.html">Using pie charts</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/donut-chart.html">Using donut charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PieChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PieChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a pie chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PieChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PieChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PieChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DonutOptions DonutOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesOptions SmallMultiplesOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ValueLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContributionAnalysisDefault[] ContributionAnalysisDefaults { get; set; }
	}
	
	/// <summary>
	/// <p>The field well configuration of a pie chart.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PieChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PieChartAggregatedFieldWells PieChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a pie chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PieChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] SmallMultiples { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a pie chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PieChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] SmallMultiplesSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration SmallMultiplesLimitConfiguration { get; set; }
	}
	
	/// <summary>
	/// The options for configuring a donut chart or pie chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DonutOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ArcOptions ArcOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DonutCenterOptions DonutCenterOptions { get; set; }
	}
	
	/// <summary>
	/// The options that determine the arc thickness of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArcOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ArcThickness ArcThickness { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ArcThickness
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LARGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WHOLE = 3,
	}
	
	/// <summary>
	/// The label options of the label that is displayed in the center of a donut chart. This option isn't available for pie charts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DonutCenterOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility LabelVisibility { get; set; }
	}
	
	/// <summary>
	/// <p>A gauge chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/gauge-chart.html">Using gauge charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartConditionalFormatting ConditionalFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartOptions GaugeChartOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions TooltipOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] TargetValues { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of the <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PrimaryValueDisplayType PrimaryValueDisplayType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComparisonConfiguration Comparison { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ArcAxisConfiguration ArcAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ArcConfiguration Arc { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration PrimaryValueFontConfiguration { get; set; }
	}
	
	/// <summary>
	/// The arc axis configuration of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArcAxisConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ArcAxisDisplayRange Range { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReserveRange { get; set; }
	}
	
	/// <summary>
	/// The arc axis range of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArcAxisDisplayRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Min { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Max { get; set; }
	}
	
	/// <summary>
	/// The arc configuration of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArcConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ArcAngle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ArcThicknessOptions ArcThickness { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ArcThicknessOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LARGE = 2,
	}
	
	/// <summary>
	/// The conditional formatting of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartConditionalFormattingOption[] ConditionalFormattingOptions { get; set; }
	}
	
	/// <summary>
	/// Conditional formatting options of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartConditionalFormattingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartPrimaryValueConditionalFormatting PrimaryValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GaugeChartArcConditionalFormatting Arc { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting for the primary value of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartPrimaryValueConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor TextColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingIcon Icon { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of the arc of a <code>GaugeChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GaugeChartArcConditionalFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor ForegroundColor { get; set; }
	}
	
	/// <summary>
	/// <p>A line chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/line-charts.html">Using line charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ForecastConfiguration[] ForecastConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SmallMultiplesOptions SmallMultiplesOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions XAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions XAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineSeriesAxisDisplayOptions PrimaryYAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions PrimaryYAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineSeriesAxisDisplayOptions SecondaryYAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions SecondaryYAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartDefaultSeriesSettings DefaultSeriesSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SeriesItem[] Series { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLine[] ReferenceLines { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContributionAnalysisDefault[] ContributionAnalysisDefaults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartAggregatedFieldWells LineChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Colors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] SmallMultiples { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimitConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration ColorItemsLimitConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] SmallMultiplesSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration SmallMultiplesLimitConfiguration { get; set; }
	}
	
	/// <summary>
	/// The forecast configuration that is used in a line chart's display properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForecastConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimeBasedForecastProperties ForecastProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ForecastScenario Scenario { get; set; }
	}
	
	/// <summary>
	/// The forecast properties setup of a forecast in the line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeBasedForecastProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PeriodsForward { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PeriodsBackward { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UpperBoundary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LowerBoundary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PredictionInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Seasonality { get; set; }
	}
	
	/// <summary>
	/// The forecast scenario of a forecast in the line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForecastScenario
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WhatIfPointScenario WhatIfPointScenario { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WhatIfRangeScenario WhatIfRangeScenario { get; set; }
	}
	
	/// <summary>
	/// Provides the forecast to meet the target for a particular date.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WhatIfPointScenario
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// Provides the forecast to meet the target for a particular date range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WhatIfRangeScenario
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LineChartType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AREA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STACKED_AREA = 2,
	}
	
	/// <summary>
	/// The series axis configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineSeriesAxisDisplayOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions AxisOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MissingDataConfiguration[] MissingDataConfigurations { get; set; }
	}
	
	/// <summary>
	/// The configuration options that determine how missing data is treated during the rendering of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MissingDataConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MissingDataTreatmentOption TreatmentOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MissingDataTreatmentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERPOLATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHOW_AS_ZERO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHOW_AS_BLANK = 2,
	}
	
	/// <summary>
	/// The options that determine the default presentation of all line series in <code>LineChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartDefaultSeriesSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AxisBinding AxisBinding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartLineStyleSettings LineStyleSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartMarkerStyleSettings MarkerStyleSettings { get; set; }
	}
	
	/// <summary>
	/// Line styles options for a line series in <code>LineChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartLineStyleSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility LineVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineInterpolation LineInterpolation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartLineStyle LineStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LineWidth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LineInterpolation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINEAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMOOTH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STEPPED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LineChartLineStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOTTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASHED = 2,
	}
	
	/// <summary>
	/// Marker styles options for a line series in <code>LineChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartMarkerStyleSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility MarkerVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartMarkerShape MarkerShape { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MarkerSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MarkerColor { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LineChartMarkerShape
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CIRCLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIANGLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQUARE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIAMOND = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUNDED_SQUARE = 4,
	}
	
	/// <summary>
	/// <p>The series item configuration of a line chart.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SeriesItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSeriesItem FieldSeriesItem { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataFieldSeriesItem DataFieldSeriesItem { get; set; }
	}
	
	/// <summary>
	/// The field series item configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldSeriesItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AxisBinding AxisBinding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartSeriesSettings Settings { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of a line series in the visual
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineChartSeriesSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartLineStyleSettings LineStyleSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartMarkerStyleSettings MarkerStyleSettings { get; set; }
	}
	
	/// <summary>
	/// The data field series item configuration of a line chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataFieldSeriesItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AxisBinding AxisBinding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LineChartSeriesSettings Settings { get; set; }
	}
	
	/// <summary>
	/// <p>A heat map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/heat-map.html">Using heat maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HeatMapVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HeatMapConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration of a heat map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HeatMapConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HeatMapFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HeatMapSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions RowLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ColumnLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColorScale ColorScale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
	}
	
	/// <summary>
	/// <p>The field well configuration of a heat map.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HeatMapFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HeatMapAggregatedFieldWells HeatMapAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field wells of a heat map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HeatMapAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Rows { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Columns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a heat map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HeatMapSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] HeatMapRowSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] HeatMapColumnSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration HeatMapRowItemsLimitConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration HeatMapColumnItemsLimitConfiguration { get; set; }
	}
	
	/// <summary>
	/// Determines the color scale that is applied to the visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColorScale
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataColor[] Colors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColorFillType ColorFillType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataColor NullValueColor { get; set; }
	}
	
	/// <summary>
	/// Determines the color that is applied to a particular data value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataColor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DataValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ColorFillType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISCRETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRADIENT = 1,
	}
	
	/// <summary>
	/// <p>A tree map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/tree-map.html">Using tree maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TreeMapVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TreeMapConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a tree map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TreeMapConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TreeMapFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TreeMapSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions GroupLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions SizeLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ColorLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColorScale ColorScale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of a tree map.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TreeMapFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TreeMapAggregatedFieldWells TreeMapAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// Aggregated field wells of a tree map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TreeMapAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Sizes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Colors { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a tree map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TreeMapSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] TreeMapSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration TreeMapGroupItemsLimitConfiguration { get; set; }
	}
	
	/// <summary>
	/// <p>A geospatial map or a points on map visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/point-maps.html">Creating point maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialMapVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialMapConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>GeospatialMapVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialMapConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialMapFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialWindowOptions WindowOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialMapStyleOptions MapStyleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialPointStyleOptions PointStyleOptions { get; set; }
		
		/// <summary>
		/// The visual display options for the visual palette.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of a <code>GeospatialMapVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialMapFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialMapAggregatedFieldWells GeospatialMapAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field wells for a geospatial map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialMapAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Geospatial { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Colors { get; set; }
	}
	
	/// <summary>
	/// The window options of the geospatial map visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialWindowOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialCoordinateBounds Bounds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapZoomMode MapZoomMode { get; set; }
	}
	
	/// <summary>
	/// The bound options (north, south, west, east) of the geospatial window options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialCoordinateBounds
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double North { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double South { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double West { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double East { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MapZoomMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANUAL = 1,
	}
	
	/// <summary>
	/// The map style options of the geospatial map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialMapStyleOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BaseMapStyleType BaseMapStyle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BaseMapStyleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIGHT_GRAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DARK_GRAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STREET = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGERY = 3,
	}
	
	/// <summary>
	/// The point style of the geospatial map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialPointStyleOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialSelectedPointStyle SelectedPointStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterMarkerConfiguration ClusterMarkerConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialHeatmapConfiguration HeatmapConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GeospatialSelectedPointStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POINT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEATMAP = 2,
	}
	
	/// <summary>
	/// The cluster marker configuration of the geospatial map selected point style.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterMarkerConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterMarker ClusterMarker { get; set; }
	}
	
	/// <summary>
	/// The cluster marker that is a part of the cluster marker configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterMarker
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleClusterMarker SimpleClusterMarker { get; set; }
	}
	
	/// <summary>
	/// The simple cluster marker of the cluster marker.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleClusterMarker
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// The heatmap configuration of the geospatial point style.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialHeatmapConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialHeatmapColorScale HeatmapColor { get; set; }
	}
	
	/// <summary>
	/// The color scale specification for the heatmap point style.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialHeatmapColorScale
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialHeatmapDataColor[] Colors { get; set; }
	}
	
	/// <summary>
	/// The color to be used in the heatmap point style.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeospatialHeatmapDataColor
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// <p>A filled map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filled-maps.html">Creating filled maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilledMapConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilledMapConditionalFormatting ConditionalFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration for a <code>FilledMapVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilledMapFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilledMapSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialWindowOptions WindowOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeospatialMapStyleOptions MapStyleOptions { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of a <code>FilledMapVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilledMapAggregatedFieldWells FilledMapAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field well of the filled map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Geospatial { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a <code>FilledMapVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting of a <code>FilledMapVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapConditionalFormatting
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilledMapConditionalFormattingOption[] ConditionalFormattingOptions { get; set; }
	}
	
	/// <summary>
	/// Conditional formatting options of a <code>FilledMapVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapConditionalFormattingOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilledMapShapeConditionalFormatting Shape { get; set; }
	}
	
	/// <summary>
	/// The conditional formatting that determines the shape of the filled map.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilledMapShapeConditionalFormatting
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FieldId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ShapeConditionalFormat Format { get; set; }
	}
	
	/// <summary>
	/// The shape conditional formatting of a filled map visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShapeConditionalFormat
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConditionalFormattingColor BackgroundColor { get; set; }
	}
	
	/// <summary>
	/// <p>A funnel chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/funnel-visual-content.html">Using funnel charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunnelChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>FunnelChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunnelChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ValueLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartDataLabelOptions DataLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// <p>The field well configuration of a <code>FunnelChartVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunnelChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartAggregatedFieldWells FunnelChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a <code>FunnelChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunnelChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a <code>FunnelChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunnelChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimit { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of the data labels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunnelChartDataLabelOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility CategoryLabelVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility MeasureLabelVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelPosition Position { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FontConfiguration LabelFontConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LabelColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunnelChartMeasureDataLabelStyle MeasureDataLabelStyle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FunnelChartMeasureDataLabelStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALUE_ONLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENTAGE_BY_FIRST_STAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENTAGE_BY_PREVIOUS_STAGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALUE_AND_PERCENTAGE_BY_FIRST_STAGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE = 4,
	}
	
	/// <summary>
	/// <p>A scatter plot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/scatter-plot.html">Using scatter plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScatterPlotVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScatterPlotConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a scatter plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScatterPlotConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScatterPlotFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions XAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions XAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions YAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions YAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// <p>The field well configuration of a scatter plot.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScatterPlotFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScatterPlotCategoricallyAggregatedFieldWells ScatterPlotCategoricallyAggregatedFieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScatterPlotUnaggregatedFieldWells ScatterPlotUnaggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field well of a scatter plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScatterPlotCategoricallyAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] XAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] YAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Label { get; set; }
	}
	
	/// <summary>
	/// The unaggregated field wells of a scatter plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScatterPlotUnaggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] XAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] YAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Label { get; set; }
	}
	
	/// <summary>
	/// <p>A combo chart.</p> <p>The <code>ComboChartVisual</code> includes stacked bar combo charts and clustered bar combo charts</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/combo-charts.html">Using combo charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComboChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComboChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>ComboChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComboChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComboChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComboChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BarsArrangement BarsArrangement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions CategoryAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions PrimaryYAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions PrimaryYAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions SecondaryYAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions SecondaryYAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ColorLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions BarDataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions LineDataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLine[] ReferenceLines { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of the visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComboChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComboChartAggregatedFieldWells ComboChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field wells of a combo chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComboChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] BarValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Colors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] LineValues { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a <code>ComboChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComboChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] ColorSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration ColorItemsLimit { get; set; }
	}
	
	/// <summary>
	/// <p>A box plot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/box-plots.html">Using box plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>BoxPlotVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotOptions BoxPlotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions CategoryAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions PrimaryYAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions PrimaryYAxisLabelOptions { get; set; }
		
		/// <summary>
		/// The options for the legend setup of a visual.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceLine[] ReferenceLines { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of a <code>BoxPlotVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotAggregatedFieldWells BoxPlotAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field well for a box plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a <code>BoxPlotVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaginationConfiguration PaginationConfiguration { get; set; }
	}
	
	/// <summary>
	/// The options of a box plot visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotStyleOptions StyleOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility OutlierVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility AllDataPointsVisibility { get; set; }
	}
	
	/// <summary>
	/// The style options of the box plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BoxPlotStyleOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BoxPlotFillStyle FillStyle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BoxPlotFillStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSPARENT = 1,
	}
	
	/// <summary>
	/// <p>A waterfall chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/waterfall-chart.html">Using waterfall charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaterfallVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaterfallChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration for a waterfall visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaterfallChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WaterfallChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaterfallChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaterfallChartOptions WaterfallChartOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions CategoryAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions PrimaryYAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions PrimaryYAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a waterfall visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaterfallChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WaterfallChartAggregatedFieldWells WaterfallChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a waterfall visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaterfallChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Categories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Breakdowns { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a waterfall visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaterfallChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration BreakdownItemsLimit { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of a waterfall visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaterfallChartOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalBarLabel { get; set; }
	}
	
	/// <summary>
	/// <p>A histogram.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/histogram-charts.html">Using histograms</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistogramVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HistogramConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration for a <code>HistogramVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistogramConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HistogramFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions XAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions XAxisLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions YAxisDisplayOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HistogramBinOptions BinOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TooltipOptions Tooltip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a histogram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistogramFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HistogramAggregatedFieldWells HistogramAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a histogram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistogramAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The options that determine the presentation of histogram bins.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistogramBinOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HistogramBinType SelectedBinType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BinCountOptions BinCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BinWidthOptions BinWidth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StartValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HistogramBinType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIN_COUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIN_WIDTH = 1,
	}
	
	/// <summary>
	/// The options that determine the bin count of a histogram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BinCountOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	/// <summary>
	/// The options that determine the bin width of a histogram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BinWidthOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BinCountLimit { get; set; }
	}
	
	/// <summary>
	/// <p>A word cloud.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/word-cloud.html">Using word clouds</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WordCloudVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a word cloud visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WordCloudChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudOptions WordCloudOptions { get; set; }
	}
	
	/// <summary>
	/// <p>The field wells of a word cloud visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WordCloudFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudAggregatedFieldWells WordCloudAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field wells of a word cloud.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WordCloudAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Size { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a word cloud visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WordCloudSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
	}
	
	/// <summary>
	/// The word cloud options for a word cloud visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WordCloudOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudWordOrientation WordOrientation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudWordScaling WordScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudCloudLayout CloudLayout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudWordCasing WordCasing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WordCloudWordPadding WordPadding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumStringLength { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WordCloudWordOrientation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HORIZONTAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HORIZONTAL_AND_VERTICAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WordCloudWordScaling
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPHASIZE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WordCloudCloudLayout
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLUID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WordCloudWordCasing
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOWER_CASE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXISTING_CASE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WordCloudWordPadding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMALL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LARGE = 3,
	}
	
	/// <summary>
	/// <p>An insight visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/computational-insights.html">Working with insights</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsightVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightConfiguration InsightConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
	}
	
	/// <summary>
	/// The configuration of an insight visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsightConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Computation[] Computations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomNarrativeOptions CustomNarrative { get; set; }
	}
	
	/// <summary>
	/// <p>The computation union that is used in an insight visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Computation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopBottomRankedComputation TopBottomRanked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopBottomMoversComputation TopBottomMovers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TotalAggregationComputation TotalAggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MaximumMinimumComputation MaximumMinimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricComparisonComputation MetricComparison { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PeriodOverPeriodComputation PeriodOverPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PeriodToDateComputation PeriodToDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GrowthRateComputation GrowthRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UniqueValuesComputation UniqueValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ForecastComputation Forecast { get; set; }
	}
	
	/// <summary>
	/// The top ranked and bottom ranked computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopBottomRankedComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ResultSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TopBottomComputationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopBottomComputationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTOM = 1,
	}
	
	/// <summary>
	/// The top movers and bottom movers computation setup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopBottomMoversComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MoverSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopBottomSortOrder SortOrder { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TopBottomComputationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopBottomSortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT_DIFFERENCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABSOLUTE_DIFFERENCE = 1,
	}
	
	/// <summary>
	/// The total aggregation computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TotalAggregationComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
	}
	
	/// <summary>
	/// The maximum and minimum computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MaximumMinimumComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MaximumMinimumComputationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MaximumMinimumComputationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAXIMUM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINIMUM = 1,
	}
	
	/// <summary>
	/// The metric comparison computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricComparisonComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MeasureField FromValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MeasureField TargetValue { get; set; }
	}
	
	/// <summary>
	/// The period over period computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PeriodOverPeriodComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
	}
	
	/// <summary>
	/// The period to date computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PeriodToDateComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity PeriodTimeGranularity { get; set; }
	}
	
	/// <summary>
	/// The growth rate computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GrowthRateComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PeriodSize { get; set; }
	}
	
	/// <summary>
	/// The unique values computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UniqueValuesComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Category { get; set; }
	}
	
	/// <summary>
	/// The forecast computation configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForecastComputation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComputationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionField Time { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PeriodsForward { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PeriodsBackward { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UpperBoundary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LowerBoundary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PredictionInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ForecastComputationSeasonality Seasonality { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CustomSeasonalityValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ForecastComputationSeasonality
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// The custom narrative options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomNarrativeOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Narrative { get; set; }
	}
	
	/// <summary>
	/// <p>A sankey diagram.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/sankey-diagram.html">Using Sankey diagrams</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SankeyDiagramVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SankeyDiagramChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// The configuration of a sankey diagram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SankeyDiagramChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SankeyDiagramFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SankeyDiagramSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataLabelOptions DataLabels { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a sankey diagram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SankeyDiagramFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SankeyDiagramAggregatedFieldWells SankeyDiagramAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The field well configuration of a sankey diagram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SankeyDiagramAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Destination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Weight { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a sankey diagram.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SankeyDiagramSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] WeightSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration SourceItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration DestinationItemsLimit { get; set; }
	}
	
	/// <summary>
	/// <p>A visual that contains custom content.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/custom-visual-content.html">Using custom visual content</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomContentVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomContentConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>CustomContentVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomContentConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContentUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomContentType ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomContentImageScalingConfiguration ImageScaling { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CustomContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAGE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER_EMBEDDED_CONTENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CustomContentImageScalingConfiguration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIT_TO_HEIGHT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIT_TO_WIDTH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOT_SCALE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCALE_TO_VISUAL = 3,
	}
	
	/// <summary>
	/// <p>An empty visual.</p> <p>Empty visuals are used in layouts but have not been configured to show any data. A new visual created in the Amazon QuickSight console is considered an <code>EmptyVisual</code> until a visual type is selected.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmptyVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
	}
	
	/// <summary>
	/// A radar chart visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartVisual
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualTitleLabelOptions Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualSubtitleLabelOptions Subtitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartConfiguration ChartConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualCustomAction[] Actions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnHierarchy[] ColumnHierarchies { get; set; }
	}
	
	/// <summary>
	/// The configuration of a <code>RadarChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartFieldWells FieldWells { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartSortConfiguration SortConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartShape Shape { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartSeriesSettings BaseSeriesSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StartAngle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualPalette VisualPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility AlternateBandColorsVisibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlternateBandEvenColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlternateBandOddColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions CategoryAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions CategoryLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AxisDisplayOptions ColorAxis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChartAxisLabelOptions ColorLabelOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LegendOptions Legend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartAxesRangeScale AxesRangeScale { get; set; }
	}
	
	/// <summary>
	/// The field wells of a radar chart visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartAggregatedFieldWells RadarChartAggregatedFieldWells { get; set; }
	}
	
	/// <summary>
	/// The aggregated field well configuration of a <code>RadarChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartAggregatedFieldWells
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionField[] Color { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MeasureField[] Values { get; set; }
	}
	
	/// <summary>
	/// The sort configuration of a <code>RadarChartVisual</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartSortConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] CategorySort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration CategoryItemsLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldSortOptions[] ColorSort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemsLimitConfiguration ColorItemsLimit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RadarChartShape
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CIRCLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POLYGON = 1,
	}
	
	/// <summary>
	/// The series settings of a radar chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartSeriesSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RadarChartAreaStyleSettings AreaStyleSettings { get; set; }
	}
	
	/// <summary>
	/// The configured style settings of a radar chart.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RadarChartAreaStyleSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RadarChartAxesRangeScale
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEPENDENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 2,
	}
	
	/// <summary>
	/// A text box.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetTextBox
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SheetTextBoxId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
	}
	
	/// <summary>
	/// <p>A <code>Layout</code> defines the placement of elements within a sheet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/types-of-layout.html">Types of layout</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Layout
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LayoutConfiguration Configuration { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration that determines what the type of layout will be used on a sheet.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LayoutConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GridLayoutConfiguration GridLayout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutConfiguration FreeFormLayout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SectionBasedLayoutConfiguration SectionBasedLayout { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration for a grid layout. Also called a tiled layout.</p> <p>Visuals snap to a grid with standard spacing and alignment. Dashboards are displayed as designed, with options to fit to screen or view at actual size.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GridLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GridLayoutElement[] Elements { get; set; }
		
		/// <summary>
		/// Configuration options for the canvas of a grid layout.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GridLayoutCanvasSizeOptions CanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// An element within a grid layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GridLayoutElement
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElementId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LayoutElementType ElementType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ColumnIndex { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ColumnSpan { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RowIndex { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int RowSpan { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LayoutElementType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VISUAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CONTROL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_CONTROL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT_BOX = 3,
	}
	
	/// <summary>
	/// Configuration options for the canvas of a grid layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GridLayoutCanvasSizeOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GridLayoutScreenCanvasSizeOptions ScreenCanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// The options that determine the sizing of the canvas used in a grid layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GridLayoutScreenCanvasSizeOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResizeOption ResizeOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptimizedViewPortWidth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResizeOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIXED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESPONSIVE = 1,
	}
	
	/// <summary>
	/// The configuration of a free-form layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutElement[] Elements { get; set; }
		
		/// <summary>
		/// Configuration options for the canvas of a free-form layout.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutCanvasSizeOptions CanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// An element within a free-form layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormLayoutElement
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElementId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LayoutElementType ElementType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string XAxisLocation { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string YAxisLocation { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Width { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Height { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetElementRenderingRule[] RenderingRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutElementBorderStyle BorderStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutElementBorderStyle SelectedBorderStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutElementBackgroundStyle BackgroundStyle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoadingAnimation LoadingAnimation { get; set; }
	}
	
	/// <summary>
	/// The rendering rules of a sheet that uses a free-form layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetElementRenderingRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SheetElementConfigurationOverrides ConfigurationOverrides { get; set; }
	}
	
	/// <summary>
	/// The override configuration of the rendering rules of a sheet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetElementConfigurationOverrides
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// The background style configuration of a free-form layout element.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormLayoutElementBorderStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// The background style configuration of a free-form layout element.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormLayoutElementBackgroundStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
	}
	
	/// <summary>
	/// The configuration of loading animation in free-form layout. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoadingAnimation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
	}
	
	/// <summary>
	/// Configuration options for the canvas of a free-form layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormLayoutCanvasSizeOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutScreenCanvasSizeOptions ScreenCanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// The options that determine the sizing of the canvas used in a free-form layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormLayoutScreenCanvasSizeOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptimizedViewPortWidth { get; set; }
	}
	
	/// <summary>
	/// The configuration for a section-based layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionBasedLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HeaderFooterSectionConfiguration[] HeaderSections { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BodySectionConfiguration[] BodySections { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HeaderFooterSectionConfiguration[] FooterSections { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SectionBasedLayoutCanvasSizeOptions CanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// The configuration of a header or footer section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HeaderFooterSectionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SectionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SectionLayoutConfiguration Layout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SectionStyle Style { get; set; }
	}
	
	/// <summary>
	/// The layout configuration of a section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FreeFormSectionLayoutConfiguration FreeFormLayout { get; set; }
	}
	
	/// <summary>
	/// The free-form layout configuration of a section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FreeFormSectionLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutElement[] Elements { get; set; }
	}
	
	/// <summary>
	/// The options that style a section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Height { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Spacing Padding { get; set; }
	}
	
	/// <summary>
	/// The configuration of spacing (often a margin or padding).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Spacing
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Top { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Bottom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Left { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Right { get; set; }
	}
	
	/// <summary>
	/// The configuration of a body section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BodySectionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SectionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BodySectionContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SectionStyle Style { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SectionPageBreakConfiguration PageBreakConfiguration { get; set; }
	}
	
	/// <summary>
	/// The configuration of content in a body section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BodySectionContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SectionLayoutConfiguration Layout { get; set; }
	}
	
	/// <summary>
	/// The configuration of a page break for a section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionPageBreakConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SectionAfterPageBreak After { get; set; }
	}
	
	/// <summary>
	/// The configuration of a page break after a section.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionAfterPageBreak
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
	}
	
	/// <summary>
	/// The options for the canvas of a section-based layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionBasedLayoutCanvasSizeOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SectionBasedLayoutPaperCanvasSizeOptions PaperCanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// The options for a paper canvas of a section-based layout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SectionBasedLayoutPaperCanvasSizeOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PaperSize PaperSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaperOrientation PaperOrientation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Spacing PaperMargin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaperSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_LETTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_LEGAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_TABLOID_LEDGER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		A0 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		A1 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		A2 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		A3 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		A4 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		A5 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JIS_B4 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JIS_B5 = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaperOrientation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTRAIT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LANDSCAPE = 1,
	}
	
	/// <summary>
	/// A grid layout to define the placement of sheet control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetControlLayout
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SheetControlLayoutConfiguration Configuration { get; set; }
	}
	
	/// <summary>
	/// The configuration that determines the elements and canvas size options of sheet control.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetControlLayoutConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GridLayoutConfiguration GridLayout { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SheetContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAGINATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERACTIVE = 1,
	}
	
	/// <summary>
	/// The calculated field of an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CalculatedField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
	}
	
	/// <summary>
	/// <p>The declaration definition of a parameter.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterDeclaration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringParameterDeclaration StringParameterDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalParameterDeclaration DecimalParameterDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameterDeclaration IntegerParameterDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeParameterDeclaration DateTimeParameterDeclaration { get; set; }
	}
	
	/// <summary>
	/// A parameter declaration for the <code>String</code> data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringParameterDeclaration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ParameterValueType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringDefaultValues DefaultValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringValueWhenUnsetConfiguration ValueWhenUnset { get; set; }
		
		/// <summary>
		/// A list of dataset parameters that are mapped to an analysis parameter.
		/// Minimum items: 0
		/// Maximum items: 150
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 150)]
		public MappedDataSetParameter[] MappedDataSetParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ParameterValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_VALUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_VALUED = 1,
	}
	
	/// <summary>
	/// The default values of the <code>StringParameterDeclaration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicDefaultValue DynamicValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticValues { get; set; }
	}
	
	/// <summary>
	/// Defines different defaults to the users or groups based on mapping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamicDefaultValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier UserNameColumn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier GroupNameColumn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier DefaultValueColumn { get; set; }
	}
	
	/// <summary>
	/// The configuration that defines the default value of a <code>String</code> parameter when a value has not been set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringValueWhenUnsetConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ValueWhenUnsetOption ValueWhenUnsetOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ValueWhenUnsetOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECOMMENDED_VALUE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL = 1,
	}
	
	/// <summary>
	/// A dataset parameter that is mapped to an analysis parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MappedDataSetParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetParameterName { get; set; }
	}
	
	/// <summary>
	/// A parameter declaration for the <code>Decimal</code> data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalParameterDeclaration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ParameterValueType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalDefaultValues DefaultValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalValueWhenUnsetConfiguration ValueWhenUnset { get; set; }
		
		/// <summary>
		/// A list of dataset parameters that are mapped to an analysis parameter.
		/// Minimum items: 0
		/// Maximum items: 150
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 150)]
		public MappedDataSetParameter[] MappedDataSetParameters { get; set; }
	}
	
	/// <summary>
	/// The default values of the <code>DecimalParameterDeclaration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicDefaultValue DynamicValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StaticValues { get; set; }
	}
	
	/// <summary>
	/// The configuration that defines the default value of a <code>Decimal</code> parameter when a value has not been set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalValueWhenUnsetConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ValueWhenUnsetOption ValueWhenUnsetOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CustomValue { get; set; }
	}
	
	/// <summary>
	/// A parameter declaration for the <code>Integer</code> data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegerParameterDeclaration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ParameterValueType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerDefaultValues DefaultValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerValueWhenUnsetConfiguration ValueWhenUnset { get; set; }
		
		/// <summary>
		/// A list of dataset parameters that are mapped to an analysis parameter.
		/// Minimum items: 0
		/// Maximum items: 150
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 150)]
		public MappedDataSetParameter[] MappedDataSetParameters { get; set; }
	}
	
	/// <summary>
	/// The default values of the <code>IntegerParameterDeclaration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegerDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicDefaultValue DynamicValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StaticValues { get; set; }
	}
	
	/// <summary>
	/// <p>A parameter declaration for the <code>Integer</code> data type.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegerValueWhenUnsetConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ValueWhenUnsetOption ValueWhenUnsetOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CustomValue { get; set; }
	}
	
	/// <summary>
	/// A parameter declaration for the <code>DateTime</code> data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeParameterDeclaration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeDefaultValues DefaultValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeValueWhenUnsetConfiguration ValueWhenUnset { get; set; }
		
		/// <summary>
		/// A list of dataset parameters that are mapped to an analysis parameter.
		/// Minimum items: 0
		/// Maximum items: 150
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 150)]
		public MappedDataSetParameter[] MappedDataSetParameters { get; set; }
	}
	
	/// <summary>
	/// The default values of the <code>DateTimeParameterDeclaration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DynamicDefaultValue DynamicValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollingDateConfiguration RollingDate { get; set; }
	}
	
	/// <summary>
	/// The rolling date configuration of a date time filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollingDateConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
	}
	
	/// <summary>
	/// The configuration that defines the default value of a <code>DateTime</code> parameter when a value has not been set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeValueWhenUnsetConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ValueWhenUnsetOption ValueWhenUnsetOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CustomValue { get; set; }
	}
	
	/// <summary>
	/// <p>A grouping of individual filters. Filter groups are applied to the same group of visuals.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/add-a-compound-filter.html">Adding filter conditions (group filters) with AND and OR operators</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterScopeConfiguration ScopeConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CrossDatasetTypes CrossDataset { get; set; }
	}
	
	/// <summary>
	/// <p>With a <code>Filter</code>, you can remove portions of data from a particular visual or view.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilter CategoryFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericRangeFilter NumericRangeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericEqualityFilter NumericEqualityFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeEqualityFilter TimeEqualityFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilter TimeRangeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelativeDatesFilter RelativeDatesFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopBottomFilter TopBottomFilter { get; set; }
	}
	
	/// <summary>
	/// <p>A <code>CategoryFilter</code> filters text values.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/add-a-text-filter-data-prep.html">Adding text filters</a> in the <i>Amazon QuickSight User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoryFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterConfiguration Configuration { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration for a <code>CategoryFilter</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoryFilterConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilterListConfiguration FilterListConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomFilterListConfiguration CustomFilterListConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomFilterConfiguration CustomFilterConfiguration { get; set; }
	}
	
	/// <summary>
	/// A list of filter configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterListConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterMatchOperator MatchOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CategoryValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterSelectAllOptions SelectAllOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CategoryFilterMatchOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOES_NOT_EQUAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOES_NOT_CONTAIN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTS_WITH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDS_WITH = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CategoryFilterSelectAllOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ALL_VALUES = 0,
	}
	
	/// <summary>
	/// A list of custom filter values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomFilterListConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterMatchOperator MatchOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CategoryValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterSelectAllOptions SelectAllOptions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterNullOption NullOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterNullOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_VALUES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULLS_ONLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_NULLS_ONLY = 2,
	}
	
	/// <summary>
	/// A custom filter that filters based on a single value. This filter can be partially matched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomFilterConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterMatchOperator MatchOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CategoryValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterSelectAllOptions SelectAllOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterNullOption NullOption { get; set; }
	}
	
	/// <summary>
	/// A <code>NumericRangeFilter</code> filters values that are within the value range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericRangeFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeMinimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeMaximum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericRangeFilterValue RangeMinimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumericRangeFilterValue RangeMaximum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterSelectAllOptions SelectAllOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction AggregationFunction { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterNullOption NullOption { get; set; }
	}
	
	/// <summary>
	/// The value input pf the numeric range filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericRangeFilterValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StaticValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Parameter { get; set; }
	}
	
	/// <summary>
	/// A <code>NumericEqualityFilter</code> filters values that are equal to the specified value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericEqualityFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterSelectAllOptions SelectAllOptions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NumericEqualityMatchOperator MatchOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction AggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterNullOption NullOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NumericEqualityMatchOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOES_NOT_EQUAL = 1,
	}
	
	/// <summary>
	/// A <code>TimeEqualityFilter</code> filters values that are equal to a given value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeEqualityFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
	}
	
	/// <summary>
	/// A <code>TimeRangeFilter</code> filters values that are between two specified values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRangeFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeMinimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeMaximum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilterValue RangeMinimumValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeRangeFilterValue RangeMaximumValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterNullOption NullOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExcludePeriodConfiguration ExcludePeriodConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
	}
	
	/// <summary>
	/// <p>The value of a time range filter.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRangeFilterValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StaticValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollingDateConfiguration RollingDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Parameter { get; set; }
	}
	
	/// <summary>
	/// The exclude period of <code>TimeRangeFilter</code> or <code>RelativeDatesFilter</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExcludePeriodConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Amount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
	}
	
	/// <summary>
	/// A <code>RelativeDatesFilter</code> filters relative dates values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RelativeDatesFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnchorDateConfiguration AnchorDateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity MinimumGranularity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RelativeDateType RelativeDateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RelativeDateValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterNullOption NullOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExcludePeriodConfiguration ExcludePeriodConfiguration { get; set; }
	}
	
	/// <summary>
	/// The date configuration of the filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnchorDateConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnchorOption AnchorOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnchorOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RelativeDateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT = 4,
	}
	
	/// <summary>
	/// A <code>TopBottomFilter</code> filters values that are at the top or the bottom.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopBottomFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AggregationSortConfiguration[] AggregationSortConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
	}
	
	/// <summary>
	/// The configuration options to sort aggregated values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AggregationSortConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SortDirection SortDirection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction AggregationFunction { get; set; }
	}
	
	/// <summary>
	/// <p>The scope configuration for a <code>FilterGroup</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterScopeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SelectedSheetsFilterScopeConfiguration SelectedSheets { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration for applying a filter to specific sheets or visuals. You can apply this filter to multiple visuals that are on one sheet or to all visuals on a sheet.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelectedSheetsFilterScopeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SheetVisualScopingConfiguration[] SheetVisualScopingConfigurations { get; set; }
	}
	
	/// <summary>
	/// The filter that is applied to the options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetVisualScopingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SheetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterVisualScope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VisualIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterVisualScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_VISUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECTED_VISUALS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CrossDatasetTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_DATASETS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_DATASET = 1,
	}
	
	/// <summary>
	/// The general configuration of a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnIdentifier Column { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FormatConfiguration FormatConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnRole Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColorsConfiguration ColorsConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ColumnRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEASURE = 1,
	}
	
	/// <summary>
	/// The color configurations for a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColorsConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomColor[] CustomColors { get; set; }
	}
	
	/// <summary>
	/// Determines the color that's applied to a particular data value in a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomColor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Color { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SpecialValue SpecialValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SpecialValue
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPTY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NULL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 2,
	}
	
	/// <summary>
	/// The configuration for default analysis settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisDefaults
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DefaultNewSheetConfiguration DefaultNewSheetConfiguration { get; set; }
	}
	
	/// <summary>
	/// The configuration for default new sheet settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultNewSheetConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultInteractiveLayoutConfiguration InteractiveLayoutConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultPaginatedLayoutConfiguration PaginatedLayoutConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetContentType SheetContentType { get; set; }
	}
	
	/// <summary>
	/// The options that determine the default settings for interactive layout configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultInteractiveLayoutConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultGridLayoutConfiguration Grid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultFreeFormLayoutConfiguration FreeForm { get; set; }
	}
	
	/// <summary>
	/// The options that determine the default settings for a grid layout configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultGridLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GridLayoutCanvasSizeOptions CanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// The options that determine the default settings of a free-form layout configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultFreeFormLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FreeFormLayoutCanvasSizeOptions CanvasSizeOptions { get; set; }
	}
	
	/// <summary>
	/// The options that determine the default settings for a paginated layout configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultPaginatedLayoutConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultSectionBasedLayoutConfiguration SectionBased { get; set; }
	}
	
	/// <summary>
	/// The options that determine the default settings for a section-based layout configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultSectionBasedLayoutConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SectionBasedLayoutCanvasSizeOptions CanvasSizeOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnsupportedUserEditionException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDashboardResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Dashboard source template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardSourceTemplate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetReference[] DataSetReferences { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// An ad hoc (one-time) filtering option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdHocFilteringOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// Export to .csv option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportToCSVOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// Sheet controls option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetControlsOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardUIState VisibilityState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DashboardUIState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPANDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLLAPSED = 1,
	}
	
	/// <summary>
	/// The visual publish options of a visual in a dashboard
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardVisualPublishOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExportHiddenFieldsOption ExportHiddenFieldsOption { get; set; }
	}
	
	/// <summary>
	/// Determines if hidden fields are included in an exported dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportHiddenFieldsOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// The sheet layout maximization options of a dashbaord.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetLayoutElementMaximizationOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// The menu options for a visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualMenuOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// The axis sort options for a visual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VisualAxisSortOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// Determines whether or not hidden fields are visible on exported dashbaords.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportWithHiddenFieldsOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// The drill down options for data points in a dashbaord.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPointDrillUpDownOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// The data point menu options of a dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPointMenuLabelOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	/// <summary>
	/// The data point tooltip options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataPointTooltipOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus AvailabilityStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhysicalTable
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RelationalTable RelationalTable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomSql CustomSql { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Source S3Source { get; set; }
	}
	
	/// <summary>
	/// A physical table type for relational data sources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RelationalTable
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Catalog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputColumn[] InputColumns { get; set; }
	}
	
	/// <summary>
	/// Metadata for a column that is used as the input of a transform operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputColumn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputColumnDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InputColumnDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECIMAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATETIME = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 6,
	}
	
	/// <summary>
	/// A physical table type built from the results of the custom SQL query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomSql
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SqlQuery { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputColumn[] Columns { get; set; }
	}
	
	/// <summary>
	/// A physical table type for an S3 data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Source
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UploadSettings UploadSettings { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputColumn[] InputColumns { get; set; }
	}
	
	/// <summary>
	/// Information about the format for a source file or files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UploadSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FileFormat Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StartFromRow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ContainsHeader { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TextQualifier TextQualifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Delimiter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FileFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TSV = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELF = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XLSX = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TextQualifier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOUBLE_QUOTE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_QUOTE = 1,
	}
	
	/// <summary>
	/// A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogicalTable
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Alias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TransformOperation[] DataTransforms { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LogicalTableSource Source { get; set; }
	}
	
	/// <summary>
	/// A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransformOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProjectOperation ProjectOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterOperation FilterOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateColumnsOperation CreateColumnsOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RenameColumnOperation RenameColumnOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CastColumnTypeOperation CastColumnTypeOperation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagColumnOperation TagColumnOperation { get; set; }
		
		/// <summary>
		/// A transform operation that removes tags associated with a column.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UntagColumnOperation UntagColumnOperation { get; set; }
		
		/// <summary>
		/// A transform operation that overrides the dataset parameter values that are defined in another dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OverrideDatasetParameterOperation OverrideDatasetParameterOperation { get; set; }
	}
	
	/// <summary>
	/// A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProjectOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ProjectedColumns { get; set; }
	}
	
	/// <summary>
	/// A transform operation that filters rows based on a condition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ConditionExpression { get; set; }
	}
	
	/// <summary>
	/// A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateColumnsOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CalculatedColumn[] Columns { get; set; }
	}
	
	/// <summary>
	/// A calculated column for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CalculatedColumn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
	}
	
	/// <summary>
	/// A transform operation that renames a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RenameColumnOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NewColumnName { get; set; }
	}
	
	/// <summary>
	/// A transform operation that casts a column to a different type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CastColumnTypeOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnDataType NewColumnType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Format { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ColumnDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECIMAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATETIME = 3,
	}
	
	/// <summary>
	/// A transform operation that tags a column with additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagColumnOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnTag[] Tags { get; set; }
	}
	
	/// <summary>
	/// A tag for a column in a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html">TagColumnOperation</a> </code> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnTag
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeoSpatialDataRole ColumnGeographicRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnDescription ColumnDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GeoSpatialDataRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNTRY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNTY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CITY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTCODE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONGITUDE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LATITUDE = 6,
	}
	
	/// <summary>
	/// Metadata that contains a description for a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// A transform operation that removes tags associated with a column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagColumnOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ColumnTagName[] TagNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ColumnTagName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_GEOGRAPHIC_ROLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_DESCRIPTION = 1,
	}
	
	/// <summary>
	/// A transform operation that overrides the dataset parameter values that are defined in another dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OverrideDatasetParameterOperation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NewDefaultValues NewDefaultValues { get; set; }
	}
	
	/// <summary>
	/// The configuration that overrides the existing default values for a dataset parameter that is inherited from another dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NewDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StringStaticValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DecimalStaticValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DateTimeStaticValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IntegerStaticValues { get; set; }
	}
	
	/// <summary>
	/// Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogicalTableSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JoinInstruction JoinInstruction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalTableId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetArn { get; set; }
	}
	
	/// <summary>
	/// The instructions associated with a join. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JoinInstruction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LeftOperand { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RightOperand { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JoinKeyProperties LeftJoinKeyProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JoinKeyProperties RightJoinKeyProperties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JoinType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OnClause { get; set; }
	}
	
	/// <summary>
	/// Properties associated with the columns participating in a join.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JoinKeyProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UniqueKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JoinType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INNER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEFT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHT = 3,
	}
	
	/// <summary>
	/// Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GeoSpatialColumnGroup GeoSpatialColumnGroup { get; set; }
	}
	
	/// <summary>
	/// Geospatial column group that denotes a hierarchy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeoSpatialColumnGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GeoSpatialCountryCode CountryCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Columns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GeoSpatialCountryCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US = 0,
	}
	
	/// <summary>
	/// A FieldFolder element is a folder that contains fields and nested subfolders.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldFolder
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public string[] Columns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RowLevelPermissionPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRANT_ACCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENY_ACCESS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RowLevelPermissionFormatVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERSION_1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERSION_2 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// A set of rules associated with a tag.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RowLevelPermissionTagRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TagMultiValueDelimiter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MatchAllValue { get; set; }
	}
	
	/// <summary>
	/// A rule defined to grant access on one or more restricted columns. Each dataset can have multiple rules. To create a restricted column, you add it to one or more rules. Each rule must contain at least one column and at least one user or group. To be able to see a restricted column, a user or group needs to be added to a rule for that column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnLevelPermissionRule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Principals { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ColumnNames { get; set; }
	}
	
	/// <summary>
	/// A dataset parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatasetParameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringDatasetParameter StringDatasetParameter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalDatasetParameter DecimalDatasetParameter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerDatasetParameter IntegerDatasetParameter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeDatasetParameter DateTimeDatasetParameter { get; set; }
	}
	
	/// <summary>
	/// A string parameter for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringDatasetParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ValueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringDatasetParameterDefaultValues DefaultValues { get; set; }
	}
	
	/// <summary>
	/// The default values of a string parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringDatasetParameterDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticValues { get; set; }
	}
	
	/// <summary>
	/// A decimal parameter for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalDatasetParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ValueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalDatasetParameterDefaultValues DefaultValues { get; set; }
	}
	
	/// <summary>
	/// The default values of a decimal parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DecimalDatasetParameterDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> StaticValues { get; set; }
	}
	
	/// <summary>
	/// An integer parameter for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegerDatasetParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ValueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerDatasetParameterDefaultValues DefaultValues { get; set; }
	}
	
	/// <summary>
	/// The default values of an integer parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegerDatasetParameterDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StaticValues { get; set; }
	}
	
	/// <summary>
	/// A date time parameter for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeDatasetParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParameterValueType ValueType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeGranularity TimeGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeDatasetParameterDefaultValues DefaultValues { get; set; }
	}
	
	/// <summary>
	/// The default values of a date time parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeDatasetParameterDefaultValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StaticValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The parameters for OpenSearch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AmazonElasticsearchParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
	}
	
	/// <summary>
	/// Parameters for Amazon Athena.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AthenaParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string WorkGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Parameters for Amazon Aurora.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuroraParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// Parameters for Amazon Aurora PostgreSQL-Compatible Edition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuroraPostgreSqlParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for IoT Analytics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AwsIotAnalyticsParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetName { get; set; }
	}
	
	/// <summary>
	/// The parameters for Jira.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JiraParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SiteBaseUrl { get; set; }
	}
	
	/// <summary>
	/// The parameters for MariaDB.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MariaDbParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for MySQL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MySqlParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for Oracle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OracleParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for PostgreSQL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostgreSqlParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for Presto.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrestoParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Catalog { get; set; }
	}
	
	/// <summary>
	/// The parameters for Amazon RDS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RdsParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for Amazon Redshift. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RedshiftParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
	}
	
	/// <summary>
	/// The parameters for S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Parameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ManifestFileLocation ManifestFileLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Amazon S3 manifest file location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ManifestFileLocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// The parameters for ServiceNow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceNowParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SiteBaseUrl { get; set; }
	}
	
	/// <summary>
	/// The parameters for Snowflake.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnowflakeParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Warehouse { get; set; }
	}
	
	/// <summary>
	/// The parameters for Spark.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SparkParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
	}
	
	/// <summary>
	/// The parameters for SQL Server.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlServerParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for Teradata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TeradataParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// The parameters for Twitter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TwitterParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxRows { get; set; }
	}
	
	/// <summary>
	/// The parameters for OpenSearch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AmazonOpenSearchParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
	}
	
	/// <summary>
	/// The required parameters for connecting to an Exasol data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExasolParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
	}
	
	/// <summary>
	/// The required parameters that are needed to connect to a Databricks data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatabricksParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Host { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Port { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SqlEndpointPath { get; set; }
	}
	
	/// <summary>
	/// The combination of user name and password that are used as credentials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CredentialPair
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceParameters[] AlternateDataSourceParameters { get; set; }
	}
	
	/// <summary>
	/// The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonElasticsearchParameters AmazonElasticsearchParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AthenaParameters AthenaParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuroraParameters AuroraParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuroraPostgreSqlParameters AuroraPostgreSqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsIotAnalyticsParameters AwsIotAnalyticsParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JiraParameters JiraParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MariaDbParameters MariaDbParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MySqlParameters MySqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OracleParameters OracleParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PostgreSqlParameters PostgreSqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PrestoParameters PrestoParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RdsParameters RdsParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftParameters RedshiftParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Parameters S3Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowParameters ServiceNowParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnowflakeParameters SnowflakeParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SparkParameters SparkParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SqlServerParameters SqlServerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TeradataParameters TeradataParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TwitterParameters TwitterParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonOpenSearchParameters AmazonOpenSearchParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExasolParameters ExasolParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabricksParameters DatabricksParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFolderResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFolderMembershipResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderMember FolderMember { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// An asset in a Amazon QuickSight folder, such as a dashboard, analysis, or dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FolderMember
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MemberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MemberType MemberType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MemberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASHBOARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANALYSIS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET = 2,
	}
	
	/// <summary>
	/// The response object for this operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Group
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateGroupMembershipResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GroupMember GroupMember { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. .
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupMember
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MemberName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIAMPolicyAssignmentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityMap Identities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssignmentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConcurrentUpdatingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIngestionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionStatus IngestionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IngestionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNamespaceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapacityRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamespaceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityStore IdentityStore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NamespaceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETRYABLE_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_RETRYABLE_FAILURE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityStore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Specifies the interval between each scheduled refresh of a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RefreshFrequency
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RefreshInterval Interval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduleRefreshOnEntity RefreshOnDay { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeOfTheDay { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RefreshInterval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUTE15 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUTE30 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 5,
	}
	
	/// <summary>
	/// The refresh on entity for weekly or monthly schedules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScheduleRefreshOnEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DayOfWeek DayOfWeek { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DayOfMonth { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DayOfWeek
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUNDAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONDAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUESDAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEDNESDAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THURSDAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRIDAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SATURDAY = 6,
	}
	
	/// <summary>
	/// This defines the type of ingestion user wants to trigger. This is part of create ingestion request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IngestionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCREMENTAL_REFRESH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL_REFRESH = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The source analysis of the template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateSourceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetReference[] DataSetReferences { get; set; }
	}
	
	/// <summary>
	/// The source template of the template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateSourceTemplate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Dataset configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Placeholder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetSchema DataSetSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnGroupSchema[] ColumnGroupSchemaList { get; set; }
	}
	
	/// <summary>
	/// Dataset schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetSchema
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnSchema[] ColumnSchemaList { get; set; }
	}
	
	/// <summary>
	/// The column schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnSchema
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GeographicRole { get; set; }
	}
	
	/// <summary>
	/// The column group schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnGroupSchema
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnGroupColumnSchema[] ColumnGroupColumnSchemaList { get; set; }
	}
	
	/// <summary>
	/// A structure describing the name, data type, and geographic role of the columns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColumnGroupColumnSchema
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTemplateAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateAlias TemplateAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The template alias.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateAlias
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TemplateVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateThemeResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The theme colors that are used for data colors in charts. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataColorPalette
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Colors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MinMaxGradient { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmptyFillColor { get; set; }
	}
	
	/// <summary>
	/// The theme colors that apply to UI and to charts, excluding data colors. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UIColorPalette
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryBackground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryBackground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Accent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccentForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Danger { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DangerForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Warning { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WarningForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Success { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SuccessForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Dimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionForeground { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Measure { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MeasureForeground { get; set; }
	}
	
	/// <summary>
	/// The theme display options for sheets. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SheetStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TileStyle Tile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TileLayoutStyle TileLayout { get; set; }
	}
	
	/// <summary>
	/// Display options related to tiles on a sheet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TileStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BorderStyle Border { get; set; }
	}
	
	/// <summary>
	/// The display options for tile borders for visuals.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BorderStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Show { get; set; }
	}
	
	/// <summary>
	/// The display options for the layout of tiles on a sheet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TileLayoutStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GutterStyle Gutter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MarginStyle Margin { get; set; }
	}
	
	/// <summary>
	/// The display options for gutter spacing between tiles on a sheet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GutterStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Show { get; set; }
	}
	
	/// <summary>
	/// The display options for margins around the outside edge of sheets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MarginStyle
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Show { get; set; }
	}
	
	/// <summary>
	/// Determines the typography options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Typography
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Font[] FontFamilies { get; set; }
	}
	
	/// <summary>
	/// Determines the font settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Font
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FontFamily { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateThemeAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeAlias ThemeAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// An alias for a theme.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThemeAlias
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ThemeVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTopicResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatasetMetadata
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataAggregation DataAggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicColumn[] Columns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicCalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicNamedEntity[] NamedEntities { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a data aggregation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataAggregation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicTimeGranularity DatasetRowDateGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultDateColumnName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopicTimeGranularity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECOND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINUTE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOUR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUARTER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR = 7,
	}
	
	/// <summary>
	/// A structure that represents a filter used to select items for a topic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FilterDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterClass FilterClass { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FilterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FilterSynonyms { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperandFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamedFilterType FilterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicCategoryFilter CategoryFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicNumericEqualityFilter NumericEqualityFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicNumericRangeFilter NumericRangeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicDateRangeFilter DateRangeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRelativeDateFilter RelativeDateFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENFORCED_VALUE_FILTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONDITIONAL_VALUE_FILTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAMED_VALUE_FILTER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NamedFilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CATEGORY_FILTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMERIC_EQUALITY_FILTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMERIC_RANGE_FILTER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_RANGE_FILTER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELATIVE_DATE_FILTER = 4,
	}
	
	/// <summary>
	/// A structure that represents a category filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicCategoryFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterFunction CategoryFilterFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CategoryFilterType CategoryFilterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicCategoryFilterConstant Constant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Inverse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CategoryFilterFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CategoryFilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_FILTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_FILTER_LIST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LIST = 2,
	}
	
	/// <summary>
	/// A constant used in a category filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicCategoryFilterConstant
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConstantType ConstantType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SingularConstant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CollectiveConstant CollectiveConstant { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConstantType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGULAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLLECTIVE = 2,
	}
	
	/// <summary>
	/// A structure that represents a collective constant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollectiveConstant
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ValueList { get; set; }
	}
	
	/// <summary>
	/// A filter that filters topics based on the value of a numeric field. The filter includes only topics whose numeric field value matches the specified value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicNumericEqualityFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicSingularFilterConstant Constant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamedFilterAggType Aggregation { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a singular filter constant, used in filters to specify a single value to match against.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicSingularFilterConstant
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConstantType ConstantType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SingularConstant { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NamedFilterAggType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_AGGREGATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIAN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEV = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEVP = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VAR = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VARP = 11,
	}
	
	/// <summary>
	/// A filter that filters topics based on the value of a numeric field. The filter includes only topics whose numeric field value falls within the specified range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicNumericRangeFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Inclusive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRangeFilterConstant Constant { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamedFilterAggType Aggregation { get; set; }
	}
	
	/// <summary>
	/// A constant value that is used in a range filter to specify the endpoints of the range.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicRangeFilterConstant
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConstantType ConstantType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RangeConstant RangeConstant { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a range constant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RangeConstant
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Minimum { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Maximum { get; set; }
	}
	
	/// <summary>
	/// A filter used to restrict data based on a range of dates or times.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicDateRangeFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Inclusive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRangeFilterConstant Constant { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a relative date filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicRelativeDateFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicTimeGranularity TimeGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRelativeDateFilterFunction RelativeDateFilterFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicSingularFilterConstant Constant { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopicRelativeDateFilterFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 4,
	}
	
	/// <summary>
	/// Represents a column in a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicColumn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnFriendlyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ColumnSynonyms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnRole ColumnDataRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultAggregation Aggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsIncludedInTopic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableIndexing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComparativeOrder ComparativeOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SemanticType SemanticType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicTimeGranularity TimeGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthorSpecifiedAggregation[] AllowedAggregations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthorSpecifiedAggregation[] NotAllowedAggregations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultFormatting DefaultFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NeverAggregateInFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CellValueSynonym[] CellValueSynonyms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DefaultAggregation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 5,
	}
	
	/// <summary>
	/// A structure that represents a comparative order.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComparativeOrder
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnOrderingType UseOrdering { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SpecifedOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UndefinedSpecifiedValueType TreatUndefinedSpecifiedValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ColumnOrderingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_IS_BETTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESSER_IS_BETTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPECIFIED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UndefinedSpecifiedValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEAST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOST = 1,
	}
	
	/// <summary>
	/// A structure that represents a semantic type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SemanticType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeParameters TypeParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TruthyCellValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TruthyCellValueSynonyms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FalseyCellValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FalseyCellValueSynonyms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeParameters
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuthorSpecifiedAggregation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIAN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEV = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEVP = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VAR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VARP = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENTILE = 11,
	}
	
	/// <summary>
	/// A structure that represents a default formatting definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultFormatting
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DisplayFormat DisplayFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DisplayFormatOptions DisplayFormatOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DisplayFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENCY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 5,
	}
	
	/// <summary>
	/// A structure that represents additional options for display formatting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisplayFormatOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseBlankCellFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BlankCellFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicNumericSeparatorSymbol DecimalSeparator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GroupingSeparator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseGrouping { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FractionDigits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberScale UnitScaler { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NegativeFormat NegativeFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencySymbol { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopicNumericSeparatorSymbol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMA = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOT = 1,
	}
	
	/// <summary>
	/// A structure that represents a negative format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NegativeFormat
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Suffix { get; set; }
	}
	
	/// <summary>
	/// A structure that represents the cell value synonym.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CellValueSynonym
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CellValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Synonyms { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a calculated field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicCalculatedField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CalculatedFieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CalculatedFieldDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Expression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CalculatedFieldSynonyms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsIncludedInTopic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableIndexing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnRole ColumnDataRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicTimeGranularity TimeGranularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultFormatting DefaultFormatting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultAggregation Aggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComparativeOrder ComparativeOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SemanticType SemanticType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthorSpecifiedAggregation[] AllowedAggregations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthorSpecifiedAggregation[] NotAllowedAggregations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NeverAggregateInFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CellValueSynonym[] CellValueSynonyms { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a named entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicNamedEntity
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EntityName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EntitySynonyms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SemanticEntityType SemanticEntityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamedEntityDefinition[] Definition { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a semantic entity type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SemanticEntityType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeParameters TypeParameters { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a named entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NamedEntityDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PropertyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyRole PropertyRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyUsage PropertyUsage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamedEntityDefinitionMetric Metric { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PropertyRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ID = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PropertyUsage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INHERIT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEASURE = 2,
	}
	
	/// <summary>
	/// A structure that represents a metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NamedEntityDefinitionMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NamedEntityAggType Aggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunctionParameters AggregationFunctionParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NamedEntityAggType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTINCT_COUNT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEV = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STDEVP = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VAR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VARP = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENTILE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIAN = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AggregationFunctionParameters
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTopicRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopicScheduleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVPCConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionAvailabilityStatus AvailabilityStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VPCConnectionResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_SUCCESSFUL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_SUCCESSFUL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_IN_PROGRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VPCConnectionAvailabilityStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIALLY_AVAILABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAccountCustomizationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAccountSubscriptionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DeletionTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDashboardResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSetRefreshPropertiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFolderResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFolderMembershipResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGroupMembershipResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIAMPolicyAssignmentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNamespaceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTemplateAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteThemeResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteThemeAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTopicResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTopicRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserByPrincipalIdResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVPCConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionResourceStatus DeletionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionAvailabilityStatus AvailabilityStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountCustomizationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountCustomization AccountCustomization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountSettingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountSettings AccountSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The Amazon QuickSight settings associated with your Amazon Web Services account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Edition Edition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultNamespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotificationEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PublicSharingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TerminationProtectionEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Edition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTERPRISE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTERPRISE_AND_Q = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountSubscriptionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountInfo AccountInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// <p>A structure that contains the following account information elements:</p> <ul> <li> <p>Your Amazon QuickSight account name.</p> </li> <li> <p>The edition of Amazon QuickSight that your account is using.</p> </li> <li> <p>The notification email address that is associated with the Amazon QuickSight account. </p> </li> <li> <p>The authentication type of the Amazon QuickSight account.</p> </li> <li> <p>The status of the Amazon QuickSight account's subscription.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Edition Edition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotificationEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AuthenticationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountSubscriptionStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Analysis Analysis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Metadata structure for an analysis in Amazon QuickSight
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Analysis
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DataSetArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Sheet[] Sheets { get; set; }
	}
	
	/// <summary>
	/// Analysis error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisErrorType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Entity[] ViolatedEntities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_DENIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_NOT_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET_NOT_FOUND = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_VALUE_INCOMPATIBLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_TYPE_INVALID = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_NOT_FOUND = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_TYPE_MISMATCH = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_GEOGRAPHIC_ROLE_MISMATCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_REPLACEMENT_MISSING = 9,
	}
	
	/// <summary>
	/// An object, structure, or sub-structure of an analysis, template, or dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Entity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Path { get; set; }
	}
	
	/// <summary>
	/// A <i>sheet</i>, which is an object that contains a set of visuals that are viewed together on one page in Amazon QuickSight. Every analysis and dashboard contains at least one sheet. Each sheet contains at least one visualization widget, for example a chart, pivot table, or narrative insight. Sheets can be associated with other components, such as controls, filters, and so on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Sheet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SheetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisDefinitionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefinition Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The definition of an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetIdentifierDeclaration[] DataSetIdentifierDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAssetBundleExportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DownloadUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleExportJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAllDependencies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportFormat ExportFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleCloudFormationOverridePropertyConfiguration CloudFormationOverridePropertyConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED_FOR_IMMEDIATE_EXECUTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESSFUL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Describes an error that occurred during an Asset Bundle export job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUDFORMATION_JSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_JSON = 1,
	}
	
	/// <summary>
	/// An optional collection of CloudFormation property configurations that control how the export job is generated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleCloudFormationOverridePropertyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobResourceIdOverrideConfiguration ResourceIdOverrideConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobVPCConnectionOverrideProperties[] VPCConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobRefreshScheduleOverrideProperties[] RefreshSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDataSourceOverrideProperties[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDataSetOverrideProperties[] DataSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobThemeOverrideProperties[] Themes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobAnalysisOverrideProperties[] Analyses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDashboardOverrideProperties[] Dashboards { get; set; }
	}
	
	/// <summary>
	/// An optional structure that configures resource ID overrides for the export job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobResourceIdOverrideConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PrefixForAllResources { get; set; }
	}
	
	/// <summary>
	/// Controls how a specific <code>VPCConnection</code> resource is parameterized in the outputted CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobVPCConnectionOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobVPCConnectionPropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobVPCConnectionPropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DnsResolvers = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RoleArn = 2,
	}
	
	/// <summary>
	/// Controls how a specific <code>RefreshSchedule</code> resource is parameterized in the returned CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobRefreshScheduleOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobRefreshSchedulePropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobRefreshSchedulePropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartAfterDateTime = 0,
	}
	
	/// <summary>
	/// Controls how a specific <code>DataSource</code> resource is parameterized in the returned CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobDataSourceOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDataSourcePropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobDataSourcePropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DisableSsl = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecretArn = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Username = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Password = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Domain = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WorkGroup = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Host = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Port = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Database = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataSetName = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Catalog = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceId = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClusterId = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManifestFileLocation = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Warehouse = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RoleArn = 16,
	}
	
	/// <summary>
	/// Controls how a specific <code>DataSet</code> resource is parameterized in the returned CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobDataSetOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDataSetPropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobDataSetPropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
	}
	
	/// <summary>
	/// Controls how a specific <code>Theme</code> resource is parameterized in the returned CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobThemeOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobThemePropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobThemePropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
	}
	
	/// <summary>
	/// Controls how a specific <code>Analysis</code> resource is parameterized in the returned CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobAnalysisOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobAnalysisPropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobAnalysisPropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
	}
	
	/// <summary>
	/// Controls how a specific <code>Dashboard</code> resource is parameterized in the returned CloudFormation template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobDashboardOverrideProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDashboardPropertyToOverride[] Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleExportJobDashboardPropertyToOverride
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Name = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAssetBundleImportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobError[] RollbackErrors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleImportJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportSourceDescription AssetBundleImportSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobOverrideParameters OverrideParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportFailureAction FailureAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleImportJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED_FOR_IMMEDIATE_EXECUTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESSFUL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_ROLLBACK_IN_PROGRESS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_ROLLBACK_COMPLETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_ROLLBACK_ERROR = 6,
	}
	
	/// <summary>
	/// Describes an error that occurred within an Asset Bundle import execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// A description of the import source that you provide at the start of an import job. This value is set to either <code>Body</code> or <code>S3Uri</code>, depending on how the <code>StartAssetBundleImportJobRequest</code> is configured.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportSourceDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
	}
	
	/// <summary>
	/// A list of overrides that modify the asset bundle resource configuration before the resource is imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobOverrideParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobResourceIdOverrideConfiguration ResourceIdOverrideConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobVPCConnectionOverrideParameters[] VPCConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobRefreshScheduleOverrideParameters[] RefreshSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDataSourceOverrideParameters[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDataSetOverrideParameters[] DataSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobThemeOverrideParameters[] Themes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobAnalysisOverrideParameters[] Analyses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDashboardOverrideParameters[] Dashboards { get; set; }
	}
	
	/// <summary>
	/// An optional structure that configures resource ID overrides for the import job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobResourceIdOverrideConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PrefixForAllResources { get; set; }
	}
	
	/// <summary>
	/// The override parameters for a single VPC connection that is imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobVPCConnectionOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DnsResolvers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// A list of overrides for a specific <code>RefreshsSchedule</code> resource that is present in the asset bundle that is imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobRefreshScheduleOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartAfterDateTime { get; set; }
	}
	
	/// <summary>
	/// The override parameters for a single data source that is being imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobDataSourceOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataSourceParameters DataSourceParameters { get; set; }
		
		/// <summary>
		/// VPC connection properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VpcConnectionProperties VpcConnectionProperties { get; set; }
		
		/// <summary>
		/// Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SslProperties SslProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDataSourceCredentials Credentials { get; set; }
	}
	
	/// <summary>
	/// VPC connection properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConnectionProperties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcConnectionArn { get; set; }
	}
	
	/// <summary>
	/// Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SslProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSsl { get; set; }
	}
	
	/// <summary>
	/// The login credentials to use to import a data source resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobDataSourceCredentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDataSourceCredentialPair CredentialPair { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
	}
	
	/// <summary>
	/// A username and password credential pair to use to import a data source resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobDataSourceCredentialPair
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
	}
	
	/// <summary>
	/// The override parameters for a single dataset that is being imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobDataSetOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The override parameters for a single theme that is imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobThemeOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The override parameters for a single analysis that is being imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobAnalysisOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The override parameters for a single dashboard that is being imported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobDashboardOverrideParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetBundleImportFailureAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOTHING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Dashboard Dashboard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dashboard
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVersion Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastPublishedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	/// <summary>
	/// Dashboard version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceEntityArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DataSetArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Sheet[] Sheets { get; set; }
	}
	
	/// <summary>
	/// Dashboard error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisErrorType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Entity[] ViolatedEntities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardDefinitionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVersionDefinition Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardPublishOptions DashboardPublishOptions { get; set; }
	}
	
	/// <summary>
	/// The contents of a dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardVersionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetIdentifierDeclaration[] DataSetIdentifierDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	/// <summary>
	/// Dashboard publish options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardPublishOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdHocFilteringOption AdHocFilteringOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportToCSVOption ExportToCSVOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlsOption SheetControlsOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVisualPublishOptions VisualPublishOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetLayoutElementMaximizationOption SheetLayoutElementMaximizationOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualMenuOption VisualMenuOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualAxisSortOption VisualAxisSortOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportWithHiddenFieldsOption ExportWithHiddenFieldsOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointDrillUpDownOption DataPointDrillUpDownOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointMenuLabelOption DataPointMenuLabelOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointTooltipOption DataPointTooltipOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LinkSharingConfiguration LinkSharingConfiguration { get; set; }
	}
	
	/// <summary>
	/// A structure that contains the configuration of a shareable link to the dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkSharingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardSnapshotJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotUserConfigurationRedacted UserConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotConfiguration SnapshotConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A structure that contains information about the users that the dashboard snapshot is generated for. Sensitive user information is excluded. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotUserConfigurationRedacted
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotAnonymousUserRedacted[] AnonymousUsers { get; set; }
	}
	
	/// <summary>
	/// Use this structure to redact sensitive information that you provide about an anonymous user from the snapshot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotAnonymousUserRedacted
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RowLevelPermissionTagKeys { get; set; }
	}
	
	/// <summary>
	/// Describes the configuration of the dashboard snapshot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotFileGroup[] FileGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDestinationConfiguration DestinationConfiguration { get; set; }
		
		/// <summary>
		/// A list of Amazon QuickSight parameters and the list's override values.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
	}
	
	/// <summary>
	/// A structure that contains the information on the snapshot files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotFileGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotFile[] Files { get; set; }
	}
	
	/// <summary>
	/// A structure that contains the information for the snapshot that you want to generate. This information is provided by you when you start a new snapshot job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotFile
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotFileSheetSelection[] SheetSelections { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotFileFormatType FormatType { get; set; }
	}
	
	/// <summary>
	/// A structure that contains information that identifies the snapshot that needs to be generated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotFileSheetSelection
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SheetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterVisualScope SelectionScope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VisualIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnapshotFileFormatType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PDF = 1,
	}
	
	/// <summary>
	/// A structure that contains information on the Amazon S3 destinations of the generated snapshot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotDestinationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotS3DestinationConfiguration[] S3Destinations { get; set; }
	}
	
	/// <summary>
	/// A structure that describes the Amazon S3 settings to use to save the generated dashboard snapshot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotS3DestinationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3BucketConfiguration BucketConfiguration { get; set; }
	}
	
	/// <summary>
	/// An optional structure that contains the Amazon S3 bucket configuration that the generated snapshots are stored in. If you don't provide this information, generated snapshots are stored in the default Amazon QuickSight bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3BucketConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketPrefix { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketRegion { get; set; }
	}
	
	/// <summary>
	/// A list of Amazon QuickSight parameters and the list's override values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringParameter[] StringParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameter[] IntegerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalParameter[] DecimalParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeParameter[] DateTimeParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnapshotJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardSnapshotJobResultResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobResult Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobErrorInfo ErrorInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// An object that provides information on the result of a snapshot job. This object provides information about the job, the job status, and the location of the generated file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotJobResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserSnapshotJobResult[] AnonymousUsers { get; set; }
	}
	
	/// <summary>
	/// A structure that contains the file groups that are requested for the artifact generation in a <code>StartDashboardSnapshotJob</code> API call. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnonymousUserSnapshotJobResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobResultFileGroup[] FileGroups { get; set; }
	}
	
	/// <summary>
	/// A structure that contains information on the generated snapshot file groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotJobResultFileGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotFile[] Files { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobS3Result[] S3Results { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 result from the snapshot job. The result includes the <code>DestinationConfiguration</code> and the Amazon S3 Uri. If an error occured during the job, the result returns information on the error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotJobS3Result
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotS3DestinationConfiguration S3DestinationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotJobResultErrorInfo[] ErrorInfo { get; set; }
	}
	
	/// <summary>
	/// Information on the error that caused the snapshot job to fail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotJobResultErrorInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorType { get; set; }
	}
	
	/// <summary>
	/// An object that contains information on the error that caused the snapshot job to fail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotJobErrorInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSet DataSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// Dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhysicalTableMap PhysicalTableMap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogicalTableMap LogicalTableMap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputColumn[] OutputColumns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetImportMode ImportMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConsumedSpiceCapacityInBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnGroup[] ColumnGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldFolderMap FieldFolders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionDataSet RowLevelPermissionDataSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionTagConfiguration RowLevelPermissionTagConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnLevelPermissionRule[] ColumnLevelPermissionRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetUsageConfiguration DataSetUsageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatasetParameter[] DatasetParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhysicalTableMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogicalTableMap
	{
	}
	
	/// <summary>
	/// Output column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputColumn
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSetImportMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPICE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUERY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldFolderMap
	{
	}
	
	/// <summary>
	/// <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RowLevelPermissionDataSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionPolicy PermissionPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionFormatVersion FormatVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configuration of tags on a dataset to set row-level security. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RowLevelPermissionTagConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionTagRule[] TagRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[][] TagRuleConfigurations { get; set; }
	}
	
	/// <summary>
	/// The usage configuration to apply to child datasets that reference this dataset as a source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetUsageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableUseAsDirectQuerySource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableUseAsImportedSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSetPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSetRefreshPropertiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetRefreshProperties DataSetRefreshProperties { get; set; }
	}
	
	/// <summary>
	/// The refresh properties of a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetRefreshProperties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RefreshConfiguration RefreshConfiguration { get; set; }
	}
	
	/// <summary>
	/// The refresh configuration of a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RefreshConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IncrementalRefresh IncrementalRefresh { get; set; }
	}
	
	/// <summary>
	/// The incremental refresh configuration for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncrementalRefresh
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LookbackWindow LookbackWindow { get; set; }
	}
	
	/// <summary>
	/// The lookback window setup of an incremental refresh configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LookbackWindow
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Size { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LookbackWindowSizeUnit SizeUnit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LookbackWindowSizeUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOUR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource DataSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The structure of a data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceParameters DataSourceParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceParameters[] AlternateDataSourceParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConnectionProperties VpcConnectionProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SslProperties SslProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceErrorInfo ErrorInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADOBE_ANALYTICS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMAZON_ELASTICSEARCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATHENA = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AURORA = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AURORA_POSTGRESQL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IOT_ANALYTICS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GITHUB = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JIRA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MARIADB = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYSQL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORACLE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTGRESQL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESTO = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDSHIFT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALESFORCE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICENOW = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNOWFLAKE = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPARK = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQLSERVER = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERADATA = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWITTER = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMESTREAM = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMAZON_OPENSEARCH = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXASOL = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABRICKS = 25,
	}
	
	/// <summary>
	/// Error information for the data source creation or update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceErrorInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceErrorInfoType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceErrorInfoType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_DENIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_SOURCE_NOT_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMEOUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENGINE_VERSION_NOT_SUPPORTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_HOST = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GENERIC_SQL_FAILURE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFLICT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSourcePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFolderResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Folder Folder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A folder in Amazon QuickSight.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Folder
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderType FolderType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FolderPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FolderType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFolderPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFolderResolvedPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeGroupMembershipResponse
	{
		
		/// <summary>
		/// A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. .
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GroupMember GroupMember { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIAMPolicyAssignmentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IAMPolicyAssignment IAMPolicyAssignment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy assignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IAMPolicyAssignment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityMap Identities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidNextTokenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIngestionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Ingestion Ingestion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// Information about the SPICE ingestion for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ingestion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IngestionStatus IngestionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorInfo ErrorInfo { get; set; }
		
		/// <summary>
		/// Information about rows for a data set SPICE ingestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RowInfo RowInfo { get; set; }
		
		/// <summary>
		/// Information about a queued dataset SPICE ingestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public QueueInfo QueueInfo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IngestionTimeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IngestionSizeInBytes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionRequestSource RequestSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionRequestType RequestType { get; set; }
	}
	
	/// <summary>
	/// Error information for the SPICE ingestion of a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionErrorType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IngestionErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_TO_ASSUME_ROLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGESTION_SUPERSEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGESTION_CANCELED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET_DELETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET_NOT_SPICE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_UPLOADED_FILE_DELETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_MANIFEST_ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_TOLERANCE_EXCEPTION = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPICE_TABLE_NOT_FOUND = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET_SIZE_LIMIT_EXCEEDED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROW_SIZE_LIMIT_EXCEEDED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_CAPACITY_LIMIT_EXCEEDED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_ERROR = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SOURCE_NOT_FOUND = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM_ROLE_NOT_AVAILABLE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTION_FAILURE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL_TABLE_NOT_FOUND = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMISSION_DENIED = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSL_CERTIFICATE_VALIDATION_FAILURE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAUTH_TOKEN_FAILURE = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_API_LIMIT_EXCEEDED_FAILURE = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSWORD_AUTHENTICATION_FAILURE = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL_SCHEMA_MISMATCH_ERROR = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_DATE_FORMAT = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_DATAPREP_SYNTAX = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_RESOURCE_LIMIT_EXCEEDED = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL_INVALID_PARAMETER_VALUE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERY_TIMEOUT = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL_NUMERIC_OVERFLOW = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNRESOLVABLE_HOST = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNROUTABLE_HOST = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL_EXCEPTION = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3_FILE_INACCESSIBLE = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOT_FILE_NOT_FOUND = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOT_DATA_SET_FILE_EMPTY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_DATA_SOURCE_CONFIG = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SOURCE_AUTH_FAILED = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SOURCE_CONNECTION_FAILED = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_TO_PROCESS_JSON_FILE = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_SERVICE_ERROR = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REFRESH_SUPPRESSED_BY_EDIT = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMISSION_NOT_FOUND = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELASTICSEARCH_CURSOR_NOT_ENABLED = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURSOR_NOT_ENABLED = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DUPLICATE_COLUMN_NAMES_FOUND = 44,
	}
	
	/// <summary>
	/// Information about rows for a data set SPICE ingestion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RowInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RowsIngested { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RowsDropped { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalRowsInDataset { get; set; }
	}
	
	/// <summary>
	/// Information about a queued dataset SPICE ingestion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueInfo
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string WaitingOnIngestion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueuedIngestion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IngestionRequestSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANUAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 1,
	}
	
	/// <summary>
	/// This defines the type of ingestion request. This is returned as part of create ingestion response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IngestionRequestType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIAL_INGESTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EDIT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCREMENTAL_REFRESH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL_REFRESH = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIpRestrictionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IpRestrictionRuleMap IpRestrictionRuleMap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IpRestrictionRuleMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNamespaceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NamespaceInfoV2 Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The error type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NamespaceInfoV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapacityRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamespaceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityStore IdentityStore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NamespaceError NamespaceError { get; set; }
	}
	
	/// <summary>
	/// Errors that occur during namespace creation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NamespaceError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NamespaceErrorType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NamespaceErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMISSION_DENIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_SERVICE_ERROR = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RefreshSchedule RefreshSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// The refresh schedule of a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RefreshSchedule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RefreshFrequency ScheduleFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartAfterDateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IngestionType RefreshType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// <p>A template object. A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with an analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across Amazon Web Services accounts by allowing users in other Amazon Web Services accounts to create a template or a dashboard from an existing template.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Template
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersion Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
	}
	
	/// <summary>
	/// A version of a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetConfiguration[] DataSetConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceEntityArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Sheet[] Sheets { get; set; }
	}
	
	/// <summary>
	/// List of errors that occurred when the template version creation failed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateErrorType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Entity[] ViolatedEntities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TemplateErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_NOT_FOUND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET_NOT_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_DENIED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplateAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateAlias TemplateAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplateDefinitionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersionDefinition Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The detailed definition of a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateVersionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetConfiguration[] DataSetConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplatePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThemeResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Theme Theme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Summary information about a theme.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Theme
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		/// <summary>
		/// A version of a theme.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ThemeVersion Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeType Type { get; set; }
	}
	
	/// <summary>
	/// A version of a theme.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThemeVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BaseThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
	}
	
	/// <summary>
	/// The theme configuration. This configuration contains all of the display properties for a theme.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThemeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataColorPalette DataColorPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UIColorPalette UIColorPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetStyle Sheet { get; set; }
		
		/// <summary>
		/// Determines the typography options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Typography Typography { get; set; }
	}
	
	/// <summary>
	/// Theme error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThemeError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeErrorType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ThemeErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_FAILURE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ThemeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThemeAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeAlias ThemeAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThemePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicDetails Topic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A structure that describes the details of a topic, such as its name, description, and associated data sets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatasetMetadata[] DataSets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicRefreshResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshDetails RefreshDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The details about the refresh of a topic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicRefreshDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshStatus RefreshStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TopicRefreshStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshSchedule RefreshSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A structure that represents a topic refresh schedule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicRefreshSchedule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsEnabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool BasedOnSpiceSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartingAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RepeatAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicScheduleType TopicScheduleType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public User User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A registered user of Amazon QuickSight. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserRole Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomPermissionsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginFederationProviderType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginFederationProviderUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHOR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTRICTED_AUTHOR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTRICTED_READER = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVPCConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnection VPCConnection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The structure of a VPC connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DnsResolvers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionAvailabilityStatus AvailabilityStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetworkInterface[] NetworkInterfaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	/// <summary>
	/// The structure that contains information about a network interface.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkInterface
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetworkInterfaceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkInterfaceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NetworkInterfaceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_SCHEDULED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACHMENT_FAILED_ROLLBACK_FAILED = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateEmbedUrlForAnonymousUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmbedUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnonymousUserArn { get; set; }
	}
	
	/// <summary>
	/// The key-value pair used for the row-level security tags feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionTag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about the dashboard that you want to embed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnonymousUserDashboardEmbeddingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialDashboardId { get; set; }
	}
	
	/// <summary>
	/// The experience that you are embedding. You can use this object to generate a url that embeds a visual into your application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnonymousUserDashboardVisualEmbeddingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DashboardVisualId InitialDashboardVisualId { get; set; }
	}
	
	/// <summary>
	/// <p>A structure that contains the following elements:</p> <ul> <li> <p>The <code>DashboardId</code> of the dashboard that has the visual that you want to embed.</p> </li> <li> <p>The <code>SheetId</code> of the sheet that has the visual that you want to embed.</p> </li> <li> <p>The <code>VisualId</code> of the visual that you want to embed.</p> </li> </ul> <p>The <code>DashboardId</code>, <code>SheetId</code>, and <code>VisualId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console. You can also get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardVisualId
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SheetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VisualId { get; set; }
	}
	
	/// <summary>
	/// The settings that you want to use with the Q search bar.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnonymousUserQSearchBarEmbeddingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialTopicId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionLifetimeInMinutesInvalidException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnsupportedPricingPlanException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateEmbedUrlForRegisteredUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmbedUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Information about the dashboard you want to embed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserDashboardEmbeddingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialDashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserDashboardFeatureConfigurations FeatureConfigurations { get; set; }
	}
	
	/// <summary>
	/// The feature configuration for an embedded dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserDashboardFeatureConfigurations
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StatePersistenceConfigurations StatePersistence { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BookmarksConfigurations Bookmarks { get; set; }
	}
	
	/// <summary>
	/// The state perssitence configuration of an embedded dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StatePersistenceConfigurations
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
	}
	
	/// <summary>
	/// The bookmarks configuration of an embedded dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BookmarksConfigurations
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
	}
	
	/// <summary>
	/// Information about the Amazon QuickSight console that you want to embed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserQuickSightConsoleEmbeddingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InitialPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserConsoleFeatureConfigurations FeatureConfigurations { get; set; }
	}
	
	/// <summary>
	/// The feature configurations of an embedded Amazon QuickSight console.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserConsoleFeatureConfigurations
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StatePersistenceConfigurations StatePersistence { get; set; }
	}
	
	/// <summary>
	/// Information about the Q search bar embedding experience.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserQSearchBarEmbeddingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InitialTopicId { get; set; }
	}
	
	/// <summary>
	/// The experience that you are embedding. You can use this object to generate a url that embeds a visual into your application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserDashboardVisualEmbeddingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DashboardVisualId InitialDashboardVisualId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickSightUserNotFoundException
	{
	}
	
	/// <summary>
	/// Output returned from the <code>GetDashboardEmbedUrl</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDashboardEmbedUrlResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EmbedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainNotWhitelistedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityTypeNotSupportedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSessionEmbedUrlResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EmbedUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnalysesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSummary[] AnalysisSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The summary metadata that describes an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetBundleExportJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobSummary[] AssetBundleExportJobSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A summary of the export job that includes details of the job's configuration and its current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleExportJobSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleExportJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAllDependencies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportFormat ExportFormat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetBundleImportJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobSummary[] AssetBundleImportJobSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A summary of the import job that includes details of the requested job's configuration and its current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportJobSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleImportJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportFailureAction FailureAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDashboardVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVersionSummary[] DashboardVersionSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Dashboard version summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceEntityArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDashboardsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSummary[] DashboardSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// Dashboard summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PublishedVersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastPublishedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetSummary[] DataSetSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// Dataset summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetImportMode ImportMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionDataSet RowLevelPermissionDataSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RowLevelPermissionTagConfigurationApplied { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ColumnLevelPermissionRulesApplied { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSourcesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFolderMembersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MemberIdArnPair[] FolderMemberList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// An object that consists of a member Amazon Resource Name (ARN) and a member ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberIdArnPair
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MemberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MemberArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFoldersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderSummary[] FolderSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A summary of information about an existing Amazon QuickSight folder. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FolderSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderType FolderType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupMembershipsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GroupMember[] GroupMemberList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Group[] GroupList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIAMPolicyAssignmentsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IAMPolicyAssignmentSummary[] IAMPolicyAssignments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// IAM policy assignment summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IAMPolicyAssignmentSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIAMPolicyAssignmentsForUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ActiveIAMPolicyAssignment[] ActiveAssignments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The active Identity and Access Management (IAM) policy assignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActiveIAMPolicyAssignment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIngestionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Ingestion[] Ingestions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListNamespacesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NamespaceInfoV2[] Namespaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRefreshSchedulesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RefreshSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplateAliasesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateAlias[] TemplateAliasList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplateVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersionSummary[] TemplateVersionSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The template version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplatesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSummary[] TemplateSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The template summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LatestVersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThemeAliasesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeAlias[] ThemeAliasList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThemeVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeVersionSummary[] ThemeVersionSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The theme version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThemeVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThemesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeSummary[] ThemeSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// The theme summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThemeSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LatestVersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTopicRefreshSchedulesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshScheduleSummary[] RefreshSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A summary of the refresh schedule details for a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicRefreshScheduleSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshSchedule RefreshSchedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTopicsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicSummary[] TopicsSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A topic summary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUserGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Group[] GroupList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUsersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public User[] UserList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVPCConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionSummary[] VPCConnectionSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// The summary metadata that describes a VPC connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCConnectionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DnsResolvers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionResourceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionAvailabilityStatus AvailabilityStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetworkInterface[] NetworkInterfaces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDataSetRefreshPropertiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public User User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserInvitationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchAnalysesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSummary[] AnalysisSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A filter that you apply when searching for one or more analyses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSearchFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisFilterAttribute Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StringEquals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StringLike = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisFilterAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_VIEWER_OR_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_VIEWER_OR_OWNER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_OWNER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_OWNER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_SOLE_OWNER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANALYSIS_NAME = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDashboardsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSummary[] DashboardSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A filter that you apply when searching for dashboards. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardSearchFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardFilterAttribute Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DashboardFilterAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_VIEWER_OR_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_VIEWER_OR_OWNER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_OWNER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_OWNER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_SOLE_OWNER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASHBOARD_NAME = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDataSetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetSummary[] DataSetSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A filter that you apply when searching for datasets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSetSearchFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetFilterAttribute Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSetFilterAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_VIEWER_OR_OWNER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_VIEWER_OR_OWNER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_OWNER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_SOLE_OWNER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASET_NAME = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDataSourcesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSummary[] DataSourceSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A <code>DataSourceSummary</code> object that returns a summary of a data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	/// <summary>
	/// A filter that you apply when searching for data sources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceSearchFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSourceFilterAttribute Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataSourceFilterAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_VIEWER_OR_OWNER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_SOLE_OWNER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATASOURCE_NAME = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchFoldersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderSummary[] FolderSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	/// <summary>
	/// A filter to use to search an Amazon QuickSight folder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FolderSearchFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderFilterAttribute Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FolderFilterAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARENT_FOLDER_ARN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_SOLE_OWNER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUICKSIGHT_VIEWER_OR_OWNER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_OWNER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT_VIEWER_OR_OWNER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOLDER_NAME = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Group[] GroupList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A <code>GroupSearchFilter</code> object that you want to apply to your search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupSearchFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GroupFilterOperator Operator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GroupFilterAttribute Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GroupFilterOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartsWith = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GroupFilterAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP_NAME = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartAssetBundleExportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleExportJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartAssetBundleImportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleImportJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDashboardSnapshotJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotJobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	/// <summary>
	/// A structure that contains information on the anonymous user configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotAnonymousUser
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SessionTag[] RowLevelPermissionTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAccountCustomizationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountCustomization AccountCustomization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAccountSettingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus UpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnalysisPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnalysisId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDashboardResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDashboardPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LinkSharingConfiguration LinkSharingConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDashboardPublishedVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DashboardArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IngestionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSetPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus UpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSourcePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFolderResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFolderPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FolderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateIAMPolicyAssignmentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityMap Identities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateIpRestrictionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AwsAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePublicSharingSettingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplateAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateAlias TemplateAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplatePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThemeResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus CreationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThemeAliasResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeAlias ThemeAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThemePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTopicResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTopicPermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTopicRefreshScheduleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public User User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVPCConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionResourceStatus UpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCConnectionAvailabilityStatus AvailabilityStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DashboardBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// The source entity of an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSourceTemplate SourceTemplate { get; set; }
	}
	
	/// <summary>
	/// The type of experience you want to embed. For anonymous users, you can embed Amazon QuickSight dashboards.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnonymousUserEmbeddingExperienceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserDashboardEmbeddingConfiguration Dashboard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserDashboardVisualEmbeddingConfiguration DashboardVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserQSearchBarEmbeddingConfiguration QSearchBar { get; set; }
	}
	
	/// <summary>
	/// The source of the asset bundle zip file that contains the data that you want to import. The file must be in <code>QUICKSIGHT_JSON</code> format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetBundleImportSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuthenticationMethodOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM_AND_QUICKSIGHT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM_ONLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE_DIRECTORY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelIngestionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ColumnDataRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEASURE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAccountCustomizationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccountCustomization AccountCustomization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAccountSubscriptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Edition Edition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthenticationMethodOption AuthenticationMethod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NotificationEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActiveDirectoryName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Realm { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdminGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AuthorGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReaderGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnalysisRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSourceEntity SourceEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefinition Definition { get; set; }
	}
	
	/// <summary>
	/// Dashboard source entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardSourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSourceTemplate SourceTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDashboardRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSourceEntity SourceEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardPublishOptions DashboardPublishOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVersionDefinition Definition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhysicalTableMap PhysicalTableMap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogicalTableMap LogicalTableMap { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetImportMode ImportMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnGroup[] ColumnGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldFolderMap FieldFolders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionDataSet RowLevelPermissionDataSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionTagConfiguration RowLevelPermissionTagConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnLevelPermissionRule[] ColumnLevelPermissionRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The usage configuration to apply to child datasets that reference this dataset as a source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataSetUsageConfiguration DataSetUsageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatasetParameter[] DatasetParameters { get; set; }
	}
	
	/// <summary>
	/// Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSourceCredentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CredentialPair CredentialPair { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CopySourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceParameters DataSourceParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceCredentials Credentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConnectionProperties VpcConnectionProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SslProperties SslProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFolderMembershipRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFolderRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FolderType FolderType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentFolderArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateGroupMembershipRequest
	{
	}
	
	/// <summary>
	/// The request object for this operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateGroupRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIAMPolicyAssignmentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssignmentName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityMap Identities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIngestionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionType IngestionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNamespaceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityStore IdentityStore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRefreshScheduleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RefreshSchedule Schedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTemplateAliasRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TemplateVersionNumber { get; set; }
	}
	
	/// <summary>
	/// The source entity of the template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateSourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceAnalysis SourceAnalysis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceTemplate SourceTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceEntity SourceEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersionDefinition Definition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateThemeAliasRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ThemeVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateThemeRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BaseThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ThemeConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTopicRefreshScheduleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatasetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshSchedule RefreshSchedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTopicRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TopicId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TopicDetails Topic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVPCConnectionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VPCConnectionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DnsResolvers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DashboardErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_DENIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_NOT_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SET_NOT_FOUND = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_VALUE_INCOMPATIBLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_TYPE_INVALID = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARAMETER_NOT_FOUND = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_TYPE_MISMATCH = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_GEOGRAPHIC_ROLE_MISMATCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_REPLACEMENT_MISSING = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DatasetParameterValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_VALUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_VALUED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAccountCustomizationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAccountSubscriptionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnalysisRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDashboardRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSetRefreshPropertiesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDataSourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFolderMembershipRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFolderRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGroupMembershipRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIAMPolicyAssignmentRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNamespaceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRefreshScheduleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTemplateAliasRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteThemeAliasRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteThemeRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTopicRefreshScheduleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTopicRequest
	{
	}
	
	/// <summary>
	/// <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserByPrincipalIdRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVPCConnectionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountCustomizationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountSettingsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountSubscriptionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisDefinitionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisPermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnalysisRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAssetBundleExportJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAssetBundleImportJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardDefinitionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardPermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardSnapshotJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDashboardSnapshotJobResultRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSetPermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSetRefreshPropertiesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSourcePermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDataSourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFolderPermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFolderRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeFolderResolvedPermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeGroupMembershipRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIAMPolicyAssignmentRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIngestionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeIpRestrictionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNamespaceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRefreshScheduleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplateAliasRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplateDefinitionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplatePermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThemeAliasRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThemePermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeThemeRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicPermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicRefreshRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicRefreshScheduleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTopicRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVPCConnectionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmbeddingIdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICKSIGHT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANONYMOUS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateEmbedUrlForAnonymousUserRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionLifetimeInMinutes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SessionTag[] SessionTags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AuthorizedResourceArns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserEmbeddingExperienceConfiguration ExperienceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowedDomains { get; set; }
	}
	
	/// <summary>
	/// <p>The type of experience you want to embed. For registered users, you can embed Amazon QuickSight dashboards or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuration.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisteredUserEmbeddingExperienceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserDashboardEmbeddingConfiguration Dashboard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserQuickSightConsoleEmbeddingConfiguration QuickSightConsole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserQSearchBarEmbeddingConfiguration QSearchBar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserDashboardVisualEmbeddingConfiguration DashboardVisual { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerateEmbedUrlForRegisteredUserRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionLifetimeInMinutes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UserArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserEmbeddingExperienceConfiguration ExperienceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowedDomains { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDashboardEmbedUrlRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSessionEmbedUrlRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnalysesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetBundleExportJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetBundleImportJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDashboardVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDashboardsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSetsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDataSourcesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFolderMembersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFoldersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupMembershipsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIAMPolicyAssignmentsForUserRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIAMPolicyAssignmentsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIngestionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListNamespacesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRefreshSchedulesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplateAliasesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplateVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplatesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThemeAliasesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThemeVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListThemesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTopicRefreshSchedulesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTopicsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUserGroupsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUsersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVPCConnectionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NumericFilterSelectAllOptions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ALL_VALUES = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDataSetRefreshPropertiesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetRefreshProperties DataSetRefreshProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReferenceLinePatternType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASHED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOTTED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterUserRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserRole UserRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IamArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SessionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomPermissionsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginFederationProviderType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomFederationProviderUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestoreAnalysisRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchAnalysesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSearchFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDashboardsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DashboardSearchFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDataSetsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetSearchFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDataSourcesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSourceSearchFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchFoldersRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FolderSearchFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchGroupsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GroupSearchFilter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SectionPageBreakStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnapshotFileSheetSelectionScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_VISUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECTED_VISUALS = 1,
	}
	
	/// <summary>
	/// A structure that contains information about the users that the dashboard snapshot is generated for.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotUserConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotAnonymousUser[] AnonymousUsers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartAssetBundleExportJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleExportJobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAllDependencies { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportFormat ExportFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleCloudFormationOverridePropertyConfiguration CloudFormationOverridePropertyConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartAssetBundleImportJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetBundleImportJobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportSource AssetBundleImportSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobOverrideParameters OverrideParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportFailureAction FailureAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDashboardSnapshotJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotJobId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotUserConfiguration UserConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotConfiguration SnapshotConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAccountCustomizationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccountCustomization AccountCustomization { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAccountSettingsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultNamespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotificationEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TerminationProtectionEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnalysisPermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnalysisRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSourceEntity SourceEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefinition Definition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDashboardPermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantLinkPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokeLinkPermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDashboardPublishedVersionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDashboardRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSourceEntity SourceEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardPublishOptions DashboardPublishOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVersionDefinition Definition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSetPermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhysicalTableMap PhysicalTableMap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogicalTableMap LogicalTableMap { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetImportMode ImportMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnGroup[] ColumnGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FieldFolderMap FieldFolders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionDataSet RowLevelPermissionDataSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionTagConfiguration RowLevelPermissionTagConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnLevelPermissionRule[] ColumnLevelPermissionRules { get; set; }
		
		/// <summary>
		/// The usage configuration to apply to child datasets that reference this dataset as a source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DataSetUsageConfiguration DataSetUsageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatasetParameter[] DatasetParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSourcePermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceParameters DataSourceParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSourceCredentials Credentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConnectionProperties VpcConnectionProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SslProperties SslProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFolderPermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFolderRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateGroupRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateIAMPolicyAssignmentRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityMap Identities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateIpRestrictionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IpRestrictionRuleMap IpRestrictionRuleMap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePublicSharingSettingsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PublicSharingEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRefreshScheduleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RefreshSchedule Schedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplateAliasRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TemplateVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplatePermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceEntity SourceEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersionDefinition Definition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThemeAliasRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ThemeVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThemePermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateThemeRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BaseThemeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThemeConfiguration Configuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTopicPermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTopicRefreshScheduleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TopicRefreshSchedule RefreshSchedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTopicRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TopicDetails Topic { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserRole Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomPermissionsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnapplyCustomPermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginFederationProviderType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomFederationProviderUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVPCConnectionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DnsResolvers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Cancels an ongoing ingestion of data into SPICE.
		/// CancelIngestion accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset used in the ingestion.</param>
		/// <param name="IngestionId">An ID for the ingestion.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<CancelIngestionResponse> CancelIngestionAsync(string AwsAccountId, string DataSetId, string IngestionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/ingestions/"+ (IngestionId==null? "" : System.Uri.EscapeDataString(IngestionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CancelIngestionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates and starts a new SPICE ingestion for a dataset. You can manually refresh datasets in an Enterprise edition account 32 times in a 24-hour period. You can manually refresh datasets in a Standard edition account 8 times in a 24-hour period. Each 24-hour period is measured starting 24 hours before the current date and time.</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="http://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the Amazon Web Services Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>
		/// CreateIngestion accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}
		/// </summary>
		/// <param name="DataSetId">The ID of the dataset used in the ingestion.</param>
		/// <param name="IngestionId">An ID for the ingestion.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateIngestionResponse> CreateIngestionAsync(string DataSetId, string IngestionId, string AwsAccountId, CreateIngestionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/ingestions/"+ (IngestionId==null? "" : System.Uri.EscapeDataString(IngestionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateIngestionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a SPICE ingestion.
		/// DescribeIngestion accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset used in the ingestion.</param>
		/// <param name="IngestionId">An ID for the ingestion.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeIngestionResponse> DescribeIngestionAsync(string AwsAccountId, string DataSetId, string IngestionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/ingestions/"+ (IngestionId==null? "" : System.Uri.EscapeDataString(IngestionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeIngestionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates Amazon QuickSight customizations for the current Amazon Web Services Region. Currently, you can add a custom default theme by using the <code>CreateAccountCustomization</code> or <code>UpdateAccountCustomization</code> API operation. To further customize Amazon QuickSight by removing Amazon QuickSight sample assets and videos for all new users, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-quicksight.html">Customizing Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> </p> <p>You can create customizations for your Amazon Web Services account or, if you specify a namespace, for a QuickSight namespace instead. Customizations that apply to a namespace always override customizations that apply to an Amazon Web Services account. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation.</p> <p>Before you use the <code>CreateAccountCustomization</code> API operation to add a theme as the namespace default, make sure that you first share the theme with the namespace. If you don't share it with the namespace, the theme isn't visible to your users even if you make it the default theme. To check if the theme is shared, view the current permissions by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeThemePermissions.html">DescribeThemePermissions</a> </code> API operation. To share the theme, grant permissions by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateThemePermissions.html">UpdateThemePermissions</a> </code> API operation. </p>
		/// CreateAccountCustomization accounts/{AwsAccountId}/customizations
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="_namespace">The Amazon QuickSight namespace that you want to add customizations to.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateAccountCustomizationResponse> CreateAccountCustomizationAsync(string AwsAccountId, string _namespace, CreateAccountCustomizationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/customizations&namespace=" + (_namespace==null? "" : System.Uri.EscapeDataString(_namespace));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateAccountCustomizationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes all Amazon QuickSight customizations in this Amazon Web Services Region for the specified Amazon Web Services account and Amazon QuickSight namespace.
		/// DeleteAccountCustomization accounts/{AwsAccountId}/customizations
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that you want to delete Amazon QuickSight customizations from in this Amazon Web Services Region.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="_namespace">The Amazon QuickSight namespace that you're deleting the customizations from.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteAccountCustomizationResponse> DeleteAccountCustomizationAsync(string AwsAccountId, string _namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/customizations&namespace=" + (_namespace==null? "" : System.Uri.EscapeDataString(_namespace));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAccountCustomizationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes the customizations associated with the provided Amazon Web Services account and Amazon Amazon QuickSight namespace in an Amazon Web Services Region. The Amazon QuickSight console evaluates which customizations to apply by running this API operation with the <code>Resolved</code> flag included. </p> <p>To determine what customizations display when you run this command, it can help to visualize the relationship of the entities involved. </p> <ul> <li> <p> <code>Amazon Web Services account</code> - The Amazon Web Services account exists at the top of the hierarchy. It has the potential to use all of the Amazon Web Services Regions and Amazon Web Services Services. When you subscribe to Amazon QuickSight, you choose one Amazon Web Services Region to use as your home Region. That's where your free SPICE capacity is located. You can use Amazon QuickSight in any supported Amazon Web Services Region. </p> </li> <li> <p> <code>Amazon Web Services Region</code> - In each Amazon Web Services Region where you sign in to Amazon QuickSight at least once, Amazon QuickSight acts as a separate instance of the same service. If you have a user directory, it resides in us-east-1, which is the US East (N. Virginia). Generally speaking, these users have access to Amazon QuickSight in any Amazon Web Services Region, unless they are constrained to a namespace. </p> <p>To run the command in a different Amazon Web Services Region, you change your Region settings. If you're using the CLI, you can use one of the following options:</p> <ul> <li> <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html">command line options</a>. </p> </li> <li> <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html">named profiles</a>. </p> </li> <li> <p>Run <code>aws configure</code> to change your default Amazon Web Services Region. Use Enter to key the same settings for your keys. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">Configuring the CLI</a>.</p> </li> </ul> </li> <li> <p> <code>Namespace</code> - A QuickSight namespace is a partition that contains users and assets (data sources, datasets, dashboards, and so on). To access assets that are in a specific namespace, users and groups must also be part of the same namespace. People who share a namespace are completely isolated from users and assets in other namespaces, even if they are in the same Amazon Web Services account and Amazon Web Services Region.</p> </li> <li> <p> <code>Applied customizations</code> - Within an Amazon Web Services Region, a set of Amazon QuickSight customizations can apply to an Amazon Web Services account or to a namespace. Settings that you apply to a namespace override settings that you apply to an Amazon Web Services account. All settings are isolated to a single Amazon Web Services Region. To apply them in other Amazon Web Services Regions, run the <code>CreateAccountCustomization</code> command in each Amazon Web Services Region where you want to apply the same customizations. </p> </li> </ul>
		/// DescribeAccountCustomization accounts/{AwsAccountId}/customizations
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that you want to describe Amazon QuickSight customizations for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="_namespace">The Amazon QuickSight namespace that you want to describe Amazon QuickSight customizations for.
		/// Max length: 64
		// </param>
		/// <param name="resolved">The <code>Resolved</code> flag works with the other parameters to determine which view of Amazon QuickSight customizations is returned. You can add this flag to your command to use the same view that Amazon QuickSight uses to identify which customizations to apply to the console. Omit this flag, or set it to <code>no-resolved</code>, to reveal customizations that are configured at different levels. </param>
		/// <returns>Success</returns>
		public async Task<DescribeAccountCustomizationResponse> DescribeAccountCustomizationAsync(string AwsAccountId, string _namespace, bool resolved, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/customizations&namespace=" + (_namespace==null? "" : System.Uri.EscapeDataString(_namespace))+"&resolved="+resolved;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAccountCustomizationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates Amazon QuickSight customizations for the current Amazon Web Services Region. Currently, the only customization that you can use is a theme.</p> <p>You can use customizations for your Amazon Web Services account or, if you specify a namespace, for a Amazon QuickSight namespace instead. Customizations that apply to a namespace override customizations that apply to an Amazon Web Services account. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation. </p>
		/// UpdateAccountCustomization accounts/{AwsAccountId}/customizations
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="_namespace">The namespace that you want to update Amazon QuickSight customizations for.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateAccountCustomizationResponse> UpdateAccountCustomizationAsync(string AwsAccountId, string _namespace, UpdateAccountCustomizationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/customizations&namespace=" + (_namespace==null? "" : System.Uri.EscapeDataString(_namespace));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAccountCustomizationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates an Amazon QuickSight account, or subscribes to Amazon QuickSight Q.</p> <p>The Amazon Web Services Region for the account is derived from what is configured in the CLI or SDK. This operation isn't supported in the US East (Ohio) Region, South America (Sao Paulo) Region, or Asia Pacific (Singapore) Region. </p> <p>Before you use this operation, make sure that you can connect to an existing Amazon Web Services account. If you don't have an Amazon Web Services account, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/setting-up-aws-sign-up.html">Sign up for Amazon Web Services</a> in the <i>Amazon QuickSight User Guide</i>. The person who signs up for Amazon QuickSight needs to have the correct Identity and Access Management (IAM) permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/iam-policy-examples.html">IAM Policy Examples for Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>If your IAM policy includes both the <code>Subscribe</code> and <code>CreateAccountSubscription</code> actions, make sure that both actions are set to <code>Allow</code>. If either action is set to <code>Deny</code>, the <code>Deny</code> action prevails and your API call fails.</p> <p>You can't pass an existing IAM role to access other Amazon Web Services services using this API operation. To pass your existing IAM role to Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html#security-create-iam-role">Passing IAM roles to Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>You can't set default resource access on the new account from the Amazon QuickSight API. Instead, add default resource access from the Amazon QuickSight console. For more information about setting default resource access to Amazon Web Services services, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/scoping-policies-defaults.html">Setting default resource access to Amazon Web Services services</a> in the <i>Amazon QuickSight User Guide</i>.</p>
		/// CreateAccountSubscription account/{AwsAccountId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account that you're using to create your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateAccountSubscriptionResponse> CreateAccountSubscriptionAsync(string AwsAccountId, CreateAccountSubscriptionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "account/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateAccountSubscriptionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use the <code>DeleteAccountSubscription</code> operation to delete an Amazon QuickSight account. This operation will result in an error message if you have configured your account termination protection settings to <code>True</code>. To change this setting and delete your account, call the <code>UpdateAccountSettings</code> API and set the value of the <code>TerminationProtectionEnabled</code> parameter to <code>False</code>, then make another call to the <code>DeleteAccountSubscription</code> API.
		/// DeleteAccountSubscription account/{AwsAccountId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account that you want to delete.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteAccountSubscriptionResponse> DeleteAccountSubscriptionAsync(string AwsAccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "account/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAccountSubscriptionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use the DescribeAccountSubscription operation to receive a description of an Amazon QuickSight account's subscription. A successful API call returns an <code>AccountInfo</code> object that includes an account's name, subscription status, authentication type, edition, and notification email address.
		/// DescribeAccountSubscription account/{AwsAccountId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID associated with your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAccountSubscriptionResponse> DescribeAccountSubscriptionAsync(string AwsAccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "account/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAccountSubscriptionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an analysis in Amazon QuickSight. Analyses can be created either from a template or from an <code>AnalysisDefinition</code>.
		/// CreateAnalysis accounts/{AwsAccountId}/analyses/{AnalysisId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account where you are creating an analysis.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID for the analysis that you're creating. This ID displays in the URL of the analysis.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateAnalysisResponse> CreateAnalysisAsync(string AwsAccountId, string AnalysisId, CreateAnalysisPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateAnalysisResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Deletes an analysis from Amazon QuickSight. You can optionally include a recovery window during which you can restore the analysis. If you don't specify a recovery window value, the operation defaults to 30 days. Amazon QuickSight attaches a <code>DeletionTime</code> stamp to the response that specifies the end of the recovery window. At the end of the recovery window, Amazon QuickSight deletes the analysis permanently.</p> <p>At any time before recovery window ends, you can use the <code>RestoreAnalysis</code> API operation to remove the <code>DeletionTime</code> stamp and cancel the deletion of the analysis. The analysis remains visible in the API until it's deleted, so you can describe it but you can't make a template from it.</p> <p>An analysis that's scheduled for deletion isn't accessible in the Amazon QuickSight console. To access it in the console, restore it. Deleting an analysis doesn't delete the dashboards that you publish from it.</p>
		/// DeleteAnalysis accounts/{AwsAccountId}/analyses/{AnalysisId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account where you want to delete an analysis.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID of the analysis that you're deleting.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="recovery_window_in_days">A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. You can't use this parameter with the <code>ForceDeleteWithoutRecovery</code> option in the same API call. The default value is 30.
		/// Minimum: 7
		/// Maximum: 30
		// </param>
		/// <param name="force_delete_without_recovery">This option defaults to the value <code>NoForceDeleteWithoutRecovery</code>. To immediately delete the analysis, add the <code>ForceDeleteWithoutRecovery</code> option. You can't restore an analysis after it's deleted. </param>
		/// <returns>Success</returns>
		public async Task<DeleteAnalysisResponse> DeleteAnalysisAsync(string AwsAccountId, string AnalysisId, int recovery_window_in_days, bool force_delete_without_recovery, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId))+"&recovery-window-in-days="+recovery_window_in_days+"&force-delete-without-recovery="+force_delete_without_recovery;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAnalysisResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides a summary of the metadata for an analysis.
		/// DescribeAnalysis accounts/{AwsAccountId}/analyses/{AnalysisId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analysis. You must be using the Amazon Web Services account that the analysis is in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID of the analysis that you're describing. The ID is part of the URL of the analysis.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAnalysisResponse> DescribeAnalysisAsync(string AwsAccountId, string AnalysisId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAnalysisResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an analysis in Amazon QuickSight
		/// UpdateAnalysis accounts/{AwsAccountId}/analyses/{AnalysisId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analysis that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID for the analysis that you're updating. This ID displays in the URL of the analysis.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateAnalysisResponse> UpdateAnalysisAsync(string AwsAccountId, string AnalysisId, UpdateAnalysisPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAnalysisResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates a dashboard from either a template or directly with a <code>DashboardDefinition</code>. To first create a template, see the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html">CreateTemplate</a> </code> API operation.</p> <p>A dashboard is an entity in Amazon QuickSight that identifies Amazon QuickSight reports, created from analyses. You can share Amazon QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. If you have the correct permissions, you can create a dashboard from a template that exists in a different Amazon Web Services account.</p>
		/// CreateDashboard accounts/{AwsAccountId}/dashboards/{DashboardId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account where you want to create the dashboard.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard, also added to the IAM policy.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateDashboardResponse> CreateDashboardAsync(string AwsAccountId, string DashboardId, CreateDashboardPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateDashboardResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a dashboard.
		/// DeleteDashboard accounts/{AwsAccountId}/dashboards/{DashboardId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're deleting.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.
		/// Minimum: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteDashboardResponse> DeleteDashboardAsync(string AwsAccountId, string DashboardId, int version_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"&version-number="+version_number;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteDashboardResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides a summary for a dashboard.
		/// DescribeDashboard accounts/{AwsAccountId}/dashboards/{DashboardId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described. 
		/// Minimum: 1
		// </param>
		/// <param name="alias_name">The alias name.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDashboardResponse> DescribeDashboardAsync(string AwsAccountId, string DashboardId, int version_number, string alias_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"&version-number="+version_number+"&alias-name=" + (alias_name==null? "" : System.Uri.EscapeDataString(alias_name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDashboardResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates a dashboard in an Amazon Web Services account.</p> <note> <p>Updating a Dashboard creates a new dashboard version but does not immediately publish the new version. You can update the published version of a dashboard by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateDashboardPublishedVersion.html">UpdateDashboardPublishedVersion</a> </code> API operation.</p> </note>
		/// UpdateDashboard accounts/{AwsAccountId}/dashboards/{DashboardId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateDashboardResponse> UpdateDashboardAsync(string AwsAccountId, string DashboardId, UpdateDashboardPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDashboardResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a dataset. This operation doesn't support datasets that include uploaded files as a source.
		/// CreateDataSet accounts/{AwsAccountId}/data-sets
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateDataSetResponse> CreateDataSetAsync(string AwsAccountId, CreateDataSetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateDataSetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Lists all of the datasets belonging to the current Amazon Web Services account in an Amazon Web Services Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>
		/// ListDataSets accounts/{AwsAccountId}/data-sets
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDataSetsResponse> ListDataSetsAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDataSetsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a data source.
		/// CreateDataSource accounts/{AwsAccountId}/data-sources
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateDataSourceResponse> CreateDataSourceAsync(string AwsAccountId, CreateDataSourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateDataSourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists data sources in current Amazon Web Services Region that belong to this Amazon Web Services account.
		/// ListDataSources accounts/{AwsAccountId}/data-sources
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDataSourcesResponse> ListDataSourcesAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDataSourcesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an empty shared folder.
		/// CreateFolder accounts/{AwsAccountId}/folders/{FolderId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account where you want to create the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateFolderResponse> CreateFolderAsync(string AwsAccountId, string FolderId, CreateFolderPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateFolderResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an empty folder.
		/// DeleteFolder accounts/{AwsAccountId}/folders/{FolderId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteFolderResponse> DeleteFolderAsync(string AwsAccountId, string FolderId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteFolderResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a folder.
		/// DescribeFolder accounts/{AwsAccountId}/folders/{FolderId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeFolderResponse> DescribeFolderAsync(string AwsAccountId, string FolderId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeFolderResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the name of a folder.
		/// UpdateFolder accounts/{AwsAccountId}/folders/{FolderId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder to update.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateFolderResponse> UpdateFolderAsync(string AwsAccountId, string FolderId, UpdateFolderPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateFolderResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds an asset, such as a dashboard, analysis, or dataset into a folder.
		/// CreateFolderMembership accounts/{AwsAccountId}/folders/{FolderId}/members/{MemberType}/{MemberId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="MemberId">The ID of the asset (the dashboard, analysis, or dataset).
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="MemberType">The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>.</param>
		/// <returns>Success</returns>
		public async Task<CreateFolderMembershipResponse> CreateFolderMembershipAsync(string AwsAccountId, string FolderId, string MemberId, MemberType MemberType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId))+"/members/"+MemberType+"/"+ (MemberId==null? "" : System.Uri.EscapeDataString(MemberId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateFolderMembershipResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes an asset, such as a dashboard, analysis, or dataset, from a folder.
		/// DeleteFolderMembership accounts/{AwsAccountId}/folders/{FolderId}/members/{MemberType}/{MemberId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The Folder ID.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="MemberId">The ID of the asset (the dashboard, analysis, or dataset) that you want to delete.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="MemberType">The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code> </param>
		/// <returns>Success</returns>
		public async Task<DeleteFolderMembershipResponse> DeleteFolderMembershipAsync(string AwsAccountId, string FolderId, string MemberId, MemberType MemberType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId))+"/members/"+MemberType+"/"+ (MemberId==null? "" : System.Uri.EscapeDataString(MemberId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteFolderMembershipResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Use the <code>CreateGroup</code> operation to create a group in Amazon QuickSight. You can create up to 10,000 groups in a namespace. If you want to create more than 10,000 groups in a namespace, contact AWS Support.</p> <p>The permissions resource is <code>arn:aws:quicksight:&lt;your-region&gt;:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>
		/// CreateGroup accounts/{AwsAccountId}/namespaces/{Namespace}/groups
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace that you want the group to be a part of.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateGroupResponse> CreateGroupAsync(string AwsAccountId, string Namespace, CreateGroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateGroupResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all user groups in Amazon QuickSight.
		/// ListGroups accounts/{AwsAccountId}/namespaces/{Namespace}/groups
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">A pagination token that can be used in a subsequent request.</param>
		/// <param name="max_results">The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="Namespace">The namespace that you want a list of groups from.
		/// Max length: 64
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListGroupsResponse> ListGroupsAsync(string AwsAccountId, string next_token, int max_results, string Namespace, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListGroupsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds an Amazon QuickSight user to an Amazon QuickSight group.
		/// CreateGroupMembership accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}
		/// </summary>
		/// <param name="MemberName">The name of the user that you want to add to the group membership.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="GroupName">The name of the group that you want to add the user to.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace that you want the user to be a part of.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateGroupMembershipResponse> CreateGroupMembershipAsync(string MemberName, string GroupName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName))+"/members/"+ (MemberName==null? "" : System.Uri.EscapeDataString(MemberName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateGroupMembershipResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes a user from a group so that the user is no longer a member of the group.
		/// DeleteGroupMembership accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}
		/// </summary>
		/// <param name="MemberName">The name of the user that you want to delete from the group membership.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="GroupName">The name of the group that you want to delete the user from.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace of the group that you want to remove a user from.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteGroupMembershipResponse> DeleteGroupMembershipAsync(string MemberName, string GroupName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName))+"/members/"+ (MemberName==null? "" : System.Uri.EscapeDataString(MemberName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteGroupMembershipResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use the <code>DescribeGroupMembership</code> operation to determine if a user is a member of the specified group. If the user exists and is a member of the specified group, an associated <code>GroupMember</code> object is returned.
		/// DescribeGroupMembership accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}
		/// </summary>
		/// <param name="MemberName">The user name of the user that you want to search for.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="GroupName">The name of the group that you want to search.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace that includes the group you are searching within.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeGroupMembershipResponse> DescribeGroupMembershipAsync(string MemberName, string GroupName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName))+"/members/"+ (MemberName==null? "" : System.Uri.EscapeDataString(MemberName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeGroupMembershipResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy assignment is attached to the specified groups or users of Amazon QuickSight. Assignment names are unique per Amazon Web Services account. To avoid overwriting rules in other namespaces, use assignment names that are unique.
		/// CreateIAMPolicyAssignment accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account where you want to assign an IAM policy to Amazon QuickSight users or groups.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace that contains the assignment.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateIAMPolicyAssignmentResponse> CreateIAMPolicyAssignmentAsync(string AwsAccountId, string Namespace, CreateIAMPolicyAssignmentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/iam-policy-assignments/";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateIAMPolicyAssignmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>(Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight.</p> <p>A namespace allows you to isolate the Amazon QuickSight users and groups that are registered for that namespace. Users that access the namespace can share assets only with other users or groups in the same namespace. They can't see users and groups in other namespaces. You can create a namespace after your Amazon Web Services account is subscribed to Amazon QuickSight. The namespace must be unique within the Amazon Web Services account. By default, there is a limit of 100 namespaces per Amazon Web Services account. To increase your limit, create a ticket with Amazon Web Services Support. </p>
		/// CreateNamespace accounts/{AwsAccountId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that you want to create the Amazon QuickSight namespace in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateNamespaceResponse> CreateNamespaceAsync(string AwsAccountId, CreateNamespacePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateNamespaceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a refresh schedule for a dataset. You can create up to 5 different schedules for a single dataset.
		/// CreateRefreshSchedule accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules
		/// </summary>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateRefreshScheduleResponse> CreateRefreshScheduleAsync(string DataSetId, string AwsAccountId, CreateRefreshSchedulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-schedules";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the refresh schedules of a dataset. Each dataset can have up to 5 schedules.
		/// ListRefreshSchedules accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<ListRefreshSchedulesResponse> ListRefreshSchedulesAsync(string AwsAccountId, string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-schedules";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListRefreshSchedulesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a refresh schedule for a dataset.
		/// UpdateRefreshSchedule accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules
		/// </summary>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateRefreshScheduleResponse> UpdateRefreshScheduleAsync(string DataSetId, string AwsAccountId, UpdateRefreshSchedulePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-schedules";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates a template either from a <code>TemplateDefinition</code> or from an existing Amazon QuickSight analysis or template. You can use the resulting template to create additional dashboards, templates, or analyses.</p> <p>A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
		/// CreateTemplate accounts/{AwsAccountId}/templates/{TemplateId}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. You use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">An ID for the template that you want to create. This template is unique per Amazon Web Services Region; in each Amazon Web Services account.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateTemplateResponse> CreateTemplateAsync(string AwsAccountId, string TemplateId, CreateTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a template.
		/// DeleteTemplate accounts/{AwsAccountId}/templates/{TemplateId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template that you're deleting.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">An ID for the template you want to delete.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">Specifies the version of the template that you want to delete. If you don't provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. 
		/// Minimum: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteTemplateResponse> DeleteTemplateAsync(string AwsAccountId, string TemplateId, int version_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"&version-number="+version_number;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a template's metadata.
		/// DescribeTemplate accounts/{AwsAccountId}/templates/{TemplateId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">(Optional) The number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the template is described.
		/// Minimum: 1
		// </param>
		/// <param name="alias_name">The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeTemplateResponse> DescribeTemplateAsync(string AwsAccountId, string TemplateId, int version_number, string alias_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"&version-number="+version_number+"&alias-name=" + (alias_name==null? "" : System.Uri.EscapeDataString(alias_name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a template from an existing Amazon QuickSight analysis or another template.
		/// UpdateTemplate accounts/{AwsAccountId}/templates/{TemplateId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateTemplateResponse> UpdateTemplateAsync(string AwsAccountId, string TemplateId, UpdateTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a template alias for a template.
		/// CreateTemplateAlias accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template that you creating an alias for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">An ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The name that you want to give to the template alias that you're creating. Don't start the alias name with the <code>$</code> character. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. 
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateTemplateAliasResponse> CreateTemplateAliasAsync(string AwsAccountId, string TemplateId, string AliasName, CreateTemplateAliasPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateTemplateAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.
		/// DeleteTemplateAlias accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the item to delete.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template that the specified alias is for.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The name for the template alias. To delete a specific alias, you delete the version that the alias points to. You can specify the alias name, or specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. 
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteTemplateAliasResponse> DeleteTemplateAliasAsync(string AwsAccountId, string TemplateId, string AliasName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteTemplateAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the template alias for a template.
		/// DescribeTemplateAlias accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template alias that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The name of the template alias that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeTemplateAliasResponse> DescribeTemplateAliasAsync(string AwsAccountId, string TemplateId, string AliasName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTemplateAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the template alias of a template.
		/// UpdateTemplateAlias accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template alias that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The alias of the template that you want to update. If you name a specific alias, you update the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateTemplateAliasResponse> UpdateTemplateAliasAsync(string AwsAccountId, string TemplateId, string AliasName, UpdateTemplateAliasPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTemplateAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates a theme.</p> <p>A <i>theme</i> is set of configuration options for color and layout. Themes apply to analyses and dashboards. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
		/// CreateTheme accounts/{AwsAccountId}/themes/{ThemeId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account where you want to store the new theme. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">An ID for the theme that you want to create. The theme ID is unique per Amazon Web Services Region in each Amazon Web Services account.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateThemeResponse> CreateThemeAsync(string AwsAccountId, string ThemeId, CreateThemePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateThemeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a theme.
		/// DeleteTheme accounts/{AwsAccountId}/themes/{ThemeId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme that you're deleting.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">An ID for the theme that you want to delete.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number"><p>The version of the theme that you want to delete. </p> <p> <b>Note:</b> If you don't provide a version number, you're using this call to <code>DeleteTheme</code> to delete all versions of the theme.</p>
		/// Minimum: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteThemeResponse> DeleteThemeAsync(string AwsAccountId, string ThemeId, int version_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"&version-number="+version_number;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteThemeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a theme.
		/// DescribeTheme accounts/{AwsAccountId}/themes/{ThemeId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme that you're describing.</param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">The version number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the theme is described.
		/// Minimum: 1
		// </param>
		/// <param name="alias_name">The alias of the theme that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the theme by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to themes.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeThemeResponse> DescribeThemeAsync(string AwsAccountId, string ThemeId, int version_number, string alias_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"&version-number="+version_number+"&alias-name=" + (alias_name==null? "" : System.Uri.EscapeDataString(alias_name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeThemeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a theme.
		/// UpdateTheme accounts/{AwsAccountId}/themes/{ThemeId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateThemeResponse> UpdateThemeAsync(string AwsAccountId, string ThemeId, UpdateThemePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateThemeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a theme alias for a theme.
		/// CreateThemeAlias accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme for the new theme alias.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">An ID for the theme alias.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The name that you want to give to the theme alias that you are creating. The alias name can't begin with a <code>$</code>. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. 
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateThemeAliasResponse> CreateThemeAliasAsync(string AwsAccountId, string ThemeId, string AliasName, CreateThemeAliasPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateThemeAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the version of the theme that the specified theme alias points to. If you provide a specific alias, you delete the version of the theme that the alias points to.
		/// DeleteThemeAlias accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme alias to delete.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme that the specified alias is for.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The unique name for the theme alias to delete.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteThemeAliasResponse> DeleteThemeAliasAsync(string AwsAccountId, string ThemeId, string AliasName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteThemeAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the alias for a theme.
		/// DescribeThemeAlias accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme alias that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The name of the theme alias that you want to describe.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeThemeAliasResponse> DescribeThemeAliasAsync(string AwsAccountId, string ThemeId, string AliasName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeThemeAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an alias of a theme.
		/// UpdateThemeAlias accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme alias that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="AliasName">The name of the theme alias that you want to update.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateThemeAliasResponse> UpdateThemeAliasAsync(string AwsAccountId, string ThemeId, string AliasName, UpdateThemeAliasPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/aliases/"+ (AliasName==null? "" : System.Uri.EscapeDataString(AliasName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateThemeAliasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Q topic.
		/// CreateTopic accounts/{AwsAccountId}/topics
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that you want to create a topic in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateTopicResponse> CreateTopicAsync(string AwsAccountId, CreateTopicPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateTopicResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all of the topics within an account.
		/// ListTopics accounts/{AwsAccountId}/topics
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topics that you want to list.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTopicsResponse> ListTopicsAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTopicsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a topic refresh schedule.
		/// CreateTopicRefreshSchedule accounts/{AwsAccountId}/topics/{TopicId}/schedules
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic you're creating a refresh schedule for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateTopicRefreshScheduleResponse> CreateTopicRefreshScheduleAsync(string AwsAccountId, string TopicId, CreateTopicRefreshSchedulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/schedules";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateTopicRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all of the refresh schedules for a topic.
		/// ListTopicRefreshSchedules accounts/{AwsAccountId}/topics/{TopicId}/schedules
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic whose refresh schedule you want described.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID for the topic that you want to describe. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTopicRefreshSchedulesResponse> ListTopicRefreshSchedulesAsync(string AwsAccountId, string TopicId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/schedules";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTopicRefreshSchedulesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new VPC connection.
		/// CreateVPCConnection accounts/{AwsAccountId}/vpc-connections
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account where you want to create a new VPC connection.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateVPCConnectionResponse> CreateVPCConnectionAsync(string AwsAccountId, CreateVPCConnectionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/vpc-connections";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateVPCConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all of the VPC connections in the current set Amazon Web Services Region of an Amazon Web Services account.
		/// ListVPCConnections accounts/{AwsAccountId}/vpc-connections
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account that contains the VPC connections that you want to list.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListVPCConnectionsResponse> ListVPCConnectionsAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/vpc-connections&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVPCConnectionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a dataset.
		/// DeleteDataSet accounts/{AwsAccountId}/data-sets/{DataSetId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<DeleteDataSetResponse> DeleteDataSetAsync(string AwsAccountId, string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteDataSetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a dataset. This operation doesn't support datasets that include uploaded files as a source.
		/// DescribeDataSet accounts/{AwsAccountId}/data-sets/{DataSetId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDataSetResponse> DescribeDataSetAsync(string AwsAccountId, string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDataSetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a dataset. This operation doesn't support datasets that include uploaded files as a source. Partial updates are not supported by this operation.
		/// UpdateDataSet accounts/{AwsAccountId}/data-sets/{DataSetId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID for the dataset that you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<UpdateDataSetResponse> UpdateDataSetAsync(string AwsAccountId, string DataSetId, UpdateDataSetPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDataSetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the dataset refresh properties of the dataset.
		/// DeleteDataSetRefreshProperties accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-properties
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<DeleteDataSetRefreshPropertiesResponse> DeleteDataSetRefreshPropertiesAsync(string AwsAccountId, string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-properties";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteDataSetRefreshPropertiesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the refresh properties of a dataset.
		/// DescribeDataSetRefreshProperties accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-properties
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDataSetRefreshPropertiesResponse> DescribeDataSetRefreshPropertiesAsync(string AwsAccountId, string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-properties";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDataSetRefreshPropertiesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates or updates the dataset refresh properties for the dataset.
		/// PutDataSetRefreshProperties accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-properties
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<PutDataSetRefreshPropertiesResponse> PutDataSetRefreshPropertiesAsync(string AwsAccountId, string DataSetId, PutDataSetRefreshPropertiesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-properties";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PutDataSetRefreshPropertiesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the data source permanently. This operation breaks all the datasets that reference the deleted data source.
		/// DeleteDataSource accounts/{AwsAccountId}/data-sources/{DataSourceId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSourceId">The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<DeleteDataSourceResponse> DeleteDataSourceAsync(string AwsAccountId, string DataSourceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources/"+ (DataSourceId==null? "" : System.Uri.EscapeDataString(DataSourceId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteDataSourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a data source.
		/// DescribeDataSource accounts/{AwsAccountId}/data-sources/{DataSourceId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSourceId">The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDataSourceResponse> DescribeDataSourceAsync(string AwsAccountId, string DataSourceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources/"+ (DataSourceId==null? "" : System.Uri.EscapeDataString(DataSourceId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDataSourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a data source.
		/// UpdateDataSource accounts/{AwsAccountId}/data-sources/{DataSourceId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSourceId">The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. </param>
		/// <returns>Success</returns>
		public async Task<UpdateDataSourceResponse> UpdateDataSourceAsync(string AwsAccountId, string DataSourceId, UpdateDataSourcePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources/"+ (DataSourceId==null? "" : System.Uri.EscapeDataString(DataSourceId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDataSourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes a user group from Amazon QuickSight.
		/// DeleteGroup accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}
		/// </summary>
		/// <param name="GroupName">The name of the group that you want to delete.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace of the group that you want to delete.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteGroupResponse> DeleteGroupAsync(string GroupName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteGroupResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN).
		/// DescribeGroup accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}
		/// </summary>
		/// <param name="GroupName">The name of the group that you want to describe.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace of the group that you want described.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeGroupResponse> DescribeGroupAsync(string GroupName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeGroupResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Changes a group description.
		/// UpdateGroup accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}
		/// </summary>
		/// <param name="GroupName">The name of the group that you want to update.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace of the group that you want to update.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateGroupResponse> UpdateGroupAsync(string GroupName, string AwsAccountId, string Namespace, UpdateGroupPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateGroupResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an existing IAM policy assignment.
		/// DeleteIAMPolicyAssignment accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID where you want to delete the IAM policy assignment.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AssignmentName">The name of the assignment. 
		/// Min length: 1
		// </param>
		/// <param name="Namespace">The namespace that contains the assignment.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteIAMPolicyAssignmentResponse> DeleteIAMPolicyAssignmentAsync(string AwsAccountId, string AssignmentName, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespace/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/iam-policy-assignments/"+ (AssignmentName==null? "" : System.Uri.EscapeDataString(AssignmentName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteIAMPolicyAssignmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a namespace and the users and groups that are associated with the namespace. This is an asynchronous process. Assets including dashboards, analyses, datasets and data sources are not deleted. To delete these assets, you use the API operations for the relevant asset.
		/// DeleteNamespace accounts/{AwsAccountId}/namespaces/{Namespace}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that you want to delete the Amazon QuickSight namespace from.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace that you want to delete.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteNamespaceResponse> DeleteNamespaceAsync(string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteNamespaceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the current namespace.
		/// DescribeNamespace accounts/{AwsAccountId}/namespaces/{Namespace}
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the Amazon QuickSight namespace that you want to describe.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace that you want to describe.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeNamespaceResponse> DescribeNamespaceAsync(string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeNamespaceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a refresh schedule from a dataset.
		/// DeleteRefreshSchedule accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules/{ScheduleId}
		/// </summary>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ScheduleId">The ID of the refresh schedule.</param>
		/// <returns>Success</returns>
		public async Task<DeleteRefreshScheduleResponse> DeleteRefreshScheduleAsync(string DataSetId, string AwsAccountId, string ScheduleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-schedules/"+ (ScheduleId==null? "" : System.Uri.EscapeDataString(ScheduleId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides a summary of a refresh schedule.
		/// DescribeRefreshSchedule accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules/{ScheduleId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID of the dataset.</param>
		/// <param name="ScheduleId">The ID of the refresh schedule.</param>
		/// <returns>Success</returns>
		public async Task<DescribeRefreshScheduleResponse> DescribeRefreshScheduleAsync(string AwsAccountId, string DataSetId, string ScheduleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/refresh-schedules/"+ (ScheduleId==null? "" : System.Uri.EscapeDataString(ScheduleId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a topic.
		/// DeleteTopic accounts/{AwsAccountId}/topics/{TopicId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic that you want to delete.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to delete. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteTopicResponse> DeleteTopicAsync(string AwsAccountId, string TopicId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteTopicResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a topic.
		/// DescribeTopic accounts/{AwsAccountId}/topics/{TopicId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to describe. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeTopicResponse> DescribeTopicAsync(string AwsAccountId, string TopicId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTopicResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a topic.
		/// UpdateTopic accounts/{AwsAccountId}/topics/{TopicId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic that you want to update.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateTopicResponse> UpdateTopicAsync(string AwsAccountId, string TopicId, UpdateTopicPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTopicResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a topic refresh schedule.
		/// DeleteTopicRefreshSchedule accounts/{AwsAccountId}/topics/{TopicId}/schedules/{DatasetId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <param name="DatasetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<DeleteTopicRefreshScheduleResponse> DeleteTopicRefreshScheduleAsync(string AwsAccountId, string TopicId, string DatasetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/schedules/"+ (DatasetId==null? "" : System.Uri.EscapeDataString(DatasetId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteTopicRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a topic refresh schedule.
		/// DescribeTopicRefreshSchedule accounts/{AwsAccountId}/topics/{TopicId}/schedules/{DatasetId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that contains the refresh schedule that you want to describe. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <param name="DatasetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<DescribeTopicRefreshScheduleResponse> DescribeTopicRefreshScheduleAsync(string AwsAccountId, string TopicId, string DatasetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/schedules/"+ (DatasetId==null? "" : System.Uri.EscapeDataString(DatasetId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTopicRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a topic refresh schedule.
		/// UpdateTopicRefreshSchedule accounts/{AwsAccountId}/topics/{TopicId}/schedules/{DatasetId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic whose refresh schedule you want to update.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <param name="DatasetId">The ID of the dataset.</param>
		/// <returns>Success</returns>
		public async Task<UpdateTopicRefreshScheduleResponse> UpdateTopicRefreshScheduleAsync(string AwsAccountId, string TopicId, string DatasetId, UpdateTopicRefreshSchedulePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/schedules/"+ (DatasetId==null? "" : System.Uri.EscapeDataString(DatasetId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTopicRefreshScheduleResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the Amazon QuickSight user that is associated with the identity of the IAM user or role that's making the call. The IAM user isn't deleted as a result of this call.
		/// DeleteUser accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}
		/// </summary>
		/// <param name="UserName">The name of the user that you want to delete.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteUserResponse> DeleteUserAsync(string UserName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users/"+ (UserName==null? "" : System.Uri.EscapeDataString(UserName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns information about a user, given the user name.
		/// DescribeUser accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}
		/// </summary>
		/// <param name="UserName">The name of the user that you want to describe.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeUserResponse> DescribeUserAsync(string UserName, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users/"+ (UserName==null? "" : System.Uri.EscapeDataString(UserName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an Amazon QuickSight user.
		/// UpdateUser accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}
		/// </summary>
		/// <param name="UserName">The Amazon QuickSight user name that you want to update.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateUserResponse> UpdateUserAsync(string UserName, string AwsAccountId, string Namespace, UpdateUserPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users/"+ (UserName==null? "" : System.Uri.EscapeDataString(UserName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a user identified by its principal ID.
		/// DeleteUserByPrincipalId accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}
		/// </summary>
		/// <param name="PrincipalId">The principal ID of the user.</param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteUserByPrincipalIdResponse> DeleteUserByPrincipalIdAsync(string PrincipalId, string AwsAccountId, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/user-principals/"+ (PrincipalId==null? "" : System.Uri.EscapeDataString(PrincipalId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteUserByPrincipalIdResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a VPC connection.
		/// DeleteVPCConnection accounts/{AwsAccountId}/vpc-connections/{VPCConnectionId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account where you want to delete a VPC connection.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="VPCConnectionId">The ID of the VPC connection that you're creating. This ID is a unique identifier for each Amazon Web Services Region in an Amazon Web Services account.
		/// Min length: 1
		/// Max length: 1000
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteVPCConnectionResponse> DeleteVPCConnectionAsync(string AwsAccountId, string VPCConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/vpc-connections/"+ (VPCConnectionId==null? "" : System.Uri.EscapeDataString(VPCConnectionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteVPCConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a VPC connection.
		/// DescribeVPCConnection accounts/{AwsAccountId}/vpc-connections/{VPCConnectionId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account that contains the VPC connection that you want described.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="VPCConnectionId">The ID of the VPC connection that you're creating. This ID is a unique identifier for each Amazon Web Services Region in an Amazon Web Services account.
		/// Min length: 1
		/// Max length: 1000
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeVPCConnectionResponse> DescribeVPCConnectionAsync(string AwsAccountId, string VPCConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/vpc-connections/"+ (VPCConnectionId==null? "" : System.Uri.EscapeDataString(VPCConnectionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeVPCConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a VPC connection.
		/// UpdateVPCConnection accounts/{AwsAccountId}/vpc-connections/{VPCConnectionId}
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID of the account that contains the VPC connection that you want to update.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="VPCConnectionId">The ID of the VPC connection that you're updating. This ID is a unique identifier for each Amazon Web Services Region in an Amazon Web Services account.
		/// Min length: 1
		/// Max length: 1000
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateVPCConnectionResponse> UpdateVPCConnectionAsync(string AwsAccountId, string VPCConnectionId, UpdateVPCConnectionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/vpc-connections/"+ (VPCConnectionId==null? "" : System.Uri.EscapeDataString(VPCConnectionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateVPCConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the settings that were used when your Amazon QuickSight subscription was first created in this Amazon Web Services account.
		/// DescribeAccountSettings accounts/{AwsAccountId}/settings
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the settings that you want to list.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAccountSettingsResponse> DescribeAccountSettingsAsync(string AwsAccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAccountSettingsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the Amazon QuickSight settings in your Amazon Web Services account.
		/// UpdateAccountSettings accounts/{AwsAccountId}/settings
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the Amazon QuickSight settings that you want to list.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateAccountSettingsResponse> UpdateAccountSettingsAsync(string AwsAccountId, UpdateAccountSettingsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAccountSettingsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Provides a detailed description of the definition of an analysis.</p> <note> <p>If you do not need to know details about the content of an Analysis, for instance if you are trying to check the status of a recently created or updated Analysis, use the <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeAnalysis.html"> <code>DescribeAnalysis</code> </a> instead. </p> </note>
		/// DescribeAnalysisDefinition accounts/{AwsAccountId}/analyses/{AnalysisId}/definition
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analysis. You must be using the Amazon Web Services account that the analysis is in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID of the analysis that you're describing. The ID is part of the URL of the analysis.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAnalysisDefinitionResponse> DescribeAnalysisDefinitionAsync(string AwsAccountId, string AnalysisId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId))+"/definition";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAnalysisDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides the read and write permissions for an analysis.
		/// DescribeAnalysisPermissions accounts/{AwsAccountId}/analyses/{AnalysisId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analysis whose permissions you're describing. You must be using the Amazon Web Services account that the analysis is in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID of the analysis whose permissions you're describing. The ID is part of the analysis URL.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAnalysisPermissionsResponse> DescribeAnalysisPermissionsAsync(string AwsAccountId, string AnalysisId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAnalysisPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the read and write permissions for an analysis.
		/// UpdateAnalysisPermissions accounts/{AwsAccountId}/analyses/{AnalysisId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analysis whose permissions you're updating. You must be using the Amazon Web Services account that the analysis is in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID of the analysis whose permissions you're updating. The ID is part of the analysis URL.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateAnalysisPermissionsResponse> UpdateAnalysisPermissionsAsync(string AwsAccountId, string AnalysisId, UpdateAnalysisPermissionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAnalysisPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes an existing export job.</p> <p>Poll job descriptions after a job starts to know the status of the job. When a job succeeds, a URL is provided to download the exported assets' data from. Download URLs are valid for five minutes after they are generated. You can call the <code>DescribeAssetBundleExportJob</code> API for a new download URL as needed.</p> <p>Job descriptions are available for 14 days after the job starts.</p>
		/// DescribeAssetBundleExportJob accounts/{AwsAccountId}/asset-bundle-export-jobs/{AssetBundleExportJobId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account the export job is executed in. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AssetBundleExportJobId">The ID of the job that you want described. The job ID is set when you start a new job with a <code>StartAssetBundleExportJob</code> API call.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAssetBundleExportJobResponse> DescribeAssetBundleExportJobAsync(string AwsAccountId, string AssetBundleExportJobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/asset-bundle-export-jobs/"+ (AssetBundleExportJobId==null? "" : System.Uri.EscapeDataString(AssetBundleExportJobId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAssetBundleExportJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes an existing import job.</p> <p>Poll job descriptions after starting a job to know when it has succeeded or failed. Job descriptions are available for 14 days after job starts.</p>
		/// DescribeAssetBundleImportJob accounts/{AwsAccountId}/asset-bundle-import-jobs/{AssetBundleImportJobId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account the import job was executed in. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AssetBundleImportJobId">The ID of the job. The job ID is set when you start a new job with a <code>StartAssetBundleImportJob</code> API call.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAssetBundleImportJobResponse> DescribeAssetBundleImportJobAsync(string AwsAccountId, string AssetBundleImportJobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/asset-bundle-import-jobs/"+ (AssetBundleImportJobId==null? "" : System.Uri.EscapeDataString(AssetBundleImportJobId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeAssetBundleImportJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Provides a detailed description of the definition of a dashboard.</p> <note> <p>If you do not need to know details about the content of a dashboard, for instance if you are trying to check the status of a recently created or updated dashboard, use the <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeDashboard.html"> <code>DescribeDashboard</code> </a> instead. </p> </note>
		/// DescribeDashboardDefinition accounts/{AwsAccountId}/dashboards/{DashboardId}/definition
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described. 
		/// Minimum: 1
		// </param>
		/// <param name="alias_name">The alias name.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDashboardDefinitionResponse> DescribeDashboardDefinitionAsync(string AwsAccountId, string DashboardId, int version_number, string alias_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/definition&version-number="+version_number+"&alias-name=" + (alias_name==null? "" : System.Uri.EscapeDataString(alias_name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDashboardDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes read and write permissions for a dashboard.
		/// DescribeDashboardPermissions accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're describing permissions for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard, also added to the IAM policy.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDashboardPermissionsResponse> DescribeDashboardPermissionsAsync(string AwsAccountId, string DashboardId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDashboardPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates read and write permissions on a dashboard.
		/// UpdateDashboardPermissions accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard whose permissions you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateDashboardPermissionsResponse> UpdateDashboardPermissionsAsync(string AwsAccountId, string DashboardId, UpdateDashboardPermissionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDashboardPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes an existing snapshot job.</p> <p>Poll job descriptions after a job starts to know the status of the job. For information on available status codes, see <code>JobStatus</code>.</p>
		/// DescribeDashboardSnapshotJob accounts/{AwsAccountId}/dashboards/{DashboardId}/snapshot-jobs/{SnapshotJobId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that the dashboard snapshot job is executed in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID of the dashboard that you have started a snapshot job for.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="SnapshotJobId">The ID of the job to be described. The job ID is set when you start a new job with a <code>StartDashboardSnapshotJob</code> API call.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDashboardSnapshotJobResponse> DescribeDashboardSnapshotJobAsync(string AwsAccountId, string DashboardId, string SnapshotJobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/snapshot-jobs/"+ (SnapshotJobId==null? "" : System.Uri.EscapeDataString(SnapshotJobId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDashboardSnapshotJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes the result of an existing snapshot job that has finished running.</p> <p>A finished snapshot job will return a <code>COMPLETED</code> or <code>FAILED</code> status when you poll the job with a <code>DescribeDashboardSnapshotJob</code> API call.</p> <p>If the job has not finished running, this operation returns a message that says <code>Dashboard Snapshot Job with id &lt;SnapshotjobId&gt; has not reached a terminal state.</code>.</p>
		/// DescribeDashboardSnapshotJobResult accounts/{AwsAccountId}/dashboards/{DashboardId}/snapshot-jobs/{SnapshotJobId}/result
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that the dashboard snapshot job is executed in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID of the dashboard that you have started a snapshot job for.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="SnapshotJobId">The ID of the job to be described. The job ID is set when you start a new job with a <code>StartDashboardSnapshotJob</code> API call.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDashboardSnapshotJobResultResponse> DescribeDashboardSnapshotJobResultAsync(string AwsAccountId, string DashboardId, string SnapshotJobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/snapshot-jobs/"+ (SnapshotJobId==null? "" : System.Uri.EscapeDataString(SnapshotJobId))+"/result";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDashboardSnapshotJobResultResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
		/// DescribeDataSetPermissions accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDataSetPermissionsResponse> DescribeDataSetPermissionsAsync(string AwsAccountId, string DataSetId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDataSetPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
		/// UpdateDataSetPermissions accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSetId">The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<UpdateDataSetPermissionsResponse> UpdateDataSetPermissionsAsync(string AwsAccountId, string DataSetId, UpdateDataSetPermissionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDataSetPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the resource permissions for a data source.
		/// DescribeDataSourcePermissions accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSourceId">The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDataSourcePermissionsResponse> DescribeDataSourcePermissionsAsync(string AwsAccountId, string DataSourceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources/"+ (DataSourceId==null? "" : System.Uri.EscapeDataString(DataSourceId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDataSourcePermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the permissions to a data source.
		/// UpdateDataSourcePermissions accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DataSourceId">The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. </param>
		/// <returns>Success</returns>
		public async Task<UpdateDataSourcePermissionsResponse> UpdateDataSourcePermissionsAsync(string AwsAccountId, string DataSourceId, UpdateDataSourcePermissionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sources/"+ (DataSourceId==null? "" : System.Uri.EscapeDataString(DataSourceId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDataSourcePermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes permissions for a folder.
		/// DescribeFolderPermissions accounts/{AwsAccountId}/folders/{FolderId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeFolderPermissionsResponse> DescribeFolderPermissionsAsync(string AwsAccountId, string FolderId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeFolderPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates permissions of a folder.
		/// UpdateFolderPermissions accounts/{AwsAccountId}/folders/{FolderId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder to update.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateFolderPermissionsResponse> UpdateFolderPermissionsAsync(string AwsAccountId, string FolderId, UpdateFolderPermissionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateFolderPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the folder resolved permissions. Permissions consists of both folder direct permissions and the inherited permissions from the ancestor folders.
		/// DescribeFolderResolvedPermissions accounts/{AwsAccountId}/folders/{FolderId}/resolved-permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeFolderResolvedPermissionsResponse> DescribeFolderResolvedPermissionsAsync(string AwsAccountId, string FolderId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId))+"/resolved-permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeFolderResolvedPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes an existing IAM policy assignment, as specified by the assignment name.
		/// DescribeIAMPolicyAssignment accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the assignment that you want to describe.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AssignmentName">The name of the assignment, also called a rule.
		/// Min length: 1
		// </param>
		/// <param name="Namespace">The namespace that contains the assignment.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeIAMPolicyAssignmentResponse> DescribeIAMPolicyAssignmentAsync(string AwsAccountId, string AssignmentName, string Namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/iam-policy-assignments/"+ (AssignmentName==null? "" : System.Uri.EscapeDataString(AssignmentName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeIAMPolicyAssignmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request. This overwrites all of the users included in <code>Identities</code>.
		/// UpdateIAMPolicyAssignment accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the IAM policy assignment. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AssignmentName">The name of the assignment, also called a rule. The name must be unique within the Amazon Web Services account.
		/// Min length: 1
		// </param>
		/// <param name="Namespace">The namespace of the assignment.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateIAMPolicyAssignmentResponse> UpdateIAMPolicyAssignmentAsync(string AwsAccountId, string AssignmentName, string Namespace, UpdateIAMPolicyAssignmentPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/iam-policy-assignments/"+ (AssignmentName==null? "" : System.Uri.EscapeDataString(AssignmentName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateIAMPolicyAssignmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides a summary and status of IP rules.
		/// DescribeIpRestriction accounts/{AwsAccountId}/ip-restriction
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the IP rules.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeIpRestrictionResponse> DescribeIpRestrictionAsync(string AwsAccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/ip-restriction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeIpRestrictionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the content and status of IP rules. To use this operation, you must provide the entire map of rules. You can use the <code>DescribeIpRestriction</code> operation to get the current rule map.
		/// UpdateIpRestriction accounts/{AwsAccountId}/ip-restriction
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the IP rules.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateIpRestrictionResponse> UpdateIpRestrictionAsync(string AwsAccountId, UpdateIpRestrictionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/ip-restriction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateIpRestrictionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Provides a detailed description of the definition of a template.</p> <note> <p>If you do not need to know details about the content of a template, for instance if you are trying to check the status of a recently created or updated template, use the <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeTemplate.html"> <code>DescribeTemplate</code> </a> instead. </p> </note>
		/// DescribeTemplateDefinition accounts/{AwsAccountId}/templates/{TemplateId}/definition
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template. You must be using the Amazon Web Services account that the template is in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID of the template that you're describing.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="version_number">The version number of the template.
		/// Minimum: 1
		// </param>
		/// <param name="alias_name">The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeTemplateDefinitionResponse> DescribeTemplateDefinitionAsync(string AwsAccountId, string TemplateId, int version_number, string alias_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/definition&version-number="+version_number+"&alias-name=" + (alias_name==null? "" : System.Uri.EscapeDataString(alias_name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTemplateDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes read and write permissions on a template.
		/// DescribeTemplatePermissions accounts/{AwsAccountId}/templates/{TemplateId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeTemplatePermissionsResponse> DescribeTemplatePermissionsAsync(string AwsAccountId, string TemplateId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTemplatePermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the resource permissions for a template.
		/// UpdateTemplatePermissions accounts/{AwsAccountId}/templates/{TemplateId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateTemplatePermissionsResponse> UpdateTemplatePermissionsAsync(string AwsAccountId, string TemplateId, UpdateTemplatePermissionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTemplatePermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the read and write permissions for a theme.
		/// DescribeThemePermissions accounts/{AwsAccountId}/themes/{ThemeId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme that you're describing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme that you want to describe permissions for.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeThemePermissionsResponse> DescribeThemePermissionsAsync(string AwsAccountId, string ThemeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeThemePermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates the resource permissions for a theme. Permissions apply to the action to grant or revoke permissions on, for example <code>"quicksight:DescribeTheme"</code>.</p> <p>Theme permissions apply in groupings. Valid groupings include the following for the three levels of permissions, which are user, owner, or no permissions: </p> <ul> <li> <p>User</p> <ul> <li> <p> <code>"quicksight:DescribeTheme"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeAliases"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeVersions"</code> </p> </li> </ul> </li> <li> <p>Owner</p> <ul> <li> <p> <code>"quicksight:DescribeTheme"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeAliases"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeVersions"</code> </p> </li> <li> <p> <code>"quicksight:DeleteTheme"</code> </p> </li> <li> <p> <code>"quicksight:UpdateTheme"</code> </p> </li> <li> <p> <code>"quicksight:CreateThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:DeleteThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:UpdateThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:UpdateThemePermissions"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemePermissions"</code> </p> </li> </ul> </li> <li> <p>To specify no permissions, omit the permissions list.</p> </li> </ul>
		/// UpdateThemePermissions accounts/{AwsAccountId}/themes/{ThemeId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateThemePermissionsResponse> UpdateThemePermissionsAsync(string AwsAccountId, string ThemeId, UpdateThemePermissionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateThemePermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the permissions of a topic.
		/// DescribeTopicPermissions accounts/{AwsAccountId}/topics/{TopicId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic that you want described.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to describe. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeTopicPermissionsResponse> DescribeTopicPermissionsAsync(string AwsAccountId, string TopicId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTopicPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the permissions of a topic.
		/// UpdateTopicPermissions accounts/{AwsAccountId}/topics/{TopicId}/permissions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic that you want to update the permissions for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to modify. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateTopicPermissionsResponse> UpdateTopicPermissionsAsync(string AwsAccountId, string TopicId, UpdateTopicPermissionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/permissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTopicPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the status of a topic refresh.
		/// DescribeTopicRefresh accounts/{AwsAccountId}/topics/{TopicId}/refresh/{RefreshId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the topic whose refresh you want to describe.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TopicId">The ID of the topic that you want to describe. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Max length: 256
		// </param>
		/// <param name="RefreshId">The ID of the refresh, which is performed when the topic is created or updated.</param>
		/// <returns>Success</returns>
		public async Task<DescribeTopicRefreshResponse> DescribeTopicRefreshAsync(string AwsAccountId, string TopicId, string RefreshId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/topics/"+ (TopicId==null? "" : System.Uri.EscapeDataString(TopicId))+"/refresh/"+ (RefreshId==null? "" : System.Uri.EscapeDataString(RefreshId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeTopicRefreshResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Generates an embed URL that you can use to embed an Amazon QuickSight dashboard or visual in your website, without having to register any reader users. Before you use this action, make sure that you have configured the dashboards and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForAnonymousUser.html#QS-GenerateEmbedUrlForAnonymousUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a> </code> parameter. The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum). The default session duration is 10 hours.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
		/// GenerateEmbedUrlForAnonymousUser accounts/{AwsAccountId}/embed-url/anonymous-user
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<GenerateEmbedUrlForAnonymousUserResponse> GenerateEmbedUrlForAnonymousUserAsync(string AwsAccountId, GenerateEmbedUrlForAnonymousUserPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/embed-url/anonymous-user";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GenerateEmbedUrlForAnonymousUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Generates an embed URL that you can use to embed an Amazon QuickSight experience in your website. This action can be used for any type of user registered in an Amazon QuickSight account. Before you use this action, make sure that you have configured the relevant Amazon QuickSight resource and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html#QS-GenerateEmbedUrlForRegisteredUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a> </code> parameter.</p> <p>The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum). The default session duration is 10 hours.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
		/// GenerateEmbedUrlForRegisteredUser accounts/{AwsAccountId}/embed-url/registered-user
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<GenerateEmbedUrlForRegisteredUserResponse> GenerateEmbedUrlForRegisteredUserAsync(string AwsAccountId, GenerateEmbedUrlForRegisteredUserPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/embed-url/registered-user";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GenerateEmbedUrlForRegisteredUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Generates a temporary session URL and authorization code(bearer token) that you can use to embed an Amazon QuickSight read-only dashboard in your website or application. Before you use this command, make sure that you have configured the dashboards and permissions. </p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user's browser. The following rules apply to the generated URL:</p> <ul> <li> <p>They must be used together.</p> </li> <li> <p>They can be used one time only.</p> </li> <li> <p>They are valid for 5 minutes after you run this command.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> <li> <p>The resulting user session is valid for 15 minutes (default) up to 10 hours (maximum). You can use the optional <code>SessionLifetimeInMinutes</code> parameter to customize session duration.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-deprecated.html">Embedding Analytics Using GetDashboardEmbedUrl</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
		/// GetDashboardEmbedUrl accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url#creds-type
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard, also added to the Identity and Access Management (IAM) policy.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="creds_type">The authentication method that the user uses to sign in.</param>
		/// <param name="session_lifetime">How many minutes the session is valid. The session lifetime must be 15-600 minutes.
		/// Minimum: 15
		/// Maximum: 600
		// </param>
		/// <param name="undo_redo_disabled">Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.</param>
		/// <param name="reset_disabled">Remove the reset button on the embedded dashboard. The default is FALSE, which enables the reset button.</param>
		/// <param name="state_persistence_enabled">Adds persistence of state for the user session in an embedded dashboard. Persistence applies to the sheet and the parameter settings. These are control settings that the dashboard subscriber (Amazon QuickSight reader) chooses while viewing the dashboard. If this is set to <code>TRUE</code>, the settings are the same when the subscriber reopens the same dashboard URL. The state is stored in Amazon QuickSight, not in a browser cookie. If this is set to FALSE, the state of the user session is not persisted. The default is <code>FALSE</code>.</param>
		/// <param name="user_arn"><p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any Amazon QuickSight users in your account (readers, authors, or admins) authenticated as one of the following:</p> <ul> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation.</p> </li> </ul> <p>Omit this parameter for users in the third group – IAM users and IAM role-based sessions.</p></param>
		/// <param name="_namespace">The Amazon QuickSight namespace that contains the dashboard IDs in this request. If you're not using a custom namespace, set <code>Namespace = default</code>.
		/// Max length: 64
		// </param>
		/// <param name="additional_dashboard_ids">A list of one or more dashboard IDs that you want anonymous users to have tempporary access to. Currently, the <code>IdentityType</code> parameter must be set to <code>ANONYMOUS</code> because other identity types authenticate as Amazon QuickSight or IAM users. For example, if you set "<code>--dashboard-id dash_id1 --dashboard-id dash_id2 dash_id3 identity-type ANONYMOUS</code>", the session can access all three dashboards.
		/// Minimum items: 1
		/// Maximum items: 20
		// </param>
		/// <returns>Success</returns>
		public async Task<GetDashboardEmbedUrlResponse> GetDashboardEmbedUrlAsync(string AwsAccountId, string DashboardId, EmbeddingIdentityType creds_type, int session_lifetime, bool undo_redo_disabled, bool reset_disabled, bool state_persistence_enabled, string user_arn, string _namespace, string[] additional_dashboard_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/embed-url#creds-type&creds-type=" + creds_type+"&session-lifetime="+session_lifetime+"&undo-redo-disabled="+undo_redo_disabled+"&reset-disabled="+reset_disabled+"&state-persistence-enabled="+state_persistence_enabled+"&user-arn=" + (user_arn==null? "" : System.Uri.EscapeDataString(user_arn))+"&namespace=" + (_namespace==null? "" : System.Uri.EscapeDataString(_namespace))+"&"+string.Join("&", additional_dashboard_ids.Select(z => $"additional-dashboard-ids={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetDashboardEmbedUrlResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Generates a session URL and authorization code that you can use to embed the Amazon Amazon QuickSight console in your web server code. Use <code>GetSessionEmbedUrl</code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who access an embedded Amazon QuickSight console need belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedding Analytics</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul>
		/// GetSessionEmbedUrl accounts/{AwsAccountId}/session-embed-url
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account associated with your Amazon QuickSight subscription.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="entry_point"><p>The URL you use to access the embedded session. The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/<i>DashboardId</i> </code> - where <code>DashboardId</code> is the actual ID key from the Amazon QuickSight console URL of the dashboard</p> </li> <li> <p> <code>/analyses/<i>AnalysisId</i> </code> - where <code>AnalysisId</code> is the actual ID key from the Amazon QuickSight console URL of the analysis</p> </li> </ul>
		/// Min length: 1
		/// Max length: 1000
		// </param>
		/// <param name="session_lifetime">How many minutes the session is valid. The session lifetime must be 15-600 minutes.
		/// Minimum: 15
		/// Maximum: 600
		// </param>
		/// <param name="user_arn"><p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any type of Amazon QuickSight users in your account (readers, authors, or admins). They need to be authenticated as one of the following:</p> <ol> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation</p> </li> </ol> <p>Omit this parameter for users in the third group, IAM users and IAM role-based sessions.</p></param>
		/// <returns>Success</returns>
		public async Task<GetSessionEmbedUrlResponse> GetSessionEmbedUrlAsync(string AwsAccountId, string entry_point, int session_lifetime, string user_arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/session-embed-url&entry-point=" + (entry_point==null? "" : System.Uri.EscapeDataString(entry_point))+"&session-lifetime="+session_lifetime+"&user-arn=" + (user_arn==null? "" : System.Uri.EscapeDataString(user_arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSessionEmbedUrlResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists Amazon QuickSight analyses that exist in the specified Amazon Web Services account.
		/// ListAnalyses accounts/{AwsAccountId}/analyses
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analyses.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">A pagination token that can be used in a subsequent request.</param>
		/// <param name="max_results">The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnalysesResponse> ListAnalysesAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/analyses&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAnalysesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all asset bundle export jobs that have been taken place in the last 14 days. Jobs created more than 14 days ago are deleted forever and are not returned. If you are using the same job ID for multiple jobs, <code>ListAssetBundleExportJobs</code> only returns the most recent job that uses the repeated job ID.
		/// ListAssetBundleExportJobs accounts/{AwsAccountId}/asset-bundle-export-jobs
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that the export jobs were executed in. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAssetBundleExportJobsResponse> ListAssetBundleExportJobsAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/asset-bundle-export-jobs&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAssetBundleExportJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all asset bundle import jobs that have taken place in the last 14 days. Jobs created more than 14 days ago are deleted forever and are not returned. If you are using the same job ID for multiple jobs, <code>ListAssetBundleImportJobs</code> only returns the most recent job that uses the repeated job ID.
		/// ListAssetBundleImportJobs accounts/{AwsAccountId}/asset-bundle-import-jobs
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that the import jobs were executed in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAssetBundleImportJobsResponse> ListAssetBundleImportJobsAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/asset-bundle-import-jobs&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAssetBundleImportJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the versions of the dashboards in the Amazon QuickSight subscription.
		/// ListDashboardVersions accounts/{AwsAccountId}/dashboards/{DashboardId}/versions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're listing versions for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDashboardVersionsResponse> ListDashboardVersionsAsync(string AwsAccountId, string DashboardId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/versions&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDashboardVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists dashboards in an Amazon Web Services account.
		/// ListDashboards accounts/{AwsAccountId}/dashboards
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboards that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDashboardsResponse> ListDashboardsAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDashboardsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List all assets (<code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>) in a folder.
		/// ListFolderMembers accounts/{AwsAccountId}/folders/{FolderId}/members
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="FolderId">The ID of the folder.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListFolderMembersResponse> ListFolderMembersAsync(string AwsAccountId, string FolderId, string next_token, int max_results, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders/"+ (FolderId==null? "" : System.Uri.EscapeDataString(FolderId))+"/members&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListFolderMembersResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all folders in an account.
		/// ListFolders accounts/{AwsAccountId}/folders
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListFoldersResponse> ListFoldersAsync(string AwsAccountId, string next_token, int max_results, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/folders&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListFoldersResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists member users in a group.
		/// ListGroupMemberships accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members
		/// </summary>
		/// <param name="GroupName">The name of the group that you want to see a membership list of.
		/// Min length: 1
		// </param>
		/// <param name="next_token">A pagination token that can be used in a subsequent request.</param>
		/// <param name="max_results">The maximum number of results to return from this request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace of the group that you want a list of users from.
		/// Max length: 64
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListGroupMembershipsResponse> ListGroupMembershipsAsync(string GroupName, string next_token, int max_results, string AwsAccountId, string Namespace, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups/"+ (GroupName==null? "" : System.Uri.EscapeDataString(GroupName))+"/members&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListGroupMembershipsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the IAM policy assignments in the current Amazon QuickSight account.
		/// ListIAMPolicyAssignments accounts/{AwsAccountId}/namespaces/{Namespace}/v2/iam-policy-assignments
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains these IAM policy assignments.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="assignment_status">The status of the assignments.</param>
		/// <param name="Namespace">The namespace for the assignments.
		/// Max length: 64
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListIAMPolicyAssignmentsResponse> ListIAMPolicyAssignmentsAsync(string AwsAccountId, AssignmentStatus assignment_status, string Namespace, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/v2/iam-policy-assignments&assignment-status=" + assignment_status+"&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListIAMPolicyAssignmentsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all of the IAM policy assignments, including the Amazon Resource Names (ARNs), for the IAM policies assigned to the specified user and group, or groups that the user belongs to.
		/// ListIAMPolicyAssignmentsForUser accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the assignments.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="UserName">The name of the user.
		/// Min length: 1
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="Namespace">The namespace of the assignment.
		/// Max length: 64
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListIAMPolicyAssignmentsForUserResponse> ListIAMPolicyAssignmentsForUserAsync(string AwsAccountId, string UserName, string next_token, int max_results, string Namespace, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users/"+ (UserName==null? "" : System.Uri.EscapeDataString(UserName))+"/iam-policy-assignments&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListIAMPolicyAssignmentsForUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the history of SPICE ingestions for a dataset.
		/// ListIngestions accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions
		/// </summary>
		/// <param name="DataSetId">The ID of the dataset used in the ingestion.</param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListIngestionsResponse> ListIngestionsAsync(string DataSetId, string next_token, string AwsAccountId, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/data-sets/"+ (DataSetId==null? "" : System.Uri.EscapeDataString(DataSetId))+"/ingestions&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListIngestionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the namespaces for the specified Amazon Web Services account. This operation doesn't list deleted namespaces.
		/// ListNamespaces accounts/{AwsAccountId}/namespaces
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the Amazon QuickSight namespaces that you want to list.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">A unique pagination token that can be used in a subsequent request. You will receive a pagination token in the response body of a previous <code>ListNameSpaces</code> API call if there is more data that can be returned. To receive the data, make another <code>ListNamespaces</code> API call with the returned token to retrieve the next page of data. Each token is valid for 24 hours. If you try to make a <code>ListNamespaces</code> API call with an expired token, you will receive a <code>HTTP 400 InvalidNextTokenException</code> error.</param>
		/// <param name="max_results">The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListNamespacesResponse> ListNamespacesAsync(string AwsAccountId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListNamespacesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the tags assigned to a resource.
		/// ListTagsForResource resources/{ResourceArn}/tags
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource that you want a list of tags for.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "resources/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"/tags";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Assigns one or more tags (key-value pairs) to the specified Amazon QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. Amazon QuickSight supports tagging on data set, data source, dashboard, template, and topic. </p> <p>Tagging for Amazon QuickSight works in a similar way to tagging for other Amazon Web Services services, except for the following:</p> <ul> <li> <p>You can't use tags to track costs for Amazon QuickSight. This isn't possible because you can't tag the resources that Amazon QuickSight costs are based on, for example Amazon QuickSight storage capacity (SPICE), number of users, type of users, and usage metrics.</p> </li> <li> <p>Amazon QuickSight doesn't currently support the tag editor for Resource Groups.</p> </li> </ul>
		/// TagResource resources/{ResourceArn}/tags
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource that you want to tag.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string ResourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "resources/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"/tags";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the aliases of a template.
		/// ListTemplateAliases accounts/{AwsAccountId}/templates/{TemplateId}/aliases
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the template aliases that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_result">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTemplateAliasesResponse> ListTemplateAliasesAsync(string AwsAccountId, string TemplateId, string next_token, int max_result, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/aliases&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-result="+max_result+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTemplateAliasesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the versions of the templates in the current Amazon QuickSight account.
		/// ListTemplateVersions accounts/{AwsAccountId}/templates/{TemplateId}/versions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the templates that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="TemplateId">The ID for the template.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTemplateVersionsResponse> ListTemplateVersionsAsync(string AwsAccountId, string TemplateId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates/"+ (TemplateId==null? "" : System.Uri.EscapeDataString(TemplateId))+"/versions&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTemplateVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the templates in the current Amazon QuickSight account.
		/// ListTemplates accounts/{AwsAccountId}/templates
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the templates that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_result">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTemplatesResponse> ListTemplatesAsync(string AwsAccountId, string next_token, int max_result, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/templates&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-result="+max_result+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTemplatesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the aliases of a theme.
		/// ListThemeAliases accounts/{AwsAccountId}/themes/{ThemeId}/aliases
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the theme aliases that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_result">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListThemeAliasesResponse> ListThemeAliasesAsync(string AwsAccountId, string ThemeId, string next_token, int max_result, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/aliases&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-result="+max_result;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListThemeAliasesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the versions of the themes in the current Amazon Web Services account.
		/// ListThemeVersions accounts/{AwsAccountId}/themes/{ThemeId}/versions
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the themes that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="ThemeId">The ID for the theme.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListThemeVersionsResponse> ListThemeVersionsAsync(string AwsAccountId, string ThemeId, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes/"+ (ThemeId==null? "" : System.Uri.EscapeDataString(ThemeId))+"/versions&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListThemeVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the themes in the current Amazon Web Services account.
		/// ListThemes accounts/{AwsAccountId}/themes
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the themes that you're listing.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">The token for the next set of results, or null if there are no more results.</param>
		/// <param name="max_results">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="type"><p>The type of themes that you want to list. Valid options include the following:</p> <ul> <li> <p> <code>ALL (default)</code>- Display all existing themes.</p> </li> <li> <p> <code>CUSTOM</code> - Display only the themes created by people using Amazon QuickSight.</p> </li> <li> <p> <code>QUICKSIGHT</code> - Display only the starting themes defined by Amazon QuickSight.</p> </li> </ul></param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListThemesResponse> ListThemesAsync(string AwsAccountId, string next_token, int max_results, ThemeType type, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/themes&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&type=" + type+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListThemesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
		/// ListUserGroups accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups
		/// </summary>
		/// <param name="UserName">The Amazon QuickSight user name that you want to list group memberships for.
		/// Min length: 1
		// </param>
		/// <param name="AwsAccountId">The Amazon Web Services account ID that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <param name="next_token">A pagination token that can be used in a subsequent request.</param>
		/// <param name="max_results">The maximum number of results to return from this request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListUserGroupsResponse> ListUserGroupsAsync(string UserName, string AwsAccountId, string Namespace, string next_token, int max_results, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users/"+ (UserName==null? "" : System.Uri.EscapeDataString(UserName))+"/groups&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListUserGroupsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of all of the Amazon QuickSight users belonging to this account.
		/// ListUsers accounts/{AwsAccountId}/namespaces/{Namespace}/users
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">A pagination token that can be used in a subsequent request.</param>
		/// <param name="max_results">The maximum number of results to return from this request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListUsersResponse> ListUsersAsync(string AwsAccountId, string next_token, int max_results, string Namespace, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListUsersResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an Amazon QuickSight user whose identity is associated with the Identity and Access Management (IAM) identity or role specified in the request. When you register a new user from the Amazon QuickSight API, Amazon QuickSight generates a registration URL. The user accesses this registration URL to create their account. Amazon QuickSight doesn't send a registration email to users who are registered from the Amazon QuickSight API. If you want new users to receive a registration email, then add those users in the Amazon QuickSight console. For more information on registering a new user in the Amazon QuickSight console, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/managing-users.html#inviting-users"> Inviting users to access Amazon QuickSight</a>.
		/// RegisterUser accounts/{AwsAccountId}/namespaces/{Namespace}/users
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="Namespace">The namespace. Currently, you should set this to <code>default</code>.
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<RegisterUserResponse> RegisterUserAsync(string AwsAccountId, string Namespace, RegisterUserPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/users";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RegisterUserResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Restores an analysis.
		/// RestoreAnalysis accounts/{AwsAccountId}/restore/analyses/{AnalysisId}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analysis.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="AnalysisId">The ID of the analysis that you're restoring.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<RestoreAnalysisResponse> RestoreAnalysisAsync(string AwsAccountId, string AnalysisId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/restore/analyses/"+ (AnalysisId==null? "" : System.Uri.EscapeDataString(AnalysisId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RestoreAnalysisResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Searches for analyses that belong to the user specified in the filter.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
		/// SearchAnalyses accounts/{AwsAccountId}/search/analyses
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the analyses that you're searching for.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchAnalysesResponse> SearchAnalysesAsync(string AwsAccountId, string MaxResults, string NextToken, SearchAnalysesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/search/analyses&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchAnalysesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Searches for dashboards that belong to a user. </p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
		/// SearchDashboards accounts/{AwsAccountId}/search/dashboards
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the user whose dashboards you're searching for. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchDashboardsResponse> SearchDashboardsAsync(string AwsAccountId, string MaxResults, string NextToken, SearchDashboardsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/search/dashboards&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchDashboardsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use the <code>SearchDataSets</code> operation to search for datasets that belong to an account.
		/// SearchDataSets accounts/{AwsAccountId}/search/data-sets
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchDataSetsResponse> SearchDataSetsAsync(string AwsAccountId, string MaxResults, string NextToken, SearchDataSetsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/search/data-sets&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchDataSetsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use the <code>SearchDataSources</code> operation to search for data sources that belong to an account.
		/// SearchDataSources accounts/{AwsAccountId}/search/data-sources
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchDataSourcesResponse> SearchDataSourcesAsync(string AwsAccountId, string MaxResults, string NextToken, SearchDataSourcesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/search/data-sources&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchDataSourcesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Searches the subfolders in a folder.
		/// SearchFolders accounts/{AwsAccountId}/search/folders
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that contains the folder.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<SearchFoldersResponse> SearchFoldersAsync(string AwsAccountId, SearchFoldersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/search/folders";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchFoldersResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Use the <code>SearchGroups</code> operation to search groups in a specified Amazon QuickSight namespace using the supplied filters.
		/// SearchGroups accounts/{AwsAccountId}/namespaces/{Namespace}/groups-search
		/// </summary>
		/// <param name="AwsAccountId">The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="next_token">A pagination token that can be used in a subsequent request.</param>
		/// <param name="max_results">The maximum number of results to return from this request.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="Namespace">The namespace that you want to search.
		/// Max length: 64
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchGroupsResponse> SearchGroupsAsync(string AwsAccountId, string next_token, int max_results, string Namespace, string MaxResults, string NextToken, SearchGroupsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/namespaces/"+ (Namespace==null? "" : System.Uri.EscapeDataString(Namespace))+"/groups-search&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&max-results="+max_results+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchGroupsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Starts an Asset Bundle export job.</p> <p>An Asset Bundle export job exports specified Amazon QuickSight assets. You can also choose to export any asset dependencies in the same job. Export jobs run asynchronously and can be polled with a <code>DescribeAssetBundleExportJob</code> API call. When a job is successfully completed, a download URL that contains the exported assets is returned. The URL is valid for 5 minutes and can be refreshed with a <code>DescribeAssetBundleExportJob</code> API call. Each Amazon QuickSight account can run up to 5 export jobs concurrently.</p> <p>The API caller must have the necessary permissions in their IAM role to access each resource before the resources can be exported.</p>
		/// StartAssetBundleExportJob accounts/{AwsAccountId}/asset-bundle-export-jobs/export
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account to export assets from.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<StartAssetBundleExportJobResponse> StartAssetBundleExportJobAsync(string AwsAccountId, StartAssetBundleExportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/asset-bundle-export-jobs/export";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartAssetBundleExportJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Starts an Asset Bundle import job.</p> <p>An Asset Bundle import job imports specified Amazon QuickSight assets into an Amazon QuickSight account. You can also choose to import a naming prefix and specified configuration overrides. The assets that are contained in the bundle file that you provide are used to create or update a new or existing asset in your Amazon QuickSight account. Each Amazon QuickSight account can run up to 5 import jobs concurrently.</p> <p>The API caller must have the necessary <code>"create"</code>, <code>"describe"</code>, and <code>"update"</code> permissions in their IAM role to access each resource type that is contained in the bundle file before the resources can be imported.</p>
		/// StartAssetBundleImportJob accounts/{AwsAccountId}/asset-bundle-import-jobs/import
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account to import assets into. 
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<StartAssetBundleImportJobResponse> StartAssetBundleImportJobAsync(string AwsAccountId, StartAssetBundleImportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/asset-bundle-import-jobs/import";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartAssetBundleImportJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Starts an asynchronous job that generates a dashboard snapshot. You can request up to one paginated PDF and up to five CSVs per API call.</p> <p>Poll job descriptions with a <code>DescribeDashboardSnapshotJob</code> API call. Once the job succeeds, use the <code>DescribeDashboardSnapshotJobResult</code> API to obtain the download URIs that the job generates.</p>
		/// StartDashboardSnapshotJob accounts/{AwsAccountId}/dashboards/{DashboardId}/snapshot-jobs
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that the dashboard snapshot job is executed in.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID of the dashboard that you want to start a snapshot job for. 
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <returns>Success</returns>
		public async Task<StartDashboardSnapshotJobResponse> StartDashboardSnapshotJobAsync(string AwsAccountId, string DashboardId, StartDashboardSnapshotJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/snapshot-jobs";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartDashboardSnapshotJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes a tag or tags from a resource.
		/// UntagResource resources/{ResourceArn}/tags#keys
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource that you want to untag.</param>
		/// <param name="keys">The keys of the key-value pairs for the resource tag or tags assigned to the resource.
		/// Minimum items: 1
		/// Maximum items: 200
		// </param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string ResourceArn, string[] keys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "resources/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"/tags#keys&"+string.Join("&", keys.Select(z => $"keys={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the published version of a dashboard.
		/// UpdateDashboardPublishedVersion accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}
		/// </summary>
		/// <param name="AwsAccountId">The ID of the Amazon Web Services account that contains the dashboard that you're updating.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <param name="DashboardId">The ID for the dashboard.
		/// Min length: 1
		/// Max length: 512
		// </param>
		/// <param name="VersionNumber">The version number of the dashboard.
		/// Minimum: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateDashboardPublishedVersionResponse> UpdateDashboardPublishedVersionAsync(string AwsAccountId, string DashboardId, int VersionNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/dashboards/"+ (DashboardId==null? "" : System.Uri.EscapeDataString(DashboardId))+"/versions/"+VersionNumber;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDashboardPublishedVersionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Use the <code>UpdatePublicSharingSettings</code> operation to turn on or turn off the public sharing settings of an Amazon QuickSight dashboard.</p> <p>To use this operation, turn on session capacity pricing for your Amazon QuickSight account.</p> <p>Before you can turn on public sharing on your account, make sure to give public sharing permissions to an administrative user in the Identity and Access Management (IAM) console. For more information on using IAM with Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html">Using Amazon QuickSight with IAM</a> in the <i>Amazon QuickSight User Guide</i>.</p>
		/// UpdatePublicSharingSettings accounts/{AwsAccountId}/public-sharing-settings
		/// </summary>
		/// <param name="AwsAccountId">The Amazon Web Services account ID associated with your Amazon QuickSight subscription.
		/// Min length: 12
		/// Max length: 12
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdatePublicSharingSettingsResponse> UpdatePublicSharingSettingsAsync(string AwsAccountId, UpdatePublicSharingSettingsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/"+ (AwsAccountId==null? "" : System.Uri.EscapeDataString(AwsAccountId))+"/public-sharing-settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdatePublicSharingSettingsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class CreateIngestionPutBody
	{
		
		/// <summary>
		/// This defines the type of ingestion user wants to trigger. This is part of create ingestion request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public IngestionType IngestionType { get; set; }
	}
	
	public class CreateAccountCustomizationPostBody
	{
		
		/// <summary>
		/// The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAccountCustomizationPostBodyAccountCustomization AccountCustomization { get; set; }
		
		/// <summary>
		/// A list of the tags that you want to attach to this resource.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateAccountCustomizationPostBodyAccountCustomization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultEmailCustomizationTemplate { get; set; }
	}
	
	public class UpdateAccountCustomizationPutBody
	{
		
		/// <summary>
		/// The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateAccountCustomizationPutBodyAccountCustomization AccountCustomization { get; set; }
	}
	
	public class UpdateAccountCustomizationPutBodyAccountCustomization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultEmailCustomizationTemplate { get; set; }
	}
	
	public class CreateAccountSubscriptionPostBody
	{
		
		/// <summary>
		/// <p>The edition of Amazon QuickSight that you want your account to have. Currently, you can choose from <code>ENTERPRISE</code> or <code>ENTERPRISE_AND_Q</code>.</p> <p>If you choose <code>ENTERPRISE_AND_Q</code>, the following parameters are required:</p> <ul> <li> <p> <code>FirstName</code> </p> </li> <li> <p> <code>LastName</code> </p> </li> <li> <p> <code>EmailAddress</code> </p> </li> <li> <p> <code>ContactNumber</code> </p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Edition Edition { get; set; }
		
		/// <summary>
		/// <p>The method that you want to use to authenticate your Amazon QuickSight account. Currently, the valid values for this parameter are <code>IAM_AND_QUICKSIGHT</code>, <code>IAM_ONLY</code>, and <code>ACTIVE_DIRECTORY</code>.</p> <p>If you choose <code>ACTIVE_DIRECTORY</code>, provide an <code>ActiveDirectoryName</code> and an <code>AdminGroup</code> associated with your Active Directory.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthenticationMethodOption AuthenticationMethod { get; set; }
		
		/// <summary>
		/// The name of your Amazon QuickSight account. This name is unique over all of Amazon Web Services, and it appears only when users sign in. You can't change <code>AccountName</code> value after the Amazon QuickSight account is created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountName { get; set; }
		
		/// <summary>
		/// The email address that you want Amazon QuickSight to send notifications to regarding your Amazon QuickSight account or Amazon QuickSight subscription.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NotificationEmail { get; set; }
		
		/// <summary>
		/// The name of your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ActiveDirectoryName { get; set; }
		
		/// <summary>
		/// The realm of the Active Directory that is associated with your Amazon QuickSight account. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Realm { get; set; }
		
		/// <summary>
		/// The ID of the Active Directory that is associated with your Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryId { get; set; }
		
		/// <summary>
		/// The admin group associated with your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] AdminGroup { get; set; }
		
		/// <summary>
		/// The author group associated with your Active Directory. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] AuthorGroup { get; set; }
		
		/// <summary>
		/// The reader group associated with your Active Direcrtory. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the <i>Amazon QuickSight User Guide</i>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ReaderGroup { get; set; }
		
		/// <summary>
		/// The first name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		/// <summary>
		/// The last name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		/// <summary>
		/// The email address of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// A 10-digit phone number for the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ContactNumber { get; set; }
	}
	
	public class CreateAnalysisPostBody
	{
		
		/// <summary>
		/// A descriptive name for the analysis that you're creating. This name displays for the analysis in the Amazon QuickSight console. 
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of Amazon QuickSight parameters and the list's override values.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateAnalysisPostBodyParameters Parameters { get; set; }
		
		/// <summary>
		/// <p>A structure that describes the principals and the resource-level permissions on an analysis. You can use the <code>Permissions</code> structure to grant permissions by providing a list of Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN). </p> <p>To specify no permissions, omit <code>Permissions</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// The source entity of an analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateAnalysisPostBodySourceEntity SourceEntity { get; set; }
		
		/// <summary>
		/// The ARN for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The definition of an analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateAnalysisPostBodyDefinition Definition { get; set; }
	}
	
	public class CreateAnalysisPostBodyParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringParameter[] StringParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameter[] IntegerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalParameter[] DecimalParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeParameter[] DateTimeParameters { get; set; }
	}
	
	public class CreateAnalysisPostBodySourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSourceTemplate SourceTemplate { get; set; }
	}
	
	public class CreateAnalysisPostBodyDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetIdentifierDeclaration[] DataSetIdentifierDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	public class UpdateAnalysisPutBody
	{
		
		/// <summary>
		/// A descriptive name for the analysis that you're updating. This name displays for the analysis in the Amazon QuickSight console.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of Amazon QuickSight parameters and the list's override values.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAnalysisPutBodyParameters Parameters { get; set; }
		
		/// <summary>
		/// The source entity of an analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAnalysisPutBodySourceEntity SourceEntity { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		/// <summary>
		/// The definition of an analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAnalysisPutBodyDefinition Definition { get; set; }
	}
	
	public class UpdateAnalysisPutBodyParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringParameter[] StringParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameter[] IntegerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalParameter[] DecimalParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeParameter[] DateTimeParameters { get; set; }
	}
	
	public class UpdateAnalysisPutBodySourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnalysisSourceTemplate SourceTemplate { get; set; }
	}
	
	public class UpdateAnalysisPutBodyDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetIdentifierDeclaration[] DataSetIdentifierDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	public class CreateDashboardPostBody
	{
		
		/// <summary>
		/// The display name of the dashboard.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of Amazon QuickSight parameters and the list's override values.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDashboardPostBodyParameters Parameters { get; set; }
		
		/// <summary>
		/// <p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p> <p>To specify no permissions, omit the permissions list.</p>
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// Dashboard source entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDashboardPostBodySourceEntity SourceEntity { get; set; }
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// A description for the first version of the dashboard being created.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// Dashboard publish options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDashboardPostBodyDashboardPublishOptions DashboardPublishOptions { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		/// <summary>
		/// The contents of a dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDashboardPostBodyDefinition Definition { get; set; }
	}
	
	public class CreateDashboardPostBodyParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringParameter[] StringParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameter[] IntegerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalParameter[] DecimalParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeParameter[] DateTimeParameters { get; set; }
	}
	
	public class CreateDashboardPostBodySourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSourceTemplate SourceTemplate { get; set; }
	}
	
	public class CreateDashboardPostBodyDashboardPublishOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdHocFilteringOption AdHocFilteringOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportToCSVOption ExportToCSVOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlsOption SheetControlsOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVisualPublishOptions VisualPublishOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetLayoutElementMaximizationOption SheetLayoutElementMaximizationOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualMenuOption VisualMenuOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualAxisSortOption VisualAxisSortOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportWithHiddenFieldsOption ExportWithHiddenFieldsOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointDrillUpDownOption DataPointDrillUpDownOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointMenuLabelOption DataPointMenuLabelOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointTooltipOption DataPointTooltipOption { get; set; }
	}
	
	public class CreateDashboardPostBodyDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetIdentifierDeclaration[] DataSetIdentifierDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	public class UpdateDashboardPutBody
	{
		
		/// <summary>
		/// The display name of the dashboard.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// Dashboard source entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDashboardPutBodySourceEntity SourceEntity { get; set; }
		
		/// <summary>
		/// A list of Amazon QuickSight parameters and the list's override values.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDashboardPutBodyParameters Parameters { get; set; }
		
		/// <summary>
		/// A description for the first version of the dashboard being created.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// Dashboard publish options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDashboardPutBodyDashboardPublishOptions DashboardPublishOptions { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ThemeArn { get; set; }
		
		/// <summary>
		/// The contents of a dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDashboardPutBodyDefinition Definition { get; set; }
	}
	
	public class UpdateDashboardPutBodySourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardSourceTemplate SourceTemplate { get; set; }
	}
	
	public class UpdateDashboardPutBodyParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StringParameter[] StringParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegerParameter[] IntegerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DecimalParameter[] DecimalParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateTimeParameter[] DateTimeParameters { get; set; }
	}
	
	public class UpdateDashboardPutBodyDashboardPublishOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdHocFilteringOption AdHocFilteringOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportToCSVOption ExportToCSVOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetControlsOption SheetControlsOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardVisualPublishOptions VisualPublishOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetLayoutElementMaximizationOption SheetLayoutElementMaximizationOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualMenuOption VisualMenuOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VisualAxisSortOption VisualAxisSortOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExportWithHiddenFieldsOption ExportWithHiddenFieldsOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointDrillUpDownOption DataPointDrillUpDownOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointMenuLabelOption DataPointMenuLabelOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataPointTooltipOption DataPointTooltipOption { get; set; }
	}
	
	public class UpdateDashboardPutBodyDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetIdentifierDeclaration[] DataSetIdentifierDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	public class CreateDataSetPostBody
	{
		
		/// <summary>
		/// An ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSetId { get; set; }
		
		/// <summary>
		/// The display name for the dataset.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Name { get; set; }
		
		/// <summary>
		/// Declares the physical tables that are available in the underlying data sources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, PhysicalTable> PhysicalTableMap { get; set; }
		
		/// <summary>
		/// Configures the combination and transformation of the data from the physical tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, LogicalTable> LogicalTableMap { get; set; }
		
		/// <summary>
		/// Indicates whether you want to import the data into SPICE.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetImportMode ImportMode { get; set; }
		
		/// <summary>
		/// Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
		/// Minimum items: 1
		/// Maximum items: 8
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 8)]
		public ColumnGroup[] ColumnGroups { get; set; }
		
		/// <summary>
		/// The folder that contains fields and nested subfolders for your dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, FieldFolder> FieldFolders { get; set; }
		
		/// <summary>
		/// A list of resource permissions on the dataset.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSetPostBodyRowLevelPermissionDataSet RowLevelPermissionDataSet { get; set; }
		
		/// <summary>
		/// The configuration of tags on a dataset to set row-level security. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSetPostBodyRowLevelPermissionTagConfiguration RowLevelPermissionTagConfiguration { get; set; }
		
		/// <summary>
		/// A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public ColumnLevelPermissionRule[] ColumnLevelPermissionRules { get; set; }
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The usage configuration to apply to child datasets that reference this dataset as a source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSetPostBodyDataSetUsageConfiguration DataSetUsageConfiguration { get; set; }
		
		/// <summary>
		/// The parameter declarations of the dataset.
		/// Minimum items: 1
		/// Maximum items: 32
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 32)]
		public DatasetParameter[] DatasetParameters { get; set; }
	}
	
	public class CreateDataSetPostBodyRowLevelPermissionDataSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionPolicy PermissionPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionFormatVersion FormatVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
	}
	
	public class CreateDataSetPostBodyRowLevelPermissionTagConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionTagRule[] TagRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[][] TagRuleConfigurations { get; set; }
	}
	
	public class CreateDataSetPostBodyDataSetUsageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableUseAsDirectQuerySource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableUseAsImportedSource { get; set; }
	}
	
	public class CreateDataSourcePostBody
	{
		
		/// <summary>
		/// An ID for the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DataSourceId { get; set; }
		
		/// <summary>
		/// A display name for the data source.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Name { get; set; }
		
		/// <summary>
		/// <p>The type of the data source. To return a list of all data sources, use <code>ListDataSources</code>.</p> <p>Use <code>AMAZON_ELASTICSEARCH</code> for Amazon OpenSearch Service.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSourceType Type { get; set; }
		
		/// <summary>
		/// The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSourcePostBodyDataSourceParameters DataSourceParameters { get; set; }
		
		/// <summary>
		/// Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSourcePostBodyCredentials Credentials { get; set; }
		
		/// <summary>
		/// A list of resource permissions on the data source.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// VPC connection properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSourcePostBodyVpcConnectionProperties VpcConnectionProperties { get; set; }
		
		/// <summary>
		/// Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDataSourcePostBodySslProperties SslProperties { get; set; }
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateDataSourcePostBodyDataSourceParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonElasticsearchParameters AmazonElasticsearchParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AthenaParameters AthenaParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuroraParameters AuroraParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuroraPostgreSqlParameters AuroraPostgreSqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsIotAnalyticsParameters AwsIotAnalyticsParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JiraParameters JiraParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MariaDbParameters MariaDbParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MySqlParameters MySqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OracleParameters OracleParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PostgreSqlParameters PostgreSqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PrestoParameters PrestoParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RdsParameters RdsParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftParameters RedshiftParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Parameters S3Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowParameters ServiceNowParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnowflakeParameters SnowflakeParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SparkParameters SparkParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SqlServerParameters SqlServerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TeradataParameters TeradataParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TwitterParameters TwitterParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonOpenSearchParameters AmazonOpenSearchParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExasolParameters ExasolParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabricksParameters DatabricksParameters { get; set; }
	}
	
	public class CreateDataSourcePostBodyCredentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CredentialPair CredentialPair { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CopySourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
	}
	
	public class CreateDataSourcePostBodyVpcConnectionProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcConnectionArn { get; set; }
	}
	
	public class CreateDataSourcePostBodySslProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSsl { get; set; }
	}
	
	public class CreateFolderPostBody
	{
		
		/// <summary>
		/// The name of the folder.
		/// Min length: 1
		/// Max length: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public string Name { get; set; }
		
		/// <summary>
		/// The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FolderType FolderType { get; set; }
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) for the parent folder.</p> <p> <code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates a root-level folder.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ParentFolderArn { get; set; }
		
		/// <summary>
		/// <p>A structure that describes the principals and the resource-level permissions of a folder.</p> <p>To specify no permissions, omit <code>Permissions</code>.</p>
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// Tags for the folder.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class UpdateFolderPutBody
	{
		
		/// <summary>
		/// The name of the folder.
		/// Required
		/// Min length: 1
		/// Max length: 200
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public string Name { get; set; }
	}
	
	public class CreateGroupPostBody
	{
		
		/// <summary>
		/// A name for the group that you want to create.
		/// Required
		/// Min length: 1
		/// Pattern: [\u0020-\u00FF]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\u00FF]+")]
		public string GroupName { get; set; }
		
		/// <summary>
		/// A description for the group that you want to create.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string Description { get; set; }
	}
	
	public class CreateIAMPolicyAssignmentPostBody
	{
		
		/// <summary>
		/// The name of the assignment, also called a rule. The name must be unique within the Amazon Web Services account.
		/// Required
		/// Min length: 1
		/// Pattern: (?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$")]
		public string AssignmentName { get; set; }
		
		/// <summary>
		/// <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
		
		/// <summary>
		/// The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		/// <summary>
		/// The Amazon QuickSight users, groups, or both that you want to assign the policy to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string[]> Identities { get; set; }
	}
	
	public class CreateNamespacePostBody
	{
		
		/// <summary>
		/// The name that you want to use to describe the new namespace.
		/// Required
		/// Max length: 64
		/// Pattern: ^[a-zA-Z0-9._-]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9._-]*$")]
		public string Namespace { get; set; }
		
		/// <summary>
		/// Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityStore IdentityStore { get; set; }
		
		/// <summary>
		/// The tags that you want to associate with the namespace that you're creating.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateRefreshSchedulePostBody
	{
		
		/// <summary>
		/// The refresh schedule of a dataset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateRefreshSchedulePostBodySchedule Schedule { get; set; }
	}
	
	public class CreateRefreshSchedulePostBodySchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RefreshFrequency ScheduleFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartAfterDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionType RefreshType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	public class UpdateRefreshSchedulePutBody
	{
		
		/// <summary>
		/// The refresh schedule of a dataset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateRefreshSchedulePutBodySchedule Schedule { get; set; }
	}
	
	public class UpdateRefreshSchedulePutBodySchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ScheduleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RefreshFrequency ScheduleFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartAfterDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IngestionType RefreshType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	public class CreateTemplatePostBody
	{
		
		/// <summary>
		/// A display name for the template.
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of resource permissions to be set on the template. 
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// The source entity of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateTemplatePostBodySourceEntity SourceEntity { get; set; }
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// The detailed definition of a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateTemplatePostBodyDefinition Definition { get; set; }
	}
	
	public class CreateTemplatePostBodySourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceAnalysis SourceAnalysis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceTemplate SourceTemplate { get; set; }
	}
	
	public class CreateTemplatePostBodyDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetConfiguration[] DataSetConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	public class UpdateTemplatePutBody
	{
		
		/// <summary>
		/// The source entity of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateTemplatePutBodySourceEntity SourceEntity { get; set; }
		
		/// <summary>
		/// A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// The name for the template.
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// The detailed definition of a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateTemplatePutBodyDefinition Definition { get; set; }
	}
	
	public class UpdateTemplatePutBodySourceEntity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceAnalysis SourceAnalysis { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSourceTemplate SourceTemplate { get; set; }
	}
	
	public class UpdateTemplatePutBodyDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataSetConfiguration[] DataSetConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetDefinition[] Sheets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedField[] CalculatedFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] ParameterDeclarations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterGroup[] FilterGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColumnConfiguration[] ColumnConfigurations { get; set; }
		
		/// <summary>
		/// The configuration for default analysis settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnalysisDefaults AnalysisDefaults { get; set; }
	}
	
	public class CreateTemplateAliasPostBody
	{
		
		/// <summary>
		/// The version number of the template.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int TemplateVersionNumber { get; set; }
	}
	
	public class UpdateTemplateAliasPutBody
	{
		
		/// <summary>
		/// The version number of the template.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int TemplateVersionNumber { get; set; }
	}
	
	public class CreateThemePostBody
	{
		
		/// <summary>
		/// A display name for the theme.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use <code>ListThemes</code> or choose <b>Themes</b> from within an analysis. 
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: [\w\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\-]+")]
		public string BaseThemeId { get; set; }
		
		/// <summary>
		/// A description of the first version of the theme that you're creating. Every time <code>UpdateTheme</code> is called, a new version is created. Each version of the theme has a description of the version in the <code>VersionDescription</code> field.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// The theme configuration. This configuration contains all of the display properties for a theme.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateThemePostBodyConfiguration Configuration { get; set; }
		
		/// <summary>
		/// A valid grouping of resource permissions to apply to the new theme. 
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] Permissions { get; set; }
		
		/// <summary>
		/// A map of the key-value pairs for the resource tag or tags that you want to add to the resource.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateThemePostBodyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataColorPalette DataColorPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UIColorPalette UIColorPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetStyle Sheet { get; set; }
		
		/// <summary>
		/// Determines the typography options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Typography Typography { get; set; }
	}
	
	public class UpdateThemePutBody
	{
		
		/// <summary>
		/// The name for the theme.
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 2048)]
		public string Name { get; set; }
		
		/// <summary>
		/// The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: [\w\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\-]+")]
		public string BaseThemeId { get; set; }
		
		/// <summary>
		/// A description of the theme version that you're updating Every time that you call <code>UpdateTheme</code>, you create a new version of the theme. Each version of the theme maintains a description of the version in <code>VersionDescription</code>.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// The theme configuration. This configuration contains all of the display properties for a theme.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateThemePutBodyConfiguration Configuration { get; set; }
	}
	
	public class UpdateThemePutBodyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataColorPalette DataColorPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UIColorPalette UIColorPalette { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SheetStyle Sheet { get; set; }
		
		/// <summary>
		/// Determines the typography options.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Typography Typography { get; set; }
	}
	
	public class CreateThemeAliasPostBody
	{
		
		/// <summary>
		/// The version number of the theme.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int ThemeVersionNumber { get; set; }
	}
	
	public class UpdateThemeAliasPutBody
	{
		
		/// <summary>
		/// The version number of the theme that the alias should reference.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int ThemeVersionNumber { get; set; }
	}
	
	public class CreateTopicPostBody
	{
		
		/// <summary>
		/// The ID for the topic that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
		/// Required
		/// Max length: 256
		/// Pattern: ^[A-Za-z0-9-_.\\+]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9-_.\\+]*$")]
		public string TopicId { get; set; }
		
		/// <summary>
		/// A structure that describes the details of a topic, such as its name, description, and associated data sets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateTopicPostBodyTopic Topic { get; set; }
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags that are assigned to the dataset.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateTopicPostBodyTopic
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatasetMetadata[] DataSets { get; set; }
	}
	
	public class CreateTopicRefreshSchedulePostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the dataset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatasetArn { get; set; }
		
		/// <summary>
		/// The name of the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DatasetName { get; set; }
		
		/// <summary>
		/// A structure that represents a topic refresh schedule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateTopicRefreshSchedulePostBodyRefreshSchedule RefreshSchedule { get; set; }
	}
	
	public class CreateTopicRefreshSchedulePostBodyRefreshSchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BasedOnSpiceSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartingAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RepeatAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicScheduleType TopicScheduleType { get; set; }
	}
	
	public class CreateVPCConnectionPostBody
	{
		
		/// <summary>
		/// The ID of the VPC connection that you're creating. This ID is a unique identifier for each Amazon Web Services Region in an Amazon Web Services account.
		/// Required
		/// Min length: 1
		/// Max length: 1000
		/// Pattern: [\w\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 1000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\-]+")]
		public string VPCConnectionId { get; set; }
		
		/// <summary>
		/// The display name for the VPC connection.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of subnet IDs for the VPC connection.
		/// Required
		/// Minimum items: 2
		/// Maximum items: 15
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(2, 15)]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC connection.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 16)]
		public string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of IP addresses of DNS resolver endpoints for the VPC connection.
		/// Maximum items: 15
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(15)]
		public string[] DnsResolvers { get; set; }
		
		/// <summary>
		/// The IAM role to associate with the VPC connection.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(20, 2048)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// A map of the key-value pairs for the resource tag or tags assigned to the VPC connection.
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class UpdateDataSetPutBody
	{
		
		/// <summary>
		/// The display name for the dataset.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Name { get; set; }
		
		/// <summary>
		/// Declares the physical tables that are available in the underlying data sources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, PhysicalTable> PhysicalTableMap { get; set; }
		
		/// <summary>
		/// Configures the combination and transformation of the data from the physical tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, LogicalTable> LogicalTableMap { get; set; }
		
		/// <summary>
		/// Indicates whether you want to import the data into SPICE.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataSetImportMode ImportMode { get; set; }
		
		/// <summary>
		/// Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
		/// Minimum items: 1
		/// Maximum items: 8
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 8)]
		public ColumnGroup[] ColumnGroups { get; set; }
		
		/// <summary>
		/// The folder that contains fields and nested subfolders for your dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, FieldFolder> FieldFolders { get; set; }
		
		/// <summary>
		/// <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSetPutBodyRowLevelPermissionDataSet RowLevelPermissionDataSet { get; set; }
		
		/// <summary>
		/// The configuration of tags on a dataset to set row-level security. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSetPutBodyRowLevelPermissionTagConfiguration RowLevelPermissionTagConfiguration { get; set; }
		
		/// <summary>
		/// A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public ColumnLevelPermissionRule[] ColumnLevelPermissionRules { get; set; }
		
		/// <summary>
		/// The usage configuration to apply to child datasets that reference this dataset as a source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSetPutBodyDataSetUsageConfiguration DataSetUsageConfiguration { get; set; }
		
		/// <summary>
		/// The parameter declarations of the dataset.
		/// Minimum items: 1
		/// Maximum items: 32
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 32)]
		public DatasetParameter[] DatasetParameters { get; set; }
	}
	
	public class UpdateDataSetPutBodyRowLevelPermissionDataSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionPolicy PermissionPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionFormatVersion FormatVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
	}
	
	public class UpdateDataSetPutBodyRowLevelPermissionTagConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WidgetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RowLevelPermissionTagRule[] TagRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[][] TagRuleConfigurations { get; set; }
	}
	
	public class UpdateDataSetPutBodyDataSetUsageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableUseAsDirectQuerySource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableUseAsImportedSource { get; set; }
	}
	
	public class PutDataSetRefreshPropertiesPutBody
	{
		
		/// <summary>
		/// The refresh properties of a dataset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutDataSetRefreshPropertiesPutBodyDataSetRefreshProperties DataSetRefreshProperties { get; set; }
	}
	
	public class PutDataSetRefreshPropertiesPutBodyDataSetRefreshProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RefreshConfiguration RefreshConfiguration { get; set; }
	}
	
	public class UpdateDataSourcePutBody
	{
		
		/// <summary>
		/// A display name for the data source.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Name { get; set; }
		
		/// <summary>
		/// The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSourcePutBodyDataSourceParameters DataSourceParameters { get; set; }
		
		/// <summary>
		/// Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSourcePutBodyCredentials Credentials { get; set; }
		
		/// <summary>
		/// VPC connection properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSourcePutBodyVpcConnectionProperties VpcConnectionProperties { get; set; }
		
		/// <summary>
		/// Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDataSourcePutBodySslProperties SslProperties { get; set; }
	}
	
	public class UpdateDataSourcePutBodyDataSourceParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonElasticsearchParameters AmazonElasticsearchParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AthenaParameters AthenaParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuroraParameters AuroraParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuroraPostgreSqlParameters AuroraPostgreSqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AwsIotAnalyticsParameters AwsIotAnalyticsParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JiraParameters JiraParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MariaDbParameters MariaDbParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MySqlParameters MySqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OracleParameters OracleParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PostgreSqlParameters PostgreSqlParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PrestoParameters PrestoParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RdsParameters RdsParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftParameters RedshiftParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Parameters S3Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceNowParameters ServiceNowParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnowflakeParameters SnowflakeParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SparkParameters SparkParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SqlServerParameters SqlServerParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TeradataParameters TeradataParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TwitterParameters TwitterParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonOpenSearchParameters AmazonOpenSearchParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExasolParameters ExasolParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabricksParameters DatabricksParameters { get; set; }
	}
	
	public class UpdateDataSourcePutBodyCredentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CredentialPair CredentialPair { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CopySourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretArn { get; set; }
	}
	
	public class UpdateDataSourcePutBodyVpcConnectionProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcConnectionArn { get; set; }
	}
	
	public class UpdateDataSourcePutBodySslProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableSsl { get; set; }
	}
	
	public class UpdateGroupPutBody
	{
		
		/// <summary>
		/// The description for the group that you want to update.
		/// Min length: 1
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		public string Description { get; set; }
	}
	
	public class UpdateTopicPutBody
	{
		
		/// <summary>
		/// A structure that describes the details of a topic, such as its name, description, and associated data sets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateTopicPutBodyTopic Topic { get; set; }
	}
	
	public class UpdateTopicPutBodyTopic
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatasetMetadata[] DataSets { get; set; }
	}
	
	public class UpdateTopicRefreshSchedulePutBody
	{
		
		/// <summary>
		/// A structure that represents a topic refresh schedule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateTopicRefreshSchedulePutBodyRefreshSchedule RefreshSchedule { get; set; }
	}
	
	public class UpdateTopicRefreshSchedulePutBodyRefreshSchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BasedOnSpiceSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartingAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RepeatAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicScheduleType TopicScheduleType { get; set; }
	}
	
	public class UpdateUserPutBody
	{
		
		/// <summary>
		/// The email address of the user that you want to update.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// <p>The Amazon QuickSight role of the user. The role can be one of the following default security cohorts:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul> <p>The name of the Amazon QuickSight role is invisible to the user except for the console screens dealing with permissions.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserRole Role { get; set; }
		
		/// <summary>
		/// <p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>
		/// Min length: 1
		/// Max length: 64
		/// Pattern: ^[a-zA-Z0-9+=,.@_-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9+=,.@_-]+$")]
		public string CustomPermissionsName { get; set; }
		
		/// <summary>
		/// A flag that you use to indicate that you want to remove all custom permissions from this user. Using this parameter resets the user to the state it was in before a custom permissions profile was applied. This parameter defaults to NULL and it doesn't accept any other value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnapplyCustomPermissions { get; set; }
		
		/// <summary>
		/// <p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> <li> <p> <code>NONE</code>: This clears all the previously saved external login information for a user. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeUser.html">DescribeUser</a> </code> API operation to check the external login information.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginFederationProviderType { get; set; }
		
		/// <summary>
		/// The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CustomFederationProviderUrl { get; set; }
		
		/// <summary>
		/// The identity ID for a user in the external login provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginId { get; set; }
	}
	
	public class UpdateVPCConnectionPutBody
	{
		
		/// <summary>
		/// The display name for the VPC connection.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Name { get; set; }
		
		/// <summary>
		/// A list of subnet IDs for the VPC connection.
		/// Required
		/// Minimum items: 2
		/// Maximum items: 15
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(2, 15)]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// A list of security group IDs for the VPC connection.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 16)]
		public string[] SecurityGroupIds { get; set; }
		
		/// <summary>
		/// A list of IP addresses of DNS resolver endpoints for the VPC connection.
		/// Maximum items: 15
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(15)]
		public string[] DnsResolvers { get; set; }
		
		/// <summary>
		/// An IAM role associated with the VPC connection.
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(20, 2048)]
		public string RoleArn { get; set; }
	}
	
	public class UpdateAccountSettingsPutBody
	{
		
		/// <summary>
		/// The default namespace for this Amazon Web Services account. Currently, the default is <code>default</code>. IAM users that register for the first time with Amazon QuickSight provide an email address that becomes associated with the default namespace. 
		/// Required
		/// Max length: 64
		/// Pattern: ^[a-zA-Z0-9._-]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9._-]*$")]
		public string DefaultNamespace { get; set; }
		
		/// <summary>
		/// The email address that you want Amazon QuickSight to send notifications to regarding your Amazon Web Services account or Amazon QuickSight subscription.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NotificationEmail { get; set; }
		
		/// <summary>
		/// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. A <code>True</code> value doesn't allow the account to be deleted and results in an error message if a user tries to make a <code>DeleteAccountSubscription</code> request. A <code>False</code> value will allow the account to be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TerminationProtectionEnabled { get; set; }
	}
	
	public class UpdateAnalysisPermissionsPutBody
	{
		
		/// <summary>
		/// A structure that describes the permissions to add and the principal to add them to.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// A structure that describes the permissions to remove and the principal to remove them from.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class UpdateDashboardPermissionsPutBody
	{
		
		/// <summary>
		/// The permissions that you want to grant on this resource.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// The permissions that you want to revoke from this resource.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] RevokePermissions { get; set; }
		
		/// <summary>
		/// Grants link permissions to all users in a defined namespace.
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public ResourcePermission[] GrantLinkPermissions { get; set; }
		
		/// <summary>
		/// Revokes link permissions from all users in a defined namespace.
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public ResourcePermission[] RevokeLinkPermissions { get; set; }
	}
	
	public class UpdateDataSetPermissionsPostBody
	{
		
		/// <summary>
		/// The resource permissions that you want to grant to the dataset.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// The resource permissions that you want to revoke from the dataset.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class UpdateDataSourcePermissionsPostBody
	{
		
		/// <summary>
		/// A list of resource permissions that you want to grant on the data source.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// A list of resource permissions that you want to revoke on the data source.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class UpdateFolderPermissionsPutBody
	{
		
		/// <summary>
		/// The permissions that you want to grant on a resource.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// The permissions that you want to revoke from a resource.
		/// Minimum items: 1
		/// Maximum items: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class UpdateIAMPolicyAssignmentPutBody
	{
		
		/// <summary>
		/// <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AssignmentStatus AssignmentStatus { get; set; }
		
		/// <summary>
		/// The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		/// <summary>
		/// The Amazon QuickSight users, groups, or both that you want to assign the policy to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string[]> Identities { get; set; }
	}
	
	public class UpdateIpRestrictionPostBody
	{
		
		/// <summary>
		/// A map that describes the updated IP rules with CIDR ranges and descriptions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> IpRestrictionRuleMap { get; set; }
		
		/// <summary>
		/// A value that specifies whether IP rules are turned on.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class UpdateTemplatePermissionsPutBody
	{
		
		/// <summary>
		/// A list of resource permissions to be granted on the template. 
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// A list of resource permissions to be revoked from the template. 
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class UpdateThemePermissionsPutBody
	{
		
		/// <summary>
		/// A list of resource permissions to be granted for the theme.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// A list of resource permissions to be revoked from the theme.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class UpdateTopicPermissionsPutBody
	{
		
		/// <summary>
		/// The resource permissions that you want to grant to the topic.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] GrantPermissions { get; set; }
		
		/// <summary>
		/// The resource permissions that you want to revoke from the topic.
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public ResourcePermission[] RevokePermissions { get; set; }
	}
	
	public class GenerateEmbedUrlForAnonymousUserPostBody
	{
		
		/// <summary>
		/// How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
		/// Minimum: 15
		/// Maximum: 600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(15, 600)]
		public System.Nullable<System.Int32> SessionLifetimeInMinutes { get; set; }
		
		/// <summary>
		/// The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.
		/// Required
		/// Max length: 64
		/// Pattern: ^[a-zA-Z0-9._-]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9._-]*$")]
		public string Namespace { get; set; }
		
		/// <summary>
		/// <p>The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code> parameter so that session tags can be used to provide row-level security.</p> <p>These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public SessionTag[] SessionTags { get; set; }
		
		/// <summary>
		/// The Amazon Resource Names (ARNs) for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code> embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view. Currently, you can pass up to 25 dashboard ARNs in each API call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AuthorizedResourceArns { get; set; }
		
		/// <summary>
		/// The type of experience you want to embed. For anonymous users, you can embed Amazon QuickSight dashboards.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GenerateEmbedUrlForAnonymousUserPostBodyExperienceConfiguration ExperienceConfiguration { get; set; }
		
		/// <summary>
		/// <p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowedDomains { get; set; }
	}
	
	public class GenerateEmbedUrlForAnonymousUserPostBodyExperienceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserDashboardEmbeddingConfiguration Dashboard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserDashboardVisualEmbeddingConfiguration DashboardVisual { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnonymousUserQSearchBarEmbeddingConfiguration QSearchBar { get; set; }
	}
	
	public class GenerateEmbedUrlForRegisteredUserPostBody
	{
		
		/// <summary>
		/// How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
		/// Minimum: 15
		/// Maximum: 600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(15, 600)]
		public System.Nullable<System.Int32> SessionLifetimeInMinutes { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name for the registered user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UserArn { get; set; }
		
		/// <summary>
		/// <p>The type of experience you want to embed. For registered users, you can embed Amazon QuickSight dashboards or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuration.</p> </note>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GenerateEmbedUrlForRegisteredUserPostBodyExperienceConfiguration ExperienceConfiguration { get; set; }
		
		/// <summary>
		/// <p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowedDomains { get; set; }
	}
	
	public class GenerateEmbedUrlForRegisteredUserPostBodyExperienceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserDashboardEmbeddingConfiguration Dashboard { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserQuickSightConsoleEmbeddingConfiguration QuickSightConsole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserQSearchBarEmbeddingConfiguration QSearchBar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegisteredUserDashboardVisualEmbeddingConfiguration DashboardVisual { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 200
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 200)]
		public Tag[] Tags { get; set; }
	}
	
	public class RegisterUserPostBody
	{
		
		/// <summary>
		/// <p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		/// <summary>
		/// The email address of the user that you want to register.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// <p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserRole UserRole { get; set; }
		
		/// <summary>
		/// The ARN of the IAM user or role that you are registering with Amazon QuickSight. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string IamArn { get; set; }
		
		/// <summary>
		/// You need to use this parameter only when you register one or more users using an assumed IAM role. You don't need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html"> <code>assume-role</code> </a> in the <i>CLI Reference.</i> 
		/// Min length: 2
		/// Max length: 64
		/// Pattern: [\w+=.@-]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(2, 64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w+=.@-]*")]
		public string SessionName { get; set; }
		
		/// <summary>
		/// The Amazon QuickSight user name that you want to create for the user you are registering.
		/// Min length: 1
		/// Pattern: [\u0020-\u00FF]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\u00FF]+")]
		public string UserName { get; set; }
		
		/// <summary>
		/// <p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>To add custom permissions to an existing user, use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> instead.</p> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>
		/// Min length: 1
		/// Max length: 64
		/// Pattern: ^[a-zA-Z0-9+=,.@_-]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9+=,.@_-]+$")]
		public string CustomPermissionsName { get; set; }
		
		/// <summary>
		/// <p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginFederationProviderType { get; set; }
		
		/// <summary>
		/// The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CustomFederationProviderUrl { get; set; }
		
		/// <summary>
		/// The identity ID for a user in the external login provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ExternalLoginId { get; set; }
	}
	
	public class SearchAnalysesPostBody
	{
		
		/// <summary>
		/// The structure for the search filters that you want to apply to your search. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 1)]
		public AnalysisSearchFilter[] Filters { get; set; }
		
		/// <summary>
		/// A pagination token that can be used in a subsequent request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class SearchDashboardsPostBody
	{
		
		/// <summary>
		/// The filters to apply to the search. Currently, you can search only by user name, for example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code> 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 1)]
		public DashboardSearchFilter[] Filters { get; set; }
		
		/// <summary>
		/// The token for the next set of results, or null if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class SearchDataSetsPostBody
	{
		
		/// <summary>
		/// The filters to apply to the search.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 1)]
		public DataSetSearchFilter[] Filters { get; set; }
		
		/// <summary>
		/// A pagination token that can be used in a subsequent request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class SearchDataSourcesPostBody
	{
		
		/// <summary>
		/// The filters to apply to the search.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 1)]
		public DataSourceSearchFilter[] Filters { get; set; }
		
		/// <summary>
		/// A pagination token that can be used in a subsequent request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class SearchFoldersPostBody
	{
		
		/// <summary>
		/// The filters to apply to the search. Currently, you can search only by the parent folder ARN. For example, <code>"Filters": [ { "Name": "PARENT_FOLDER_ARN", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:folder/folderId" } ]</code>.
		/// Required
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public FolderSearchFilter[] Filters { get; set; }
		
		/// <summary>
		/// The token for the next set of results, or null if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class SearchGroupsPostBody
	{
		
		/// <summary>
		/// The structure for the search filters that you want to apply to your search.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 1)]
		public GroupSearchFilter[] Filters { get; set; }
	}
	
	public class StartAssetBundleExportJobPostBody
	{
		
		/// <summary>
		/// The ID of the job. This ID is unique while the job is running. After the job is completed, you can reuse this ID for another job.
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: [\w\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\-]+")]
		public string AssetBundleExportJobId { get; set; }
		
		/// <summary>
		/// <p>An array of resource ARNs to export. The following resources are supported.</p> <ul> <li> <p> <code>Analysis</code> </p> </li> <li> <p> <code>Dashboard</code> </p> </li> <li> <p> <code>DataSet</code> </p> </li> <li> <p> <code>DataSource</code> </p> </li> <li> <p> <code>RefreshSchedule</code> </p> </li> <li> <p> <code>Theme</code> </p> </li> <li> <p> <code>VPCConnection</code> </p> </li> </ul> <p>The API caller must have the necessary permissions in their IAM role to access each resource before the resources can be exported.</p>
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		public string[] ResourceArns { get; set; }
		
		/// <summary>
		/// A Boolean that determines whether all dependencies of each resource ARN are recursively exported with the job. For example, say you provided a Dashboard ARN to the <code>ResourceArns</code> parameter. If you set <code>IncludeAllDependencies</code> to <code>TRUE</code>, any theme, dataset, and data source resource that is a dependency of the dashboard is also exported.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAllDependencies { get; set; }
		
		/// <summary>
		/// The export data format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportFormat ExportFormat { get; set; }
		
		/// <summary>
		/// An optional collection of CloudFormation property configurations that control how the export job is generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StartAssetBundleExportJobPostBodyCloudFormationOverridePropertyConfiguration CloudFormationOverridePropertyConfiguration { get; set; }
	}
	
	public class StartAssetBundleExportJobPostBodyCloudFormationOverridePropertyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobResourceIdOverrideConfiguration ResourceIdOverrideConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobVPCConnectionOverrideProperties[] VPCConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobRefreshScheduleOverrideProperties[] RefreshSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDataSourceOverrideProperties[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDataSetOverrideProperties[] DataSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobThemeOverrideProperties[] Themes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobAnalysisOverrideProperties[] Analyses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleExportJobDashboardOverrideProperties[] Dashboards { get; set; }
	}
	
	public class StartAssetBundleImportJobPostBody
	{
		
		/// <summary>
		/// The ID of the job. This ID is unique while the job is running. After the job is completed, you can reuse this ID for another job.
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: [\w\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\-]+")]
		public string AssetBundleImportJobId { get; set; }
		
		/// <summary>
		/// The source of the asset bundle zip file that contains the data that you want to import. The file must be in <code>QUICKSIGHT_JSON</code> format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartAssetBundleImportJobPostBodyAssetBundleImportSource AssetBundleImportSource { get; set; }
		
		/// <summary>
		/// A list of overrides that modify the asset bundle resource configuration before the resource is imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StartAssetBundleImportJobPostBodyOverrideParameters OverrideParameters { get; set; }
		
		/// <summary>
		/// <p>The failure action for the import job.</p> <p>If you choose <code>ROLLBACK</code>, failed import jobs will attempt to undo any asset changes caused by the failed job.</p> <p>If you choose <code>DO_NOTHING</code>, failed import jobs will not attempt to roll back any asset changes caused by the failed job, possibly keeping the Amazon QuickSight account in an inconsistent state.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportFailureAction FailureAction { get; set; }
	}
	
	public class StartAssetBundleImportJobPostBodyAssetBundleImportSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
	}
	
	public class StartAssetBundleImportJobPostBodyOverrideParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobResourceIdOverrideConfiguration ResourceIdOverrideConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobVPCConnectionOverrideParameters[] VPCConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobRefreshScheduleOverrideParameters[] RefreshSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDataSourceOverrideParameters[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDataSetOverrideParameters[] DataSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobThemeOverrideParameters[] Themes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobAnalysisOverrideParameters[] Analyses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssetBundleImportJobDashboardOverrideParameters[] Dashboards { get; set; }
	}
	
	public class StartDashboardSnapshotJobPostBody
	{
		
		/// <summary>
		/// An ID for the dashboard snapshot job. This ID is unique to the dashboard while the job is running. This ID can be used to poll the status of a job with a <code>DescribeDashboardSnapshotJob</code> while the job runs. You can reuse this ID for another job 24 hours after the current job is completed.
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: [\w\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\-]+")]
		public string SnapshotJobId { get; set; }
		
		/// <summary>
		/// A structure that contains information about the users that the dashboard snapshot is generated for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartDashboardSnapshotJobPostBodyUserConfiguration UserConfiguration { get; set; }
		
		/// <summary>
		/// Describes the configuration of the dashboard snapshot.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartDashboardSnapshotJobPostBodySnapshotConfiguration SnapshotConfiguration { get; set; }
	}
	
	public class StartDashboardSnapshotJobPostBodyUserConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotAnonymousUser[] AnonymousUsers { get; set; }
	}
	
	public class StartDashboardSnapshotJobPostBodySnapshotConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotFileGroup[] FileGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDestinationConfiguration DestinationConfiguration { get; set; }
		
		/// <summary>
		/// A list of Amazon QuickSight parameters and the list's override values.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
	}
	
	public class UpdatePublicSharingSettingsPutBody
	{
		
		/// <summary>
		/// A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PublicSharingEnabled { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

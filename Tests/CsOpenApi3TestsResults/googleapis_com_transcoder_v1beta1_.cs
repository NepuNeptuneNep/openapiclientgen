//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Ad break.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdBreak
	{
		
		/// <summary>
		/// Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
	}
	
	/// <summary>
	/// Configuration for AES-128 encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Aes128Encryption
	{
		
		/// <summary>
		/// Required. URI of the key delivery service. This URI is inserted into the M3U8 header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyUri")]
		public string KeyUri { get; set; }
	}
	
	/// <summary>
	/// Animation types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Animation
	{
		
		/// <summary>
		/// End previous overlay animation from the video. Without AnimationEnd, the overlay object will keep the state of previous animation until the end of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="animationEnd")]
		public AnimationEnd AnimationEnd { get; set; }
		
		/// <summary>
		/// Display overlay object with fade animation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="animationFade")]
		public AnimationFade AnimationFade { get; set; }
		
		/// <summary>
		/// Display static overlay object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="animationStatic")]
		public AnimationStatic AnimationStatic { get; set; }
	}
	
	/// <summary>
	/// End previous overlay animation from the video. Without AnimationEnd, the overlay object will keep the state of previous animation until the end of the video.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnimationEnd
	{
		
		/// <summary>
		/// The time to end overlay object, in seconds. Default: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
	}
	
	/// <summary>
	/// Display overlay object with fade animation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnimationFade
	{
		
		/// <summary>
		/// The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimeOffset")]
		public string EndTimeOffset { get; set; }
		
		/// <summary>
		/// Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fadeType")]
		public System.Nullable<AnimationFadeFadeType> FadeType { get; set; }
		
		/// <summary>
		/// The time to start the fade animation, in seconds. Default: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
		
		/// <summary>
		/// 2D normalized coordinates. Default: `{0.0, 0.0}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xy")]
		public NormalizedCoordinate Xy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnimationFadeFadeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FADE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FADE_IN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FADE_OUT = 2,
	}
	
	/// <summary>
	/// 2D normalized coordinates. Default: `{0.0, 0.0}`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NormalizedCoordinate
	{
		
		/// <summary>
		/// Normalized x coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		public System.Nullable<System.Double> X { get; set; }
		
		/// <summary>
		/// Normalized y coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		public System.Nullable<System.Double> Y { get; set; }
	}
	
	/// <summary>
	/// Display static overlay object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnimationStatic
	{
		
		/// <summary>
		/// The time to start displaying the overlay object, in seconds. Default: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
		
		/// <summary>
		/// 2D normalized coordinates. Default: `{0.0, 0.0}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xy")]
		public NormalizedCoordinate Xy { get; set; }
	}
	
	/// <summary>
	/// Audio preprocessing configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Audio
	{
		
		/// <summary>
		/// Enable boosting high frequency components. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="highBoost")]
		public System.Nullable<System.Boolean> HighBoost { get; set; }
		
		/// <summary>
		/// Enable boosting low frequency components. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowBoost")]
		public System.Nullable<System.Boolean> LowBoost { get; set; }
		
		/// <summary>
		/// Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lufs")]
		public System.Nullable<System.Double> Lufs { get; set; }
	}
	
	/// <summary>
	/// The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AudioAtom
	{
		
		/// <summary>
		/// List of `Channel`s for this audio stream. for in-depth explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channels")]
		public AudioChannel[] Channels { get; set; }
		
		/// <summary>
		/// Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// The audio channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AudioChannel
	{
		
		/// <summary>
		/// List of `Job.inputs` for this audio channel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public AudioChannelInput[] Inputs { get; set; }
	}
	
	/// <summary>
	/// Identifies which input file, track, and channel should be used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AudioChannelInput
	{
		
		/// <summary>
		/// Required. The zero-based index of the channel in the input file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel")]
		public System.Nullable<System.Int32> Channel { get; set; }
		
		/// <summary>
		/// Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gainDb")]
		public System.Nullable<System.Double> GainDb { get; set; }
		
		/// <summary>
		/// Required. The `Input.key` that identifies the input file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Required. The zero-based index of the track in the input file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track")]
		public System.Nullable<System.Int32> Track { get; set; }
	}
	
	/// <summary>
	/// Audio stream resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AudioStream
	{
		
		/// <summary>
		/// Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bitrateBps")]
		public System.Nullable<System.Int32> BitrateBps { get; set; }
		
		/// <summary>
		/// Number of audio channels. Must be between 1 and 6. The default is 2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelCount")]
		public System.Nullable<System.Int32> ChannelCount { get; set; }
		
		/// <summary>
		/// A list of channel names specifying layout of the audio channels. This only affects the metadata embedded in the container headers, if supported by the specified format. The default is `["fl", "fr"]`. Supported channel names: - 'fl' - Front left channel - 'fr' - Front right channel - 'sl' - Side left channel - 'sr' - Side right channel - 'fc' - Front center channel - 'lfe' - Low frequency
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelLayout")]
		public string[] ChannelLayout { get; set; }
		
		/// <summary>
		/// The codec for this audio stream. The default is `"aac"`. Supported audio codecs: - 'aac' - 'aac-he' - 'aac-he-v2' - 'mp3' - 'ac3' - 'eac3'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="codec")]
		public string Codec { get; set; }
		
		/// <summary>
		/// The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mapping")]
		public AudioAtom[] Mapping { get; set; }
		
		/// <summary>
		/// The audio sample rate in Hertz. The default is 48000 Hertz.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleRateHertz")]
		public System.Nullable<System.Int32> SampleRateHertz { get; set; }
	}
	
	/// <summary>
	/// Color preprocessing configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Color
	{
		
		/// <summary>
		/// Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brightness")]
		public System.Nullable<System.Double> Brightness { get; set; }
		
		/// <summary>
		/// Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contrast")]
		public System.Nullable<System.Double> Contrast { get; set; }
		
		/// <summary>
		/// Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturation")]
		public System.Nullable<System.Double> Saturation { get; set; }
	}
	
	/// <summary>
	/// Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Crop
	{
		
		/// <summary>
		/// The number of pixels to crop from the bottom. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bottomPixels")]
		public System.Nullable<System.Int32> BottomPixels { get; set; }
		
		/// <summary>
		/// The number of pixels to crop from the left. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leftPixels")]
		public System.Nullable<System.Int32> LeftPixels { get; set; }
		
		/// <summary>
		/// The number of pixels to crop from the right. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rightPixels")]
		public System.Nullable<System.Int32> RightPixels { get; set; }
		
		/// <summary>
		/// The number of pixels to crop from the top. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topPixels")]
		public System.Nullable<System.Int32> TopPixels { get; set; }
	}
	
	/// <summary>
	/// Deblock preprocessing configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Deblock
	{
		
		/// <summary>
		/// Enable deblocker. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Set strength of the deblocker. Enter a value between 0 and 1. The higher the value, the stronger the block removal. 0 is no deblocking. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strength")]
		public System.Nullable<System.Double> Strength { get; set; }
	}
	
	/// <summary>
	/// Denoise preprocessing configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Denoise
	{
		
		/// <summary>
		/// Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strength")]
		public System.Nullable<System.Double> Strength { get; set; }
		
		/// <summary>
		/// Set the denoiser mode. The default is `"standard"`. Supported denoiser modes: - 'standard' - 'grain'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tune")]
		public string Tune { get; set; }
	}
	
	/// <summary>
	/// Edit atom.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EditAtom
	{
		
		/// <summary>
		/// End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimeOffset")]
		public string EndTimeOffset { get; set; }
		
		/// <summary>
		/// List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public string[] Inputs { get; set; }
		
		/// <summary>
		/// A unique key for this atom. Must be specified when using advanced mapping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
	}
	
	/// <summary>
	/// Encoding of an input file such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ElementaryStream
	{
		
		/// <summary>
		/// Audio stream resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audioStream")]
		public AudioStream AudioStream { get; set; }
		
		/// <summary>
		/// A unique key for this elementary stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Encoding of a text stream. For example, closed captions or subtitles.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textStream")]
		public TextStream TextStream { get; set; }
		
		/// <summary>
		/// Video stream resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoStream")]
		public VideoStream VideoStream { get; set; }
	}
	
	/// <summary>
	/// Encoding of a text stream. For example, closed captions or subtitles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextStream
	{
		
		/// <summary>
		/// The codec for this text stream. The default is `"webvtt"`. Supported text codecs: - 'srt' - 'ttml' - 'cea608' - 'cea708' - 'webvtt'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="codec")]
		public string Codec { get; set; }
		
		/// <summary>
		/// Required. The BCP-47 language code, such as `"en-US"` or `"sr-Latn"`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mapping")]
		public TextAtom[] Mapping { get; set; }
	}
	
	/// <summary>
	/// The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextAtom
	{
		
		/// <summary>
		/// List of `Job.inputs` that should be embedded in this atom. Only one input is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public TextInput[] Inputs { get; set; }
		
		/// <summary>
		/// Required. The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Identifies which input file and track should be used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextInput
	{
		
		/// <summary>
		/// Required. The `Input.key` that identifies the input file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Required. The zero-based index of the track in the input file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track")]
		public System.Nullable<System.Int32> Track { get; set; }
	}
	
	/// <summary>
	/// Video stream resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VideoStream
	{
		
		/// <summary>
		/// Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowOpenGop")]
		public System.Nullable<System.Boolean> AllowOpenGop { get; set; }
		
		/// <summary>
		/// Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aqStrength")]
		public System.Nullable<System.Double> AqStrength { get; set; }
		
		/// <summary>
		/// The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bFrameCount")]
		public System.Nullable<System.Int32> BFrameCount { get; set; }
		
		/// <summary>
		/// Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bPyramid")]
		public System.Nullable<System.Boolean> BPyramid { get; set; }
		
		/// <summary>
		/// Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value for H264/H265 is 800,000,000. The maximum value for VP9 is 480,000,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bitrateBps")]
		public System.Nullable<System.Int32> BitrateBps { get; set; }
		
		/// <summary>
		/// Codec type. The following codecs are supported: * `h264` (default) * `h265` * `vp9`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="codec")]
		public string Codec { get; set; }
		
		/// <summary>
		/// Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crfLevel")]
		public System.Nullable<System.Int32> CrfLevel { get; set; }
		
		/// <summary>
		/// Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `"vbr"`. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableTwoPass")]
		public System.Nullable<System.Boolean> EnableTwoPass { get; set; }
		
		/// <summary>
		/// The entropy coder to use. The default is `"cabac"`. Supported entropy coders: - 'cavlc' - 'cabac'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entropyCoder")]
		public string EntropyCoder { get; set; }
		
		/// <summary>
		/// Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculate frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frameRate")]
		public System.Nullable<System.Double> FrameRate { get; set; }
		
		/// <summary>
		/// Select the GOP size based on the specified duration. The default is `"3s"`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gopDuration")]
		public string GopDuration { get; set; }
		
		/// <summary>
		/// Select the GOP size based on the specified frame count. Must be greater than zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gopFrameCount")]
		public System.Nullable<System.Int32> GopFrameCount { get; set; }
		
		/// <summary>
		/// The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="heightPixels")]
		public System.Nullable<System.Int32> HeightPixels { get; set; }
		
		/// <summary>
		/// Pixel format to use. The default is `"yuv420p"`. Supported pixel formats: - 'yuv420p' pixel format. - 'yuv422p' pixel format. - 'yuv444p' pixel format. - 'yuv420p10' 10-bit HDR pixel format. - 'yuv422p10' 10-bit HDR pixel format. - 'yuv444p10' 10-bit HDR pixel format. - 'yuv420p12' 12-bit HDR pixel format. - 'yuv422p12' 12-bit HDR pixel format. - 'yuv444p12' 12-bit HDR pixel format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pixelFormat")]
		public string PixelFormat { get; set; }
		
		/// <summary>
		/// Enforces the specified codec preset. The default is `veryfast`. The available options are FFmpeg-compatible. Note that certain values for this field may cause the transcoder to override other fields you set in the `VideoStream` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preset")]
		public string Preset { get; set; }
		
		/// <summary>
		/// Enforces the specified codec profile. The following profiles are supported: * `baseline` * `main` * `high` (default) The available options are FFmpeg-compatible. Note that certain values for this field may cause the transcoder to override other fields you set in the `VideoStream` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public string Profile { get; set; }
		
		/// <summary>
		/// Specify the `rate_control_mode`. The default is `"vbr"`. Supported rate control modes: - 'vbr' - variable bitrate - 'crf' - constant rate factor
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rateControlMode")]
		public string RateControlMode { get; set; }
		
		/// <summary>
		/// Enforces the specified codec tune. The available options are FFmpeg-compatible. Note that certain values for this field may cause the transcoder to override other fields you set in the `VideoStream` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tune")]
		public string Tune { get; set; }
		
		/// <summary>
		/// Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vbvFullnessBits")]
		public System.Nullable<System.Int32> VbvFullnessBits { get; set; }
		
		/// <summary>
		/// Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vbvSizeBits")]
		public System.Nullable<System.Int32> VbvSizeBits { get; set; }
		
		/// <summary>
		/// The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="widthPixels")]
		public System.Nullable<System.Int32> WidthPixels { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// Encryption settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Encryption
	{
		
		/// <summary>
		/// Configuration for AES-128 encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aes128")]
		public Aes128Encryption Aes128 { get; set; }
		
		/// <summary>
		/// Required. 128 bit Initialization Vector (IV) represented as lowercase hexadecimal digits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iv")]
		public string Iv { get; set; }
		
		/// <summary>
		/// Required. 128 bit encryption key represented as lowercase hexadecimal digits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Configuration for MPEG Common Encryption (MPEG-CENC).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mpegCenc")]
		public MpegCommonEncryption MpegCenc { get; set; }
		
		/// <summary>
		/// Configuration for SAMPLE-AES encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleAes")]
		public SampleAesEncryption SampleAes { get; set; }
	}
	
	/// <summary>
	/// Configuration for MPEG Common Encryption (MPEG-CENC).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MpegCommonEncryption
	{
		
		/// <summary>
		/// Required. 128 bit Key ID represented as lowercase hexadecimal digits for use with common encryption.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyId")]
		public string KeyId { get; set; }
		
		/// <summary>
		/// Required. Specify the encryption scheme. Supported encryption schemes: - 'cenc' - 'cbcs'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheme")]
		public string Scheme { get; set; }
	}
	
	/// <summary>
	/// Configuration for SAMPLE-AES encryption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SampleAesEncryption
	{
		
		/// <summary>
		/// Required. URI of the key delivery service. This URI is inserted into the M3U8 header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyUri")]
		public string KeyUri { get; set; }
	}
	
	/// <summary>
	/// Additional information about the reasons for the failure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailureDetail
	{
		
		/// <summary>
		/// A description of the failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Overlaid jpeg image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Image
	{
		
		/// <summary>
		/// Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alpha")]
		public System.Nullable<System.Double> Alpha { get; set; }
		
		/// <summary>
		/// 2D normalized coordinates. Default: `{0.0, 0.0}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resolution")]
		public NormalizedCoordinate Resolution { get; set; }
		
		/// <summary>
		/// Required. URI of the JPEG image in Cloud Storage. For example, `gs://bucket/inputs/image.jpeg`. JPEG is the only supported image type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Input asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Input
	{
		
		/// <summary>
		/// A unique key for this input. Must be specified when using advanced mapping and edit lists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Preprocessing configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preprocessingConfig")]
		public PreprocessingConfig PreprocessingConfig { get; set; }
		
		/// <summary>
		/// URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value will be populated from `Job.input_uri`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Preprocessing configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PreprocessingConfig
	{
		
		/// <summary>
		/// Audio preprocessing configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audio")]
		public Audio Audio { get; set; }
		
		/// <summary>
		/// Color preprocessing configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="color")]
		public Color Color { get; set; }
		
		/// <summary>
		/// Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crop")]
		public Crop Crop { get; set; }
		
		/// <summary>
		/// Deblock preprocessing configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deblock")]
		public Deblock Deblock { get; set; }
		
		/// <summary>
		/// Denoise preprocessing configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="denoise")]
		public Denoise Denoise { get; set; }
		
		/// <summary>
		/// Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pad")]
		public Pad Pad { get; set; }
	}
	
	/// <summary>
	/// Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pad
	{
		
		/// <summary>
		/// The number of pixels to add to the bottom. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bottomPixels")]
		public System.Nullable<System.Int32> BottomPixels { get; set; }
		
		/// <summary>
		/// The number of pixels to add to the left. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leftPixels")]
		public System.Nullable<System.Int32> LeftPixels { get; set; }
		
		/// <summary>
		/// The number of pixels to add to the right. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rightPixels")]
		public System.Nullable<System.Int32> RightPixels { get; set; }
		
		/// <summary>
		/// The number of pixels to add to the top. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topPixels")]
		public System.Nullable<System.Int32> TopPixels { get; set; }
	}
	
	/// <summary>
	/// Transcoding job resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Job
	{
		
		/// <summary>
		/// Job configuration
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public JobConfig Config { get; set; }
		
		/// <summary>
		/// Output only. The time the job was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the transcoding finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. List of failure details. This property may contain additional information about the failure when `failure_reason` is present. *Note*: This feature is not yet available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureDetails")]
		public FailureDetail[] FailureDetails { get; set; }
		
		/// <summary>
		/// Output only. A description of the reason for the failure. This property is always present when `state` is `FAILED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputUri")]
		public string InputUri { get; set; }
		
		/// <summary>
		/// The resource name of the job. Format: `projects/{project}/locations/{location}/jobs/{job}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The origin URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originUri")]
		public OriginUri OriginUri { get; set; }
		
		/// <summary>
		/// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputUri")]
		public string OutputUri { get; set; }
		
		/// <summary>
		/// Specify the priority of the job. Enter a value between 0 and 100, where 0 is the lowest priority and 100 is the highest priority. The default is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// Estimated fractional progress for each step, from `0` to `1`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="progress")]
		public Progress Progress { get; set; }
		
		/// <summary>
		/// Output only. The time the transcoding started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The current state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<JobState> State { get; set; }
		
		/// <summary>
		/// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`. Preset Transcoder templates: - `preset/{preset_id}` - User defined JobTemplate: `{job_template_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateId")]
		public string TemplateId { get; set; }
		
		/// <summary>
		/// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ttlAfterCompletionDays")]
		public System.Nullable<System.Int32> TtlAfterCompletionDays { get; set; }
	}
	
	/// <summary>
	/// Job configuration
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobConfig
	{
		
		/// <summary>
		/// List of ad breaks. Specifies where to insert ad break tags in the output manifests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adBreaks")]
		public AdBreak[] AdBreaks { get; set; }
		
		/// <summary>
		/// List of `Edit atom`s. Defines the ultimate timeline of the resulting file or manifest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="editList")]
		public EditAtom[] EditList { get; set; }
		
		/// <summary>
		/// List of elementary streams.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="elementaryStreams")]
		public ElementaryStream[] ElementaryStreams { get; set; }
		
		/// <summary>
		/// List of input assets stored in Cloud Storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public Input[] Inputs { get; set; }
		
		/// <summary>
		/// List of output manifests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifests")]
		public Manifest[] Manifests { get; set; }
		
		/// <summary>
		/// List of multiplexing settings for output streams.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="muxStreams")]
		public MuxStream[] MuxStreams { get; set; }
		
		/// <summary>
		/// Location of output file(s) in a Cloud Storage bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="output")]
		public Output Output { get; set; }
		
		/// <summary>
		/// List of overlays on the output video, in descending Z-order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overlays")]
		public Overlay[] Overlays { get; set; }
		
		/// <summary>
		/// A Pub/Sub destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pubsubDestination")]
		public PubsubDestination PubsubDestination { get; set; }
		
		/// <summary>
		/// List of output sprite sheets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spriteSheets")]
		public SpriteSheet[] SpriteSheets { get; set; }
	}
	
	/// <summary>
	/// Manifest configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Manifest
	{
		
		/// <summary>
		/// The name of the generated file. The default is `"manifest"` with the extension suffix corresponding to the `Manifest.type`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		/// <summary>
		/// Required. List of user given `MuxStream.key`s that should appear in this manifest. When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key` and `.m3u8` extension is generated for each element of the `Manifest.mux_streams`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="muxStreams")]
		public string[] MuxStreams { get; set; }
		
		/// <summary>
		/// Required. Type of the manifest, can be "HLS" or "DASH".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ManifestType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ManifestType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANIFEST_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HLS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DASH = 2,
	}
	
	/// <summary>
	/// Multiplexing settings for output stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MuxStream
	{
		
		/// <summary>
		/// The container format. The default is `"mp4"` Supported container formats: - 'ts' - 'fmp4'- the corresponding file extension is `".m4s"` - 'mp4' - 'vtt'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="container")]
		public string Container { get; set; }
		
		/// <summary>
		/// List of `ElementaryStream.key`s multiplexed in this stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="elementaryStreams")]
		public string[] ElementaryStreams { get; set; }
		
		/// <summary>
		/// Encryption settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryption")]
		public Encryption Encryption { get; set; }
		
		/// <summary>
		/// The name of the generated file. The default is `MuxStream.key` with the extension suffix corresponding to the `MuxStream.container`. Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `"mux_stream0000000123.ts"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		/// <summary>
		/// A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key` with the `".m3u8"` extension suffix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Segment settings for `"ts"`, `"fmp4"` and `"vtt"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segmentSettings")]
		public SegmentSettings SegmentSettings { get; set; }
	}
	
	/// <summary>
	/// Segment settings for `"ts"`, `"fmp4"` and `"vtt"`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentSettings
	{
		
		/// <summary>
		/// Required. Create an individual segment file. The default is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualSegments")]
		public System.Nullable<System.Boolean> IndividualSegments { get; set; }
		
		/// <summary>
		/// Duration of the segments in seconds. The default is `"6.0s"`. Note that `segmentDuration` must be greater than or equal to [`gopDuration`](#videostream), and `segmentDuration` must be divisible by [`gopDuration`](#videostream).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segmentDuration")]
		public string SegmentDuration { get; set; }
	}
	
	/// <summary>
	/// Location of output file(s) in a Cloud Storage bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Output
	{
		
		/// <summary>
		/// URI for the output file(s). For example, `gs://my-bucket/outputs/`. If empty the value is populated from `Job.output_uri`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Overlay configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Overlay
	{
		
		/// <summary>
		/// List of Animations. The list should be chronological, without any time overlap.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="animations")]
		public Animation[] Animations { get; set; }
		
		/// <summary>
		/// Overlaid jpeg image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public Image Image { get; set; }
	}
	
	/// <summary>
	/// A Pub/Sub destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PubsubDestination
	{
		
		/// <summary>
		/// The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topic")]
		public string Topic { get; set; }
	}
	
	/// <summary>
	/// Sprite sheet configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SpriteSheet
	{
		
		/// <summary>
		/// The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="columnCount")]
		public System.Nullable<System.Int32> ColumnCount { get; set; }
		
		/// <summary>
		/// End time in seconds, relative to the output file timeline. When `end_time_offset` is not specified, the sprites are generated until the end of the output file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimeOffset")]
		public string EndTimeOffset { get; set; }
		
		/// <summary>
		/// Required. File name prefix for the generated sprite sheets. Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `"sprite_sheet0000000123.jpeg"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePrefix")]
		public string FilePrefix { get; set; }
		
		/// <summary>
		/// Format type. The default is `"jpeg"`. Supported formats: - 'jpeg'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		/// <summary>
		/// Starting from `0s`, create sprites at regular intervals. Specify the interval value in seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interval")]
		public string Interval { get; set; }
		
		/// <summary>
		/// The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quality")]
		public System.Nullable<System.Int32> Quality { get; set; }
		
		/// <summary>
		/// The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rowCount")]
		public System.Nullable<System.Int32> RowCount { get; set; }
		
		/// <summary>
		/// Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_height_pixels field or the SpriteSheet.sprite_width_pixels field, but not both (the API will automatically calculate the missing field).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spriteHeightPixels")]
		public System.Nullable<System.Int32> SpriteHeightPixels { get; set; }
		
		/// <summary>
		/// Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_width_pixels field or the SpriteSheet.sprite_height_pixels field, but not both (the API will automatically calculate the missing field).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spriteWidthPixels")]
		public System.Nullable<System.Int32> SpriteWidthPixels { get; set; }
		
		/// <summary>
		/// Start time in seconds, relative to the output file timeline. Determines the first sprite to pick. The default is `0s`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
		
		/// <summary>
		/// Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCount")]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	/// <summary>
	/// The origin URI.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OriginUri
	{
		
		/// <summary>
		/// Dash manifest URI. If multiple Dash manifests are created, only the first one is listed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dash")]
		public string Dash { get; set; }
		
		/// <summary>
		/// HLS manifest URI per https://tools.ietf.org/html/rfc8216#section-4.3.4. If multiple HLS manifests are created, only the first one is listed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hls")]
		public string Hls { get; set; }
	}
	
	/// <summary>
	/// Estimated fractional progress for each step, from `0` to `1`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Progress
	{
		
		/// <summary>
		/// Estimated fractional progress for `analyzing` step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analyzed")]
		public System.Nullable<System.Double> Analyzed { get; set; }
		
		/// <summary>
		/// Estimated fractional progress for `encoding` step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encoded")]
		public System.Nullable<System.Double> Encoded { get; set; }
		
		/// <summary>
		/// Estimated fractional progress for `notifying` step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notified")]
		public System.Nullable<System.Double> Notified { get; set; }
		
		/// <summary>
		/// Estimated fractional progress for `uploading` step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uploaded")]
		public System.Nullable<System.Double> Uploaded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	/// <summary>
	/// Transcoding job template resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobTemplate
	{
		
		/// <summary>
		/// Job configuration
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public JobConfig Config { get; set; }
		
		/// <summary>
		/// The resource name of the job template. Format: `projects/{project}/locations/{location}/jobTemplates/{job_template}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response message for `TranscoderService.ListJobTemplates`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobTemplatesResponse
	{
		
		/// <summary>
		/// List of job templates in the specified region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTemplates")]
		public JobTemplate[] JobTemplates { get; set; }
		
		/// <summary>
		/// The pagination token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for `TranscoderService.ListJobs`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobsResponse
	{
		
		/// <summary>
		/// List of jobs in the specified region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public Job[] Jobs { get; set; }
		
		/// <summary>
		/// The pagination token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a job template.
		/// Transcoder_projects_locations_jobTemplates_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the job template to delete. `projects/{project}/locations/{location}/jobTemplates/{job_template}`</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Transcoder_projects_locations_jobTemplates_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Empty>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the job template data.
		/// Transcoder_projects_locations_jobTemplates_get v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the job template to retrieve. Format: `projects/{project}/locations/{location}/jobTemplates/{job_template}`</param>
		/// <returns>Successful response</returns>
		public async Task<JobTemplate> Transcoder_projects_locations_jobTemplates_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<JobTemplate>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists job templates in the specified region.
		/// Transcoder_projects_locations_jobTemplates_list v1beta1/{parent}/jobTemplates
		/// </summary>
		/// <param name="parent">Required. The parent location from which to retrieve the collection of job templates. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">The maximum number of items to return.</param>
		/// <param name="pageToken">The `next_page_token` value returned from a previous List request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<ListJobTemplatesResponse> Transcoder_projects_locations_jobTemplates_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobTemplates&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListJobTemplatesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a job template in the specified region.
		/// Transcoder_projects_locations_jobTemplates_create v1beta1/{parent}/jobTemplates
		/// </summary>
		/// <param name="parent">Required. The parent location to create this job template. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="jobTemplateId">Required. The ID to use for the job template, which will become the final component of the job template's resource name. This value should be 4-63 characters, and valid characters must match the regular expression `a-zA-Z*`.</param>
		/// <returns>Successful response</returns>
		public async Task<JobTemplate> Transcoder_projects_locations_jobTemplates_createAsync(string parent, string jobTemplateId, JobTemplate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobTemplates&jobTemplateId=" + (jobTemplateId==null? "" : System.Uri.EscapeDataString(jobTemplateId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<JobTemplate>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists jobs in the specified region.
		/// Transcoder_projects_locations_jobs_list v1beta1/{parent}/jobs
		/// </summary>
		/// <param name="parent">Required. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">The maximum number of items to return.</param>
		/// <param name="pageToken">The `next_page_token` value returned from a previous List request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<ListJobsResponse> Transcoder_projects_locations_jobs_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a job in the specified region.
		/// Transcoder_projects_locations_jobs_create v1beta1/{parent}/jobs
		/// </summary>
		/// <param name="parent">Required. The parent location to create and process this job. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<Job> Transcoder_projects_locations_jobs_createAsync(string parent, Job requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobs";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Job>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

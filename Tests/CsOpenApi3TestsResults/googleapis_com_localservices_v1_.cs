//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// An Account Report of a GLS account identified by their account id containing aggregate data gathered from a particular date range. Next ID: 18
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1AccountReport
	{
		
		/// <summary>
		/// Unique identifier of the GLS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Conatiner for aggregator specific information if lead is for an aggregator GLS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregatorInfo")]
		public GoogleAdsHomeservicesLocalservicesV1AggregatorInfo AggregatorInfo { get; set; }
		
		/// <summary>
		/// Average review rating score from 1-5 stars.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="averageFiveStarRating")]
		public System.Nullable<System.Double> AverageFiveStarRating { get; set; }
		
		/// <summary>
		/// Average weekly budget in the currency code of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="averageWeeklyBudget")]
		public System.Nullable<System.Double> AverageWeeklyBudget { get; set; }
		
		/// <summary>
		/// Business name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="businessName")]
		public string BusinessName { get; set; }
		
		/// <summary>
		/// Currency code of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Number of charged leads the account received in current specified period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentPeriodChargedLeads")]
		public string CurrentPeriodChargedLeads { get; set; }
		
		/// <summary>
		/// Number of connected phone calls (duration over 30s) in current specified period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentPeriodConnectedPhoneCalls")]
		public string CurrentPeriodConnectedPhoneCalls { get; set; }
		
		/// <summary>
		/// Number of phone calls in current specified period, including both connected and unconnected calls.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentPeriodPhoneCalls")]
		public string CurrentPeriodPhoneCalls { get; set; }
		
		/// <summary>
		/// Total cost of the account in current specified period in the account's specified currency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentPeriodTotalCost")]
		public System.Nullable<System.Double> CurrentPeriodTotalCost { get; set; }
		
		/// <summary>
		/// Number of impressions that customers have had in the past 2 days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="impressionsLastTwoDays")]
		public string ImpressionsLastTwoDays { get; set; }
		
		/// <summary>
		/// Phone lead responsiveness of the account for the past 90 days from current date. This is computed by taking the total number of connected calls from charged phone leads and dividing by the total number of calls received.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneLeadResponsiveness")]
		public System.Nullable<System.Double> PhoneLeadResponsiveness { get; set; }
		
		/// <summary>
		/// Number of charged leads the account received in previous specified period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousPeriodChargedLeads")]
		public string PreviousPeriodChargedLeads { get; set; }
		
		/// <summary>
		/// Number of connected phone calls (duration over 30s) in previous specified period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousPeriodConnectedPhoneCalls")]
		public string PreviousPeriodConnectedPhoneCalls { get; set; }
		
		/// <summary>
		/// Number of phone calls in previous specified period, including both connected and unconnected calls.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousPeriodPhoneCalls")]
		public string PreviousPeriodPhoneCalls { get; set; }
		
		/// <summary>
		/// Total cost of the account in previous specified period in the account's specified currency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousPeriodTotalCost")]
		public System.Nullable<System.Double> PreviousPeriodTotalCost { get; set; }
		
		/// <summary>
		/// Total number of reviews the account has up to current date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalReview")]
		public System.Nullable<System.Int32> TotalReview { get; set; }
	}
	
	/// <summary>
	/// Conatiner for aggregator specific information if lead is for an aggregator GLS account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1AggregatorInfo
	{
		
		/// <summary>
		/// Provider id (listed in aggregator system) which maps to a account id in GLS system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregatorProviderId")]
		public string AggregatorProviderId { get; set; }
	}
	
	/// <summary>
	/// Container for booking lead specific information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1BookingLead
	{
		
		/// <summary>
		/// Timestamp of when service is provided by advertiser.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bookingAppointmentTimestamp")]
		public string BookingAppointmentTimestamp { get; set; }
		
		/// <summary>
		/// Consumer email associated with the booking lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerEmail")]
		public string ConsumerEmail { get; set; }
		
		/// <summary>
		/// Consumer phone number associated with the booking lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerPhoneNumber")]
		public string ConsumerPhoneNumber { get; set; }
		
		/// <summary>
		/// Name of the customer who created the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerName")]
		public string CustomerName { get; set; }
		
		/// <summary>
		/// The job type of the specified lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobType")]
		public string JobType { get; set; }
	}
	
	/// <summary>
	/// A Detailed Lead Report of a lead identified by their lead id and contains consumer, account, monetization, and lead data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1DetailedLeadReport
	{
		
		/// <summary>
		/// Identifies account that received the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Conatiner for aggregator specific information if lead is for an aggregator GLS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregatorInfo")]
		public GoogleAdsHomeservicesLocalservicesV1AggregatorInfo AggregatorInfo { get; set; }
		
		/// <summary>
		/// Container for booking lead specific information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bookingLead")]
		public GoogleAdsHomeservicesLocalservicesV1BookingLead BookingLead { get; set; }
		
		/// <summary>
		/// Business name associated to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="businessName")]
		public string BusinessName { get; set; }
		
		/// <summary>
		/// Whether the lead has been charged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chargeStatus")]
		public System.Nullable<GoogleAdsHomeservicesLocalservicesV1DetailedLeadReportChargeStatus> ChargeStatus { get; set; }
		
		/// <summary>
		/// Currency code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Dispute status related to the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disputeStatus")]
		public string DisputeStatus { get; set; }
		
		/// <summary>
		/// Location of the associated account's home city.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="geo")]
		public string Geo { get; set; }
		
		/// <summary>
		/// Lead category (e.g. hvac, plumber)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leadCategory")]
		public string LeadCategory { get; set; }
		
		/// <summary>
		/// Timestamp of when the lead was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leadCreationTimestamp")]
		public string LeadCreationTimestamp { get; set; }
		
		/// <summary>
		/// Unique identifier of a Detailed Lead Report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leadId")]
		public string LeadId { get; set; }
		
		/// <summary>
		/// Price of the lead (available only after it has been charged).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leadPrice")]
		public System.Nullable<System.Double> LeadPrice { get; set; }
		
		/// <summary>
		/// Lead type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leadType")]
		public System.Nullable<GoogleAdsHomeservicesLocalservicesV1DetailedLeadReportLeadType> LeadType { get; set; }
		
		/// <summary>
		/// Container for message lead specific information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageLead")]
		public GoogleAdsHomeservicesLocalservicesV1MessageLead MessageLead { get; set; }
		
		/// <summary>
		/// Container for phone lead specific information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneLead")]
		public GoogleAdsHomeservicesLocalservicesV1PhoneLead PhoneLead { get; set; }
		
		/// <summary>
		/// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public GoogleTypeTimeZone Timezone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAdsHomeservicesLocalservicesV1DetailedLeadReportChargeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHARGE_STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHARGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHARGED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleAdsHomeservicesLocalservicesV1DetailedLeadReportLeadType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEAD_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MESSAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHONE_CALL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOKING = 3,
	}
	
	/// <summary>
	/// Container for message lead specific information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1MessageLead
	{
		
		/// <summary>
		/// Consumer phone number associated with the message lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerPhoneNumber")]
		public string ConsumerPhoneNumber { get; set; }
		
		/// <summary>
		/// Name of the customer who created the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerName")]
		public string CustomerName { get; set; }
		
		/// <summary>
		/// The job type of the specified lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobType")]
		public string JobType { get; set; }
		
		/// <summary>
		/// The postal code of the customer who created the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
	}
	
	/// <summary>
	/// Container for phone lead specific information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1PhoneLead
	{
		
		/// <summary>
		/// Timestamp of the phone call which resulted in a charged phone lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chargedCallTimestamp")]
		public string ChargedCallTimestamp { get; set; }
		
		/// <summary>
		/// Duration of the charged phone call in seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chargedConnectedCallDurationSeconds")]
		public string ChargedConnectedCallDurationSeconds { get; set; }
		
		/// <summary>
		/// Consumer phone number associated with the phone lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerPhoneNumber")]
		public string ConsumerPhoneNumber { get; set; }
	}
	
	/// <summary>
	/// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeTimeZone
	{
		
		/// <summary>
		/// IANA Time Zone Database time zone, e.g. "America/New_York".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. IANA Time Zone Database version number, e.g. "2019a".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// A page of the response received from the SearchAccountReports method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1SearchAccountReportsResponse
	{
		
		/// <summary>
		/// List of account reports which maps 1:1 to a particular linked GLS account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountReports")]
		public GoogleAdsHomeservicesLocalservicesV1AccountReport[] AccountReports { get; set; }
		
		/// <summary>
		/// Pagination token to retrieve the next page of results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A page of the response received from the SearchDetailedLeadReports method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAdsHomeservicesLocalservicesV1SearchDetailedLeadReportsResponse
	{
		
		/// <summary>
		/// List of detailed lead reports uniquely identified by external lead id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detailedLeadReports")]
		public GoogleAdsHomeservicesLocalservicesV1DetailedLeadReport[] DetailedLeadReports { get; set; }
		
		/// <summary>
		/// Pagination token to retrieve the next page of results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get account reports containing aggregate account data of all linked GLS accounts. Caller needs to provide their manager customer id and the associated auth credential that allows them read permissions on their linked accounts.
		/// Localservices_accountReports_search v1/accountReports:search
		/// </summary>
		/// <param name="endDate_day">Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.</param>
		/// <param name="endDate_month">Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.</param>
		/// <param name="endDate_year">Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.</param>
		/// <param name="pageSize">The maximum number of accounts to return. If the page size is unset, page size will default to 1000. Maximum page_size is 10000. Optional.</param>
		/// <param name="pageToken">The `next_page_token` value returned from a previous request to SearchAccountReports that indicates where listing should continue. Optional.</param>
		/// <param name="query">A query string for searching for account reports. Caller must provide a customer id of their MCC account with an associated Gaia Mint that allows read permission on their linked accounts. Search expressions are case insensitive. Example query: | Query | Description | |-------------------------|-----------------------------------------------| | manager_customer_id:123 | Get Account Report for Manager with id 123. | Required.</param>
		/// <param name="startDate_day">Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.</param>
		/// <param name="startDate_month">Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.</param>
		/// <param name="startDate_year">Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAdsHomeservicesLocalservicesV1SearchAccountReportsResponse> Localservices_accountReports_searchAsync(int endDate_day, int endDate_month, int endDate_year, int pageSize, string pageToken, string query, int startDate_day, int startDate_month, int startDate_year, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/accountReports:search?endDate.day="+endDate_day+"&endDate.month="+endDate_month+"&endDate.year="+endDate_year+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query))+"&startDate.day="+startDate_day+"&startDate.month="+startDate_month+"&startDate.year="+startDate_year;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleAdsHomeservicesLocalservicesV1SearchAccountReportsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get detailed lead reports containing leads that have been received by all linked GLS accounts. Caller needs to provide their manager customer id and the associated auth credential that allows them read permissions on their linked accounts.
		/// Localservices_detailedLeadReports_search v1/detailedLeadReports:search
		/// </summary>
		/// <param name="endDate_day">Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.</param>
		/// <param name="endDate_month">Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.</param>
		/// <param name="endDate_year">Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.</param>
		/// <param name="pageSize">The maximum number of accounts to return. If the page size is unset, page size will default to 1000. Maximum page_size is 10000. Optional.</param>
		/// <param name="pageToken">The `next_page_token` value returned from a previous request to SearchDetailedLeadReports that indicates where listing should continue. Optional.</param>
		/// <param name="query">A query string for searching for account reports. Caller must provide a customer id of their MCC account with an associated Gaia Mint that allows read permission on their linked accounts. Search expressions are case insensitive. Example query: | Query | Description | |-------------------------|-----------------------------------------------| | manager_customer_id:123 | Get Detailed Lead Report for Manager with id | | | 123. | Required.</param>
		/// <param name="startDate_day">Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.</param>
		/// <param name="startDate_month">Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.</param>
		/// <param name="startDate_year">Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleAdsHomeservicesLocalservicesV1SearchDetailedLeadReportsResponse> Localservices_detailedLeadReports_searchAsync(int endDate_day, int endDate_month, int endDate_year, int pageSize, string pageToken, string query, int startDate_day, int startDate_month, int startDate_year, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/detailedLeadReports:search?endDate.day="+endDate_day+"&endDate.month="+endDate_month+"&endDate.year="+endDate_year+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query))+"&startDate.day="+startDate_day+"&startDate.month="+startDate_month+"&startDate.year="+startDate_year;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleAdsHomeservicesLocalservicesV1SearchDetailedLeadReportsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

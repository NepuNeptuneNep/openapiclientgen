//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Specifies the use case of the transfer. Required for transfers on an ACH network.
	///
	///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
	///
	///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
	///
	///`"tel"` - Telephone-Initiated Entry
	///
	///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ACHClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ccd = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ppd = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tel = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		web = 3,
	}
	
	/// <summary>
	/// Information about the APR on the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APR
	{
		
		/// <summary>
		/// Annual Percentage Rate applied.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="apr_percentage")]
		public double Apr_percentage { get; set; }
		
		/// <summary>
		/// The type of balance to which the APR applies.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="apr_type")]
		public APRApr_type Apr_type { get; set; }
		
		/// <summary>
		/// Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="balance_subject_to_apr")]
		public System.Nullable<System.Double> Balance_subject_to_apr { get; set; }
		
		/// <summary>
		/// Amount of money charged due to interest from last statement.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interest_charge_amount")]
		public System.Nullable<System.Double> Interest_charge_amount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum APRApr_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		balance_transfer_apr = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cash_apr = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		purchase_apr = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		special = 3,
	}
	
	/// <summary>
	/// Allow or disallow product access by account. Unlisted (e.g. missing) accounts will be considered `new_accounts`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountAccess
	{
		
		/// <summary>
		/// Allow the application to access specific products on this account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_product_access")]
		public AccountProductAccessNullable Account_product_access { get; set; }
		
		/// <summary>
		/// Allow the application to see this account (and associated details, including balance) in the list of accounts  If unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorized")]
		public System.Nullable<System.Boolean> Authorized { get; set; }
		
		/// <summary>
		/// The unique account identifier for this account. This value must match that returned by the data access API for this account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unique_id")]
		public string Unique_id { get; set; }
	}
	
	/// <summary>
	/// Asset information about an account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountAssets : AccountBase
	{
		
		/// <summary>
		/// The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account. Only returned by Assets endpoints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_available")]
		public System.Nullable<System.Double> Days_available { get; set; }
		
		/// <summary>
		/// Calculated data about the historical balances on the account. Only returned by Assets endpoints and currently not supported by `brokerage` or `investment` accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="historical_balances")]
		public HistoricalBalance[] Historical_balances { get; set; }
		
		/// <summary>
		/// Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array. In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owners")]
		public Owner[] Owners { get; set; }
		
		/// <summary>
		/// How an asset is owned.
		///
		///`association`: Ownership by a corporation, partnership, or unincorporated association, including for-profit and not-for-profit organizations.
		///`individual`: Ownership by an individual.
		///`joint`: Joint ownership by multiple parties.
		///`trust`: Ownership by a revocable or irrevocable trust.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownership_type")]
		public OwnershipType Ownership_type { get; set; }
		
		/// <summary>
		/// Transaction history associated with the account. Only returned by Assets endpoints. Transaction history returned by endpoints such as `/transactions/get` or `/investments/transactions/get` will be returned in the top-level `transactions` field instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public AssetReportTransaction[] Transactions { get; set; }
	}
	
	/// <summary>
	/// An object representing a balance held by an account in the past
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistoricalBalance
	{
		
		/// <summary>
		/// The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.
		///
		///If the account has any pending transactions, historical balance amounts on or after the date of the earliest pending transaction may differ if retrieved in subsequent Asset Reports as a result of those pending transactions posting.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current")]
		public double Current { get; set; }
		
		/// <summary>
		/// The date of the calculated historical balance, in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.DateOnly Date { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// Data returned from the financial institution about the owner or owners of an account. Only the `names` array must be non-empty.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Owner
	{
		
		/// <summary>
		/// Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// A list of names associated with the account by the financial institution. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.
		///
		///If an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="names")]
		public string[] Names { get; set; }
		
		/// <summary>
		/// A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
	}
	
	/// <summary>
	/// A physical mailing address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
		
		/// <summary>
		/// Data about the components comprising an address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AddressData Data { get; set; }
		
		/// <summary>
		/// When `true`, identifies the address as the primary address on an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public System.Nullable<System.Boolean> Primary { get; set; }
	}
	
	/// <summary>
	/// Data about the components comprising an address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddressData
	{
		
		/// <summary>
		/// The full city name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.
		///Example: `"NC"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address
		///Example: `"564 Main Street, APT 15"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// An object representing an email address
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Email
	{
		
		/// <summary>
		/// The email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// When `true`, identifies the email address as the primary email on an account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public bool Primary { get; set; }
		
		/// <summary>
		/// The type of email account as described by the financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public EmailType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	/// <summary>
	/// A phone number
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumber
	{
		
		/// <summary>
		/// The phone number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// When `true`, identifies the phone number as the primary number on an account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public bool Primary { get; set; }
		
		/// <summary>
		/// The type of phone number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PhoneNumberType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mobile = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mobile1 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	/// <summary>
	/// A transaction on the asset report
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportTransaction : TransactionBase
	{
		
		/// <summary>
		/// Information describing the intent of the transaction. Most relevant for credit use cases, but not limited to such use cases. Please reach out to your account manager or sales representative if you would like to receive this field.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/credit-category-taxonomy.csv) for a full list of credit categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit_category")]
		public CreditCategory Credit_category { get; set; }
		
		/// <summary>
		/// The date on which the transaction took place, in IS0 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_transacted")]
		public string Date_transacted { get; set; }
	}
	
	/// <summary>
	/// Information describing the intent of the transaction. Most relevant for credit use cases, but not limited to such use cases. Please reach out to your account manager or sales representative if you would like to receive this field.
	///
	///See the [`taxonomy csv file`](https://plaid.com/documents/credit-category-taxonomy.csv) for a full list of credit categories.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditCategory
	{
		
		/// <summary>
		/// A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detailed")]
		public string Detailed { get; set; }
		
		/// <summary>
		/// A high level category that communicates the broad category of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public string Primary { get; set; }
	}
	
	/// <summary>
	/// A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountBalance
	{
		
		/// <summary>
		/// The amount of funds available to be withdrawn from the account, as determined by the financial institution.
		///
		///For `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.
		///
		///For `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.
		///
		///For `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the `available` balance is the total cash available to withdraw as presented by the institution.
		///
		///Note that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.
		///
		///Available balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.
		///
		///If `current` is `null` this field is guaranteed not to be `null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available")]
		public System.Nullable<System.Double> Available { get; set; }
		
		/// <summary>
		/// The total amount of funds in or owed by the account.
		///
		///For `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.
		///
		///For `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest.
		///
		///For `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the current balance is the total value of assets as presented by the institution.
		///
		///Note that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.
		///
		///When returned by `/accounts/balance/get`, this field may be `null`. When this happens, `available` is guaranteed not to be `null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current")]
		public System.Nullable<System.Double> Current { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time that the balance for the given account has been updated
		///
		///This is currently only provided when the `min_last_updated_datetime` is passed when calling `/accounts/balance/get` for `ins_128026` (Capital One).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_updated_datetime")]
		public System.Nullable<System.DateTimeOffset> Last_updated_datetime { get; set; }
		
		/// <summary>
		/// For `credit`-type accounts, this represents the credit limit.
		///
		///For `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.
		///
		///In North America, this field is typically only available for `credit`-type accounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Double> Limit { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// A single account at a financial institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountBase
	{
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.
		///
		///The `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.
		///
		///If an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.
		///
		///Like all Plaid identifiers, the `account_id` is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="balances")]
		public AccountBalance Balances { get; set; }
		
		/// <summary>
		/// The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mask")]
		public string Mask { get; set; }
		
		/// <summary>
		/// The name of the account, either assigned by the user or by the financial institution itself
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The official name of the account as given by the financial institution
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="official_name")]
		public string Official_name { get; set; }
		
		/// <summary>
		/// A unique and persistent identifier for accounts that can be used to trace multiple instances of the same account across different Items for depository accounts. This is currently an opt-in field and only supported for Chase Items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="persistent_account_id")]
		public string Persistent_account_id { get; set; }
		
		/// <summary>
		/// See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public System.Nullable<AccountBaseSubtype> Subtype { get; set; }
		
		/// <summary>
		/// `investment:` Investment account. In API versions 2018-05-22 and earlier, this type is called `brokerage` instead.
		///
		///`credit:` Credit card
		///
		///`depository:` Depository account
		///
		///`loan:` Loan account
		///
		///`other:` Non-specified account type
		///
		///See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AccountBaseType Type { get; set; }
		
		/// <summary>
		/// The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only.
		///
		///`pending_automatic_verification`: The Item is pending automatic verification
		///
		///`pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.
		///
		///`automatically_verified`: The Item has successfully been automatically verified	
		///
		///`manually_verified`: The Item has successfully been manually verified
		///
		///`verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.
		///
		///`verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.	
		///	
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public System.Nullable<AccountBaseVerification_status> Verification_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountBaseSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401a")]
		_401a = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401k")]
		_401k = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="403B")]
		_403B = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="457b")]
		_457b = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="529")]
		_529 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brokerage = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash isa")]
		cash_isa = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crypto exchange")]
		crypto_exchange = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="education savings account")]
		education_savings_account = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebt = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed annuity")]
		fixed_annuity = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gic = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="health reimbursement arrangement")]
		health_reimbursement_arrangement = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hsa = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		isa = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ira = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lif = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="life insurance")]
		life_insurance = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lira = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrif = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrsp = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-custodial wallet")]
		nonMinuscustodial_wallet = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-taxable brokerage account")]
		nonMinustaxable_brokerage_account = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other insurance")]
		other_insurance = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other annuity")]
		other_annuity = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prif = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rdsp = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resp = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rlif = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrif = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pension = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="profit sharing plan")]
		profit_sharing_plan = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		retirement = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		roth = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="roth 401k")]
		roth_401k = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrsp = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sep ira")]
		sep_ira = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="simple ira")]
		simple_ira = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sipp = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="stock plan")]
		stock_plan = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="thrift savings plan")]
		thrift_savings_plan = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tfsa = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trust = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ugma = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utma = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="variable annuity")]
		variable_annuity = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="credit card")]
		credit_card = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cd = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checking = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		savings = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="money market")]
		money_market = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prepaid = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		auto = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		commercial = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		construction = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consumer = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="home equity")]
		home_equity = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mortgage = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		overdraft = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="line of credit")]
		line_of_credit = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		student = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash management")]
		cash_management = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		keogh = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mutual fund")]
		mutual_fund = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recurring = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rewards = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="safe deposit")]
		safe_deposit = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sarsep = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 73,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountBaseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		investment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		depository = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brokerage = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountBaseVerification_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		automatically_verified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_automatic_verification = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_manual_verification = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_verified = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verification_expired = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verification_failed = 5,
	}
	
	/// <summary>
	/// Enumerates the account subtypes that the application wishes for the user to be able to select from. For more details refer to Plaid documentation on account filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountFilter
	{
		
		/// <summary>
		/// A list of account subtypes to be filtered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public string[] Credit { get; set; }
		
		/// <summary>
		/// A list of account subtypes to be filtered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="depository")]
		public string[] Depository { get; set; }
		
		/// <summary>
		/// A list of account subtypes to be filtered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investment")]
		public string[] Investment { get; set; }
		
		/// <summary>
		/// A list of account subtypes to be filtered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public string[] Loan { get; set; }
	}
	
	/// <summary>
	/// The `account_filters` specified in the original call to `/link/token/create`.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountFiltersResponse
	{
		
		/// <summary>
		/// A filter to apply to `credit`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public CreditFilter Credit { get; set; }
		
		/// <summary>
		/// A filter to apply to `depository`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="depository")]
		public DepositoryFilter Depository { get; set; }
		
		/// <summary>
		/// A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investment")]
		public InvestmentFilter Investment { get; set; }
		
		/// <summary>
		/// A filter to apply to `loan`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public LoanFilter Loan { get; set; }
	}
	
	/// <summary>
	/// A filter to apply to `credit`-type accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public CreditAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// Valid account subtypes for credit accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-credit).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditAccountSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="credit card")]
		credit_card = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 2,
	}
	
	/// <summary>
	/// A filter to apply to `depository`-type accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositoryFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public DepositoryAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// Valid account subtypes for depository accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-depository).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DepositoryAccountSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checking = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		savings = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hsa = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cd = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="money market")]
		money_market = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prepaid = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash management")]
		cash_management = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebt = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 9,
	}
	
	/// <summary>
	/// A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public InvestmentAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// Valid account subtypes for investment accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-investment).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvestmentAccountSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="529")]
		_529 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401a")]
		_401a = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401k")]
		_401k = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="403B")]
		_403B = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="457b")]
		_457b = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brokerage = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash isa")]
		cash_isa = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crypto exchange")]
		crypto_exchange = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="education savings account")]
		education_savings_account = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed annuity")]
		fixed_annuity = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gic = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="health reimbursement arrangement")]
		health_reimbursement_arrangement = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hsa = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ira = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		isa = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		keogh = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lif = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="life insurance")]
		life_insurance = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lira = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrif = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrsp = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mutual fund")]
		mutual_fund = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-custodial wallet")]
		nonMinuscustodial_wallet = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-taxable brokerage account")]
		nonMinustaxable_brokerage_account = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other annuity")]
		other_annuity = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other insurance")]
		other_insurance = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pension = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prif = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="profit sharing plan")]
		profit_sharing_plan = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qshr = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rdsp = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resp = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		retirement = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rlif = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		roth = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="roth 401k")]
		roth_401k = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrif = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrsp = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sarsep = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sep ira")]
		sep_ira = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="simple ira")]
		simple_ira = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sipp = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="stock plan")]
		stock_plan = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tfsa = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trust = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ugma = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utma = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="variable annuity")]
		variable_annuity = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 49,
	}
	
	/// <summary>
	/// A filter to apply to `loan`-type accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoanFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public LoanAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// Valid account subtypes for loan accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-loan).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoanAccountSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		auto = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		commercial = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		construction = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consumer = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="home equity")]
		home_equity = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mortgage = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="line of credit")]
		line_of_credit = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		student = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 11,
	}
	
	/// <summary>
	/// Identity information about an account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountIdentity : AccountBase
	{
		
		/// <summary>
		/// Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array. In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owners")]
		public Owner[] Owners { get; set; }
	}
	
	/// <summary>
	/// Identity match scores for an account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountIdentityMatchScore : AccountBase
	{
		
		/// <summary>
		/// Score found by matching address provided by the API with the address on the account at the financial institution. The score can range from 0 to 100 where 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public AddressMatchScore Address { get; set; }
		
		/// <summary>
		/// Score found by matching email provided by the API with the email on the account at the financial institution. 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public EmailAddressMatchScore Email_address { get; set; }
		
		/// <summary>
		/// Score found by matching name provided by the API with the name on the account at the financial institution. If the account contains multiple owners, the maximum match score is filled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public NameMatchScore Legal_name { get; set; }
		
		/// <summary>
		/// Score found by matching phone number provided by the API with the phone number on the account at the financial institution. 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public PhoneNumberMatchScore Phone_number { get; set; }
	}
	
	/// <summary>
	/// Score found by matching address provided by the API with the address on the account at the financial institution. The score can range from 0 to 100 where 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddressMatchScore
	{
		
		/// <summary>
		/// postal code was provided for both and was a match
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_postal_code_match")]
		public System.Nullable<System.Boolean> Is_postal_code_match { get; set; }
		
		/// <summary>
		/// Match score for address. The score can range from 0 to 100 where 100 is a perfect match and 0 is a no match. If the address is missing from either the API or financial institution, this is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Int32> Score { get; set; }
	}
	
	/// <summary>
	/// Score found by matching email provided by the API with the email on the account at the financial institution. 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailAddressMatchScore
	{
		
		/// <summary>
		/// Match score for normalized email. 100 is a perfect match and 0 is a no match. If the email is missing from either the API or financial institution, this is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Int32> Score { get; set; }
	}
	
	/// <summary>
	/// Score found by matching name provided by the API with the name on the account at the financial institution. If the account contains multiple owners, the maximum match score is filled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NameMatchScore
	{
		
		/// <summary>
		/// Is `true` if the name on either of the names that was matched for the score contained strings indicative of a business name, such as "CORP", "LLC", "INC", or "LTD". A `true` result generally indicates the entity is a business. However, a `false` result does not mean the entity is not a business, as some businesses do not use these strings in the names used for their financial institution accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_business_name_detected")]
		public System.Nullable<System.Boolean> Is_business_name_detected { get; set; }
		
		/// <summary>
		/// first or last name completely matched, likely a family member
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_first_name_or_last_name_match")]
		public System.Nullable<System.Boolean> Is_first_name_or_last_name_match { get; set; }
		
		/// <summary>
		/// nickname matched, example Jennifer and Jenn.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_nickname_match")]
		public System.Nullable<System.Boolean> Is_nickname_match { get; set; }
		
		/// <summary>
		/// Represents the match score for name. 100 is a perfect score, 85-99 means a strong match, 50-84 is a partial match, less than 50 is a weak match and 0 is a complete mismatch. If the name is missing from either the API or financial institution, this is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Int32> Score { get; set; }
	}
	
	/// <summary>
	/// Score found by matching phone number provided by the API with the phone number on the account at the financial institution. 100 is a perfect match and 0 is a no match. If the account contains multiple owners, the maximum match score is filled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumberMatchScore
	{
		
		/// <summary>
		/// Match score for normalized phone number. 100 is a perfect match and 0 is a no match. If the phone number is missing from either the API or financial institution, this is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Int32> Score { get; set; }
	}
	
	/// <summary>
	/// An object with keys of `account_id`'s that are mapped to their respective identity attributes that changed.
	///
	///Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["PHONES"] }`
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountIdsWithUpdatedIdentity
	{
	}
	
	/// <summary>
	/// Allow the application to access specific products on this account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountProductAccess
	{
		
		/// <summary>
		/// Allow the application to access account data. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_data")]
		public System.Nullable<System.Boolean> Account_data { get; set; }
		
		/// <summary>
		/// Allow the application to access bank statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statements")]
		public System.Nullable<System.Boolean> Statements { get; set; }
		
		/// <summary>
		/// Allow the application to access tax documents. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_documents")]
		public System.Nullable<System.Boolean> Tax_documents { get; set; }
	}
	
	/// <summary>
	/// Allow the application to access specific products on this account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountProductAccessNullable : AccountProductAccess
	{
	}
	
	/// <summary>
	/// The application requires that accounts be limited to a specific cardinality.
	///`MULTI_SELECT`: indicates that the user should be allowed to pick multiple accounts.
	///`SINGLE_SELECT`: indicates that the user should be allowed to pick only a single account.
	///`ALL`: indicates that the user must share all of their accounts and should not be given the opportunity to de-select
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountSelectionCardinality
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_SELECT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_SELECT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 2,
	}
	
	/// <summary>
	/// See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401a")]
		_401a = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401k")]
		_401k = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="403B")]
		_403B = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="457b")]
		_457b = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="529")]
		_529 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brokerage = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash isa")]
		cash_isa = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crypto exchange")]
		crypto_exchange = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="education savings account")]
		education_savings_account = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebt = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed annuity")]
		fixed_annuity = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gic = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="health reimbursement arrangement")]
		health_reimbursement_arrangement = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hsa = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		isa = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ira = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lif = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="life insurance")]
		life_insurance = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lira = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrif = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrsp = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-custodial wallet")]
		nonMinuscustodial_wallet = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-taxable brokerage account")]
		nonMinustaxable_brokerage_account = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other insurance")]
		other_insurance = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other annuity")]
		other_annuity = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prif = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rdsp = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resp = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rlif = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrif = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pension = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="profit sharing plan")]
		profit_sharing_plan = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		retirement = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		roth = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="roth 401k")]
		roth_401k = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrsp = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sep ira")]
		sep_ira = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="simple ira")]
		simple_ira = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sipp = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="stock plan")]
		stock_plan = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="thrift savings plan")]
		thrift_savings_plan = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tfsa = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trust = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ugma = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utma = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="variable annuity")]
		variable_annuity = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="credit card")]
		credit_card = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cd = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checking = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		savings = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="money market")]
		money_market = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prepaid = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		auto = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		commercial = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		construction = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consumer = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="home equity")]
		home_equity = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mortgage = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		overdraft = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="line of credit")]
		line_of_credit = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		student = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash management")]
		cash_management = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		keogh = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mutual fund")]
		mutual_fund = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recurring = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rewards = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="safe deposit")]
		safe_deposit = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sarsep = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 73,
	}
	
	/// <summary>
	/// `investment:` Investment account. In API versions 2018-05-22 and earlier, this type is called `brokerage` instead.
	///
	///`credit:` Credit card
	///
	///`depository:` Depository account
	///
	///`loan:` Loan account
	///
	///`other:` Non-specified account type
	///
	///See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		investment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		depository = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brokerage = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	/// <summary>
	/// AccountsBalanceGetRequest defines the request schema for `/accounts/balance/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountsBalanceGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/accounts/balance/get` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AccountsBalanceGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/accounts/balance/get` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountsBalanceGetRequestOptions
	{
		
		/// <summary>
		/// A list of `account_ids` to retrieve for the Item. The default value is `null`.
		///
		///Note: An error will be returned if a provided `account_id` is not associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.
		///
		///If the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.
		///
		///This field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="min_last_updated_datetime")]
		public System.Nullable<System.DateTimeOffset> Min_last_updated_datetime { get; set; }
	}
	
	/// <summary>
	/// AccountsGetRequest defines the request schema for `/accounts/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountsGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/accounts/get` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AccountsGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/accounts/get` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountsGetRequestOptions
	{
		
		/// <summary>
		/// An array of `account_ids` to retrieve for the Account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
	}
	
	/// <summary>
	/// AccountsGetResponse defines the response schema for `/accounts/get` and `/accounts/balance/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountsGetResponse
	{
		
		/// <summary>
		/// An array of financial institution accounts associated with the Item.
		///If `/accounts/balance/get` was called, each account will include real-time balance information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountBase[] Accounts { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Metadata about the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Item
	{
		
		/// <summary>
		/// A list of products available for the Item that have not yet been accessed. The contents of this array will be mutually exclusive with `billed_products`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available_products")]
		public Products[] Available_products { get; set; }
		
		/// <summary>
		/// A list of products that have been billed for the Item. The contents of this array will be mutually exclusive with `available_products`. Note - `billed_products` is populated in all environments but only requests in Production are billed. Also note that products that are billed on a pay-per-call basis rather than a pay-per-Item basis, such as `balance`, will not appear here.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="billed_products")]
		public Products[] Billed_products { get; set; }
		
		/// <summary>
		/// The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Linkâ€™s update mode in advance of the consent expiration time.
		///
		///Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_expiration_time")]
		public System.Nullable<System.DateTimeOffset> Consent_expiration_time { get; set; }
		
		/// <summary>
		/// Beta: A list of products that have gone through consent collection for the Item. Only present for those enabled in the beta.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consented_products")]
		public Products[] Consented_products { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// A list of authorized products for the Item.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.
		///
		///`background` - Item can be updated in the background
		///
		///`user_present_required` - Item requires user interaction to be updated
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="update_type")]
		public ItemUpdate_type Update_type { get; set; }
		
		/// <summary>
		/// The URL registered to receive webhooks for the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Products
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assets = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		auth = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		balance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		identity = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		investments = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		liabilities = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payment_initiation = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		identity_verification = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transactions = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit_details = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		income = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		income_verification = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deposit_switch = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standing_orders = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transfer = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		employment = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recurring_transactions = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signal = 17,
	}
	
	/// <summary>
	/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlaidError
	{
		
		/// <summary>
		/// In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.
		///
		///`causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`. `causes` will also not be populated inside an error nested within a `warning` object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="causes")]
		public string[] Causes { get; set; }
		
		/// <summary>
		/// A user-friendly representation of the error code. `null` if the error is not related to user action.
		///
		///This may change over time and is not safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="display_message")]
		public string Display_message { get; set; }
		
		/// <summary>
		/// The URL of a Plaid documentation page with more information about the error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentation_url")]
		public string Documentation_url { get; set; }
		
		/// <summary>
		/// The particular error code. Safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// A broad categorization of the error. Safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_type")]
		public PlaidErrorError_type Error_type { get; set; }
		
		/// <summary>
		/// A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
		
		/// <summary>
		/// Suggested steps for resolving the error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggested_action")]
		public string Suggested_action { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PlaidErrorError_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_RESULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_INPUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_ERROR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RATE_LIMIT_EXCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		API_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSET_REPORT_ERROR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_ERROR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAUTH_ERROR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_ERROR = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_TRANSFER_ERROR = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCOME_VERIFICATION_ERROR = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MICRODEPOSITS_ERROR = 13,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ItemUpdate_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		background = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		user_present_required = 1,
	}
	
	/// <summary>
	/// Enum representing the state of the action/activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTEMPT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 4,
	}
	
	/// <summary>
	/// Describes a consent activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Activity
	{
		
		/// <summary>
		/// Types of consent activities
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public ActivityActivity1 Activity1 { get; set; }
		
		/// <summary>
		/// A unique identifier for the activity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time this activity was initiated [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initiated_date")]
		public string Initiated_date { get; set; }
		
		/// <summary>
		/// Application ID of the client who initiated the activity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initiator")]
		public string Initiator { get; set; }
		
		/// <summary>
		/// The scopes object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public ScopesNullable Scopes { get; set; }
		
		/// <summary>
		/// Enum representing the state of the action/activity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public ActionState State { get; set; }
		
		/// <summary>
		/// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_application_id")]
		public string Target_application_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityActivity1
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_CREATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_IMPORT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_UPDATE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_UNLINK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTAL_UNLINK = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTAL_ITEMS_DELETE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_REMOVE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVARIANT_CHECKER_DELETION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCOPES_UPDATE = 9,
	}
	
	/// <summary>
	/// Types of consent activities
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_CREATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_IMPORT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_UPDATE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_UNLINK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTAL_UNLINK = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTAL_ITEMS_DELETE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_REMOVE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVARIANT_CHECKER_DELETION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCOPES_UPDATE = 9,
	}
	
	/// <summary>
	/// Data about the components comprising an address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddressDataNullable : AddressData
	{
	}
	
	/// <summary>
	/// A physical mailing address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddressNullable : Address
	{
	}
	
	/// <summary>
	/// Field describing whether the associated address is being used for commercial or residential purposes.
	///
	///Note: This value will be `no_data` when Plaid does not have sufficient data to determine the address's use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddressPurposeLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		residential = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		commercial = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Metadata about the application
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Application
	{
		
		/// <summary>
		/// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_id")]
		public string Application_id { get; set; }
		
		/// <summary>
		/// The URL for the application's website
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_url")]
		public string Application_url { get; set; }
		
		/// <summary>
		/// A string representing the city of the clientâ€™s headquarters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// A string representing the name of clientâ€™s legal entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company_legal_name")]
		public string Company_legal_name { get; set; }
		
		/// <summary>
		/// A string representing the country code of the clientâ€™s headquarters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// A human-readable name of the application for display purposes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The date this application was granted production access at Plaid in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="join_date")]
		public System.DateOnly Join_date { get; set; }
		
		/// <summary>
		/// A URL that links to the application logo image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The name of the application
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A string representing the postal code of the clientâ€™s headquarters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// A string provided by the connected app stating why they use their respective enabled products.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason_for_access")]
		public string Reason_for_access { get; set; }
		
		/// <summary>
		/// A string representing the region of the clientâ€™s headquarters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// A string representing clientâ€™s broad use case as assessed by Plaid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="use_case")]
		public string Use_case { get; set; }
	}
	
	/// <summary>
	/// ApplicationGetRequest defines the schema for `/application/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationGetRequest
	{
		
		/// <summary>
		/// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_id")]
		public string Application_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ApplicationGetResponse defines the response schema for `/application/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationGetResponse
	{
		
		/// <summary>
		/// Metadata about the application
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application")]
		public Application Application { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Asset
	{
		
		/// <summary>
		/// Details about an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDetail ASSET_DETAIL { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetHolder ASSET_HOLDER { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetOwners ASSET_OWNERS { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactions ASSET_TRANSACTIONS { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ValidationSources VALIDATION_SOURCES { get; set; }
	}
	
	/// <summary>
	/// Details about an asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetDetail
	{
		
		/// <summary>
		/// A unique alphanumeric string identifying an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetAccountIdentifier { get; set; }
		
		/// <summary>
		/// Account Report As of Date / Create Date. Format YYYY-MM-DD
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetAsOfDate { get; set; }
		
		/// <summary>
		/// Asset Account Available Balance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double AssetAvailableBalanceAmount { get; set; }
		
		/// <summary>
		/// A vendor created unique Identifier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double AssetCurrentBalanceAmount { get; set; }
		
		/// <summary>
		/// The Number of days requested made to the Financial Institution. Example When looking for 3 months of data from the FI, pass in 90 days.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int AssetDaysRequestedCount { get; set; }
		
		/// <summary>
		/// A text description that further defines the Asset. This could be used to describe the shares associated with the stocks, bonds or mutual funds, retirement funds or business owned that the borrower has disclosed (named) as an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetDescription { get; set; }
		
		/// <summary>
		/// Ownership type of the asset account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetOwnershipType { get; set; }
		
		/// <summary>
		/// A value from a MISMO prescribed list that specifies financial assets in a mortgage loan transaction. Assets may be either liquid or fixed and are associated with a corresponding asset amount.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDetailAssetType AssetType { get; set; }
		
		/// <summary>
		/// Additional Asset Decription some examples are Investment Tax-Deferred , Loan, 401K, 403B, Checking, Money Market, Credit Card,ROTH,529,Biller,ROLLOVER,CD,Savings,Investment Taxable, IRA, Mortgage, Line Of Credit.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTypeAdditionalDescription { get; set; }
		
		/// <summary>
		/// A vendor created unique Identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetUniqueIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetDetailAssetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CheckingAccount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SavingsAccount = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Investment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MoneyMarketFund = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Other = 4,
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetHolder
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetHolderName NAME { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetHolderName
	{
		
		/// <summary>
		/// The unparsed name of either an individual or a legal entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FullName { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetOwners
	{
		
		/// <summary>
		/// Multiple Occurances of Account Owners Full Name up to 4.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetOwner[] ASSET_OWNER { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetOwner
	{
		
		/// <summary>
		/// Account Owner Full Name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetOwnerText { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetTransactions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransaction[] ASSET_TRANSACTION { get; set; }
	}
	
	/// <summary>
	/// An object representing...
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetTransaction
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDescription[] ASSET_TRANSACTION_DESCRIPTON { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDetail ASSET_TRANSACTION_DETAIL { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetTransactionDescription
	{
		
		/// <summary>
		/// Asset Transaction Description String up to 3 occurances 1 required.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="AssetTransactionDescription")]
		public string AssetTransactionDescription1 { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetTransactionDetail
	{
		
		/// <summary>
		/// Asset Transaction Amount.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double AssetTransactionAmount { get; set; }
		
		/// <summary>
		/// Asset Transaction Category Type Enumerated derived by Vendor.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<AssetTransactionDetailAssetTransactionCategoryType> AssetTransactionCategoryType { get; set; }
		
		/// <summary>
		/// Asset Transaction Date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateOnly AssetTransactionDate { get; set; }
		
		/// <summary>
		/// Populate with who did the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionPaidByName { get; set; }
		
		/// <summary>
		/// Asset Transaction Post Date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateOnly AssetTransactionPostDate { get; set; }
		
		/// <summary>
		/// Asset Transaction Type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDetailAssetTransactionType AssetTransactionType { get; set; }
		
		/// <summary>
		/// FI Provided - examples are atm, cash, check, credit, debit, deposit, directDebit, directDeposit, dividend, fee, interest, other, payment, pointOfSale, repeatPayment, serviceCharge, transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionTypeAdditionalDescription { get; set; }
		
		/// <summary>
		/// A vendor created unique Identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionUniqueIdentifier { get; set; }
		
		/// <summary>
		/// FI provided Transaction Identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FinancialInstitutionTransactionIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetTransactionDetailAssetTransactionCategoryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATMFee = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Advertising = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AirTravel = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AlcoholBars = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allowance = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Amusement = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Arts = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoTransport = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoInsurance = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoPayment = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BabySupplies = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BabysitterDaycare = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BankFee = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BillsUtilities = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bonus = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BooksSupplies = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Business Services")]
		Business_Services = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Buy = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CashATM = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Charity = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Check = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChildSupport = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Clothing = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CoffeeShops = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreditCardPayment = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dentist = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Doctor = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Education = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ElectronicsSoftware = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Entertainment = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Eyecare = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FastFood = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FederalTax = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FeesCharges = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinanceCharge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Financial = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinancialAdvisor = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FoodDining = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Furnishings = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GasFuel = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GiftsDonations = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Groceries = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gym = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hair = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HealthFitness = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HealthInsurance = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hobbies = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Home = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeImprovement = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeInsurance = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomePhone = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeServices = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeSupplies = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hotel = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Income = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InterestIncome = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Internet = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Investments = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kids = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KidsActivities = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LateFee = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Laundry = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LawnGarden = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Legal = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LifeInsurance = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoanInsurance = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoanPayment = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Loans = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MobilePhone = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MortgageRent = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MoviesDVDs = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Music = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NewspapersMagazines = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OfficeSupplies = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Parking = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paycheck = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PersonalCare = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PetFoodSupplies = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PetGrooming = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pets = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pharmacy = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Printing = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Property Tax")]
		Property_Tax = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Public Transportation")]
		Public_Transportation = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Reimbursement = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RentalCarTaxi = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restaurants = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SalesTax = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceParts = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceFee = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shipping = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shopping = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SpaMassage = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SportingGoods = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sports = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StateTax = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Student Loan")]
		Student_Loan = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Taxes = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Television = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Toys = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Transfer = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Travel = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tuition = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uncategorized = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Utilities = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Vacation = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Veterinary = 106,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetTransactionDetailAssetTransactionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Credit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Debit = 1,
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationSources
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ValidationSource[] VALIDATION_SOURCE { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationSource
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ValidationSourceName { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ValidationSourceReferenceIdentifier { get; set; }
	}
	
	/// <summary>
	/// An object representing an Asset Report
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReport
	{
		
		/// <summary>
		/// A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// An identifier you determine and submit for the Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_report_id")]
		public string Client_report_id { get; set; }
		
		/// <summary>
		/// The date and time when the Asset Report was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_generated")]
		public System.DateTimeOffset Date_generated { get; set; }
		
		/// <summary>
		/// The duration of transaction history you requested
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		public double Days_requested { get; set; }
		
		/// <summary>
		/// Data returned by Plaid about each of the Items included in the Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public AssetReportItem[] Items { get; set; }
		
		/// <summary>
		/// The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Maeâ€™s Day 1 Certaintyâ„¢ program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public AssetReportUser User { get; set; }
	}
	
	/// <summary>
	/// A representation of an Item within an Asset Report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportItem
	{
		
		/// <summary>
		/// Data about each of the accounts open on the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountAssets[] Accounts { get; set; }
		
		/// <summary>
		/// The date and time when this Itemâ€™s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_last_updated")]
		public System.DateTimeOffset Date_last_updated { get; set; }
		
		/// <summary>
		/// The id of the financial institution associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The full financial institution name associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
	}
	
	/// <summary>
	/// The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Maeâ€™s Day 1 Certaintyâ„¢ program.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportUser
	{
		
		/// <summary>
		/// An identifier you determine and submit for the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// The user's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The user's first name. Required for the Fannie Mae Day 1 Certaintyâ„¢ program.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The user's last name.  Required for the Fannie Mae Day 1 Certaintyâ„¢ program.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The user's middle name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// The user's phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567". Phone numbers provided in other formats will be parsed on a best-effort basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// The user's Social Security Number. Required for the Fannie Mae Day 1 Certaintyâ„¢ program.
		///
		///Format: "ddd-dd-dddd"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssn")]
		public string Ssn { get; set; }
	}
	
	/// <summary>
	/// A list of add-ons that should be included in the Asset Report. 
	///
	///`fast_assets`: When Fast Assets is requested, Plaid will create two versions of the Asset Report: the Fast Asset Report, which will contain only Identity and Balance information, and the Full Asset Report, which will also contain Transactions information. A `PRODUCT_READY` webhook will be fired for each Asset Report when it is ready, and the `report_type` field will indicate whether the webhook is firing for the `full` or `fast` Asset Report. To retrieve the Fast Asset Report, call `/asset_report/get` with `fast_report` set to `true`. There is no additional charge for using Fast Assets.
	///
	///`investments`: Request an Asset Report with Investments. This add-on is in closed beta and not generally available.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetReportAddOns
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		investments = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fast_assets = 1,
	}
	
	/// <summary>
	/// AssetReportAuditCopyCreateRequest defines the request schema for `/asset_report/audit_copy/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportAuditCopyCreateRequest
	{
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// The `auditor_id` of the third party with whom you would like to share the Asset Report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditor_id")]
		public string Auditor_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// AssetReportAuditCopyCreateResponse defines the response schema for `/asset_report/audit_copy/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportAuditCopyCreateResponse
	{
		
		/// <summary>
		/// A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// AssetReportAuditCopyGetRequest defines the request schema for `/asset_report/audit_copy/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportAuditCopyGetRequest
	{
		
		/// <summary>
		/// The `audit_copy_token` granting access to the Audit Copy you would like to get.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// AssetReportAuditCopyRemoveRequest defines the request schema for `/asset_report/audit_copy/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportAuditCopyRemoveRequest
	{
		
		/// <summary>
		/// The `audit_copy_token` granting access to the Audit Copy you would like to revoke.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// AssetReportAuditCopyRemoveResponse defines the response schema for `/asset_report/audit_copy/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportAuditCopyRemoveResponse
	{
		
		/// <summary>
		/// `true` if the Audit Copy was successfully removed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public bool Removed { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// AssetReportCreateRequest defines the request schema for `/asset_report/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportCreateRequest
	{
		
		/// <summary>
		/// An array of access tokens corresponding to the Items that will be included in the report. The `assets` product must have been initialized for the Items during link; the Assets product cannot be added after initialization.
		/// Minimum items: 1
		/// Maximum items: 99
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_tokens")]
		[System.ComponentModel.DataAnnotations.Length(1, 99)]
		public string[] Access_tokens { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum integer number of days of history to include in the Asset Report. If using Fannie Mae Day 1 Certainty, `days_requested` must be at least 61 for new originations or at least 31 for refinancings.
		///
		///An Asset Report requested with "Additional History" (that is, with more than 61 days of transaction history) will incur an Additional History fee.
		/// Required
		/// Minimum: 0
		/// Maximum: 731
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		[System.ComponentModel.DataAnnotations.Range(0, 731)]
		public int Days_requested { get; set; }
		
		/// <summary>
		/// An optional object to filter `/asset_report/create` results. If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae's Day 1 Certainty program.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AssetReportCreateRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User for which to create an asset report for. All items associated with the User will be included in the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/asset_report/create` results. If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae's Day 1 Certainty program.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportCreateRequestOptions
	{
		
		/// <summary>
		/// Use this field to request a `fast_asset` report. When Fast Assets is requested, Plaid will create two versions of the Asset Report: first, the Fast Asset Report, which will contain only current identity and balance information, and later, the Full Asset Report, which will also contain historical balance information and transaction data. A `PRODUCT_READY` webhook will be fired for each Asset Report when it is ready, and the `report_type` field will indicate whether the webhook is firing for the `full` or `fast` Asset Report. To retrieve the Fast Asset Report, call `/asset_report/get` with `fast_report` set to `true`. There is no additional charge for using Fast Assets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="add_ons")]
		public AssetReportAddOns[] Add_ons { get; set; }
		
		/// <summary>
		/// Client-generated identifier, which can be used by lenders to track loan applications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_report_id")]
		public string Client_report_id { get; set; }
		
		/// <summary>
		/// true to return balance and identity earlier as a fast report. Defaults to false if omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_fast_report")]
		public System.Nullable<System.Boolean> Include_fast_report { get; set; }
		
		/// <summary>
		/// Additional information that can be included in the asset report. Possible values: `"investments"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public string[] Products { get; set; }
		
		/// <summary>
		/// The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Maeâ€™s Day 1 Certaintyâ„¢ program.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public AssetReportUser User { get; set; }
		
		/// <summary>
		/// URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// AssetReportCreateResponse defines the response schema for `/asset_report/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportCreateResponse
	{
		
		/// <summary>
		/// A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// AssetReportFilterRequest defines the request schema for `/asset_report/filter`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportFilterRequest
	{
		
		/// <summary>
		/// The accounts to exclude from the Asset Report, identified by `account_id`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_ids_to_exclude")]
		public string[] Account_ids_to_exclude { get; set; }
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// AssetReportFilterResponse defines the response schema for `/asset_report/filter`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportFilterResponse
	{
		
		/// <summary>
		/// A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object representing an Asset Report with Freddie Mac schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportFreddie
	{
		
		/// <summary>
		/// A collection of loans that are part of a single deal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Loans LOANS { get; set; }
		
		/// <summary>
		/// A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Parties PARTIES { get; set; }
		
		/// <summary>
		/// A collection of objects that describe requests and responses for services.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Services SERVICES { get; set; }
	}
	
	/// <summary>
	/// A collection of loans that are part of a single deal.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Loans
	{
		
		/// <summary>
		/// Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Loan LOAN { get; set; }
	}
	
	/// <summary>
	/// Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Loan
	{
		
		/// <summary>
		/// Collection of current and previous identifiers for this loan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LoanIdentifiers LOAN_IDENTIFIERS { get; set; }
	}
	
	/// <summary>
	/// Collection of current and previous identifiers for this loan.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoanIdentifiers
	{
		
		/// <summary>
		/// The information used to identify this loan by various parties to the transaction or other organizations.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LoanIdentifier LOAN_IDENTIFIER { get; set; }
	}
	
	/// <summary>
	/// The information used to identify this loan by various parties to the transaction or other organizations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoanIdentifier
	{
		
		/// <summary>
		/// The value of the identifier for the specified type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="LoanIdentifier")]
		public string LoanIdentifier1 { get; set; }
		
		/// <summary>
		/// A value from a MISMO prescribed list that specifies the type of loan identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<LoanIdentifierLoanIdentifierType> LoanIdentifierType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoanIdentifierLoanIdentifierType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LenderLoan = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UniversalLoan = 1,
	}
	
	/// <summary>
	/// A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Party[] PARTY { get; set; }
	}
	
	/// <summary>
	/// A collection of information about a single party to a transaction. Included direct participants like the borrower and seller as well as indirect participants such as the flood certificate provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Party
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PartyIndividual INDIVIDUAL { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Roles ROLES { get; set; }
		
		/// <summary>
		/// The collection of TAXPAYER_IDENTIFICATION elements
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaxpayerIdentifiers TAXPAYER_IDENTIFIERS { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartyIndividual
	{
		
		/// <summary>
		/// Parent container for name that allows for choice group between parsed and unparsed containers.Parent container for name that allows for choice group between parsed and unparsed containers.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IndividualName NAME { get; set; }
	}
	
	/// <summary>
	/// Parent container for name that allows for choice group between parsed and unparsed containers.Parent container for name that allows for choice group between parsed and unparsed containers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndividualName
	{
		
		/// <summary>
		/// The first name of the individual represented by the parent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		/// <summary>
		/// The last name of the individual represented by the parent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Roles
	{
		
		/// <summary>
		/// ADocumentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Role ROLE { get; set; }
	}
	
	/// <summary>
	/// ADocumentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Role
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoleDetail ROLE_DETAIL { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoleDetail
	{
		
		/// <summary>
		/// A value from a MISMO defined list that identifies the role that the party plays in the transaction. Parties may be either a person or legal entity. A party may play multiple roles in a transaction.A value from a MISMO defined list that identifies the role that the party plays in the transaction. Parties may be either a person or legal entity. A party may play multiple roles in a transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoleDetailPartyRoleType PartyRoleType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RoleDetailPartyRoleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Borrower = 0,
	}
	
	/// <summary>
	/// The collection of TAXPAYER_IDENTIFICATION elements
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaxpayerIdentifiers
	{
		
		/// <summary>
		/// Information about the Taxpayer identification values assigned to the individual or legal entity.Information about the Taxpayer identification values assigned to the individual or legal entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaxpayerIdentifier TAXPAYER_IDENTIFIER { get; set; }
	}
	
	/// <summary>
	/// Information about the Taxpayer identification values assigned to the individual or legal entity.Information about the Taxpayer identification values assigned to the individual or legal entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaxpayerIdentifier
	{
		
		/// <summary>
		/// A value from a MISMO prescribed list that classifies identification numbers used by the Internal Revenue Service (IRS) in the administration of tax laws. A Social Security number (SSN) is issued by the SSA; all other taxpayer identification numbers are issued by the IRS.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<TaxpayerIdentifierTaxpayerIdentifierType> TaxpayerIdentifierType { get; set; }
		
		/// <summary>
		/// The value of the taxpayer identifier as assigned by the IRS to the individual or legal entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TaxpayerIdentifierValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaxpayerIdentifierTaxpayerIdentifierType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IndividualTaxpayerIdentificationNumber = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SocialSecurityNumber = 1,
	}
	
	/// <summary>
	/// A collection of objects that describe requests and responses for services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Services
	{
		
		/// <summary>
		/// A collection of details related to a fulfillment service or product in terms of request, process and result.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Service SERVICE { get; set; }
	}
	
	/// <summary>
	/// A collection of details related to a fulfillment service or product in terms of request, process and result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Service
	{
		
		/// <summary>
		/// A collection of STATUS containers.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Statuses STATUSES { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerificationOfAsset VERIFICATION_OF_ASSET { get; set; }
	}
	
	/// <summary>
	/// A collection of STATUS containers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Statuses
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Status STATUS { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// Satus Code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StatusCode { get; set; }
		
		/// <summary>
		/// Status Description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StatusDescription { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerificationOfAsset
	{
		
		/// <summary>
		/// Information about an report identifier and a report name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReportingInformation REPORTING_INFORMATION { get; set; }
		
		/// <summary>
		/// A collection of details related to a fulfillment service or product in terms of request, process and result.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServiceProductFulfillment SERVICE_PRODUCT_FULFILLMENT { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerificationOfAssetResponse VERIFICATION_OF_ASSET_RESPONSE { get; set; }
	}
	
	/// <summary>
	/// Information about an report identifier and a report name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportingInformation
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReportingInformationIdentifier { get; set; }
	}
	
	/// <summary>
	/// A collection of details related to a fulfillment service or product in terms of request, process and result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceProductFulfillment
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServiceProductFulfillmentDetail SERVICE_PRODUCT_FULFILLMENT_DETAIL { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceProductFulfillmentDetail
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServiceProductFulfillmentDetailServiceProductFulfillmentIdentifier ServiceProductFulfillmentIdentifier { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a type of order Verification of Asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VendorOrderIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ServiceProductFulfillmentDetailServiceProductFulfillmentIdentifier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOA = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOETRANSACTIONS = 1,
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerificationOfAssetResponse
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Assets ASSETS { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Assets
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Asset[] ASSET { get; set; }
	}
	
	/// <summary>
	/// AssetReportFreddieGetRequest defines the request schema for `credit/asset_report/freddie_mac/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportFreddieGetRequest
	{
		
		/// <summary>
		/// A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// AssetReportFreddieGetResponse defines the response schema for `/asset_report/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportFreddieGetResponse
	{
		
		/// <summary>
		/// An object representing an Asset Report with Freddie Mac schema.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetReportFreddie DEAL { get; set; }
		
		/// <summary>
		/// The Verification Of Assets (aka VOA or Freddie Mac Schema) schema version.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double SchemaVersion { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// AssetReportGetRequest defines the request schema for `/asset_report/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportGetRequest
	{
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// `true` to fetch "fast" version of asset report. Defaults to false if omitted. Can only be used if `/asset_report/create` was called with `options.add_ons` set to `["fast_assets"]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fast_report")]
		public System.Nullable<System.Boolean> Fast_report { get; set; }
		
		/// <summary>
		/// `true` if you would like to retrieve the Asset Report with Insights, `false` otherwise. This field defaults to `false` if omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_insights")]
		public System.Nullable<System.Boolean> Include_insights { get; set; }
		
		/// <summary>
		/// An optional object to filter or add data to `/asset_report/get` results. If provided, must be non-`null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AssetReportGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter or add data to `/asset_report/get` results. If provided, must be non-`null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportGetRequestOptions
	{
		
		/// <summary>
		/// The maximum number of days of history to include in the Asset Report.
		/// Minimum: 0
		/// Maximum: 731
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_to_include")]
		[System.ComponentModel.DataAnnotations.Range(0, 731)]
		public System.Nullable<System.Int32> Days_to_include { get; set; }
	}
	
	/// <summary>
	/// AssetReportGetResponse defines the response schema for `/asset_report/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportGetResponse
	{
		
		/// <summary>
		/// An object representing an Asset Report
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report")]
		public AssetReport Report { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// If the Asset Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public Warning[] Warnings { get; set; }
	}
	
	/// <summary>
	/// It is possible for an Asset Report to be returned with missing account owner information. In such cases, the Asset Report will contain warning data in the response, indicating why obtaining the owner information failed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Warning
	{
		
		/// <summary>
		/// An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cause")]
		public Cause Cause { get; set; }
		
		/// <summary>
		/// The warning code identifies a specific kind of warning. `OWNERS_UNAVAILABLE` indicates that account-owner information is not available.`INVESTMENTS_UNAVAILABLE` indicates that Investments specific information is not available. `TRANSACTIONS_UNAVAILABLE` indicates that transactions information associated with Credit and Depository accounts are unavailable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warning_code")]
		public WarningWarning_code Warning_code { get; set; }
		
		/// <summary>
		/// The warning type, which will always be `ASSET_REPORT_WARNING`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warning_type")]
		public string Warning_type { get; set; }
	}
	
	/// <summary>
	/// An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cause
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WarningWarning_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNERS_UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVESTMENTS_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONS_UNAVAILABLE = 2,
	}
	
	/// <summary>
	/// AssetReportPDFGetRequest defines the request schema for `/asset_report/pdf/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportPDFGetRequest
	{
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter or add data to `/asset_report/get` results. If provided, must be non-`null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AssetReportPDFGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter or add data to `/asset_report/get` results. If provided, must be non-`null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportPDFGetRequestOptions
	{
		
		/// <summary>
		/// The maximum integer number of days of history to include in the Asset Report.
		/// Minimum: 0
		/// Maximum: 731
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_to_include")]
		[System.ComponentModel.DataAnnotations.Range(0, 731)]
		public System.Nullable<System.Int32> Days_to_include { get; set; }
	}
	
	/// <summary>
	/// AssetReportRefreshRequest defines the request schema for `/asset_report/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportRefreshRequest
	{
		
		/// <summary>
		/// The `asset_report_token` returned by the original call to `/asset_report/create`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of days of history to include in the Asset Report. Must be an integer. If not specified, the value from the original call to `/asset_report/create` will be used.
		/// Minimum: 0
		/// Maximum: 731
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		[System.ComponentModel.DataAnnotations.Range(0, 731)]
		public System.Nullable<System.Int32> Days_requested { get; set; }
		
		/// <summary>
		/// An optional object to filter `/asset_report/refresh` results. If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AssetReportRefreshRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/asset_report/refresh` results. If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportRefreshRequestOptions
	{
		
		/// <summary>
		/// Client-generated identifier, which can be used by lenders to track loan applications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_report_id")]
		public string Client_report_id { get; set; }
		
		/// <summary>
		/// The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The `first_name`, `last_name`, and `ssn` fields are required if you would like the Report to be eligible for Fannie Maeâ€™s Day 1 Certaintyâ„¢ program.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public AssetReportUser User { get; set; }
		
		/// <summary>
		/// URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// AssetReportRefreshResponse defines the response schema for `/asset_report/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportRefreshResponse
	{
		
		/// <summary>
		/// A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// AssetReportRemoveRequest defines the request schema for `/asset_report/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportRemoveRequest
	{
		
		/// <summary>
		/// A token that can be provided to endpoints such as `/asset_report/get` or `/asset_report/pdf/get` to fetch or update an Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_token")]
		public string Asset_report_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// AssetReportRemoveResponse defines the response schema for `/asset_report/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetReportRemoveResponse
	{
		
		/// <summary>
		/// `true` if the Asset Report was successfully removed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public bool Removed { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Asset Transaction Category Type Enumerated derived by Vendor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetTransactionCategoryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATMFee = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Advertising = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AirTravel = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AlcoholBars = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allowance = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Amusement = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Arts = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoTransport = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoInsurance = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoPayment = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BabySupplies = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BabysitterDaycare = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BankFee = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BillsUtilities = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bonus = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BooksSupplies = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Business Services")]
		Business_Services = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Buy = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CashATM = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Charity = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Check = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChildSupport = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Clothing = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CoffeeShops = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreditCardPayment = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dentist = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Doctor = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Education = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ElectronicsSoftware = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Entertainment = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Eyecare = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FastFood = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FederalTax = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FeesCharges = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinanceCharge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Financial = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinancialAdvisor = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FoodDining = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Furnishings = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GasFuel = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GiftsDonations = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Groceries = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gym = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hair = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HealthFitness = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HealthInsurance = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hobbies = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Home = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeImprovement = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeInsurance = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomePhone = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeServices = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeSupplies = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hotel = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Income = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InterestIncome = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Internet = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Investments = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kids = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KidsActivities = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LateFee = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Laundry = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LawnGarden = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Legal = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LifeInsurance = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoanInsurance = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoanPayment = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Loans = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MobilePhone = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MortgageRent = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MoviesDVDs = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Music = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NewspapersMagazines = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OfficeSupplies = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Parking = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paycheck = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PersonalCare = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PetFoodSupplies = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PetGrooming = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pets = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pharmacy = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Printing = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Property Tax")]
		Property_Tax = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Public Transportation")]
		Public_Transportation = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Reimbursement = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RentalCarTaxi = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restaurants = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SalesTax = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceParts = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceFee = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shipping = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shopping = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SpaMassage = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SportingGoods = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sports = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StateTax = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Student Loan")]
		Student_Loan = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Taxes = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Television = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Toys = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Transfer = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Travel = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tuition = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uncategorized = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Utilities = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Vacation = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Veterinary = 106,
	}
	
	/// <summary>
	/// Asset Transaction Type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetTransactionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Credit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Debit = 1,
	}
	
	/// <summary>
	/// A value from a MISMO prescribed list that specifies financial assets in a mortgage loan transaction. Assets may be either liquid or fixed and are associated with a corresponding asset amount.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CheckingAccount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SavingsAccount = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Investment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MoneyMarketFund = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Other = 4,
	}
	
	/// <summary>
	/// Fired when Asset Report generation has failed. The resulting `error` will have an `error_type` of `ASSET_REPORT_ERROR`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetsErrorWebhook
	{
		
		/// <summary>
		/// The ID associated with the Asset Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// `ERROR`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ASSETS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetsErrorWebhookEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		development = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sandbox = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		production = 2,
	}
	
	/// <summary>
	/// Fired when the Asset Report has been generated and `/asset_report/get` is ready to be called.  If you attempt to retrieve an Asset Report before this webhook has fired, youâ€™ll receive a response with the HTTP status code 400 and a Plaid error code of `PRODUCT_NOT_READY`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetsProductReadyWebhook
	{
		
		/// <summary>
		/// The `asset_report_id` corresponding to the Asset Report the webhook has fired for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The report type, indicating whether the Asset Report is a `full` or `fast` report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_type")]
		public string Report_type { get; set; }
		
		/// <summary>
		/// `PRODUCT_READY`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ASSETS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthGetNumbers
	{
		
		/// <summary>
		/// An array of ACH numbers identifying accounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ach")]
		public NumbersACH[] Ach { get; set; }
		
		/// <summary>
		/// An array of BACS numbers identifying accounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public NumbersBACS[] Bacs { get; set; }
		
		/// <summary>
		/// An array of EFT numbers identifying accounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="eft")]
		public NumbersEFT[] Eft { get; set; }
		
		/// <summary>
		/// An array of IBAN numbers identifying accounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="international")]
		public NumbersInternational[] International { get; set; }
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from a US account via ACH or wire transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersACH
	{
		
		/// <summary>
		/// The ACH account number for the account.
		///
		///Note that when using OAuth with Chase Bank (`ins_56`), Chase will issue "tokenized" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized numbers should work identically to normal account and routing numbers. The digits returned in the `mask` field will continue to reflect the actual account number, rather than the tokenized account number; for this reason, when displaying account numbers to the user to help them identify their account in your UI, always use the `mask` rather than truncating the `account` number. If a user revokes their permissions to your app, the tokenized numbers will continue to work for ACH deposits, but not withdrawals.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		public string Account { get; set; }
		
		/// <summary>
		/// The Plaid account ID associated with the account numbers
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Whether the account supports ACH transfers into the account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_transfer_in")]
		public System.Nullable<System.Boolean> Can_transfer_in { get; set; }
		
		/// <summary>
		/// Whether the account supports ACH transfers out of the account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_transfer_out")]
		public System.Nullable<System.Boolean> Can_transfer_out { get; set; }
		
		/// <summary>
		/// The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="routing")]
		public string Routing { get; set; }
		
		/// <summary>
		/// The wire transfer routing number for the account, if available
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wire_routing")]
		public string Wire_routing { get; set; }
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from a UK bank account via BACS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersBACS
	{
		
		/// <summary>
		/// The BACS account number for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		public string Account { get; set; }
		
		/// <summary>
		/// The Plaid account ID associated with the account numbers
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The BACS sort code for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sort_code")]
		public string Sort_code { get; set; }
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from a Canadian bank account via EFT.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersEFT
	{
		
		/// <summary>
		/// The EFT account number for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		public string Account { get; set; }
		
		/// <summary>
		/// The Plaid account ID associated with the account numbers
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The EFT branch number for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="branch")]
		public string Branch { get; set; }
		
		/// <summary>
		/// The EFT institution number for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution")]
		public string Institution { get; set; }
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from an international bank account via wire transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersInternational
	{
		
		/// <summary>
		/// The Plaid account ID associated with the account numbers
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The Bank Identifier Code (BIC) for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bic")]
		public string Bic { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
	}
	
	/// <summary>
	/// AuthGetRequest defines the request schema for `/auth/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/auth/get` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public AuthGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/auth/get` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthGetRequestOptions
	{
		
		/// <summary>
		/// A list of `account_ids` to retrieve for the Item.
		///Note: An error will be returned if a provided `account_id` is not associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
	}
	
	/// <summary>
	/// AuthGetResponse defines the response schema for `/auth/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthGetResponse
	{
		
		/// <summary>
		/// The `accounts` for which numbers are being retrieved.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountBase[] Accounts { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numbers")]
		public AuthGetNumbers Numbers { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Metadata that captures information about the Auth features of an institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthMetadata
	{
		
		/// <summary>
		/// Metadata specifically related to which auth methods an institution supports.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="supported_methods")]
		public AuthSupportedMethods Supported_methods { get; set; }
	}
	
	/// <summary>
	/// Metadata specifically related to which auth methods an institution supports.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthSupportedMethods
	{
		
		/// <summary>
		/// Indicates if automated microdeposits are supported.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="automated_micro_deposits")]
		public bool Automated_micro_deposits { get; set; }
		
		/// <summary>
		/// Indicates if instant auth is supported.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instant_auth")]
		public bool Instant_auth { get; set; }
		
		/// <summary>
		/// Indicates if instant match is supported.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instant_match")]
		public bool Instant_match { get; set; }
	}
	
	/// <summary>
	/// Fired when an Item is verified via automated micro-deposits. We recommend communicating to your users when this event is received to notify them that their account is verified and ready for use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomaticallyVerifiedWebhook
	{
		
		/// <summary>
		/// The `account_id` of the account associated with the webhook
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `AUTOMATICALLY_VERIFIED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `AUTH`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// The object contains a risk score and a risk tier that evaluate the transaction return risk because an account is overdrawn or because an ineligible account is used. Common return codes in this category include: "R01", "R02", "R03", "R04", "R06", "R08",  "R09", "R13", "R16", "R17", "R20", "R23". These returns have a turnaround time of 2 banking days.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankInitiatedReturnRisk
	{
		
		/// <summary>
		/// In the `bank_initiated_return_risk` object, there are eight risk tiers corresponding to the scores:
		///  1: Predicted bank-initiated return incidence rate between 0.0% - 0.5%
		///  2: Predicted bank-initiated return incidence rate between 0.5% - 1.5%
		///  3: Predicted bank-initiated return incidence rate between 1.5% - 3%
		///  4: Predicted bank-initiated return incidence rate between 3% - 5%
		///  5: Predicted bank-initiated return incidence rate between 5% - 10%
		///  6: Predicted bank-initiated return incidence rate between 10% - 15%
		///  7: Predicted bank-initiated return incidence rate between 15% and 50%
		///  8: Predicted bank-initiated return incidence rate greater than 50%
		///
		/// Required
		/// Minimum: 1
		/// Maximum: 8
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_tier")]
		[System.ComponentModel.DataAnnotations.Range(1, 8)]
		public int Risk_tier { get; set; }
		
		/// <summary>
		/// A score from 1-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.
		/// Required
		/// Minimum: 1
		/// Maximum: 99
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="score")]
		[System.ComponentModel.DataAnnotations.Range(1, 99)]
		public int Score { get; set; }
	}
	
	/// <summary>
	/// Represents a bank transfer within the Bank Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransfer
	{
		
		/// <summary>
		/// The account ID that should be credited/debited for this bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the bank transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// When `true`, you can still cancel this bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cancellable")]
		public bool Cancellable { get; set; }
		
		/// <summary>
		/// The datetime when this bank transfer was created. This will be of the form `2006-01-02T15:04:05Z`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// A string containing the custom tag provided by the client in the create request. Will be null if not provided.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="custom_tag")]
		public string Custom_tag { get; set; }
		
		/// <summary>
		/// The description of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<BankTransferDirection> Direction { get; set; }
		
		/// <summary>
		/// The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public BankTransferFailure Failure_reason { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount, e.g. "USD"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public BankTransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public BankTransferNetwork Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account that was used for this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The status of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public BankTransferStatus Status { get; set; }
		
		/// <summary>
		/// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public BankTransferUser User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inbound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferFailure
	{
		
		/// <summary>
		/// The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `reversed`. For a full listing of ACH return codes, see [Bank Transfers errors](https://plaid.com/docs/errors/bank-transfers/#ach-return-codes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_return_code")]
		public string Ach_return_code { get; set; }
		
		/// <summary>
		/// A human-readable description of the reason for the failure or reversal.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
	///The JSON values must be Strings (no nested JSON objects allowed)
	///Only ASCII characters may be used
	///Maximum of 50 key/value pairs
	///Maximum key length of 40 characters
	///Maximum value length of 500 characters
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferMetadata
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wire = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reversed = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
	}
	
	/// <summary>
	/// The legal name and other information for the account holder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferUser
	{
		
		/// <summary>
		/// The account holderâ€™s email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The account holderâ€™s full legal name. If the transfer `ach_class` is `ccd`, this should be the business name of the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The account holder's routing number. This field is only used in response data. Do not provide this field when making requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
	}
	
	/// <summary>
	/// Information about the balance of a bank transfer
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferBalance
	{
		
		/// <summary>
		/// The total available balance - the sum of all successful debit transfer amounts minus all credit transfer amounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available")]
		public string Available { get; set; }
		
		/// <summary>
		/// The transactable balance shows the amount in your account that you are able to use for transfers, and is essentially your available balance minus your minimum balance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactable")]
		public string Transactable { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/balance/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferBalanceGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// If multiple origination accounts are available, `origination_account_id` must be used to specify the account for which balance will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/balance/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferBalanceGetResponse
	{
		
		/// <summary>
		/// Information about the balance of a bank transfer
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public BankTransferBalance Balance { get; set; }
		
		/// <summary>
		/// The ID of the origination account that this balance belongs to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferCancelRequest
	{
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_id")]
		public string Bank_transfer_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferCancelResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferCreateRequest
	{
		
		/// <summary>
		/// The Plaid `access_token` for the account that will be debited or credited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` for the account that will be debited or credited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the bank transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_tag")]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Custom_tag { get; set; }
		
		/// <summary>
		/// The transfer description. Maximum of 10 characters.
		/// Required
		/// Max length: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string Description { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique bank transfer. Maximum of 50 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount â€“ should be set to "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public BankTransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public BankTransferCreateRequestNetwork Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified. Otherwise, this field should be left blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public BankTransferUser User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferCreateRequestNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wire = 2,
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferCreateResponse
	{
		
		/// <summary>
		/// Represents a bank transfer within the Bank Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer")]
		public BankTransfer Bank_transfer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Represents an event in the Bank Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferEvent
	{
		
		/// <summary>
		/// The account ID associated with the bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The bank transfer amount.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_amount")]
		public string Bank_transfer_amount { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_id")]
		public string Bank_transfer_id { get; set; }
		
		/// <summary>
		/// The currency of the bank transfer amount.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_iso_currency_code")]
		public string Bank_transfer_iso_currency_code { get; set; }
		
		/// <summary>
		/// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_type")]
		public BankTransferType Bank_transfer_type { get; set; }
		
		/// <summary>
		/// Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<BankTransferEventDirection> Direction { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Event_id { get; set; }
		
		/// <summary>
		/// The type of event that this bank transfer represents.
		///
		///`pending`: A new transfer was created; it is in the pending state.
		///
		///`cancelled`: The transfer was cancelled by the client.
		///
		///`failed`: The transfer failed, no funds were moved.
		///
		///`posted`: The transfer has been successfully submitted to the payment network.
		///
		///`reversed`: A posted transfer was reversed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_type")]
		public BankTransferEventEvent_type Event_type { get; set; }
		
		/// <summary>
		/// The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public BankTransferFailure Failure_reason { get; set; }
		
		/// <summary>
		/// The ID of the origination account that this balance belongs to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inbound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventEvent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reversed = 4,
	}
	
	/// <summary>
	/// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventListBankTransferType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Indicates the direction of the transfer: `outbound`: for API-initiated transfers
	///`inbound`: for payments received by the FBO account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventListDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outbound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/event/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferEventListRequest
	{
		
		/// <summary>
		/// The account ID to get events for all transactions to/from an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a bank transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_id")]
		public string Bank_transfer_id { get; set; }
		
		/// <summary>
		/// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_type")]
		public System.Nullable<BankTransferEventListRequestBank_transfer_type> Bank_transfer_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of bank transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Indicates the direction of the transfer: `outbound`: for API-initiated transfers
		///`inbound`: for payments received by the FBO account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<BankTransferEventListRequestDirection> Direction { get; set; }
		
		/// <summary>
		/// The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// Filter events by event type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_types")]
		public BankTransferEventType[] Event_types { get; set; }
		
		/// <summary>
		/// The offset into the list of bank transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// The origination account ID to get events for transfers from a specific origination account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateTimeOffset> Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventListRequestBank_transfer_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventListRequestDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outbound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// The type of event that this bank transfer represents.
	///
	///`pending`: A new transfer was created; it is in the pending state.
	///
	///`cancelled`: The transfer was cancelled by the client.
	///
	///`failed`: The transfer failed, no funds were moved.
	///
	///`posted`: The transfer has been successfully submitted to the payment network.
	///
	///`reversed`: A posted transfer was reversed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reversed = 4,
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/event/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferEventListResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_events")]
		public BankTransferEvent[] Bank_transfer_events { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/event/sync`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferEventSyncRequest
	{
		
		/// <summary>
		/// The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="after_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int After_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of bank transfer events to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/event/sync`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferEventSyncResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_events")]
		public BankTransferEvent[] Bank_transfer_events { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferGetRequest
	{
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_id")]
		public string Bank_transfer_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferGetResponse
	{
		
		/// <summary>
		/// Represents a bank transfer within the Bank Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer")]
		public BankTransfer Bank_transfer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of bank transfers to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Indicates the direction of the transfer: `outbound` for API-initiated transfers, or `inbound` for payments received by the FBO account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<BankTransferListRequestDirection> Direction { get; set; }
		
		/// <summary>
		/// The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// The number of bank transfers to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Filter bank transfers to only those originated through the specified origination account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateTimeOffset> Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankTransferListRequestDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inbound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferListResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfers")]
		public BankTransfer[] Bank_transfers { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/migrate_account`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferMigrateAccountRequest
	{
		
		/// <summary>
		/// The user's account number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The type of the bank account (`checking` or `savings`).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public string Account_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The user's routing number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user's wire transfer routing number. This is the ABA number; for some institutions, this may differ from the ACH number used in `routing_number`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wire_routing_number")]
		public string Wire_routing_number { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/bank_transfer/migrate_account`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferMigrateAccountResponse
	{
		
		/// <summary>
		/// The Plaid `access_token` for the newly created Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` for the newly created Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// BankTransferSweep describes a sweep transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferSweep
	{
		
		/// <summary>
		/// The amount of the sweep.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The datetime when the sweep occurred, in RFC 3339 format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Identifier of the sweep.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The currency of the sweep, e.g. "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/bank_transfer/sweep/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferSweepGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Identifier of the sweep.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweep_id")]
		public string Sweep_id { get; set; }
	}
	
	/// <summary>
	/// BankTransferSweepGetResponse defines the response schema for `/bank_transfer/sweep/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferSweepGetResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// BankTransferSweep describes a sweep transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweep")]
		public BankTransferSweep Sweep { get; set; }
	}
	
	/// <summary>
	/// BankTransferSweepListRequest defines the request schema for `/bank_transfer/sweep/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferSweepListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of sweeps to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end datetime of sweeps to return (RFC 3339 format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public System.Nullable<System.DateTimeOffset> End_time { get; set; }
		
		/// <summary>
		/// If multiple origination accounts are available, `origination_account_id` must be used to specify the account that the sweeps belong to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of sweeps to return (RFC 3339 format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
	}
	
	/// <summary>
	/// BankTransferSweepListResponse defines the response schema for `/bank_transfer/sweep/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransferSweepListResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweeps")]
		public BankTransferSweep[] Sweeps { get; set; }
	}
	
	/// <summary>
	/// Fired when new bank transfer events are available. Receiving this webhook indicates you should fetch the new events from `/bank_transfer/event/sync`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransfersEventsUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// `BANK_TRANSFERS_EVENTS_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `BANK_TRANSFERS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Fired when new ACH events are available. To begin receiving this webhook, you must first register your webhook listener endpoint via the [webhooks page in the Dashboard](https://dashboard.plaid.com/team/webhooks). The `BANK_TRANSFERS_EVENTS_UPDATE` webhook can be used to track the progress of ACH transfers used in [micro-deposit verification](/docs/auth/coverage/microdeposit-events/). Receiving this webhook indicates you should fetch the new events from `/bank_transfer/event/sync`. Note that [Transfer](https://plaid.com/docs/transfer) customers should use Transfer webhooks instead of using `BANK_TRANSFERS_EVENTS_UPDATE`; see [micro-deposit events documentation](https://plaid.com/docs/auth/coverage/microdeposit-events/) for more details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankTransfersEventsUpdateWebhookForAuth
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// `BANK_TRANSFERS_EVENTS_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `BANK_TRANSFERS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// CategoriesGetRequest defines the request schema for `/categories/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoriesGetRequest
	{
	}
	
	/// <summary>
	/// CategoriesGetResponse defines the response schema for `/categories/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CategoriesGetResponse
	{
		
		/// <summary>
		/// An array of all of the transaction categories used by Plaid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public Category[] Categories { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Information describing a transaction category
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Category
	{
		
		/// <summary>
		/// An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// `place` for physical transactions or `special` for other transactions such as bank charges.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// A hierarchical array of the categories to which this `category_id` belongs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hierarchy")]
		public string[] Hierarchy { get; set; }
	}
	
	/// <summary>
	/// A client-provided transaction that Plaid has enhanced.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientProvidedEnhancedTransaction
	{
		
		/// <summary>
		/// The value of the transaction, denominated in the account's currency, as stated in `iso_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// The raw description of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A grouping of the Plaid produced transaction enhancement fields.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enhancements")]
		public Enhancements Enhancements { get; set; }
		
		/// <summary>
		/// Unique transaction identifier to tie transactions back to clients' systems.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
	}
	
	/// <summary>
	/// A grouping of the Plaid produced transaction enhancement fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Enhancements
	{
		
		/// <summary>
		/// A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string[] Category { get; set; }
		
		/// <summary>
		/// The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// The check number of the transaction. This field is only populated for check transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="check_number")]
		public string Check_number { get; set; }
		
		/// <summary>
		/// The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="counterparties")]
		public Counterparty[] Counterparties { get; set; }
		
		/// <summary>
		/// A representation of where a transaction took place
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
		
		/// <summary>
		/// The URL of a logo associated with this transaction, if available. The logo is formatted as a 100x100 pixel PNG file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The name of the primary counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merchant_name")]
		public string Merchant_name { get; set; }
		
		/// <summary>
		/// The channel used to make a payment.
		///`online:` transactions that took place online.
		///
		///`in store:` transactions that were made at a physical location.
		///
		///`other:` transactions that relate to banks, e.g. fees or deposits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_channel")]
		public EnhancementsPayment_channel Payment_channel { get; set; }
		
		/// <summary>
		/// Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category")]
		public PersonalFinanceCategory Personal_finance_category { get; set; }
		
		/// <summary>
		/// A link to the icon associated with the primary personal finance category. The logo will always be 100x100 pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category_icon_url")]
		public string Personal_finance_category_icon_url { get; set; }
		
		/// <summary>
		/// The website associated with this transaction, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	/// <summary>
	/// The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Counterparty
	{
		
		/// <summary>
		/// A unique, stable, Plaid-generated id that maps to the counterparty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity_id")]
		public string Entity_id { get; set; }
		
		/// <summary>
		/// The URL of a logo associated with the counterparty, if available. The logo is formatted as a 100x100 pixel PNG file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The counterparty type.
		///
		///`merchant`: a provider of goods or services for purchase
		///`financial_institution`: a financial entity (bank, credit union, BNPL, fintech)
		///`payment_app`: a transfer or P2P app (e.g. Zelle)
		///`marketplace`: a marketplace (e.g DoorDash, Google Play Store)
		///`payment_terminal`: a point-of-sale payment terminal (e.g Square, Toast)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CounterpartyType Type { get; set; }
		
		/// <summary>
		/// The website associated with the counterparty.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CounterpartyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		merchant = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		financial_institution = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payment_app = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		marketplace = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payment_terminal = 4,
	}
	
	/// <summary>
	/// A representation of where a transaction took place
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Location
	{
		
		/// <summary>
		/// The street address where the transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		/// <summary>
		/// The city where the transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code where the transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The latitude where the transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lat")]
		public System.Nullable<System.Double> Lat { get; set; }
		
		/// <summary>
		/// The longitude where the transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lon")]
		public System.Nullable<System.Double> Lon { get; set; }
		
		/// <summary>
		/// The postal code where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `zip`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `state`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The merchant defined store number where the transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store_number")]
		public string Store_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnhancementsPayment_channel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		online = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in store")]
		in_store = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	/// <summary>
	/// Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.
	///
	///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PersonalFinanceCategory
	{
		
		/// <summary>
		/// A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detailed")]
		public string Detailed { get; set; }
		
		/// <summary>
		/// A high level category that communicates the broad category of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public string Primary { get; set; }
	}
	
	/// <summary>
	/// A client-provided transaction that Plaid has enriched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientProvidedEnrichedTransaction
	{
		
		/// <summary>
		/// The absolute value of the transaction (>= 0)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// The raw description of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The direction of the transaction from the perspective of the account holder:
		///
		///`OUTFLOW` - Includes outgoing transfers, purchases, and fees. (Typically represented as a negative value on checking accounts and debit cards and a positive value on credit cards.)
		///
		///`INFLOW` - Includes incoming transfers, refunds, and income. (Typically represented as a positive value on checking accounts and debit cards and a negative value on credit cards.)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<ClientProvidedEnrichedTransactionDirection> Direction { get; set; }
		
		/// <summary>
		/// A grouping of the Plaid produced transaction enrichment fields.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enrichments")]
		public Enrichments Enrichments { get; set; }
		
		/// <summary>
		/// The unique ID for the transaction as provided by you in the request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the transaction e.g. USD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClientProvidedEnrichedTransactionDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTFLOW = 1,
	}
	
	/// <summary>
	/// A grouping of the Plaid produced transaction enrichment fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Enrichments
	{
		
		/// <summary>
		/// The check number of the transaction. This field is only populated for check transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="check_number")]
		public string Check_number { get; set; }
		
		/// <summary>
		/// The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="counterparties")]
		public Counterparty[] Counterparties { get; set; }
		
		/// <summary>
		/// A unique, stable, Plaid-generated id that maps to the primary counterparty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity_id")]
		public string Entity_id { get; set; }
		
		/// <summary>
		/// A hierarchical array of the legacy categories to which this transaction belongs. For a full list of legacy categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		///
		///We recommend using the `personal_finance_category` for transaction categorization to obtain the best results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacy_category")]
		public string[] Legacy_category { get; set; }
		
		/// <summary>
		/// The ID of the legacy category to which this transaction belongs. For a full list of legacy categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		///
		///We recommend using the `personal_finance_category` for transaction categorization to obtain the best results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacy_category_id")]
		public string Legacy_category_id { get; set; }
		
		/// <summary>
		/// A representation of where a transaction took place
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
		
		/// <summary>
		/// The URL of a logo associated with this transaction, if available. The logo is formatted as a 100x100 pixel PNG file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The name of the primary counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="merchant_name")]
		public string Merchant_name { get; set; }
		
		/// <summary>
		/// The channel used to make a payment.
		///`online:` transactions that took place online.
		///
		///`in store:` transactions that were made at a physical location.
		///
		///`other:` transactions that relate to banks, e.g. fees or deposits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_channel")]
		public EnrichmentsPayment_channel Payment_channel { get; set; }
		
		/// <summary>
		/// Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category")]
		public PersonalFinanceCategory Personal_finance_category { get; set; }
		
		/// <summary>
		/// A link to the icon associated with the primary personal finance category. The logo will always be 100x100 pixels.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category_icon_url")]
		public string Personal_finance_category_icon_url { get; set; }
		
		/// <summary>
		/// Insights relating to expenses and deposits that are predicted to occur on a scheduled basis, such as biweekly, monthly, or annually.
		///
		///Common examples include loan payments, bill payments, subscriptions, and payroll income.
		///
		///This is a beta field, available to all users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recurrence")]
		public Recurrence Recurrence { get; set; }
		
		/// <summary>
		/// The website associated with this transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnrichmentsPayment_channel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		online = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in store")]
		in_store = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	/// <summary>
	/// Insights relating to expenses and deposits that are predicted to occur on a scheduled basis, such as biweekly, monthly, or annually.
	///
	///Common examples include loan payments, bill payments, subscriptions, and payroll income.
	///
	///This is a beta field, available to all users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Recurrence
	{
		
		/// <summary>
		/// Whether or not the transaction is periodically recurring.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_recurring")]
		public System.Nullable<System.Boolean> Is_recurring { get; set; }
	}
	
	/// <summary>
	/// A client-provided transaction for Plaid to enhance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientProvidedRawTransaction
	{
		
		/// <summary>
		/// The value of the transaction with direction. (NOTE: this will affect enrichment results, so directions are important):.
		///  Negative (-) for credits (e.g., incoming transfers, refunds)
		///  Positive (+) for debits (e.g., purchases, fees, outgoing transfers)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// The raw description of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique ID for the transaction used to help you tie data back to your systems.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the transaction e.g. USD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
	}
	
	/// <summary>
	/// A client-provided transaction for Plaid to enrich.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientProvidedTransaction
	{
		
		/// <summary>
		/// The absolute value of the transaction (>= 0). When testing Enrich, note that `amount` data should be realistic. Unrealistic or inaccurate `amount` data may result in reduced quality output.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_posted")]
		public System.Nullable<System.DateOnly> Date_posted { get; set; }
		
		/// <summary>
		/// The raw description of the transaction. If you have location data in available an unstructured format, it may be appended to the `description` field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The direction of the transaction from the perspective of the account holder:
		///
		///`OUTFLOW` - Includes outgoing transfers, purchases, and fees. (Typically represented as a negative value on checking accounts and debit cards and a positive value on credit cards.)
		///
		///`INFLOW` - Includes incoming transfers, refunds, and income. (Typically represented as a positive value on checking accounts and debit cards and a negative value on credit cards.)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public ClientProvidedEnrichedTransactionDirection Direction { get; set; }
		
		/// <summary>
		/// A unique ID for the transaction used to help you tie data back to your systems.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the transaction e.g. USD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// A representation of where a transaction took place.
		///
		///Use this field to pass in structured location information you may have about your transactions. Providing location data is optional but can increase result quality. If you have unstructured location information, it may be appended to the `description` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public ClientProvidedTransactionLocation Location { get; set; }
		
		/// <summary>
		/// Merchant category codes (MCCs) are four-digit numbers that describe a merchant's primary business activities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mcc")]
		public string Mcc { get; set; }
	}
	
	/// <summary>
	/// A representation of where a transaction took place.
	///
	///Use this field to pass in structured location information you may have about your transactions. Providing location data is optional but can increase result quality. If you have unstructured location information, it may be appended to the `description` field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientProvidedTransactionLocation
	{
		
		/// <summary>
		/// The street address where the transaction occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		/// <summary>
		/// The city where the transaction occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The country where the transaction occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code where the transaction occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state where the transaction occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	/// <summary>
	/// Describes the connected application for a particular end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectedApplication
	{
		
		/// <summary>
		/// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_id")]
		public string Application_id { get; set; }
		
		/// <summary>
		/// The URL for the application's website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="application_url")]
		public string Application_url { get; set; }
		
		/// <summary>
		/// The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateOnly Created_at { get; set; }
		
		/// <summary>
		/// A human-readable name of the application for display purposes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// A URL that links to the application logo image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The name of the application
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A string provided by the connected app stating why they use their respective enabled products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason_for_access")]
		public string Reason_for_access { get; set; }
		
		/// <summary>
		/// The scopes object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public ScopesNullable Scopes { get; set; }
	}
	
	/// <summary>
	/// ISO-3166-1 alpha-2 country code standard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CountryCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DK = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LV = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PT = 16,
	}
	
	/// <summary>
	/// An object representing an end user's 1099 tax form
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credit1099
	{
		
		/// <summary>
		/// Amount reported for April.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="april_amount")]
		public System.Nullable<System.Double> April_amount { get; set; }
		
		/// <summary>
		/// Amount reported for August.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="august_amount")]
		public System.Nullable<System.Double> August_amount { get; set; }
		
		/// <summary>
		/// Amount in card not present transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="card_not_present_transaction")]
		public System.Nullable<System.Double> Card_not_present_transaction { get; set; }
		
		/// <summary>
		/// Amount of crop insurance proceeds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crop_insurance_proceeds")]
		public System.Nullable<System.Double> Crop_insurance_proceeds { get; set; }
		
		/// <summary>
		/// Amount reported for December.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="december_amount")]
		public System.Nullable<System.Double> December_amount { get; set; }
		
		/// <summary>
		/// An identifier of the document referenced by the document metadata.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_id")]
		public string Document_id { get; set; }
		
		/// <summary>
		/// Object representing metadata pertaining to the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_metadata")]
		public CreditDocumentMetadata Document_metadata { get; set; }
		
		/// <summary>
		/// Amount of golden parachute payments made by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excess_golden_parachute_payments")]
		public System.Nullable<System.Double> Excess_golden_parachute_payments { get; set; }
		
		/// <summary>
		/// Amount reported for February.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="february_amount")]
		public System.Nullable<System.Double> February_amount { get; set; }
		
		/// <summary>
		/// Amount of federal income tax withheld from payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="federal_income_tax_withheld")]
		public System.Nullable<System.Double> Federal_income_tax_withheld { get; set; }
		
		/// <summary>
		/// An object representing a filer used by 1099-K tax documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filer")]
		public Credit1099Filer Filer { get; set; }
		
		/// <summary>
		/// Amount of fishing boat proceeds from payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fishing_boat_proceeds")]
		public System.Nullable<System.Double> Fishing_boat_proceeds { get; set; }
		
		/// <summary>
		/// Form 1099 Type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="form_1099_type")]
		public System.Nullable<Credit1099Form_1099_type> Form_1099_type { get; set; }
		
		/// <summary>
		/// Gross amount reported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gross_amount")]
		public System.Nullable<System.Double> Gross_amount { get; set; }
		
		/// <summary>
		/// Amount of gross proceeds paid to an attorney by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gross_proceeds_paid_to_an_attorney")]
		public System.Nullable<System.Double> Gross_proceeds_paid_to_an_attorney { get; set; }
		
		/// <summary>
		/// Amount reported for January.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="january_amount")]
		public System.Nullable<System.Double> January_amount { get; set; }
		
		/// <summary>
		/// Amount reported for July.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="july_amount")]
		public System.Nullable<System.Double> July_amount { get; set; }
		
		/// <summary>
		/// Amount reported for June.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="june_amount")]
		public System.Nullable<System.Double> June_amount { get; set; }
		
		/// <summary>
		/// Amount reported for March.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="march_amount")]
		public System.Nullable<System.Double> March_amount { get; set; }
		
		/// <summary>
		/// Amount reported for May.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="may_amount")]
		public System.Nullable<System.Double> May_amount { get; set; }
		
		/// <summary>
		/// Amount of medical and healthcare payments from payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medical_and_healthcare_payments")]
		public System.Nullable<System.Double> Medical_and_healthcare_payments { get; set; }
		
		/// <summary>
		/// Merchant category of filer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merchant_category_code")]
		public string Merchant_category_code { get; set; }
		
		/// <summary>
		/// Amount of nonemployee compensation from payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nonemployee_compensation")]
		public System.Nullable<System.Double> Nonemployee_compensation { get; set; }
		
		/// <summary>
		/// Amount reported for November.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="november_amount")]
		public System.Nullable<System.Double> November_amount { get; set; }
		
		/// <summary>
		/// Number of payment transactions made.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_payment_transactions")]
		public string Number_of_payment_transactions { get; set; }
		
		/// <summary>
		/// Amount reported for October.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="october_amount")]
		public System.Nullable<System.Double> October_amount { get; set; }
		
		/// <summary>
		/// Amount in other income by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="other_income")]
		public System.Nullable<System.Double> Other_income { get; set; }
		
		/// <summary>
		/// An object representing a payer used by 1099-MISC tax documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payer")]
		public Credit1099Payer Payer { get; set; }
		
		/// <summary>
		/// Whether or not payer made direct sales over $5000 of consumer products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer")]
		public string Payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer { get; set; }
		
		/// <summary>
		/// Primary state ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payer_state_number")]
		public string Payer_state_number { get; set; }
		
		/// <summary>
		/// Secondary state ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payer_state_number_lower")]
		public string Payer_state_number_lower { get; set; }
		
		/// <summary>
		/// Primary state of business.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_state")]
		public string Primary_state { get; set; }
		
		/// <summary>
		/// Primary state ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_state_id")]
		public string Primary_state_id { get; set; }
		
		/// <summary>
		/// State income tax reported for primary state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_state_income_tax")]
		public System.Nullable<System.Double> Primary_state_income_tax { get; set; }
		
		/// <summary>
		/// Name of the PSE (Payment Settlement Entity).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pse_name")]
		public string Pse_name { get; set; }
		
		/// <summary>
		/// Formatted (XXX) XXX-XXXX. Phone number of the PSE (Payment Settlement Entity).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pse_telephone_number")]
		public string Pse_telephone_number { get; set; }
		
		/// <summary>
		/// An object representing a recipient used in both 1099-K and 1099-MISC tax documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient")]
		public Credit1099Recipient Recipient { get; set; }
		
		/// <summary>
		/// Amount in rent by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rents")]
		public System.Nullable<System.Double> Rents { get; set; }
		
		/// <summary>
		/// Amount in royalties by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="royalties")]
		public System.Nullable<System.Double> Royalties { get; set; }
		
		/// <summary>
		/// Secondary state of business.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secondary_state")]
		public string Secondary_state { get; set; }
		
		/// <summary>
		/// Secondary state ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secondary_state_id")]
		public string Secondary_state_id { get; set; }
		
		/// <summary>
		/// State income tax reported for secondary state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secondary_state_income_tax")]
		public System.Nullable<System.Double> Secondary_state_income_tax { get; set; }
		
		/// <summary>
		/// Amount of 409A deferrals earned by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section_409a_deferrals")]
		public System.Nullable<System.Double> Section_409a_deferrals { get; set; }
		
		/// <summary>
		/// Amount of 409A income earned by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section_409a_income")]
		public System.Nullable<System.Double> Section_409a_income { get; set; }
		
		/// <summary>
		/// Amount reported for September.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="september_amount")]
		public System.Nullable<System.Double> September_amount { get; set; }
		
		/// <summary>
		/// State income reported for primary state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_income")]
		public System.Nullable<System.Double> State_income { get; set; }
		
		/// <summary>
		/// State income reported for secondary state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_income_lower")]
		public System.Nullable<System.Double> State_income_lower { get; set; }
		
		/// <summary>
		/// Amount of state tax withheld of payer for primary state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_tax_withheld")]
		public System.Nullable<System.Double> State_tax_withheld { get; set; }
		
		/// <summary>
		/// Amount of state tax withheld of payer for secondary state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_tax_withheld_lower")]
		public System.Nullable<System.Double> State_tax_withheld_lower { get; set; }
		
		/// <summary>
		/// Amount of substitute payments made by payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="substitute_payments_in_lieu_of_dividends_or_interest")]
		public System.Nullable<System.Double> Substitute_payments_in_lieu_of_dividends_or_interest { get; set; }
		
		/// <summary>
		/// Tax year of the tax form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_year")]
		public string Tax_year { get; set; }
		
		/// <summary>
		/// One of the values will be provided Payment card Third party network
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions_reported")]
		public string Transactions_reported { get; set; }
	}
	
	/// <summary>
	/// Object representing metadata pertaining to the document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditDocumentMetadata
	{
		
		/// <summary>
		/// The type of document.
		///
		///`PAYSTUB`: A paystub.
		///
		///`BANK_STATEMENT`: A bank statement.
		///
		///`US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.
		///
		///`US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.
		///
		///`US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.
		///
		///`US_MILITARY_CLES`: A Civilian Leave and Earnings Statment (CLES) issued by the US military.
		///
		///`GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.
		///
		///`PLAID_GENERATED_PAYSTUB_PDF`: Used to indicate that the PDF for the paystub was generated by Plaid.
		///
		///`NONE`: Used to indicate that there is no underlying document for the data.
		///
		///`UNKNOWN`: Document type could not be determined.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_type")]
		public string Document_type { get; set; }
		
		/// <summary>
		/// Signed URL to retrieve the underlying file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		/// <summary>
		/// The name of the document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The processing status of the document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// An object representing a filer used by 1099-K tax documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credit1099Filer
	{
		
		/// <summary>
		/// Address on the pay stub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public CreditPayStubAddress Address { get; set; }
		
		/// <summary>
		/// Name of filer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Tax identification number of filer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tin")]
		public string Tin { get; set; }
		
		/// <summary>
		/// One of the following values will be provided: Payment Settlement Entity (PSE), Electronic Payment Facilitator (EPF), Other Third Party
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Address on the pay stub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStubAddress
	{
		
		/// <summary>
		/// The full city name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code of the address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state.
		///Example: `"NC"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Credit1099Form_1099_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_1099_TYPE_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_1099_TYPE_MISC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_1099_TYPE_K = 2,
	}
	
	/// <summary>
	/// An object representing a payer used by 1099-MISC tax documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credit1099Payer
	{
		
		/// <summary>
		/// Address on the pay stub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public CreditPayStubAddress Address { get; set; }
		
		/// <summary>
		/// Name of payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Telephone number of payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="telephone_number")]
		public string Telephone_number { get; set; }
		
		/// <summary>
		/// Tax identification number of payer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tin")]
		public string Tin { get; set; }
	}
	
	/// <summary>
	/// An object representing a recipient used in both 1099-K and 1099-MISC tax documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credit1099Recipient
	{
		
		/// <summary>
		/// Account number number of recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// Address on the pay stub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public CreditPayStubAddress Address { get; set; }
		
		/// <summary>
		/// Checked if FACTA is a filing requirement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facta_filing_requirement")]
		public string Facta_filing_requirement { get; set; }
		
		/// <summary>
		/// Name of recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Checked if 2nd TIN exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="second_tin_exists")]
		public string Second_tin_exists { get; set; }
		
		/// <summary>
		/// Tax identification number of recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tin")]
		public string Tin { get; set; }
	}
	
	/// <summary>
	/// A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAccount
	{
		
		/// <summary>
		/// Bank-issued credit card
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="credit card")]
		public string Credit_card { get; set; }
		
		/// <summary>
		/// PayPal-issued credit card
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paypal")]
		public string Paypal { get; set; }
	}
	
	/// <summary>
	/// This contains an amount, denominated in the currency specified by either `iso_currency_code` or `unofficial_currency_code`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAmountWithCurrency
	{
		
		/// <summary>
		/// Value of amount with up to 2 decimal places.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// The ISO 4217 currency code of the amount or balance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
		///Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// CreditAuditCopyTokenCreateRequest defines the request schema for `/credit/audit_copy_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAuditCopyTokenCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// List of report tokens; can include at most one VOA/standard Asset Report tokens and one VOE Asset Report Token.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_tokens")]
		public string[] Report_tokens { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// CreditAuditCopyTokenCreateResponse defines the response schema for `/credit/audit_copy_token/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAuditCopyTokenCreateResponse
	{
		
		/// <summary>
		/// A token that can be shared with a third party auditor, which allows them to fetch the Asset Reports attached to the token. This token should be stored securely.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// CreditAuditCopyTokenRemoveRequest defines the request schema for `/credit/audit_copy_token/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAuditCopyTokenRemoveRequest
	{
		
		/// <summary>
		/// The `audit_copy_token` granting access to the Audit Copy you would like to revoke.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// CreditAuditCopyTokenRemoveResponse defines the response schema for `/credit/audit_copy_token/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAuditCopyTokenRemoveResponse
	{
		
		/// <summary>
		/// `true` if the Audit Copy was successfully removed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public bool Removed { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// CreditAuditCopyTokenUpdateRequest defines the request schema for `/credit/audit_copy_token/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAuditCopyTokenUpdateRequest
	{
		
		/// <summary>
		/// The `audit_copy_token` you would like to update.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Array of tokens which the specified Audit Copy Token will be updated with. The types of token supported are asset report token and employment report token. There can be at most 1 of each token type in the array.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_tokens")]
		public string[] Report_tokens { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// CreditAuditCopyTokenUpdateResponse defines the response schema for `/credit/audit_copy_token/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditAuditCopyTokenUpdateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// `true` if the Audit Copy Token was successfully updated.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public bool Updated { get; set; }
	}
	
	/// <summary>
	/// Object containing employer data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmployer
	{
		
		/// <summary>
		/// Name of the employer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Detailed information for the bank employment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmployment
	{
		
		/// <summary>
		/// Plaid's unique identifier for the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the bank employment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_employment_id")]
		public string Bank_employment_id { get; set; }
		
		/// <summary>
		/// The date of the earliest deposit from this employer from within the period of the days requested.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="earliest_deposit_date")]
		public System.DateOnly Earliest_deposit_date { get; set; }
		
		/// <summary>
		/// Object containing employer data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public CreditBankEmployer Employer { get; set; }
		
		/// <summary>
		/// The date of the most recent deposit from this employer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="latest_deposit_date")]
		public System.DateOnly Latest_deposit_date { get; set; }
	}
	
	/// <summary>
	/// CreditBankEmploymentGetRequest defines the request schema for `/beta/credit/v1/bank_employment/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmploymentGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// CreditBankEmploymentGetResponse defines the response schema for `/beta/credit/v1/bank_employment/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmploymentGetResponse
	{
		
		/// <summary>
		/// Bank Employment data. Each entry in the array will be a distinct bank employment report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_employment_reports")]
		public CreditBankEmploymentReport[] Bank_employment_reports { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The report of the Bank Employment data for an end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmploymentReport
	{
		
		/// <summary>
		/// The unique identifier associated with the Bank Employment Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_employment_report_id")]
		public string Bank_employment_report_id { get; set; }
		
		/// <summary>
		/// The number of days requested by the customer for the Bank Employment Report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		public int Days_requested { get; set; }
		
		/// <summary>
		/// The time when the Bank Employment Report was generated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="generated_time")]
		public System.DateTimeOffset Generated_time { get; set; }
		
		/// <summary>
		/// The list of Items in the report along with the associated metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public CreditBankEmploymentItem[] Items { get; set; }
		
		/// <summary>
		/// If data from the Bank Employment report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public CreditBankEmploymentWarning[] Warnings { get; set; }
	}
	
	/// <summary>
	/// The details and metadata for an end user's Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmploymentItem
	{
		
		/// <summary>
		/// The Item's accounts that have Bank Employment data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_employment_accounts")]
		public CreditBankIncomeAccount[] Bank_employment_accounts { get; set; }
		
		/// <summary>
		/// The bank employment information for this Item. Each entry in the array is a different employer found.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_employments")]
		public CreditBankEmployment[] Bank_employments { get; set; }
		
		/// <summary>
		/// The unique identifier of the institution associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The name of the institution associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// The unique identifier for the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The time when this Item's data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. "2018-04-12T03:32:11Z").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_updated_time")]
		public System.DateTimeOffset Last_updated_time { get; set; }
	}
	
	/// <summary>
	/// The Item's bank accounts that have the selected data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeAccount
	{
		
		/// <summary>
		/// Plaid's unique identifier for the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The last 2-4 alphanumeric characters of an account's official account number.
		///Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mask")]
		public string Mask { get; set; }
		
		/// <summary>
		/// The name of the bank account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The official name of the bank account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="official_name")]
		public string Official_name { get; set; }
		
		/// <summary>
		/// Data returned by the financial institution about the account owner or owners. Identity information is optional, so field may return an empty array.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owners")]
		public Owner[] Owners { get; set; }
		
		/// <summary>
		/// Valid account subtypes for depository accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-depository).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public CreditBankIncomeAccountSubtype Subtype { get; set; }
		
		/// <summary>
		/// The account type. This will always be `depository`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CreditBankIncomeAccountType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeAccountSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checking = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		savings = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hsa = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cd = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="money market")]
		money_market = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prepaid = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash management")]
		cash_management = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebt = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeAccountType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		depository = 0,
	}
	
	/// <summary>
	/// The warning associated with the data that was unavailable for the Bank Employment Report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankEmploymentWarning
	{
		
		/// <summary>
		/// An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cause")]
		public CreditBankIncomeCause Cause { get; set; }
		
		/// <summary>
		/// The warning code identifies a specific kind of warning.
		///`IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item
		///`TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item
		///`ITEM_UNAPPROVED`: User exited flow before giving permission to share data for the Item
		///`REPORT_DELETED`: Report deleted due to customer or consumer request
		///`DATA_UNAVAILABLE`: No relevant data was found for the Item
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warning_code")]
		public CreditBankEmploymentWarningWarning_code Warning_code { get; set; }
		
		/// <summary>
		/// The warning type which will always be `BANK_EMPLOYMENT_WARNING`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="warning_type")]
		public CreditBankEmploymentWarningWarning_type Warning_type { get; set; }
	}
	
	/// <summary>
	/// An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeCause
	{
		
		/// <summary>
		/// A user-friendly representation of the error code. null if the error is not related to user action.
		///This may change over time and is not safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="display_message")]
		public string Display_message { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. Error fields will be `null` if no error has occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// A broad categorization of the error. Safe for programmatic use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_type")]
		public CreditBankIncomeCauseError_type Error_type { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this warning.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeCauseError_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_SERVER_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSUFFICIENT_CREDENTIALS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_LOCKED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_SETUP_REQUIRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNTRY_NOT_SUPPORTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_DOWN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_NO_LONGER_SUPPORTED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_NOT_RESPONDING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_CREDENTIALS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_MFA = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_SEND_METHOD = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_LOGIN_REQUIRED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MFA_NOT_SUPPORTED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_ACCOUNTS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_NOT_SUPPORTED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_NOT_GRANTED = 15,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankEmploymentWarningWarning_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDENTITY_UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONS_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_UNAPPROVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORT_DELETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_UNAVAILABLE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankEmploymentWarningWarning_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_EMPLOYMENT_WARNING = 0,
	}
	
	/// <summary>
	/// The warning type which will always be `BANK_EMPLOYMENT_WARNING`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankEmploymentWarningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_EMPLOYMENT_WARNING = 0,
	}
	
	/// <summary>
	/// The report of the Bank Income data for an end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncome
	{
		
		/// <summary>
		/// The unique identifier associated with the Bank Income Report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income_id")]
		public string Bank_income_id { get; set; }
		
		/// <summary>
		/// Summary for bank income across all income sources and items (max history of 730 days).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income_summary")]
		public CreditBankIncomeSummary Bank_income_summary { get; set; }
		
		/// <summary>
		/// The number of days requested by the customer for the Bank Income Report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		public System.Nullable<System.Int32> Days_requested { get; set; }
		
		/// <summary>
		/// The time when the Bank Income Report was generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generated_time")]
		public System.Nullable<System.DateTimeOffset> Generated_time { get; set; }
		
		/// <summary>
		/// The list of Items in the report along with the associated metadata about the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public CreditBankIncomeItem[] Items { get; set; }
		
		/// <summary>
		/// If data from the Bank Income report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public CreditBankIncomeWarning[] Warnings { get; set; }
	}
	
	/// <summary>
	/// Summary for bank income across all income sources and items (max history of 730 days).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeSummary
	{
		
		/// <summary>
		/// The latest date in which all income sources identified by Plaid appear in the user's account.
		///The date will be returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="historical_summary")]
		public CreditBankIncomeHistoricalSummary[] Historical_summary { get; set; }
		
		/// <summary>
		/// Number of income categories per end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_categories_count")]
		public System.Nullable<System.Int32> Income_categories_count { get; set; }
		
		/// <summary>
		/// Number of income sources per end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_sources_count")]
		public System.Nullable<System.Int32> Income_sources_count { get; set; }
		
		/// <summary>
		/// Number of income transactions per end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_transactions_count")]
		public System.Nullable<System.Int32> Income_transactions_count { get; set; }
		
		/// <summary>
		/// The ISO 4217 currency code of the amount or balance.
		///Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-bank-income-summary-total-amounts) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The earliest date within the days requested in which all income sources identified by Plaid appear in a user's account.
		///The date will be returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// Total amount of earnings across all the income sources in the end user's Items for the days requested by the client.
		///This may return an incorrect value if the summary includes income sources in multiple currencies.
		///Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-bank-income-summary-total-amounts) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public System.Nullable<System.Double> Total_amount { get; set; }
		
		/// <summary>
		/// Total amount of earnings across all the income sources in the end user's Items for the days requested by the client.
		///This can contain multiple amounts, with each amount denominated in one unique currency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amounts")]
		public CreditAmountWithCurrency[] Total_amounts { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
		///Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-bank-income-summary-total-amounts) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// The end user's monthly summary for the income source(s).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeHistoricalSummary
	{
		
		/// <summary>
		/// The end date of the period included in this monthly summary.
		///This date will be the last day of the month, unless the month being covered is a partial month because it is the last month included in the summary and the date range being requested does not end with the last day of the month.
		///The date will be returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The ISO 4217 currency code of the amount or balance.
		///Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The start date of the period covered in this monthly summary.
		///This date will be the first day of the month, unless the month being covered is a partial month because it is the first month included in the summary and the date range being requested does not begin with the first day of the month.
		///The date will be returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// Total amount of earnings for the income source(s) of the user for the month in the summary.
		///This may return an incorrect value if the summary includes income sources in multiple currencies.
		///Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public System.Nullable<System.Double> Total_amount { get; set; }
		
		/// <summary>
		/// Total amount of earnings for the income source(s) of the user for the month in the summary.
		///This can contain multiple amounts, with each amount denominated in one unique currency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amounts")]
		public CreditAmountWithCurrency[] Total_amounts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public CreditBankIncomeTransaction[] Transactions { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
		///Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// The transactions data for the end user's income source(s).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeTransaction
	{
		
		/// <summary>
		/// The settled value of the transaction, denominated in the transactions's currency as stated in `iso_currency_code` or `unofficial_currency_code`.
		///Positive values when money moves out of the account; negative values when money moves in.
		///For example, credit card purchases are positive; credit card payment, direct deposits, and refunds are negative.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// The check number of the transaction. This field is only populated for check transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="check_number")]
		public string Check_number { get; set; }
		
		/// <summary>
		/// For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted.
		///Both dates are returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.Nullable<System.DateOnly> Date { get; set; }
		
		/// <summary>
		/// The ISO 4217 currency code of the amount or balance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The merchant name or transaction description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The string returned by the financial institution to describe the transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="original_description")]
		public string Original_description { get; set; }
		
		/// <summary>
		/// When true, identifies the transaction as pending or unsettled.
		///Pending transaction details (name, type, amount, category ID) may change before they are settled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending")]
		public System.Nullable<System.Boolean> Pending { get; set; }
		
		/// <summary>
		/// The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
		///Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// The details and metadata for an end user's Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeItem
	{
		
		/// <summary>
		/// The Item's accounts that have Bank Income data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income_accounts")]
		public CreditBankIncomeAccount[] Bank_income_accounts { get; set; }
		
		/// <summary>
		/// The income sources for this Item. Each entry in the array is a single income source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income_sources")]
		public CreditBankIncomeSource[] Bank_income_sources { get; set; }
		
		/// <summary>
		/// The unique identifier of the institution associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The name of the institution associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// The unique identifier for the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The time when this Item's data was last retrieved from the financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_updated_time")]
		public System.Nullable<System.DateTimeOffset> Last_updated_time { get; set; }
	}
	
	/// <summary>
	/// Detailed information for the income source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeSource
	{
		
		/// <summary>
		/// Plaid's unique identifier for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Maximum of all dates within the specific income sources in the userâ€™s bank account for days requested by the client.
		///The date will be returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="historical_summary")]
		public CreditBankIncomeHistoricalSummary[] Historical_summary { get; set; }
		
		/// <summary>
		/// The income category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_category")]
		public System.Nullable<CreditBankIncomeSourceIncome_category> Income_category { get; set; }
		
		/// <summary>
		/// The most common name or original description for the underlying income transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_description")]
		public string Income_description { get; set; }
		
		/// <summary>
		/// A unique identifier for an income source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_source_id")]
		public string Income_source_id { get; set; }
		
		/// <summary>
		/// The income pay frequency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public System.Nullable<CreditBankIncomeSourcePay_frequency> Pay_frequency { get; set; }
		
		/// <summary>
		/// Minimum of all dates within the specific income sources in the user's bank account for days requested by the client.
		///The date will be returned in an ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// Total amount of earnings in the userâ€™s bank account for the specific income source for days requested by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_amount")]
		public System.Nullable<System.Double> Total_amount { get; set; }
		
		/// <summary>
		/// Number of transactions for the income source within the start and end date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_count")]
		public System.Nullable<System.Int32> Transaction_count { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeSourceIncome_category
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNEMPLOYMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIG_ECONOMY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENTAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHILD_SUPPORT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILITARY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIREMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_TERM_DISABILITY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INTEREST = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASH_DEPOSIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_FROM_APPLICATION = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAX_REFUND = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 13,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeSourcePay_frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIWEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEMI_MONTHLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 5,
	}
	
	/// <summary>
	/// The warning associated with the data that was unavailable for the Bank Income Report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeWarning
	{
		
		/// <summary>
		/// An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cause")]
		public CreditBankIncomeCause Cause { get; set; }
		
		/// <summary>
		/// The warning code identifies a specific kind of warning.
		///`IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item
		///`TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item
		///`ITEM_UNAPPROVED`: User exited flow before giving permission to share data for the Item
		///`REPORT_DELETED`: Report deleted due to customer or consumer request
		///`DATA_UNAVAILABLE`: No relevant data was found for the Item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warning_code")]
		public CreditBankEmploymentWarningWarning_code Warning_code { get; set; }
		
		/// <summary>
		/// The warning type which will always be `BANK_INCOME_WARNING`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warning_type")]
		public System.Nullable<CreditBankIncomeWarningWarning_type> Warning_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeWarningWarning_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INCOME_WARNING = 0,
	}
	
	/// <summary>
	/// The income category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNEMPLOYMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIG_ECONOMY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENTAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHILD_SUPPORT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILITARY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIREMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_TERM_DISABILITY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INTEREST = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASH_DEPOSIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_FROM_APPLICATION = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAX_REFUND = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 13,
	}
	
	/// <summary>
	/// A broad categorization of the error. Safe for programmatic use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_SERVER_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSUFFICIENT_CREDENTIALS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_LOCKED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_SETUP_REQUIRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNTRY_NOT_SUPPORTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_DOWN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_NO_LONGER_SUPPORTED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_NOT_RESPONDING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_CREDENTIALS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_MFA = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_SEND_METHOD = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_LOGIN_REQUIRED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MFA_NOT_SUPPORTED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_ACCOUNTS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_NOT_SUPPORTED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_NOT_GRANTED = 15,
	}
	
	/// <summary>
	/// CreditBankIncomeGetRequest defines the request schema for `/credit/bank_income/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object for `/credit/bank_income/get` request options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public CreditBankIncomeGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// An optional object for `/credit/bank_income/get` request options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeGetRequestOptions
	{
		
		/// <summary>
		/// How many Bank Income Reports should be fetched. Multiple reports may be available if the report has been re-created or refreshed. If more than one report is available, the most recent reports will be returned first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
	}
	
	/// <summary>
	/// CreditBankIncomeGetResponse defines the response schema for `/credit/bank_income/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeGetResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="bank_income")]
		public CreditBankIncome[] Bank_income { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// CreditBankIncomePDFGetRequest defines the request schema for `/credit/bank_income/pdf/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomePDFGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// The income pay frequency.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomePayFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIWEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEMI_MONTHLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 5,
	}
	
	/// <summary>
	/// CreditBankIncomeRefreshRequest defines the request schema for `/credit/bank_income/refresh`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeRefreshRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object for `/credit/bank_income/refresh` request options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public CreditBankIncomeRefreshRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// An optional object for `/credit/bank_income/refresh` request options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeRefreshRequestOptions
	{
		
		/// <summary>
		/// How many days of data to include in the refresh. If not specified, this will default to the days requested in the most recently generated bank income report for the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		public System.Nullable<System.Int32> Days_requested { get; set; }
		
		/// <summary>
		/// The URL where Plaid will send the bank income webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// CreditBankIncomeRefreshResponse defines the response schema for `/credit/bank_income/refresh`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditBankIncomeRefreshResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The warning code identifies a specific kind of warning.
	///`IDENTITY_UNAVAILABLE`: Unable to extract identity for the Item
	///`TRANSACTIONS_UNAVAILABLE`: Unable to extract transactions for the Item
	///`ITEM_UNAPPROVED`: User exited flow before giving permission to share data for the Item
	///`REPORT_DELETED`: Report deleted due to customer or consumer request
	///`DATA_UNAVAILABLE`: No relevant data was found for the Item
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeWarningCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDENTITY_UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONS_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_UNAPPROVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORT_DELETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_UNAVAILABLE = 4,
	}
	
	/// <summary>
	/// The warning type which will always be `BANK_INCOME_WARNING`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditBankIncomeWarningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INCOME_WARNING = 0,
	}
	
	/// <summary>
	/// An object representing a credit card account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditCardLiability
	{
		
		/// <summary>
		/// The ID of the account that this liability belongs to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The various interest rates that apply to the account. APR information is not provided by all card issuers; if APR data is not available, this array will be empty.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="aprs")]
		public APR[] Aprs { get; set; }
		
		/// <summary>
		/// true if a payment is currently overdue. Availability for this field is limited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_overdue")]
		public System.Nullable<System.Boolean> Is_overdue { get; set; }
		
		/// <summary>
		/// The amount of the last payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_amount")]
		public System.Nullable<System.Double> Last_payment_amount { get; set; }
		
		/// <summary>
		/// The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Availability for this field is limited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_date")]
		public System.Nullable<System.DateOnly> Last_payment_date { get; set; }
		
		/// <summary>
		/// The total amount owed as of the last statement issued
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_statement_balance")]
		public System.Nullable<System.Double> Last_statement_balance { get; set; }
		
		/// <summary>
		/// The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_statement_issue_date")]
		public System.Nullable<System.DateOnly> Last_statement_issue_date { get; set; }
		
		/// <summary>
		/// The minimum payment due for the next billing cycle.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="minimum_payment_amount")]
		public System.Nullable<System.Double> Minimum_payment_amount { get; set; }
		
		/// <summary>
		/// The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_payment_due_date")]
		public System.Nullable<System.DateOnly> Next_payment_due_date { get; set; }
	}
	
	/// <summary>
	/// An object containing employer data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditEmployerVerification
	{
		
		/// <summary>
		/// Name of employer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// CreditEmploymentGetRequest defines the request schema for `/credit/employment/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditEmploymentGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// CreditEmploymentGetResponse defines the response schema for `/credit/employment/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditEmploymentGetResponse
	{
		
		/// <summary>
		/// Array of employment items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public CreditEmploymentItem[] Items { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The object containing employment items.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditEmploymentItem
	{
		
		/// <summary>
		/// Token to represent the underlying Employment data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_report_token")]
		public string Employment_report_token { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employments")]
		public CreditEmploymentVerification[] Employments { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
	}
	
	/// <summary>
	/// The object containing proof of employment data for an individual.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditEmploymentVerification
	{
		
		/// <summary>
		/// ID of the payroll provider account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The type of employment for the individual.
		///`"FULL_TIME"`: A full-time employee.
		///`"PART_TIME"`: A part-time employee.
		///`"CONTRACTOR"`: An employee typically hired externally through a contracting group.
		///`"TEMPORARY"`: A temporary employee.
		///`"OTHER"`: The employee type is not one of the above defined types.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee_type")]
		public string Employee_type { get; set; }
		
		/// <summary>
		/// An object containing employer data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public CreditEmployerVerification Employer { get; set; }
		
		/// <summary>
		/// End of employment, if applicable. Provided in ISO 8601 format (YYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The date of the employee's most recent paystub in ISO 8601 format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_paystub_date")]
		public System.Nullable<System.DateOnly> Last_paystub_date { get; set; }
		
		/// <summary>
		/// The object containing a set of ids related to an employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platform_ids")]
		public CreditPlatformIds Platform_ids { get; set; }
		
		/// <summary>
		/// Start of employment in ISO 8601 format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// Current employment status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Current title of employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// The object containing a set of ids related to an employee.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPlatformIds
	{
		
		/// <summary>
		/// The ID of an employee as given by their employer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The ID of an employee as given by their payroll.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payroll_id")]
		public string Payroll_id { get; set; }
		
		/// <summary>
		/// The ID of the position of the employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="position_id")]
		public string Position_id { get; set; }
	}
	
	/// <summary>
	/// Details about an asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssetDetail_VOE_2_5
	{
		
		/// <summary>
		/// A unique alphanumeric string identifying an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetAccountIdentifier { get; set; }
		
		/// <summary>
		/// Account Report As of Date / Create Date. Format YYYY-MM-DD
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetAsOfDate { get; set; }
		
		/// <summary>
		/// The Number of days requested made to the Financial Institution. Example When looking for 3 months of data from the FI, pass in 90 days.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int AssetDaysRequestedCount { get; set; }
		
		/// <summary>
		/// A text description that further defines the Asset. This could be used to describe the shares associated with the stocks, bonds or mutual funds, retirement funds or business owned that the borrower has disclosed (named) as an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetDescription { get; set; }
		
		/// <summary>
		/// Ownership type of the asset account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetOwnershipType { get; set; }
		
		/// <summary>
		/// A value from a MISMO prescribed list that specifies financial assets in a mortgage loan transaction. Assets may be either liquid or fixed and are associated with a corresponding asset amount.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDetailAssetType AssetType { get; set; }
		
		/// <summary>
		/// Additional Asset Decription some examples are Investment Tax-Deferred , Loan, 401K, 403B, Checking, Money Market, Credit Card,ROTH,529,Biller,ROLLOVER,CD,Savings,Investment Taxable, IRA, Mortgage, Line Of Credit.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTypeAdditionalDescription { get; set; }
		
		/// <summary>
		/// A vendor created unique Identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetUniqueIdentifier { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssetTransactionDetail_VOE_2_5
	{
		
		/// <summary>
		/// Asset Transaction Category Type Enumerated derived by Vendor.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<CreditFreddieMacAssetTransactionDetail_VOE_2_5AssetTransactionCategoryType> AssetTransactionCategoryType { get; set; }
		
		/// <summary>
		/// Asset Transaction Date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateOnly AssetTransactionDate { get; set; }
		
		/// <summary>
		/// Populate with who did the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionPaidByName { get; set; }
		
		/// <summary>
		/// Populate with for whom the transaction is done.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionPaidToName { get; set; }
		
		/// <summary>
		/// Asset Transaction Post Date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateOnly AssetTransactionPostDate { get; set; }
		
		/// <summary>
		/// Asset Transaction Type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDetailAssetTransactionType AssetTransactionType { get; set; }
		
		/// <summary>
		/// FI Provided - examples are atm, cash, check, credit, debit, deposit, directDebit, directDeposit, dividend, fee, interest, other, payment, pointOfSale, repeatPayment, serviceCharge, transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionTypeAdditionalDescription { get; set; }
		
		/// <summary>
		/// A vendor created unique Identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AssetTransactionUniqueIdentifier { get; set; }
		
		/// <summary>
		/// FI provided Transaction Identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FinancialInstitutionTransactionIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditFreddieMacAssetTransactionDetail_VOE_2_5AssetTransactionCategoryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATMFee = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Advertising = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AirTravel = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AlcoholBars = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allowance = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Amusement = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Arts = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoTransport = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoInsurance = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoPayment = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BabySupplies = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BabysitterDaycare = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BankFee = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BillsUtilities = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bonus = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BooksSupplies = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Business Services")]
		Business_Services = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Buy = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CashATM = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Charity = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Check = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChildSupport = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Clothing = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CoffeeShops = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreditCardPayment = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dentist = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Doctor = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Education = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ElectronicsSoftware = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Entertainment = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Eyecare = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FastFood = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FederalTax = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FeesCharges = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinanceCharge = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Financial = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FinancialAdvisor = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FoodDining = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Furnishings = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GasFuel = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GiftsDonations = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Groceries = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gym = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hair = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HealthFitness = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HealthInsurance = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hobbies = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Home = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeImprovement = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeInsurance = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomePhone = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeServices = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HomeSupplies = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hotel = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Income = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InterestIncome = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Internet = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Investments = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kids = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KidsActivities = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LateFee = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Laundry = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LawnGarden = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Legal = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LifeInsurance = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoanInsurance = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LoanPayment = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Loans = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MobilePhone = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MortgageRent = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MoviesDVDs = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Music = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NewspapersMagazines = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OfficeSupplies = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Parking = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paycheck = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PersonalCare = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PetFoodSupplies = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PetGrooming = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pets = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pharmacy = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Printing = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Property Tax")]
		Property_Tax = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Public Transportation")]
		Public_Transportation = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Reimbursement = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RentalCarTaxi = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restaurants = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SalesTax = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceParts = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceFee = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shipping = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shopping = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SpaMassage = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SportingGoods = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sports = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StateTax = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Student Loan")]
		Student_Loan = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Taxes = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Television = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Toys = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Transfer = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Travel = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tuition = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uncategorized = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Utilities = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Vacation = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Veterinary = 106,
	}
	
	/// <summary>
	/// An object representing...
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssetTransaction_VOA_2_4
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDescription[] ASSET_TRANSACTION_DESCRIPTION { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDetail ASSET_TRANSACTION_DETAIL { get; set; }
	}
	
	/// <summary>
	/// An object representing...
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssetTransaction_VOE_2_5
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetTransactionDescription[] ASSET_TRANSACTION_DESCRIPTION { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssetTransactionDetail_VOE_2_5 ASSET_TRANSACTION_DETAIL { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssetTransactions_VOA_2_4
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssetTransaction_VOA_2_4[] ASSET_TRANSACTION { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssetTransactions_VOE_2_5
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssetTransaction_VOE_2_5[] ASSET_TRANSACTION { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAsset_VOA_2_4
	{
		
		/// <summary>
		/// Details about an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetDetail ASSET_DETAIL { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetHolder ASSET_HOLDER { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetOwners ASSET_OWNERS { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssetTransactions_VOA_2_4 ASSET_TRANSACTIONS { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ValidationSources VALIDATION_SOURCES { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAsset_VOE_2_5
	{
		
		/// <summary>
		/// Details about an asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssetDetail_VOE_2_5 ASSET_DETAIL { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetHolder ASSET_HOLDER { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssetOwners ASSET_OWNERS { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssetTransactions_VOE_2_5 ASSET_TRANSACTIONS { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssets_VOA_2_4
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAsset_VOA_2_4[] ASSET { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacAssets_VOE_2_5
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAsset_VOE_2_5[] ASSET { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacIndividualName_VOA_2_4
	{
		
		/// <summary>
		/// The first name of the individual represented by the parent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		/// <summary>
		/// The last name of the individual represented by the parent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		/// <summary>
		/// The middle name of the individual represented by the parent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MiddleName { get; set; }
	}
	
	/// <summary>
	/// Collection of current and previous identifiers for this loan.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacLoanIdentifiers_VOA_2_4
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LoanIdentifier[] LOAN_IDENTIFIER { get; set; }
	}
	
	/// <summary>
	/// Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacLoan_VOA_2_4
	{
		
		/// <summary>
		/// Collection of current and previous identifiers for this loan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacLoanIdentifiers_VOA_2_4 LOAN_IDENTIFIERS { get; set; }
		
		/// <summary>
		/// Type of loan. The value can only be "SubjectLoan"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LoanRoleType { get; set; }
	}
	
	/// <summary>
	/// A collection of loans that are part of a single deal.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacLoans_VOA_2_4
	{
		
		/// <summary>
		/// Information specific to a mortgage loan agreement between one or more borrowers and a mortgage lender.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacLoan_VOA_2_4 LOAN { get; set; }
	}
	
	/// <summary>
	/// A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacParties_VOA_2_4
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacParty_VOA_2_4[] PARTY { get; set; }
	}
	
	/// <summary>
	/// A collection of information about a single party to a transaction. Included direct participants like the borrower and seller as well as indirect participants such as the flood certificate provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacParty_VOA_2_4
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacPartyIndividual_VOA_2_4 INDIVIDUAL { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Roles ROLES { get; set; }
		
		/// <summary>
		/// The collection of TAXPAYER_IDENTIFICATION elements
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaxpayerIdentifiers TAXPAYER_IDENTIFIERS { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacPartyIndividual_VOA_2_4
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacIndividualName_VOA_2_4 NAME { get; set; }
	}
	
	/// <summary>
	/// Information about an report identifier and a report name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacReportingInformation_VOA_2_4
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReportDateTime { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac. The value can only be "ReportID"
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReportIdentifierType { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReportingInformationIdentifier { get; set; }
	}
	
	/// <summary>
	/// CreditFreddieMacReportsGetRequest defines the request schema for `credit/asset_report/freddie_mac/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacReportsGetRequest
	{
		
		/// <summary>
		/// A token that can be shared with a third party auditor to allow them to obtain access to the Asset Report. This token should be stored securely.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_copy_token")]
		public string Audit_copy_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// CreditFreddieMacReportsGetResponse defines the response schema for `/credit/freddie_mac/reports/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacReportsGetResponse
	{
		
		/// <summary>
		/// Verification of Assets Report
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacVerificationOfAssets_VOA_2_4 VOA { get; set; }
		
		/// <summary>
		/// Verification of Employment Report
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieVerificationOfEmployment_VOE_2_5 VOE { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Verification of Assets Report
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacVerificationOfAssets_VOA_2_4
	{
		
		/// <summary>
		/// An object representing an Asset Report with Freddie Mac schema.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacVerificationOfAssetsDeal_VOA_2_4 DEAL { get; set; }
		
		/// <summary>
		/// The Verification Of Assets (VOA) schema version.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double SchemaVersion { get; set; }
	}
	
	/// <summary>
	/// An object representing an Asset Report with Freddie Mac schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacVerificationOfAssetsDeal_VOA_2_4
	{
		
		/// <summary>
		/// A collection of loans that are part of a single deal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacLoans_VOA_2_4 LOANS { get; set; }
		
		/// <summary>
		/// A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacParties_VOA_2_4 PARTIES { get; set; }
		
		/// <summary>
		/// A collection of objects that describe requests and responses for services.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacServices_VOA_2_4 SERVICES { get; set; }
	}
	
	/// <summary>
	/// A collection of objects that describe requests and responses for services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacServices_VOA_2_4
	{
		
		/// <summary>
		/// A collection of details related to a fulfillment service or product in terms of request, process and result.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacService_VOA_2_4 SERVICE { get; set; }
	}
	
	/// <summary>
	/// A collection of details related to a fulfillment service or product in terms of request, process and result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacService_VOA_2_4
	{
		
		/// <summary>
		/// A collection of STATUS containers.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Statuses STATUSES { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacVerificationOfAsset_VOA_2_4[] VERIFICATION_OF_ASSET { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacVerificationOfAsset_VOA_2_4
	{
		
		/// <summary>
		/// Information about an report identifier and a report name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacReportingInformation_VOA_2_4 REPORTING_INFORMATION { get; set; }
		
		/// <summary>
		/// A collection of details related to a fulfillment service or product in terms of request, process and result.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServiceProductFulfillment SERVICE_PRODUCT_FULFILLMENT { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacVerificationOfAssetResponse_VOA_2_4 VERIFICATION_OF_ASSET_RESPONSE { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacVerificationOfAssetResponse_VOA_2_4
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssets_VOA_2_4 ASSETS { get; set; }
	}
	
	/// <summary>
	/// Verification of Employment Report
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieVerificationOfEmployment_VOE_2_5
	{
		
		/// <summary>
		/// An object representing a Verification of Employment report.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieVerificationOfEmploymentDeal_VOE_2_5 DEAL { get; set; }
		
		/// <summary>
		/// The Verification Of Employment (VOE) schema version.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double SchemaVersion { get; set; }
	}
	
	/// <summary>
	/// An object representing a Verification of Employment report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieVerificationOfEmploymentDeal_VOE_2_5
	{
		
		/// <summary>
		/// A collection of loans that are part of a single deal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacLoans_VOA_2_4 LOANS { get; set; }
		
		/// <summary>
		/// A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacParties_VOA_2_4 PARTIES { get; set; }
		
		/// <summary>
		/// A collection of objects that describe requests and responses for services.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacServices_VOE_2_5 SERVICES { get; set; }
	}
	
	/// <summary>
	/// A collection of objects that describe requests and responses for services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacServices_VOE_2_5
	{
		
		/// <summary>
		/// A collection of details related to a fulfillment service or product in terms of request, process and result.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacService_VOE_2_5 SERVICE { get; set; }
	}
	
	/// <summary>
	/// A collection of details related to a fulfillment service or product in terms of request, process and result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacService_VOE_2_5
	{
		
		/// <summary>
		/// A collection of STATUS containers.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Statuses STATUSES { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacVerificationOfAsset_VOE_2_5[] VERIFICATION_OF_ASSET { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacVerificationOfAsset_VOE_2_5
	{
		
		/// <summary>
		/// Information about an report identifier and a report name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacReportingInformation_VOA_2_4 REPORTING_INFORMATION { get; set; }
		
		/// <summary>
		/// A collection of details related to a fulfillment service or product in terms of request, process and result.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ServiceProductFulfillment SERVICE_PRODUCT_FULFILLMENT { get; set; }
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacVerificationOfAssetResponse_VOE_2_5 VERIFICATION_OF_ASSET_RESPONSE { get; set; }
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditFreddieMacVerificationOfAssetResponse_VOE_2_5
	{
		
		/// <summary>
		/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreditFreddieMacAssets_VOE_2_5 ASSETS { get; set; }
	}
	
	/// <summary>
	/// An object representing an end user's pay stub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStub
	{
		
		/// <summary>
		/// An object with the deduction information found on a pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deductions")]
		public CreditPayStubDeductions Deductions { get; set; }
		
		/// <summary>
		/// An identifier of the document referenced by the document metadata.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_id")]
		public string Document_id { get; set; }
		
		/// <summary>
		/// Object representing metadata pertaining to the document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_metadata")]
		public CreditDocumentMetadata Document_metadata { get; set; }
		
		/// <summary>
		/// An object representing both a breakdown of earnings on a pay stub and the total earnings.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="earnings")]
		public CreditPayStubEarnings Earnings { get; set; }
		
		/// <summary>
		/// Data about the employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public CreditPayStubEmployee Employee { get; set; }
		
		/// <summary>
		/// Information about the employer on the pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public CreditPayStubEmployer Employer { get; set; }
		
		/// <summary>
		/// An object representing information about the net pay amount on the pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="net_pay")]
		public CreditPayStubNetPay Net_pay { get; set; }
		
		/// <summary>
		/// Details about the pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_period_details")]
		public PayStubPayPeriodDetails Pay_period_details { get; set; }
	}
	
	/// <summary>
	/// An object with the deduction information found on a pay stub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStubDeductions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="breakdown")]
		public PayStubDeductionsBreakdown[] Breakdown { get; set; }
		
		/// <summary>
		/// An object representing the total deductions for the pay period
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public PayStubDeductionsTotal Total { get; set; }
	}
	
	/// <summary>
	/// An object representing the deduction line items for the pay period
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubDeductionsBreakdown
	{
		
		/// <summary>
		/// Raw amount of the deduction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Description of the deduction line item
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date amount of the deduction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// An object representing the total deductions for the pay period
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubDeductionsTotal
	{
		
		/// <summary>
		/// Raw amount of the deduction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date total amount of the deductions
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// An object representing both a breakdown of earnings on a pay stub and the total earnings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStubEarnings
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="breakdown")]
		public PayStubEarningsBreakdown[] Breakdown { get; set; }
		
		/// <summary>
		/// An object representing both the current pay period and year to date amount for an earning category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public PayStubEarningsTotal Total { get; set; }
	}
	
	/// <summary>
	/// An object representing the earnings line items for the pay period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubEarningsBreakdown
	{
		
		/// <summary>
		/// Commonly used term to describe the earning line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="canonical_description")]
		public string Canonical_description { get; set; }
		
		/// <summary>
		/// Raw amount of the earning line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Description of the earning line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Number of hours applicable for this earning.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Double> Hours { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// Hourly rate applicable for this earning.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date amount of the deduction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// An object representing both the current pay period and year to date amount for an earning category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubEarningsTotal
	{
		
		/// <summary>
		/// Total amount of the earnings for this pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Total number of hours worked for this pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Double> Hours { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The total year-to-date amount of the earnings.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// Data about the employee.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStubEmployee
	{
		
		/// <summary>
		/// Address on the pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public CreditPayStubAddress Address { get; set; }
		
		/// <summary>
		/// Marital status of the employee - either `SINGLE` or `MARRIED`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="marital_status")]
		public string Marital_status { get; set; }
		
		/// <summary>
		/// The name of the employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Taxpayer ID of the individual receiving the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="taxpayer_id")]
		public PayStubTaxpayerID Taxpayer_id { get; set; }
	}
	
	/// <summary>
	/// Taxpayer ID of the individual receiving the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubTaxpayerID
	{
		
		/// <summary>
		/// ID mask; i.e. last 4 digits of the taxpayer ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id_mask")]
		public string Id_mask { get; set; }
		
		/// <summary>
		/// Type of ID, e.g. 'SSN'.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id_type")]
		public string Id_type { get; set; }
	}
	
	/// <summary>
	/// Information about the employer on the pay stub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStubEmployer
	{
		
		/// <summary>
		/// Address on the pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public CreditPayStubAddress Address { get; set; }
		
		/// <summary>
		/// The name of the employer on the pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An object representing information about the net pay amount on the pay stub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayStubNetPay
	{
		
		/// <summary>
		/// Raw amount of the net pay for the pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Description of the net pay.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date amount of the net pay.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// Details about the pay period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubPayPeriodDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distribution_breakdown")]
		public PayStubDistributionBreakdown[] Distribution_breakdown { get; set; }
		
		/// <summary>
		/// The date on which the pay period ended, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// Total earnings before tax/deductions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="gross_earnings")]
		public System.Nullable<System.Double> Gross_earnings { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The amount of the paycheck.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_amount")]
		public System.Nullable<System.Double> Pay_amount { get; set; }
		
		/// <summary>
		/// The explicit pay basis on the paystub (if present).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_basis")]
		public System.Nullable<PayStubPayPeriodDetailsPay_basis> Pay_basis { get; set; }
		
		/// <summary>
		/// The date on which the pay stub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_date")]
		public System.Nullable<System.DateOnly> Pay_date { get; set; }
		
		/// <summary>
		/// The frequency at which an individual is paid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public string Pay_frequency { get; set; }
		
		/// <summary>
		/// The date on which the pay period started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// Information about the accounts that the payment was distributed to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayStubDistributionBreakdown
	{
		
		/// <summary>
		/// Name of the account for the given distribution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// The name of the bank that the payment is being deposited to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_name")]
		public string Bank_name { get; set; }
		
		/// <summary>
		/// The amount distributed to this account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The last 2-4 alphanumeric characters of an account's official account number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mask")]
		public string Mask { get; set; }
		
		/// <summary>
		/// Type of the account that the paystub was sent to (e.g. 'checking').
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PayStubPayPeriodDetailsPay_basis
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMISSION = 2,
	}
	
	/// <summary>
	/// The explicit pay basis on the paystub (if present).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditPayStubPayBasisType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMISSION = 2,
	}
	
	/// <summary>
	/// CreditPayrollIncomeGetRequest defines the request schema for `/credit/payroll_income/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// Defines the response body for `/credit/payroll_income/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeGetResponse
	{
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// Array of payroll items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public PayrollItem[] Items { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object containing information about the payroll item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayrollItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public PayrollIncomeAccountData[] Accounts { get; set; }
		
		/// <summary>
		/// The unique identifier of the institution associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The name of the institution associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payroll_income")]
		public PayrollIncomeObject[] Payroll_income { get; set; }
		
		/// <summary>
		/// Details about the status of the payroll item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PayrollItemStatus Status { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the Item was updated.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	/// <summary>
	/// An object containing account level data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayrollIncomeAccountData
	{
		
		/// <summary>
		/// ID of the payroll provider account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The frequency at which an individual is paid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public string Pay_frequency { get; set; }
		
		/// <summary>
		/// An object representing the rate at which an individual is paid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate_of_pay")]
		public PayrollIncomeRateOfPay Rate_of_pay { get; set; }
	}
	
	/// <summary>
	/// An object representing the rate at which an individual is paid.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayrollIncomeRateOfPay
	{
		
		/// <summary>
		/// The amount at which an employee is paid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_amount")]
		public System.Nullable<System.Double> Pay_amount { get; set; }
		
		/// <summary>
		/// The rate at which an employee is paid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_rate")]
		public string Pay_rate { get; set; }
	}
	
	/// <summary>
	/// An object representing payroll data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayrollIncomeObject
	{
		
		/// <summary>
		/// ID of the payroll provider account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Array of tax form 1099s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="form1099s")]
		public Credit1099[] Form1099s { get; set; }
		
		/// <summary>
		/// Array of pay stubs for the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_stubs")]
		public CreditPayStub[] Pay_stubs { get; set; }
		
		/// <summary>
		/// Array of tax form W-2s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="w2s")]
		public CreditW2[] W2s { get; set; }
	}
	
	/// <summary>
	/// W2 is an object that represents income data taken from a W2 tax document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditW2
	{
		
		/// <summary>
		/// Allocated tips.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allocated_tips")]
		public string Allocated_tips { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="box_12")]
		public W2Box12[] Box_12 { get; set; }
		
		/// <summary>
		/// Contents from box 9 on the W2.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="box_9")]
		public string Box_9 { get; set; }
		
		/// <summary>
		/// Dependent care benefits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dependent_care_benefits")]
		public string Dependent_care_benefits { get; set; }
		
		/// <summary>
		/// An identifier of the document referenced by the document metadata.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_id")]
		public string Document_id { get; set; }
		
		/// <summary>
		/// Object representing metadata pertaining to the document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_metadata")]
		public CreditDocumentMetadata Document_metadata { get; set; }
		
		/// <summary>
		/// Data about the employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public CreditPayStubEmployee Employee { get; set; }
		
		/// <summary>
		/// Information about the employer on the pay stub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public CreditPayStubEmployer Employer { get; set; }
		
		/// <summary>
		/// An employee identification number or EIN.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer_id_number")]
		public string Employer_id_number { get; set; }
		
		/// <summary>
		/// Federal income tax withheld for the tax year.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="federal_income_tax_withheld")]
		public string Federal_income_tax_withheld { get; set; }
		
		/// <summary>
		/// Medicare tax withheld for the tax year.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="medicare_tax_withheld")]
		public string Medicare_tax_withheld { get; set; }
		
		/// <summary>
		/// Wages and tips from medicare.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="medicare_wages_and_tips")]
		public string Medicare_wages_and_tips { get; set; }
		
		/// <summary>
		/// Nonqualified plans.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nonqualified_plans")]
		public string Nonqualified_plans { get; set; }
		
		/// <summary>
		/// Other.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other")]
		public string Other { get; set; }
		
		/// <summary>
		/// Retirement plan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retirement_plan")]
		public string Retirement_plan { get; set; }
		
		/// <summary>
		/// Social security tax withheld for the tax year.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="social_security_tax_withheld")]
		public string Social_security_tax_withheld { get; set; }
		
		/// <summary>
		/// Tips from social security.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="social_security_tips")]
		public string Social_security_tips { get; set; }
		
		/// <summary>
		/// Wages from social security.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="social_security_wages")]
		public string Social_security_wages { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state_and_local_wages")]
		public W2StateAndLocalWages[] State_and_local_wages { get; set; }
		
		/// <summary>
		/// Statutory employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="statutory_employee")]
		public string Statutory_employee { get; set; }
		
		/// <summary>
		/// The tax year of the W2 document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tax_year")]
		public string Tax_year { get; set; }
		
		/// <summary>
		/// Third party sick pay.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="third_party_sick_pay")]
		public string Third_party_sick_pay { get; set; }
		
		/// <summary>
		/// Wages from tips and other compensation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wages_tips_other_comp")]
		public string Wages_tips_other_comp { get; set; }
	}
	
	/// <summary>
	/// Data on the W2 Box 12
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class W2Box12
	{
		
		/// <summary>
		/// W2 Box 12 amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// W2 Box 12 code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
	}
	
	/// <summary>
	/// W2 state and local wages
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class W2StateAndLocalWages
	{
		
		/// <summary>
		/// State identification number of the employer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_state_id_number")]
		public string Employer_state_id_number { get; set; }
		
		/// <summary>
		/// Income tax from the locality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="local_income_tax")]
		public string Local_income_tax { get; set; }
		
		/// <summary>
		/// Wages and tips from the locality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="local_wages_tips")]
		public string Local_wages_tips { get; set; }
		
		/// <summary>
		/// Name of the locality.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locality_name")]
		public string Locality_name { get; set; }
		
		/// <summary>
		/// State associated with the wage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Income tax from the specified state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_income_tax")]
		public string State_income_tax { get; set; }
		
		/// <summary>
		/// Wages and tips from the specified state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_wages_tips")]
		public string State_wages_tips { get; set; }
	}
	
	/// <summary>
	/// Details about the status of the payroll item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayrollItemStatus
	{
		
		/// <summary>
		/// Denotes the processing status for the verification.
		///
		///`UNKNOWN`: The processing status could not be determined.
		///
		///`PROCESSING_COMPLETE`: The processing has completed and the user has approved for sharing. The data is available to be retrieved.
		///
		///`PROCESSING`: The verification is still processing. The data is not available yet.
		///
		///`FAILED`: The processing failed to complete successfully.
		///
		///`APPROVAL_STATUS_PENDING`: The processing has completed but the user has not yet approved the sharing of the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processing_status")]
		public string Processing_status { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/credit/payroll_income/precheck`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomePrecheckRequest
	{
		
		/// <summary>
		/// An array of access tokens corresponding to Items belonging to the user whose eligibility is being checked. Note that if the Items specified here are not already initialized with `transactions`, providing them in this field will cause these Items to be initialized with (and billed for) the Transactions product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_tokens")]
		public string[] Access_tokens { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Information about the end user's employer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public IncomeVerificationPrecheckEmployer Employer { get; set; }
		
		/// <summary>
		/// Information about the end user's payroll institution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payroll_institution")]
		public IncomeVerificationPrecheckPayrollInstitution Payroll_institution { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Data about military info in the income verification precheck.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="us_military_info")]
		public IncomeVerificationPrecheckMilitaryInfo Us_military_info { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// Information about the end user's employer
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckEmployer
	{
		
		/// <summary>
		/// The address of the employer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public IncomeVerificationPrecheckEmployerAddress Address { get; set; }
		
		/// <summary>
		/// The employer's name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The employer's tax id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_id")]
		public string Tax_id { get; set; }
		
		/// <summary>
		/// The URL for the employer's public website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The address of the employer
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckEmployerAddress
	{
	}
	
	/// <summary>
	/// Information about the end user's payroll institution
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckPayrollInstitution
	{
		
		/// <summary>
		/// The name of payroll institution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Data about military info in the income verification precheck.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckMilitaryInfo
	{
		
		/// <summary>
		/// If the user is currently serving in the US military, the branch of the military in which they are serving
		///Valid values: 'AIR FORCE', 'ARMY', 'COAST GUARD', 'MARINES', 'NAVY', 'UNKNOWN'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="branch")]
		public string Branch { get; set; }
		
		/// <summary>
		/// Is the user currently active duty in the US military
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_active_duty")]
		public System.Nullable<System.Boolean> Is_active_duty { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/credit/payroll_income/precheck`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomePrecheckResponse
	{
		
		/// <summary>
		/// The confidence that Plaid can support the user in the digital income verification flow instead of requiring a manual paystub upload. One of the following:
		///
		///`"HIGH"`: It is very likely that this user can use the digital income verification flow.
		///
		///"`LOW`": It is unlikely that this user can use the digital income verification flow.
		///
		///`"UNKNOWN"`: It was not possible to determine if the user is supportable with the information passed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public CreditPayrollIncomePrecheckResponseConfidence Confidence { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditPayrollIncomePrecheckResponseConfidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
	}
	
	/// <summary>
	/// CreditPayrollIncomeRefreshRequest defines the request schema for `/credit/payroll_income/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeRefreshRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object for `/credit/payroll_income/refresh` request options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public CreditPayrollIncomeRefreshRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// An optional object for `/credit/payroll_income/refresh` request options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeRefreshRequestOptions
	{
		
		/// <summary>
		/// An array of `item_id`s to be refreshed. Each `item_id` should uniquely identify a payroll income item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_ids")]
		public string[] Item_ids { get; set; }
		
		/// <summary>
		/// The URL where Plaid will send the payroll income refresh webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// CreditPayrollIncomeRefreshResponse defines the response schema for `/credit/payroll_income/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeRefreshResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The verification refresh status. One of the following:
		///
		///`"USER_PRESENCE_REQUIRED"` User presence is required to refresh an income verification.
		///`"SUCCESSFUL"` The income verification refresh was successful.
		///`"NOT_FOUND"` No new data was found after the income verification refresh.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_refresh_status")]
		public string Verification_refresh_status { get; set; }
	}
	
	/// <summary>
	/// CreditPayrollIncomeRiskSignalsGetRequest defines the request schema for `/beta/credit/payroll_income/risk_signals/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeRiskSignalsGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// CreditPayrollIncomeRiskSignalsGetRequest defines the response schema for `/beta/credit/payroll_income/risk_signals/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditPayrollIncomeRiskSignalsGetResponse
	{
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// Array of payroll items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="items")]
		public PayrollRiskSignalsItem[] Items { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Object containing fraud risk data pertaining to the Item linked as part of the verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayrollRiskSignalsItem
	{
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// Array of payroll income document authenticity data retrieved for each of the user's accounts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_risk_signals")]
		public DocumentRiskSignalsObject[] Verification_risk_signals { get; set; }
	}
	
	/// <summary>
	/// Object containing fraud risk data for a set of income documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentRiskSignalsObject
	{
		
		/// <summary>
		/// ID of the payroll provider account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Array of risk signals computed from a set of uploaded documents and the associated documents' metadata
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="multi_document_risk_signals")]
		public MultiDocumentRiskSignal[] Multi_document_risk_signals { get; set; }
		
		/// <summary>
		/// Array of document metadata and associated risk signals per document
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="single_document_risk_signals")]
		public SingleDocumentRiskSignal[] Single_document_risk_signals { get; set; }
	}
	
	/// <summary>
	/// Object containing risk signals and relevant metadata for a set of uploaded documents
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MultiDocumentRiskSignal
	{
		
		/// <summary>
		/// Array of objects containing attributes that could indicate if a document is fraudulent
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_references")]
		public RiskSignalDocumentReference[] Document_references { get; set; }
		
		/// <summary>
		/// Array of attributes that indicate whether or not there is fraud risk with a set of documents
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_signals")]
		public DocumentRiskSignal[] Risk_signals { get; set; }
	}
	
	/// <summary>
	/// Object containing metadata for the document
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RiskSignalDocumentReference
	{
		
		/// <summary>
		/// An identifier of the document referenced by the document metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_id")]
		public string Document_id { get; set; }
		
		/// <summary>
		/// The name of the document
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_name")]
		public string Document_name { get; set; }
	}
	
	/// <summary>
	/// Details about a certain reason as to why a document could potentially be fraudulent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentRiskSignal
	{
		
		/// <summary>
		/// The derived value obtained in the risk signal calculation process for this field
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="actual_value")]
		public string Actual_value { get; set; }
		
		/// <summary>
		/// The expected value of the field, as seen on the document
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expected_value")]
		public string Expected_value { get; set; }
		
		/// <summary>
		/// The field which the risk signal was computed for
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		/// <summary>
		/// A flag used to quickly identify if the signal indicates that this field is authentic or fraudulent
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="has_fraud_risk")]
		public System.Nullable<System.Boolean> Has_fraud_risk { get; set; }
		
		/// <summary>
		/// An object which contains additional metadata about the institution used to compute the verification attribute
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_metadata")]
		public DocumentRiskSignalInstitutionMetadata Institution_metadata { get; set; }
		
		/// <summary>
		/// The relevant page associated with the risk signal
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page_number")]
		public System.Nullable<System.Int32> Page_number { get; set; }
		
		/// <summary>
		/// A human-readable explanation providing more detail into the particular risk signal
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="signal_description")]
		public string Signal_description { get; set; }
		
		/// <summary>
		/// The result from the risk signal check.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// An object which contains additional metadata about the institution used to compute the verification attribute
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentRiskSignalInstitutionMetadata
	{
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
	}
	
	/// <summary>
	/// Object containing all risk signals and relevant metadata for a single document
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SingleDocumentRiskSignal
	{
		
		/// <summary>
		/// Object containing metadata for the document
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_reference")]
		public RiskSignalDocumentReference Document_reference { get; set; }
		
		/// <summary>
		/// Array of attributes that indicate whether or not there is fraud risk with a document
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_signals")]
		public DocumentRiskSignal[] Risk_signals { get; set; }
		
		/// <summary>
		/// A summary across all risk signals associated with a document
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_summary")]
		public DocumentRiskSummary Risk_summary { get; set; }
	}
	
	/// <summary>
	/// A summary across all risk signals associated with a document
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentRiskSummary
	{
		
		/// <summary>
		/// A number between 0 and 100, inclusive, where a score closer to 0 indicates a document is likely to be trustworthy and a score closer to 100 indicates a document is likely to be fraudulent
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_score")]
		public System.Nullable<System.Double> Risk_score { get; set; }
	}
	
	/// <summary>
	/// CreditRelayCreateRequest defines the request schema for `/credit/relay/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// List of report token strings, with at most one token of each report type. Currently only Asset Report token is supported.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_tokens")]
		public string[] Report_tokens { get; set; }
		
		/// <summary>
		/// The `secondary_client_id` is the client id of the third party with whom you would like to share the relay token.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secondary_client_id")]
		public string Secondary_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// URL to which Plaid will send webhooks when the Secondary Client successfully retrieves an Asset Report by calling `/credit/relay/get`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// CreditRelayCreateResponse defines the response schema for `/credit/relay/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayCreateResponse
	{
		
		/// <summary>
		/// A token that can be shared with a third party to allow them to access the Asset Report. This token should be stored securely.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relay_token")]
		public string Relay_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// CreditRelayGetRequest defines the request schema for `/credit/relay/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The `relay_token` granting access to the report you would like to get.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relay_token")]
		public string Relay_token { get; set; }
		
		/// <summary>
		/// The report type. It can be `assets` or `income`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_type")]
		public CreditRelayGetRequestReport_type Report_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditRelayGetRequestReport_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assets = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		income = 1,
	}
	
	/// <summary>
	/// CreditRelayRefreshRequest defines the request schema for `/credit/relay/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayRefreshRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The `relay_token` granting access to the report you would like to refresh.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relay_token")]
		public string Relay_token { get; set; }
		
		/// <summary>
		/// The report type. It can be `assets` or `income`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="report_type")]
		public CreditRelayGetRequestReport_type Report_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The URL registered to receive webhooks when the report of a relay token has been refreshed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// CreditRelayRefreshResponse defines the response schema for `/credit/relay/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayRefreshResponse
	{
		
		/// <summary>
		/// A unique ID identifying an Asset Report. Like all Plaid identifiers, this ID is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relay_token")]
		public string Relay_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// CreditRelayRemoveRequest defines the request schema for `/credit/relay/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayRemoveRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The `relay_token` you would like to revoke.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relay_token")]
		public string Relay_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// CreditRelayRemoveResponse defines the response schema for `/credit/relay/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditRelayRemoveResponse
	{
		
		/// <summary>
		/// `true` if the relay token was successfully removed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public bool Removed { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Metadata and results for a Link session
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSession
	{
		
		/// <summary>
		/// The set of errors that occurred during the Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public CreditSessionError[] Errors { get; set; }
		
		/// <summary>
		/// The unique identifier associated with the Link session. This identifier matches the `link_session_id` returned in the onSuccess/onExit callbacks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link_session_id")]
		public string Link_session_id { get; set; }
		
		/// <summary>
		/// The set of results for a Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public CreditSessionResults Results { get; set; }
		
		/// <summary>
		/// The time when the Link session started
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="session_start_time")]
		public System.Nullable<System.DateTimeOffset> Session_start_time { get; set; }
	}
	
	/// <summary>
	/// The details of a Link error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionError
	{
		
		/// <summary>
		/// A user-friendly representation of the error code. `null` if the error is not related to user action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_message")]
		public string Display_message { get; set; }
		
		/// <summary>
		/// The particular error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// A developer-friendly representation of the error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// A broad categorization of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_type")]
		public string Error_type { get; set; }
	}
	
	/// <summary>
	/// The set of results for a Link session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionResults
	{
		
		/// <summary>
		/// The set of bank employment verifications for the Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_employment_results")]
		public CreditSessionBankEmploymentResult[] Bank_employment_results { get; set; }
		
		/// <summary>
		/// The set of bank income verifications for the Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income_results")]
		public CreditSessionBankIncomeResult[] Bank_income_results { get; set; }
		
		/// <summary>
		/// The details of a document income verification in Link
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_income_results")]
		public CreditSessionDocumentIncomeResult Document_income_results { get; set; }
		
		/// <summary>
		/// The set of Item adds for the Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_add_results")]
		public CreditSessionItemAddResult[] Item_add_results { get; set; }
		
		/// <summary>
		/// The set of payroll income verifications for the Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payroll_income_results")]
		public CreditSessionPayrollIncomeResult[] Payroll_income_results { get; set; }
	}
	
	/// <summary>
	/// The details of a bank employment verification in Link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionBankEmploymentResult
	{
		
		/// <summary>
		/// The Plaid Institution ID associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The terminal status of the bank employment verification.
		///
		///`APPROVED`: User has approved and verified their employment.
		///
		///`NO_EMPLOYMENTS_FOUND`: We attempted, but were unable to find any employment in the connected account.
		///
		///`EMPLOYER_NOT_LISTED`: The user explicitly indicated that they did not see their current or previous employer in the list of employer names found.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CreditSessionBankEmploymentResultStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditSessionBankEmploymentResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_EMPLOYERS_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPLOYER_NOT_LISTED = 2,
	}
	
	/// <summary>
	/// The details of a bank income verification in Link
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionBankIncomeResult
	{
		
		/// <summary>
		/// The Plaid Institution ID associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The terminal status of the bank income verification.
		///
		///`APPROVED`: User has approved and verified their income
		///
		///`NO_DEPOSITS_FOUND`: We attempted, but were unable to find any income in the connected account.
		///
		///`USER_REPORTED_NO_INCOME`: The user explicitly indicated that they don't receive income in the connected account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CreditSessionBankIncomeResultStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditSessionBankIncomeResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_DEPOSITS_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_REPORTED_NO_INCOME = 2,
	}
	
	/// <summary>
	/// The details of a document income verification in Link
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionDocumentIncomeResult
	{
		
		/// <summary>
		/// The number of paystubs uploaded by the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="num_paystubs_uploaded")]
		public int Num_paystubs_uploaded { get; set; }
		
		/// <summary>
		/// The number of w2s uploaded by the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="num_w2s_uploaded")]
		public int Num_w2s_uploaded { get; set; }
	}
	
	/// <summary>
	/// The details of an Item add in Link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionItemAddResult
	{
		
		/// <summary>
		/// The Plaid Institution ID associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// Returned once a user has successfully linked their Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public_token")]
		public string Public_token { get; set; }
	}
	
	/// <summary>
	/// The details of a digital payroll income verification in Link
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionPayrollIncomeResult
	{
		
		/// <summary>
		/// The Plaid Institution ID associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The Institution Name associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// The number of paystubs retrieved from a payroll provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="num_paystubs_retrieved")]
		public System.Nullable<System.Int32> Num_paystubs_retrieved { get; set; }
		
		/// <summary>
		/// The number of w2s retrieved from a payroll provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="num_w2s_retrieved")]
		public System.Nullable<System.Int32> Num_w2s_retrieved { get; set; }
	}
	
	/// <summary>
	/// The terminal status of the bank employment verification.
	///
	///`APPROVED`: User has approved and verified their employment.
	///
	///`NO_EMPLOYMENTS_FOUND`: We attempted, but were unable to find any employment in the connected account.
	///
	///`EMPLOYER_NOT_LISTED`: The user explicitly indicated that they did not see their current or previous employer in the list of employer names found.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditSessionBankEmploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_EMPLOYERS_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPLOYER_NOT_LISTED = 2,
	}
	
	/// <summary>
	/// The terminal status of the bank income verification.
	///
	///`APPROVED`: User has approved and verified their income
	///
	///`NO_DEPOSITS_FOUND`: We attempted, but were unable to find any income in the connected account.
	///
	///`USER_REPORTED_NO_INCOME`: The user explicitly indicated that they don't receive income in the connected account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreditSessionBankIncomeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_DEPOSITS_FOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_REPORTED_NO_INCOME = 2,
	}
	
	/// <summary>
	/// CreditSessionsGetRequest defines the request schema for `/credit/sessions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionsGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// CreditSessionsGetResponse defines the response schema for `/credit/sessions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreditSessionsGetResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A list of Link sessions for the user. Sessions will be sorted in reverse chronological order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessions")]
		public CreditSession[] Sessions { get; set; }
	}
	
	/// <summary>
	/// The object contains a risk score and a risk tier that evaluate the transaction return risk of an unauthorized debit. Common return codes in this category include: "R05", "R07", "R10", "R11", "R29". These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomerInitiatedReturnRisk
	{
		
		/// <summary>
		/// A tier corresponding to the projected likelihood that the transaction, if initiated, will be subject to a return.
		///
		///In the `customer_initiated_return_risk` object, there are five risk tiers corresponding to the scores:
		///  1: Predicted customer-initiated return incidence rate between 0.00% - 0.02%
		///  2: Predicted customer-initiated return incidence rate between 0.02% - 0.05%
		///  3: Predicted customer-initiated return incidence rate between 0.05% - 0.1%
		///  4: Predicted customer-initiated return incidence rate between 0.1% - 0.5%
		///  5: Predicted customer-initiated return incidence rate greater than 0.5%
		///
		/// Required
		/// Minimum: 1
		/// Maximum: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_tier")]
		[System.ComponentModel.DataAnnotations.Range(1, 5)]
		public int Risk_tier { get; set; }
		
		/// <summary>
		/// A score from 1-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.
		/// Required
		/// Minimum: 1
		/// Maximum: 99
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="score")]
		[System.ComponentModel.DataAnnotations.Range(1, 99)]
		public int Score { get; set; }
	}
	
	/// <summary>
	/// Account information associated with a team member with access to the Plaid dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardUser
	{
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The current status of the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DashboardUserStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DashboardUserStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		invited = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deactivated = 2,
	}
	
	/// <summary>
	/// Request input for fetching a dashboard user
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardUserGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dashboard_user_id")]
		public string Dashboard_user_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Account information associated with a team member with access to the Plaid dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardUserGetResponse
	{
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The current status of the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DashboardUserStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request input for listing dashboard users
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardUserListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Paginated list of dashboard users
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardUserListResponse
	{
		
		/// <summary>
		/// List of dashboard users
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dashboard_users")]
		public DashboardUser[] Dashboard_users { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A date range with a start and end date
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateRange
	{
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="beginning")]
		public System.DateOnly Beginning { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ending")]
		public System.DateOnly Ending { get; set; }
	}
	
	/// <summary>
	/// An object with the deduction information found on a paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Deductions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="breakdown")]
		public DeductionsBreakdown[] Breakdown { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtotals")]
		public Total[] Subtotals { get; set; }
		
		/// <summary>
		/// An object representing the total deductions for the pay period
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public DeductionsTotal Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totals")]
		public Total[] Totals { get; set; }
	}
	
	/// <summary>
	/// An object representing the deduction line items for the pay period
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeductionsBreakdown
	{
		
		/// <summary>
		/// Raw amount of the deduction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Description of the deduction line item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date amount of the deduction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// An object representing both the current pay period and year to date amount for a category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Total
	{
		
		/// <summary>
		/// Commonly used term to describe the line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonical_description")]
		public System.Nullable<TotalCanonical_description> Canonical_description { get; set; }
		
		/// <summary>
		/// An object representing a monetary amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_pay")]
		public Pay Current_pay { get; set; }
		
		/// <summary>
		/// Text of the line item as printed on the paystub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// An object representing a monetary amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_pay")]
		public Pay Ytd_pay { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TotalCanonical_description
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BONUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMISSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERTIME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAID TIME OFF")]
		PAID_TIME_OFF = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REGULAR PAY")]
		REGULAR_PAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VACATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EMPLOYEE MEDICARE")]
		EMPLOYEE_MEDICARE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FICA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SOCIAL SECURITY EMPLOYEE TAX")]
		SOCIAL_SECURITY_EMPLOYEE_TAX = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDICAL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VISION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENTAL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NET PAY")]
		NET_PAY = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAXES = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_FOUND = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 16,
	}
	
	/// <summary>
	/// An object representing a monetary amount.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pay
	{
		
		/// <summary>
		/// A numerical amount of a specific currency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// Currency code, e.g. USD
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
	}
	
	/// <summary>
	/// An object representing the total deductions for the pay period
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeductionsTotal
	{
		
		/// <summary>
		/// Raw amount of the deduction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date total amount of the deductions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// Fired when new transaction data is available for an Item. Plaid will typically check for new transaction data several times a day.
	///
	///This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item the webhook relates to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The number of new transactions detected since the last time this webhook was fired.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_transactions")]
		public double New_transactions { get; set; }
		
		/// <summary>
		/// `DEFAULT_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// The user's address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchAddressData
	{
		
		/// <summary>
		/// The full city name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state
		///Example: `"NC"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address
		///Example: `"564 Main Street, APT 15"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchAltCreateRequest defines the request schema for `/deposit_switch/alt/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchAltCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ISO-3166-1 alpha-2 country code standard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public System.Nullable<DepositSwitchAltCreateRequestCountry_code> Country_code { get; set; }
		
		/// <summary>
		/// Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public DepositSwitchCreateRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The deposit switch destination account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target_account")]
		public DepositSwitchTargetAccount Target_account { get; set; }
		
		/// <summary>
		/// The deposit switch target user
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target_user")]
		public DepositSwitchTargetUser Target_user { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DepositSwitchAltCreateRequestCountry_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CA = 1,
	}
	
	/// <summary>
	/// Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchCreateRequestOptions
	{
		
		/// <summary>
		/// An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.
		/// Minimum items: 1
		/// Maximum items: 99
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_item_access_tokens")]
		[System.ComponentModel.DataAnnotations.Length(1, 99)]
		public string[] Transaction_item_access_tokens { get; set; }
		
		/// <summary>
		/// The URL registered to receive webhooks when the status of a deposit switch request has changed.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// The deposit switch destination account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchTargetAccount
	{
		
		/// <summary>
		/// The name of the deposit switch destination account, as it will be displayed to the end user in the Deposit Switch interface. It is not required to match the name used in online banking.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// Account number for deposit switch destination
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The account subtype of the account, either `checking` or `savings`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_subtype")]
		public DepositSwitchTargetAccountAccount_subtype Account_subtype { get; set; }
		
		/// <summary>
		/// Routing number for deposit switch destination
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DepositSwitchTargetAccountAccount_subtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checking = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		savings = 1,
	}
	
	/// <summary>
	/// The deposit switch target user
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchTargetUser
	{
		
		/// <summary>
		/// The user's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public DepositSwitchAddressData Address { get; set; }
		
		/// <summary>
		/// The email address of the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The family name (last name) of the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="family_name")]
		public string Family_name { get; set; }
		
		/// <summary>
		/// The given name (first name) of the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="given_name")]
		public string Given_name { get; set; }
		
		/// <summary>
		/// The phone number of the user. The endpoint can accept a variety of phone number formats, including E.164.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The taxpayer ID of the user, generally their SSN, EIN, or TIN.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_payer_id")]
		public string Tax_payer_id { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchAltCreateResponse defines the response schema for `/deposit_switch/alt/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchAltCreateResponse
	{
		
		/// <summary>
		/// ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchCreateRequest defines the request schema for `/deposit_switch/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ISO-3166-1 alpha-2 country code standard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public DepositSwitchAltCreateRequestCountry_code Country_code { get; set; }
		
		/// <summary>
		/// Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public DepositSwitchCreateRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Access token for the target Item, typically provided in the Import Item response. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target_access_token")]
		public string Target_access_token { get; set; }
		
		/// <summary>
		/// Plaid Account ID that specifies the target bank account. This account will become the recipient for a user's direct deposit.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target_account_id")]
		public string Target_account_id { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchCreateResponse defines the response schema for `/deposit_switch/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchCreateResponse
	{
		
		/// <summary>
		/// ID of the deposit switch. This ID is persisted throughout the lifetime of the deposit switch.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchGetRequest defines the request schema for `/deposit_switch/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID of the deposit switch
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchGetResponse defines the response schema for `/deposit_switch/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchGetResponse
	{
		
		/// <summary>
		/// When `true`, userâ€™s direct deposit goes to multiple banks. When false, userâ€™s direct deposit only goes to the target account. Always `null` if the deposit switch has not been completed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_has_multiple_allocations")]
		public System.Nullable<System.Boolean> Account_has_multiple_allocations { get; set; }
		
		/// <summary>
		/// The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the deposit switch has not been completed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount_allocated")]
		public System.Nullable<System.Double> Amount_allocated { get; set; }
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was completed. Always `null` if the deposit switch has not been completed.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_completed")]
		public System.Nullable<System.DateOnly> Date_completed { get; set; }
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was created.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.DateOnly Date_created { get; set; }
		
		/// <summary>
		/// The ID of the deposit switch.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
		
		/// <summary>
		/// The ID of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_id")]
		public string Employer_id { get; set; }
		
		/// <summary>
		/// The name of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_name")]
		public string Employer_name { get; set; }
		
		/// <summary>
		/// The ID of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The name of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, userâ€™s direct deposit is allocated as a percent or amount. Always `null` if the deposit switch has not been completed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_allocated_remainder")]
		public System.Nullable<System.Boolean> Is_allocated_remainder { get; set; }
		
		/// <summary>
		/// The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the deposit switch has not been completed or if `is_allocated_remainder` is true.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="percent_allocated")]
		public System.Nullable<System.Double> Percent_allocated { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// 
		///The state, or status, of the deposit switch.
		///
		///- `initialized` â€“ The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.
		///
		///- `processing` â€“ The deposit switch request has been submitted and is being processed.
		///
		///- `completed` â€“ The user's employer has fulfilled the deposit switch request.
		///
		///- `error` â€“ There was an error processing the deposit switch request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public DepositSwitchGetResponseState State { get; set; }
		
		/// <summary>
		/// The method used to make the deposit switch.
		///
		///- `instant` â€“ User instantly switched their direct deposit to a new or existing bank account by connecting their payroll or employer account.
		///
		///- `mail` â€“ User requested that Plaid contact their employer by mail to make the direct deposit switch.
		///
		///- `pdf` â€“ User generated a PDF or email to be sent to their employer with the information necessary to make the deposit switch.'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="switch_method")]
		public System.Nullable<DepositSwitchGetResponseSwitch_method> Switch_method { get; set; }
		
		/// <summary>
		/// The ID of the bank account the direct deposit was switched to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target_account_id")]
		public string Target_account_id { get; set; }
		
		/// <summary>
		/// The ID of the Item the direct deposit was switched to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target_item_id")]
		public string Target_item_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DepositSwitchGetResponseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		initialized = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DepositSwitchGetResponseSwitch_method
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		instant = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mail = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pdf = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 3,
	}
	
	/// <summary>
	/// Fired when the status of a deposit switch request has changed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchStateUpdateWebhook
	{
		
		/// <summary>
		/// The ID of the deposit switch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// 
		///The state, or status, of the deposit switch.
		///
		///`initialized`: The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.
		///
		///`processing`: The deposit switch request has been submitted and is being processed.
		///
		///`completed`: The user's employer has fulfilled and completed the deposit switch request.
		///
		///`error`: There was an error processing the deposit switch request.
		///
		///For more information, see the [Deposit Switch API reference](/docs/deposit-switch/reference#deposit_switchget).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// `"SWITCH_STATE_UPDATE"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `"DEPOSIT_SWITCH"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchTokenCreateRequest defines the request schema for `/deposit_switch/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchTokenCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID of the deposit switch
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// DepositSwitchTokenCreateResponse defines the response schema for `/deposit_switch/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositSwitchTokenCreateResponse
	{
		
		/// <summary>
		/// Deposit switch token, used to initialize Link for the Deposit Switch product
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_token")]
		public string Deposit_switch_token { get; set; }
		
		/// <summary>
		/// Expiration time of the token, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_token_expiration_time")]
		public string Deposit_switch_token_expiration_time { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth (`checking` and `savings` types only), Balance, Transactions, Identity, Payment Initiation, and Assets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DepositoryAccount
	{
		
		/// <summary>
		/// A cash management account, typically a cash account at a brokerage
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cash management")]
		public string Cash_management { get; set; }
		
		/// <summary>
		/// Certificate of deposit account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cd")]
		public string Cd { get; set; }
		
		/// <summary>
		/// Checking account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="checking")]
		public string Checking { get; set; }
		
		/// <summary>
		/// An Electronic Benefit Transfer (EBT) account, used by certain public assistance programs to distribute funds (US only)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ebt")]
		public string Ebt { get; set; }
		
		/// <summary>
		/// Health Savings Account (US only) that can only hold cash
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hsa")]
		public string Hsa { get; set; }
		
		/// <summary>
		/// Money market account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="money market")]
		public string Money_market { get; set; }
		
		/// <summary>
		/// PayPal depository account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paypal")]
		public string Paypal { get; set; }
		
		/// <summary>
		/// Prepaid debit card
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prepaid")]
		public string Prepaid { get; set; }
		
		/// <summary>
		/// Savings account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="savings")]
		public string Savings { get; set; }
	}
	
	/// <summary>
	/// Originator and their status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetailedOriginator
	{
		
		/// <summary>
		/// Originatorâ€™s client ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Originatorâ€™s diligence status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_diligence_status")]
		public DetailedOriginatorTransfer_diligence_status Transfer_diligence_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DetailedOriginatorTransfer_diligence_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		under_review = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approved = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		denied = 2,
	}
	
	/// <summary>
	/// Information about the accounts that the payment was distributed to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DistributionBreakdown
	{
		
		/// <summary>
		/// Name of the account for the given distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// The name of the bank that the payment is being deposited to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_name")]
		public string Bank_name { get; set; }
		
		/// <summary>
		/// The amount distributed to this account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// An object representing a monetary amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_pay")]
		public Pay Current_pay { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The last 2-4 alphanumeric characters of an account's official account number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mask")]
		public string Mask { get; set; }
		
		/// <summary>
		/// Type of the account that the paystub was sent to (e.g. 'checking').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// The type of document.
	///
	///`DOCUMENT_TYPE_PAYSTUB`: A paystub.
	///
	///`DOCUMENT_TYPE_BANK_STATEMENT`: A bank statement.
	///
	///`DOCUMENT_TYPE_US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.
	///
	///`DOCUMENT_TYPE_US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.
	///
	///`DOCUMENT_TYPE_US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.
	///
	///`DOCUMENT_TYPE_US_MILITARY_CLES`: A Civilian Leave and Earnings Statement (CLES) issued by the US military.
	///
	///`DOCUMENT_TYPE_GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.
	///
	///`DOCUMENT_TYPE_NONE`: Used to indicate that there is no underlying document for the data.
	///
	///`DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF`: Used to indicate that the PDF for the paystub was generated by Plaid.
	///
	///`UNKNOWN`: Document type could not be determined.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_PAYSTUB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_BANK_STATEMENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_US_TAX_W2 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_US_MILITARY_ERAS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_US_MILITARY_LES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_US_MILITARY_CLES = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_GIG = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_NONE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_US_TAX_1099_MISC = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_US_TAX_1099_K = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF = 11,
	}
	
	/// <summary>
	/// High level descriptions of how the associated document was processed. If a document fails verification, the details in the `analysis` object should help clarify why the document was rejected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentAnalysis
	{
		
		/// <summary>
		/// High level summary of whether the document in the provided image matches the formatting rules and security checks for the associated jurisdiction.
		///
		///For example, most identity documents have formatting rules like the following:
		///
		///
		///The image of the person's face must have a certain contrast in order to highlight skin tone
		///
		///
		///The subject in the document's image must remove eye glasses and pose in a certain way
		///
		///
		///The informational fields (name, date of birth, ID number, etc.) must be colored and aligned according to specific rules
		///
		///
		///Security features like watermarks and background patterns must be present
		///
		///So a `match` status for this field indicates that the document in the provided image seems to conform to the various formatting and security rules associated with the detected document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticity")]
		public DocumentAnalysisAuthenticity Authenticity { get; set; }
		
		/// <summary>
		/// Analysis of the data extracted from the submitted document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="extracted_data")]
		public PhysicalDocumentExtractedDataAnalysis Extracted_data { get; set; }
		
		/// <summary>
		/// A high level description of the quality of the image the user submitted.
		///
		///For example, an image that is blurry, distorted by glare from a nearby light source, or improperly framed might be marked as low or medium quality. Poor quality images are more likely to fail OCR and/or template conformity checks.
		///
		///Note: By default, Plaid will let a user recapture document images twice before failing the entire session if we attribute the failure to low image quality.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="image_quality")]
		public DocumentAnalysisImage_quality Image_quality { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentAnalysisAuthenticity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 3,
	}
	
	/// <summary>
	/// Analysis of the data extracted from the submitted document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhysicalDocumentExtractedDataAnalysis
	{
		
		/// <summary>
		/// A match summary describing the cross comparison between the subject's date of birth, extracted from the document image, and the date of birth they separately provided to the identity verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public PhysicalDocumentExtractedDataAnalysisDate_of_birth Date_of_birth { get; set; }
		
		/// <summary>
		/// A description of whether the associated document was expired when the verification was performed.
		///
		///Note: In the case where an expiration date is not present on the document or failed to be extracted, this value will be `no_data`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_date")]
		public PhysicalDocumentExtractedDataAnalysisExpiration_date Expiration_date { get; set; }
		
		/// <summary>
		/// A binary match indicator specifying whether the country that issued the provided document matches the country that the user separately provided to Plaid.
		///
		///Note: You can configure whether a `no_match` on `issuing_country` fails the `documentary_verification` by editing your Plaid Template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="issuing_country")]
		public PhysicalDocumentExtractedDataAnalysisIssuing_country Issuing_country { get; set; }
		
		/// <summary>
		/// A match summary describing the cross comparison between the subject's name, extracted from the document image, and the name they separately provided to identity verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public PhysicalDocumentExtractedDataAnalysisDate_of_birth Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhysicalDocumentExtractedDataAnalysisDate_of_birth
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhysicalDocumentExtractedDataAnalysisExpiration_date
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_expired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhysicalDocumentExtractedDataAnalysisIssuing_country
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentAnalysisImage_quality
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		high = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		medium = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		low = 2,
	}
	
	/// <summary>
	/// High level summary of whether the document in the provided image matches the formatting rules and security checks for the associated jurisdiction.
	///
	///For example, most identity documents have formatting rules like the following:
	///
	///
	///The image of the person's face must have a certain contrast in order to highlight skin tone
	///
	///
	///The subject in the document's image must remove eye glasses and pose in a certain way
	///
	///
	///The informational fields (name, date of birth, ID number, etc.) must be colored and aligned according to specific rules
	///
	///
	///Security features like watermarks and background patterns must be present
	///
	///So a `match` status for this field indicates that the document in the provided image seems to conform to the various formatting and security rules associated with the detected document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentAuthenticityMatchCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 3,
	}
	
	/// <summary>
	/// A match summary describing the cross comparison between the subject's date of birth, extracted from the document image, and the date of birth they separately provided to the identity verification attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentDateOfBirthMatchCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
	}
	
	/// <summary>
	/// An object representing metadata from the end user's uploaded document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentMetadata
	{
		
		/// <summary>
		/// An identifier of the document that is also present in the paystub response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doc_id")]
		public string Doc_id { get; set; }
		
		/// <summary>
		/// The type of document.
		///
		///`DOCUMENT_TYPE_PAYSTUB`: A paystub.
		///
		///`DOCUMENT_TYPE_BANK_STATEMENT`: A bank statement.
		///
		///`DOCUMENT_TYPE_US_TAX_W2`: A W-2 wage and tax statement provided by a US employer reflecting wages earned by the employee.
		///
		///`DOCUMENT_TYPE_US_MILITARY_ERAS`: An electronic Retirement Account Statement (eRAS) issued by the US military.
		///
		///`DOCUMENT_TYPE_US_MILITARY_LES`: A Leave and Earnings Statement (LES) issued by the US military.
		///
		///`DOCUMENT_TYPE_US_MILITARY_CLES`: A Civilian Leave and Earnings Statement (CLES) issued by the US military.
		///
		///`DOCUMENT_TYPE_GIG`: Used to indicate that the income is related to gig work. Does not necessarily correspond to a specific document type.
		///
		///`DOCUMENT_TYPE_NONE`: Used to indicate that there is no underlying document for the data.
		///
		///`DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF`: Used to indicate that the PDF for the paystub was generated by Plaid.
		///
		///`UNKNOWN`: Document type could not be determined.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doc_type")]
		public DocType Doc_type { get; set; }
		
		/// <summary>
		/// The name of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The processing status of the document.
		///
		///`PROCESSING_COMPLETE`: The document was successfully processed.
		///
		///`DOCUMENT_ERROR`: The document could not be processed. Possible causes include: The document was an unacceptable document type such as an offer letter or bank statement, the document image was cropped or blurry, or the document was corrupted.
		///
		///`UNKNOWN` or `null`: An internal error occured. If this happens repeatedly, contact support or your Plaid account manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// A match summary describing the cross comparison between the subject's name, extracted from the document image, and the name they separately provided to identity verification attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentNameMatchCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
	}
	
	/// <summary>
	/// An outcome status for this specific document submission. Distinct from the overall `documentary_verification.status` that summarizes the verification outcome from one or more documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DocumentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_approved = 2,
	}
	
	/// <summary>
	/// Data, images, analysis, and results from the `documentary_verification` step. This field will be `null` unless `steps.documentary_verification` has reached a terminal state of either `success` or `failed`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentaryVerification
	{
		
		/// <summary>
		/// An array of documents submitted to the `documentary_verification` step. Each entry represents one user submission, where each submission will contain both a front and back image, or just a front image, depending on the document type.
		///
		///Note: Plaid will automatically let a user submit a new set of document images up to three times if we detect that a previous attempt might have failed due to user error. For example, if the first set of document images are blurry or obscured by glare, the user will be asked to capture their documents again, resulting in at least two separate entries within `documents`. If the overall `documentary_verification` is `failed`, the user has exhausted their retry attempts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public DocumentaryVerificationDocument[] Documents { get; set; }
		
		/// <summary>
		/// The outcome status for the associated Identity Verification attempt's `documentary_verification` step. This field will always have the same value as `steps.documentary_verification`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Images, extracted data, and analysis from a user's identity document
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentaryVerificationDocument
	{
		
		/// <summary>
		/// High level descriptions of how the associated document was processed. If a document fails verification, the details in the `analysis` object should help clarify why the document was rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public DocumentAnalysis Analysis { get; set; }
		
		/// <summary>
		/// The `attempt` field begins with 1 and increments with each subsequent document upload.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attempt")]
		public double Attempt { get; set; }
		
		/// <summary>
		/// Data extracted from a user-submitted document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="extracted_data")]
		public PhysicalDocumentExtractedData Extracted_data { get; set; }
		
		/// <summary>
		/// URLs for downloading original and cropped images for this document submission. The URLs are designed to only allow downloading, not hot linking, so the URL will only serve the document image for 60 seconds before expiring. The expiration time is 60 seconds after the `GET` request for the associated Identity Verification attempt. A new expiring URL is generated with each request, so you can always rerequest the Identity Verification attempt if one of your URLs expires.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="images")]
		public PhysicalDocumentImages Images { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redacted_at")]
		public System.Nullable<System.DateTimeOffset> Redacted_at { get; set; }
		
		/// <summary>
		/// An outcome status for this specific document submission. Distinct from the overall `documentary_verification.status` that summarizes the verification outcome from one or more documents.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DocumentStatus Status { get; set; }
	}
	
	/// <summary>
	/// Data extracted from a user-submitted document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhysicalDocumentExtractedData
	{
		
		/// <summary>
		/// The type of identity document detected in the images provided. Will always be one of the following values:
		///
		///  `drivers_license` - A driver's license for the associated country
		///
		///  `id_card` - A general national identification card, distinct from driver's licenses
		///
		///  `passport` - A passport for the associated country
		///
		///  `residence_permit_card` - An identity document permitting a foreign citizen to <em>temporarily</em> reside in the associated country
		///
		///  `resident_card` - An identity document permitting a foreign citizen to <em>permanently</em> reside in the associated country
		///
		///Note: This value may be different from the ID type that the user selects within Link. For example, if they select "Driver's License" but then submit a picture of a passport, this field will say `passport`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category")]
		public PhysicalDocumentExtractedDataCategory Category { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration_date")]
		public System.Nullable<System.DateOnly> Expiration_date { get; set; }
		
		/// <summary>
		/// Alpha-numeric ID number extracted via OCR from the user's document image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id_number")]
		public string Id_number { get; set; }
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="issuing_country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Issuing_country { get; set; }
		
		/// <summary>
		/// An ISO 3166-2 subdivision code. Related terms would be "state", "province", "prefecture", "zone", "subdivision", etc.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="issuing_region")]
		public string Issuing_region { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhysicalDocumentExtractedDataCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		drivers_license = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id_card = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		passport = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		residence_permit_card = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resident_card = 4,
	}
	
	/// <summary>
	/// URLs for downloading original and cropped images for this document submission. The URLs are designed to only allow downloading, not hot linking, so the URL will only serve the document image for 60 seconds before expiring. The expiration time is 60 seconds after the `GET` request for the associated Identity Verification attempt. A new expiring URL is generated with each request, so you can always rerequest the Identity Verification attempt if one of your URLs expires.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhysicalDocumentImages
	{
		
		/// <summary>
		/// Temporary URL that expires after 60 seconds for downloading a cropped image containing just the back of the document. Might be null if the back of the document was not collected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cropped_back")]
		public string Cropped_back { get; set; }
		
		/// <summary>
		/// Temporary URL that expires after 60 seconds for downloading a cropped image containing just the front of the document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cropped_front")]
		public string Cropped_front { get; set; }
		
		/// <summary>
		/// Temporary URL that expires after 60 seconds for downloading a crop of just the user's face from the document image. Might be null if the document does not contain a face photo.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="face")]
		public string Face { get; set; }
		
		/// <summary>
		/// Temporary URL that expires after 60 seconds for downloading the original image of the back of the document. Might be null if the back of the document was not collected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="original_back")]
		public string Original_back { get; set; }
		
		/// <summary>
		/// Temporary URL that expires after 60 seconds for downloading the uncropped original image of the front of the document.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="original_front")]
		public string Original_front { get; set; }
	}
	
	/// <summary>
	/// An object representing both a breakdown of earnings on a paystub and the total earnings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Earnings
	{
		
		[System.Runtime.Serialization.DataMember(Name="breakdown")]
		public EarningsBreakdown[] Breakdown { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtotals")]
		public EarningsTotal[] Subtotals { get; set; }
		
		/// <summary>
		/// An object representing both the current pay period and year to date amount for an earning category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public EarningsTotal Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totals")]
		public EarningsTotal[] Totals { get; set; }
	}
	
	/// <summary>
	/// An object representing the earnings line items for the pay period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EarningsBreakdown
	{
		
		/// <summary>
		/// Commonly used term to describe the earning line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonical_description")]
		public System.Nullable<EarningsBreakdownCanonical_description> Canonical_description { get; set; }
		
		/// <summary>
		/// Raw amount of the earning line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Description of the earning line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Number of hours applicable for this earning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Double> Hours { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// Hourly rate applicable for this earning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the line item. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date amount of the deduction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EarningsBreakdownCanonical_description
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BONUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMISSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERTIME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAID TIME OFF")]
		PAID_TIME_OFF = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REGULAR PAY")]
		REGULAR_PAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VACATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BASIC ALLOWANCE HOUSING")]
		BASIC_ALLOWANCE_HOUSING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BASIC ALLOWANCE SUBSISTENCE")]
		BASIC_ALLOWANCE_SUBSISTENCE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 9,
	}
	
	/// <summary>
	/// An object representing both the current pay period and year to date amount for an earning category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EarningsTotal
	{
		
		/// <summary>
		/// Total amount of the earnings for this pay period
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// An object representing a monetary amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_pay")]
		public Pay Current_pay { get; set; }
		
		/// <summary>
		/// Total number of hours worked for this pay period
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Double> Hours { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the line item. Always `null` if `unofficial_currency_code` is non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The total year-to-date amount of the earnings
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
		
		/// <summary>
		/// An object representing a monetary amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_pay")]
		public Pay Ytd_pay { get; set; }
	}
	
	/// <summary>
	/// Commonly used term to describe the earning line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EarningsBreakdownCanonicalDescription
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BONUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMISSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERTIME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAID TIME OFF")]
		PAID_TIME_OFF = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REGULAR PAY")]
		REGULAR_PAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VACATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BASIC ALLOWANCE HOUSING")]
		BASIC_ALLOWANCE_HOUSING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BASIC ALLOWANCE SUBSISTENCE")]
		BASIC_ALLOWANCE_SUBSISTENCE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 9,
	}
	
	/// <summary>
	/// Data about the employee.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Employee
	{
		
		/// <summary>
		/// Address on the paystub
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PaystubAddress Address { get; set; }
		
		/// <summary>
		/// Marital status of the employee - either `single` or `married`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marital_status")]
		public string Marital_status { get; set; }
		
		/// <summary>
		/// The name of the employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Taxpayer ID of the individual receiving the paystub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxpayer_id")]
		public TaxpayerID Taxpayer_id { get; set; }
	}
	
	/// <summary>
	/// Address on the paystub
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubAddress
	{
		
		/// <summary>
		/// The full city name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Street address line 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line1")]
		public string Line1 { get; set; }
		
		/// <summary>
		/// Street address line 2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line2")]
		public string Line2 { get; set; }
		
		/// <summary>
		/// The postal code of the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state
		///Example: `"NC"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The region or state
		///Example: `"NC"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state_code")]
		public string State_code { get; set; }
		
		/// <summary>
		/// The full street address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// Taxpayer ID of the individual receiving the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaxpayerID
	{
		
		/// <summary>
		/// ID mask; i.e. last 4 digits of the taxpayer ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id_mask")]
		public string Id_mask { get; set; }
		
		/// <summary>
		/// Type of ID, e.g. 'SSN'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id_type")]
		public string Id_type { get; set; }
		
		/// <summary>
		/// Last 4 digits of unique number of ID.
		/// Min length: 4
		/// Max length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_4_digits")]
		[System.ComponentModel.DataAnnotations.Length(4, 4)]
		public string Last_4_digits { get; set; }
	}
	
	/// <summary>
	/// The name of the employee, as reported on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmployeeIncomeSummaryFieldString : IncomeSummaryFieldString
	{
	}
	
	/// <summary>
	/// Data about the employer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Employer
	{
		
		/// <summary>
		/// Data about the components comprising an address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public AddressDataNullable Address { get; set; }
		
		/// <summary>
		/// A number from 0 to 1 indicating Plaid's level of confidence in the pairing between the employer and the institution (not yet implemented).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confidence_score")]
		public double Confidence_score { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for the employer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer_id")]
		public string Employer_id { get; set; }
		
		/// <summary>
		/// The name of the employer
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The name of the employer, as reported on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmployerIncomeSummaryFieldString : IncomeSummaryFieldString
	{
	}
	
	/// <summary>
	/// An object containing employer data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmployerVerification
	{
		
		/// <summary>
		/// Name of employer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// EmployersSearchRequest defines the request schema for `/employers/search`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmployersSearchRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The Plaid products the returned employers should support. Currently, this field must be set to `"deposit_switch"`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="products")]
		public string[] Products { get; set; }
		
		/// <summary>
		/// The employer name to be searched for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// EmployersSearchResponse defines the response schema for `/employers/search`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmployersSearchResponse
	{
		
		/// <summary>
		/// A list of employers matching the search criteria.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employers")]
		public Employer[] Employers { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object representing employment details found on a paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmploymentDetails
	{
		
		/// <summary>
		/// An object representing a monetary amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annual_salary")]
		public Pay Annual_salary { get; set; }
		
		/// <summary>
		/// Date on which the employee was hired, in the YYYY-MM-DD format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hire_date")]
		public System.Nullable<System.DateOnly> Hire_date { get; set; }
	}
	
	/// <summary>
	/// The types of source employment data that users should be able to share
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmploymentSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bank = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 1,
	}
	
	/// <summary>
	/// An object containing proof of employment data for an individual
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmploymentVerification
	{
		
		/// <summary>
		/// An object containing employer data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public EmployerVerification Employer { get; set; }
		
		/// <summary>
		/// End of employment, if applicable. Provided in ISO 8601 format (YYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// An object containing a set of ids related to an employee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform_ids")]
		public PlatformIds Platform_ids { get; set; }
		
		/// <summary>
		/// Start of employment in ISO 8601 format (YYYY-MM-DD).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// Current employment status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<EmploymentVerificationStatus> Status { get; set; }
		
		/// <summary>
		/// Current title of employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An object containing a set of ids related to an employee
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlatformIds
	{
		
		/// <summary>
		/// The ID of an employee as given by their employer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The ID of an employee as given by their payroll
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payroll_id")]
		public string Payroll_id { get; set; }
		
		/// <summary>
		/// The ID of the position of the employee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="position_id")]
		public string Position_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmploymentVerificationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPLOYMENT_STATUS_ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPLOYMENT_STATUS_INACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// EmploymentVerificationGetRequest defines the request schema for `/employment/verification/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmploymentVerificationGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// EmploymentVerificationGetResponse defines the response schema for `/employment/verification/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmploymentVerificationGetResponse
	{
		
		/// <summary>
		/// A list of employment verification summaries.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employments")]
		public EmploymentVerification[] Employments { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The direction of the transaction from the perspective of the account holder:
	///
	///`OUTFLOW` - Includes outgoing transfers, purchases, and fees. (Typically represented as a negative value on checking accounts and debit cards and a positive value on credit cards.)
	///
	///`INFLOW` - Includes incoming transfers, refunds, and income. (Typically represented as a positive value on checking accounts and debit cards and a negative value on credit cards.)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnrichTransactionDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTFLOW = 1,
	}
	
	/// <summary>
	/// An official document, usually issued by a governing body or institution, with an associated identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityDocument
	{
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Required
		/// Min length: 4
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Number { get; set; }
		
		/// <summary>
		/// The kind of official document represented by this object.
		///
		///`bik` - Russian bank code
		///
		///`business_number` - A number that uniquely identifies the business within a category of businesses
		///
		///`imo` - Number assigned to the entity by the International Maritime Organization
		///
		///`other` - Any document not covered by other categories
		///
		///`swift` - Number identifying a bank and branch.
		///
		///`tax_id` - Identification issued for the purpose of collecting taxes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public EntityDocumentType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityDocumentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bik = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business_number = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		imo = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swift = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tax_id = 5,
	}
	
	/// <summary>
	/// Analysis information describing why a screening hit matched the provided entity information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitAnalysis
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public System.Nullable<EntityScreeningHitAnalysisDocuments> Documents { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_addresses")]
		public EntityScreeningHitAnalysisDocuments Email_addresses { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public EntityScreeningHitAnalysisDocuments Locations { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public EntityScreeningHitAnalysisDocuments Names { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public EntityScreeningHitAnalysisDocuments Phone_numbers { get; set; }
		
		/// <summary>
		/// The version of the entity screening's `search_terms` that were compared when the entity screening hit was added. entity screening hits are immutable once they have been reviewed. If changes are detected due to updates to the entity screening's `search_terms`, the associated entity program, or the list's source data prior to review, the entity screening hit will be updated to reflect those changes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms_version")]
		public double Search_terms_version { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="urls")]
		public EntityScreeningHitAnalysisDocuments Urls { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityScreeningHitAnalysisDocuments
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_input = 4,
	}
	
	/// <summary>
	/// Information associated with the entity watchlist hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitData
	{
		
		/// <summary>
		/// Documents associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public EntityScreeningHitDocumentsItems[] Documents { get; set; }
		
		/// <summary>
		/// Email addresses associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_addresses")]
		public EntityScreeningHitEmailsItems[] Email_addresses { get; set; }
		
		/// <summary>
		/// Locations associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public GenericScreeningHitLocationItems[] Locations { get; set; }
		
		/// <summary>
		/// Names associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public EntityScreeningHitNamesItems[] Names { get; set; }
		
		/// <summary>
		/// Phone numbers associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public EntityScreeningHitsPhoneNumberItems[] Phone_numbers { get; set; }
		
		/// <summary>
		/// URLs associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="urls")]
		public EntityScreeningHitUrlsItems[] Urls { get; set; }
	}
	
	/// <summary>
	/// Analyzed documents for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitDocumentsItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// An official document, usually issued by a governing body or institution, with an associated identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EntityDocument Data { get; set; }
	}
	
	/// <summary>
	/// Summary object reflecting the match result of the associated data
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MatchSummary
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public EntityScreeningHitAnalysisDocuments Summary { get; set; }
	}
	
	/// <summary>
	/// Analyzed emails for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitEmailsItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// Email address information for the associated entity watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EntityScreeningHitEmails Data { get; set; }
	}
	
	/// <summary>
	/// Email address information for the associated entity watchlist hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitEmails
	{
		
		/// <summary>
		/// A valid email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
	}
	
	/// <summary>
	/// Analyzed location information for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenericScreeningHitLocationItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// Location information for the associated individual watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public WatchlistScreeningHitLocations Data { get; set; }
	}
	
	/// <summary>
	/// Location information for the associated individual watchlist hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningHitLocations
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The full location string, potentially including elements like street, city, postal codes and country codes. Note that this is not necessarily a complete or well-formatted address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="full")]
		public string Full { get; set; }
	}
	
	/// <summary>
	/// Analyzed names for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitNamesItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// Name information for the associated entity watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EntityScreeningHitNames Data { get; set; }
	}
	
	/// <summary>
	/// Name information for the associated entity watchlist hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitNames
	{
		
		/// <summary>
		/// The full name of the entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="full")]
		public string Full { get; set; }
		
		/// <summary>
		/// Primary names are those most commonly used to refer to this entity. Only one name will ever be marked as primary.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_primary")]
		public bool Is_primary { get; set; }
		
		/// <summary>
		/// Names that are explicitly marked as low quality either by their `source` list, or by `plaid` by a series of additional checks done by Plaid. Plaid does not ever surface a hit as a result of a weak name alone. If a name has no quality issues, this value will be `none`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="weak_alias_determination")]
		public EntityScreeningHitNamesWeak_alias_determination Weak_alias_determination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityScreeningHitNamesWeak_alias_determination
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		source = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		plaid = 2,
	}
	
	/// <summary>
	/// Analyzed phone numbers for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitsPhoneNumberItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// Phone number information associated with the entity screening hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EntityScreeningHitPhoneNumbers Data { get; set; }
	}
	
	/// <summary>
	/// Phone number information associated with the entity screening hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitPhoneNumbers
	{
		
		/// <summary>
		/// A phone number in E.164 format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// An enum indicating whether a phone number is a phone line or a fax line.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public EntityScreeningHitPhoneNumbersType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityScreeningHitPhoneNumbersType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fax = 1,
	}
	
	/// <summary>
	/// Analyzed URLs for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitUrlsItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// URLs associated with the entity screening hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EntityScreeningHitUrls Data { get; set; }
	}
	
	/// <summary>
	/// URLs associated with the entity screening hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningHitUrls
	{
		
		/// <summary>
		/// An 'http' or 'https' URL (must begin with either of those).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Fired when an entity screening status has changed, which can occur manually via the dashboard or during ongoing monitoring.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityScreeningStatusUpdatedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="screening_id")]
		public string Screening_id { get; set; }
		
		/// <summary>
		/// `STATUS_UPDATED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ENTITY_SCREENING`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Shorthand identifier for a specific screening list for entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityWatchlistCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CA_CON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EU_CON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_SOE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_UNC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_WBK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_CAP = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_FSE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_MBS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_SDN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_SSI = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_CMC = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_UVL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AU_CON = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UK_HMC = 13,
	}
	
	/// <summary>
	/// A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityWatchlistProgram
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Archived programs are read-only and cannot screen new customers nor participate in ongoing monitoring.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_archived")]
		public bool Is_archived { get; set; }
		
		/// <summary>
		/// Indicator specifying whether the program is enabled and will perform daily rescans.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_rescanning_enabled")]
		public bool Is_rescanning_enabled { get; set; }
		
		/// <summary>
		/// Watchlists enabled for the associated program
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lists_enabled")]
		public EntityWatchlistCode[] Lists_enabled { get; set; }
		
		/// <summary>
		/// A name for the entity program to define its purpose. For example, "High Risk Organizations" or "Applicants".
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The valid name matching sensitivity configurations for a screening program. Note that while certain matching techniques may be more prevalent on less strict settings, all matching algorithms are enabled for every sensitivity.
		///
		///`coarse` - See more potential matches. This sensitivity will see more broad phonetic matches across alphabets that make missing a potential hit very unlikely. This setting is noisier and will require more manual review.
		///
		///`balanced` - A good default for most companies. This sensitivity is balanced to show high quality hits with reduced noise.
		///
		///`strict` - Aggressive false positive reduction. This sensitivity will require names to be more similar than `coarse` and `balanced` settings, relying less on phonetics, while still accounting for character transpositions, missing tokens, and other common permutations.
		///
		///`exact` - Matches must be nearly exact. This sensitivity will only show hits with exact or nearly exact name matches with only basic correction such as extraneous symbols and capitalization. This setting is generally not recommended unless you have a very specific use case.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name_sensitivity")]
		public EntityWatchlistProgramName_sensitivity Name_sensitivity { get; set; }
	}
	
	/// <summary>
	/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningAuditTrail
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dashboard_user_id")]
		public string Dashboard_user_id { get; set; }
		
		/// <summary>
		/// A type indicating whether a dashboard user, an API-based user, or Plaid last touched this object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public WatchlistScreeningAuditTrailSource Source { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WatchlistScreeningAuditTrailSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dashboard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		link = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		system = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityWatchlistProgramName_sensitivity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coarse = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		balanced = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		strict = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		exact = 3,
	}
	
	/// <summary>
	/// The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityWatchlistScreening
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Search terms associated with an entity used for searching against watchlists
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public EntityWatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Search terms associated with an entity used for searching against watchlists
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityWatchlistScreeningSearchTerms
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Required
		/// Min length: 4
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Document_number { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_program_id")]
		public string Entity_watchlist_program_id { get; set; }
		
		/// <summary>
		/// The name of the organization being screened.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// A phone number in E.164 format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// An 'http' or 'https' URL (must begin with either of those).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The current version of the search terms. Starts at `1` and increments with each edit to `search_terms`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		public double Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityWatchlistScreeningStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rejected = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cleared = 2,
	}
	
	/// <summary>
	/// Data from a government watchlist that has been attached to the screening.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityWatchlistScreeningHit
	{
		
		/// <summary>
		/// Analysis information describing why a screening hit matched the provided entity information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public EntityScreeningHitAnalysis Analysis { get; set; }
		
		/// <summary>
		/// Information associated with the entity watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EntityScreeningHitData Data { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_active")]
		public System.DateTimeOffset First_active { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="historical_since")]
		public System.Nullable<System.DateTimeOffset> Historical_since { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening hit.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inactive_since")]
		public System.Nullable<System.DateTimeOffset> Inactive_since { get; set; }
		
		/// <summary>
		/// Shorthand identifier for a specific screening list for entities.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_code")]
		public EntityWatchlistCode List_code { get; set; }
		
		/// <summary>
		/// A universal identifier for a watchlist individual that is stable across searches and updates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="plaid_uid")]
		public string Plaid_uid { get; set; }
		
		/// <summary>
		/// The current state of review. All watchlist screening hits begin in a `pending_review` state but can be changed by creating a review. When a hit is in the `pending_review` state, it will always show the latest version of the watchlist data Plaid has available and be compared against the latest customer information saved in the watchlist screening. Once a hit has been marked as `confirmed` or `dismissed` it will no longer be updated so that the state is as it was when the review was first conducted.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="review_status")]
		public EntityWatchlistScreeningHitReview_status Review_status { get; set; }
		
		/// <summary>
		/// The identifier provided by the source sanction or watchlist. When one is not provided by the source, this is `null`.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source_uid")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Source_uid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntityWatchlistScreeningHitReview_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		confirmed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dismissed = 2,
	}
	
	/// <summary>
	/// A review submitted by a team member for an entity watchlist screening. A review can be either a comment on the current screening state, actions taken
	///against hits attached to the watchlist screening, or both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityWatchlistScreeningReview
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// A comment submitted by a team member as part of reviewing a watchlist screening.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmed_hits")]
		public string[] Confirmed_hits { get; set; }
		
		/// <summary>
		/// Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dismissed_hits")]
		public string[] Dismissed_hits { get; set; }
		
		/// <summary>
		/// ID of the associated entity review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Search inputs for creating an entity watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityWatchlistSearchTerms
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Min length: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Min length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Document_number { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_program_id")]
		public string Entity_watchlist_program_id { get; set; }
		
		/// <summary>
		/// The name of the organization being screened.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// A phone number in E.164 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// An 'http' or 'https' URL (must begin with either of those).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// A description of whether the associated document was expired when the verification was performed.
	///
	///Note: In the case where an expiration date is not present on the document or failed to be extracted, this value will be `no_data`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExpirationDate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_expired = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Additional payment consent options
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalPaymentInitiationConsentOptions
	{
		
		/// <summary>
		/// An optional object used to restrict the accounts used for payments. If provided, the end user will be able to send payments only from the specified bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public PaymentInitiationOptionalRestrictionBacs Bacs { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the payer's account. Where possible, the end user will be able to set up payment consent using only the specified bank account if provided.
		/// Min length: 15
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		[System.ComponentModel.DataAnnotations.Length(15, 34)]
		public string Iban { get; set; }
		
		/// <summary>
		/// When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_refund_details")]
		public System.Nullable<System.Boolean> Request_refund_details { get; set; }
	}
	
	/// <summary>
	/// Additional payment options
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalPaymentOptions
	{
		
		/// <summary>
		/// An optional object used to restrict the accounts used for payments. If provided, the end user will be able to send payments only from the specified bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public PaymentInitiationOptionalRestrictionBacs Bacs { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the payer's account. Where possible, the end user will be able to send payments only from the specified bank account if provided.
		/// Min length: 15
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		[System.ComponentModel.DataAnnotations.Length(15, 34)]
		public string Iban { get; set; }
		
		/// <summary>
		/// When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_refund_details")]
		public System.Nullable<System.Boolean> Request_refund_details { get; set; }
		
		/// <summary>
		/// Payment scheme. If not specified - the default in the region will be used (e.g. `SEPA_CREDIT_TRANSFER` for EU). Using unsupported values will result in a failed payment.
		///
		///`LOCAL_DEFAULT`: The default payment scheme for the selected market and currency will be used.
		///
		///`LOCAL_INSTANT`: The instant payment scheme for the selected market and currency will be used (if applicable). Fees may be applied by the institution. If the market does not support an Instant Scheme (e.g. Denmark), the default in the region will be used.
		///
		///`SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.
		///
		///`SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment within the SEPA area. May involve additional fees and may not be available at some banks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheme")]
		public System.Nullable<ExternalPaymentOptionsScheme> Scheme { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExternalPaymentOptionsScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_DEFAULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_INSTANT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER_INSTANT = 4,
	}
	
	/// <summary>
	/// Details about external payment refund
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalPaymentRefundDetails
	{
		
		/// <summary>
		/// An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public RecipientBACSNullable Bacs { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
		
		/// <summary>
		/// The name of the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalPaymentScheduleBase
	{
		
		/// <summary>
		/// The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, this field will be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjusted_start_date")]
		public System.Nullable<System.DateOnly> Adjusted_start_date { get; set; }
		
		/// <summary>
		/// A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Standing order payments will end on the last `interval_execution_day` on or before the `end_date`.
		///If the only `interval_execution_day` between the start date and the end date (inclusive) is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make a payment on that day, but it is not guaranteed to do so.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The frequency interval of the payment.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interval")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public System.Nullable<ExternalPaymentScheduleBaseInterval> Interval { get; set; }
		
		/// <summary>
		/// The day of the interval on which to schedule the payment.
		///
		///If the payment interval is weekly, `interval_execution_day` should be an integer from 1 (Monday) to 7 (Sunday).
		///
		///If the payment interval is monthly, `interval_execution_day` should be an integer indicating which day of the month to make the payment on. Integers from 1 to 28 can be used to make a payment on that day of the month. Negative integers from -1 to -5 can be used to make a payment relative to the end of the month. To make a payment on the last day of the month, use -1; to make the payment on the second-to-last day, use -2, and so on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interval_execution_day")]
		public System.Nullable<System.Int32> Interval_execution_day { get; set; }
		
		/// <summary>
		/// A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Standing order payments will begin on the first `interval_execution_day` on or after the `start_date`.
		///
		///If the first `interval_execution_day` on or after the start date is also the same day that `/payment_initiation/payment/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExternalPaymentScheduleBaseInterval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 1,
	}
	
	/// <summary>
	/// The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalPaymentScheduleGet : ExternalPaymentScheduleBase
	{
	}
	
	/// <summary>
	/// The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalPaymentScheduleRequest : ExternalPaymentScheduleBase
	{
	}
	
	/// <summary>
	/// Types of document formats. (Suggested values)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXContentTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="application/pdf")]
		application_pdf = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/gif")]
		image_gif = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/jpeg")]
		image_jpeg = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/tiff")]
		image_tiff = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image/png")]
		image_png = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="application/json")]
		application_json = 5,
	}
	
	/// <summary>
	/// Financial Institution provider-specific attribute
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FDXFiAttribute
	{
		
		/// <summary>
		/// Name of attribute
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Value of attribute
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// REST application constraint (Hypermedia As The Engine Of Application State)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FDXHateoasLink
	{
		
		/// <summary>
		/// HTTP Method to use for the request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public System.Nullable<FDXHateoasLinkAction> Action { get; set; }
		
		/// <summary>
		/// URL to invoke the action on the resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// Content-types that can be used in the Accept header
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="types")]
		public FDXContentTypes[] Types { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXHateoasLinkAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUT = 4,
	}
	
	/// <summary>
	/// Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FDXNotification
	{
		
		/// <summary>
		/// Category of Notification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category")]
		public FDXNotificationCategory Category { get; set; }
		
		/// <summary>
		/// Id of notification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="notificationId")]
		public string NotificationId { get; set; }
		
		/// <summary>
		/// Custom key-value pairs payload for a notification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="notificationPayload")]
		public FDXNotificationPayload NotificationPayload { get; set; }
		
		/// <summary>
		/// Priority of notification
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<FDXNotificationPriority> Priority { get; set; }
		
		/// <summary>
		/// FDX Participant - an entity or person that is a part of a FDX API transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public FDXParty Publisher { get; set; }
		
		/// <summary>
		/// ISO 8601 date-time in format 'YYYY-MM-DDThh:mm:ss.nnn[Z|[+|-]hh:mm]' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sentOn")]
		public System.DateTimeOffset SentOn { get; set; }
		
		/// <summary>
		/// Severity level of notification
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<FDXNotificationSeverity> Severity { get; set; }
		
		/// <summary>
		/// FDX Participant - an entity or person that is a part of a FDX API transaction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber")]
		public FDXParty Subscriber { get; set; }
		
		/// <summary>
		/// Type of Notification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public FDXNotificationType Type { get; set; }
		
		/// <summary>
		/// REST application constraint (Hypermedia As The Engine Of Application State)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public FDXHateoasLink Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXNotificationCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECURITY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAINTENANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRAUD = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW_DATA = 4,
	}
	
	/// <summary>
	/// Custom key-value pairs payload for a notification
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FDXNotificationPayload
	{
		
		/// <summary>
		/// Financial Institution provider-specific attribute
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customFields")]
		public FDXFiAttribute CustomFields { get; set; }
		
		/// <summary>
		/// ID for the origination entity related to the notification
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Type of entity causing origination of a notification
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idType")]
		public System.Nullable<FDXNotificationPayloadIdType> IdType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXNotificationPayloadIdType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAINTENANCE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSENT = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXNotificationPriority
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 2,
	}
	
	/// <summary>
	/// FDX Participant - an entity or person that is a part of a FDX API transaction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FDXParty
	{
		
		/// <summary>
		/// URI for party, where an end user could learn more about the company or application involved in the data sharing chain
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="homeUri")]
		public string HomeUri { get; set; }
		
		/// <summary>
		/// URI for a logo asset to be displayed to the end user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logoUri")]
		public string LogoUri { get; set; }
		
		/// <summary>
		/// Human recognizable common name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Registered id of party
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="registeredEntityId")]
		public string RegisteredEntityId { get; set; }
		
		/// <summary>
		/// Registered name of party
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="registeredEntityName")]
		public string RegisteredEntityName { get; set; }
		
		/// <summary>
		/// The registry containing the partyâ€™s registration with name and id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="registry")]
		public System.Nullable<FDXPartyRegistry> Registry { get; set; }
		
		/// <summary>
		/// Identifies the type of a party
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public FDXPartyType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXPartyRegistry
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FDX = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLEIF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICANN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXPartyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_ACCESS_PLATFORM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_PROVIDER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_RECIPIENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDIVIDUAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MERCHANT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VENDOR = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXNotificationSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMERGENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALERT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOTICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FDXNotificationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSENT_REVOKED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSENT_UPDATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BALANCE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLANNED_OUTAGE = 5,
	}
	
	/// <summary>
	/// Fires when an account is automatically verified using micro-deposits
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FallbackAuthMicrodepositAutoVerifiedWebhook
	{
		
		/// <summary>
		/// The external account ID associated with the micro-deposit
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The error code associated with the webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `AUTOMATICALLY_VERIFIED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `AUTH`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Fires when an account has an expired verification when using micro-deposits
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FallbackAuthMicrodepositVerificationExpiredWebhook
	{
		
		/// <summary>
		/// The external account ID associated with the micro-deposit
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The error code associated with the webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `VERIFICATION_EXPIRED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `AUTH`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Form 1099 Type
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Form1099Type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_1099_TYPE_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_1099_TYPE_MISC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORM_1099_TYPE_K = 2,
	}
	
	/// <summary>
	/// A status health incident
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HealthIncident
	{
		
		/// <summary>
		/// The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// Updates on the health incident.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="incident_updates")]
		public IncidentUpdate[] Incident_updates { get; set; }
		
		/// <summary>
		/// The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.DateTimeOffset Start_date { get; set; }
		
		/// <summary>
		/// The title of the incident
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An update on the health incident
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncidentUpdate
	{
		
		/// <summary>
		/// The content of the update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The status of the incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<IncidentUpdateStatus> Status { get; set; }
		
		/// <summary>
		/// The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_date")]
		public System.Nullable<System.DateTimeOffset> Updated_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IncidentUpdateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVESTIGATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDENTIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 4,
	}
	
	/// <summary>
	/// Fired when an Item's historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.
	///
	///This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistoricalUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The number of new, unfetched transactions available
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_transactions")]
		public double New_transactions { get; set; }
		
		/// <summary>
		/// `HISTORICAL_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// A securities holding at an institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Holding
	{
		
		/// <summary>
		/// The Plaid `account_id` associated with the holding.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The original total value of the holding. This field is calculated by Plaid as the sum of the purchase price of all of the shares in the holding.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cost_basis")]
		public System.Nullable<System.Double> Cost_basis { get; set; }
		
		/// <summary>
		/// The last price given by the institution for this security.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_price")]
		public double Institution_price { get; set; }
		
		/// <summary>
		/// The date at which `institution_price` was current.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_price_as_of")]
		public System.Nullable<System.DateOnly> Institution_price_as_of { get; set; }
		
		/// <summary>
		/// Date and time at which `institution_price` was current, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ).
		///
		///This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00).
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_price_datetime")]
		public System.Nullable<System.DateTimeOffset> Institution_price_datetime { get; set; }
		
		/// <summary>
		/// The value of the holding, as reported by the institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_value")]
		public double Institution_value { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public double Quantity { get; set; }
		
		/// <summary>
		/// The Plaid `security_id` associated with the holding. Security data is not specific to a user's account; any user who held the same security at the same financial institution at the same time would have identical security data. The `security_id` for the same security will typically be the same across different institutions, but this is not guaranteed. The `security_id` does not typically change, but may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="security_id")]
		public string Security_id { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// Fired when new or updated holdings have been detected on an investment account. The webhook typically fires in response to any newly added holdings or price changes to existing holdings, most commonly after market close.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoldingsDefaultUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The number of new holdings reported since the last time this webhook was fired.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_holdings")]
		public double New_holdings { get; set; }
		
		/// <summary>
		/// The number of updated holdings reported since the last time this webhook was fired.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updated_holdings")]
		public double Updated_holdings { get; set; }
		
		/// <summary>
		/// `DEFAULT_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `HOLDINGS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Specify the holdings on the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoldingsOverride
	{
		
		/// <summary>
		/// The average original value of the holding. Multiple cost basis values for the same security purchased at different prices are not supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cost_basis")]
		public System.Nullable<System.Double> Cost_basis { get; set; }
		
		/// <summary>
		/// Either a valid `iso_currency_code` or `unofficial_currency_code`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// The last price given by the institution for this security
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_price")]
		public double Institution_price { get; set; }
		
		/// <summary>
		/// The date at which `institution_price` was current. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_price_as_of")]
		public System.Nullable<System.DateOnly> Institution_price_as_of { get; set; }
		
		/// <summary>
		/// The total quantity of the asset held, as reported by the financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public double Quantity { get; set; }
		
		/// <summary>
		/// Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (`ticker_symbol`, `cusip`, `isin`, or `sedol`) are required.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="security")]
		public SecurityOverride Security { get; set; }
	}
	
	/// <summary>
	/// Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (`ticker_symbol`, `cusip`, `isin`, or `sedol`) are required.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityOverride
	{
		
		/// <summary>
		/// Either a valid `iso_currency_code` or `unofficial_currency_code`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// 9-character CUSIP, an identifier assigned to North American securities. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cusip")]
		public string Cusip { get; set; }
		
		/// <summary>
		/// 12-character ISIN, a globally unique securities identifier. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isin")]
		public string Isin { get; set; }
		
		/// <summary>
		/// A descriptive name for the security, suitable for display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// 7-character SEDOL, an identifier assigned to securities in the UK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sedol")]
		public string Sedol { get; set; }
		
		/// <summary>
		/// The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ticker_symbol")]
		public string Ticker_symbol { get; set; }
	}
	
	/// <summary>
	/// A globally unique and human readable ID type, specific to the country and document category. For more context on this field, see [Hybrid Input Validation](https://plaid.com/docs/identity-verification/hybrid-input-validation).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IDNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ar_dni = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		au_drivers_license = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		au_passport = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		br_cpf = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ca_sin = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cl_run = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cn_resident_card = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		co_nit = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dk_cpr = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eg_national_id = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es_dni = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		es_nie = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hk_hkid = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		in_pan = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		it_cf = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jo_civil_id = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		jp_my_number = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ke_huduma_namba = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		kw_civil_id = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mx_curp = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mx_rfc = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		my_nric = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ng_nin = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nz_drivers_license = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		om_civil_id = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ph_psn = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pl_pesel = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ro_cnp = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sa_national_id = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		se_pin = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sg_nric = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tr_tc_kimlik = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		us_ssn = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		us_ssn_last_4 = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		za_smart_id = 34,
	}
	
	/// <summary>
	/// Fired when a change to identity data has been detected on an Item. Items are checked for identity updates every 30-90 days. We recommend that upon receiving this webhook you make another call to `/identity/get` to fetch the user's latest identity data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityDefaultUpdateWebhook
	{
		
		/// <summary>
		/// An object with keys of `account_id`'s that are mapped to their respective identity attributes that changed.
		///
		///Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["PHONES"] }`
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_ids_with_updated_identity")]
		public AccountIdsWithUpdatedIdentity Account_ids_with_updated_identity { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `DEFAULT_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `IDENTITY`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// IdentityGetRequest defines the request schema for `/identity/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/identity/get` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public IdentityGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/identity/get` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityGetRequestOptions
	{
		
		/// <summary>
		/// A list of `account_ids` to retrieve for the Item.
		///Note: An error will be returned if a provided `account_id` is not associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
	}
	
	/// <summary>
	/// IdentityGetResponse defines the response schema for `/identity/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityGetResponse
	{
		
		/// <summary>
		/// The accounts for which Identity data has been requested
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountIdentity[] Accounts { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// IdentityMatchRequest defines the request schema for `/identity/match`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityMatchRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification attempt. This field can be used instead of `user` to perform fuzzy match against the data collected during identity verification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity_verification_id")]
		public string Identity_verification_id { get; set; }
		
		/// <summary>
		/// An optional object to filter /identity/match results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public IdentityMatchRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user's legal name, phone number, email address and address used to perform fuzzy match.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IdentityMatchUser User { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter /identity/match results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityMatchRequestOptions
	{
		
		/// <summary>
		/// An array of `account_ids` to perform fuzzy match
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
	}
	
	/// <summary>
	/// The user's legal name, phone number, email address and address used to perform fuzzy match.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityMatchUser
	{
		
		/// <summary>
		/// Data about the components comprising an address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public AddressDataNullable Address { get; set; }
		
		/// <summary>
		/// The user's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's full legal name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The user's phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567". Phone numbers provided in other formats will be parsed on a best-effort basis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// IdentityMatchResponse defines the response schema for `/identity/match`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityMatchResponse
	{
		
		/// <summary>
		/// The accounts for which Identity match has been requested
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountIdentityMatchScore[] Accounts { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The possible types of identity data that may have changed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityUpdateTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHONES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDRESSES = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAILS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAMES = 3,
	}
	
	/// <summary>
	/// A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerification
	{
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Data, images, analysis, and results from the `documentary_verification` step. This field will be `null` unless `steps.documentary_verification` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentary_verification")]
		public DocumentaryVerification Documentary_verification { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional information for the `kyc_check` step. This field will be `null` unless `steps.kyc_check` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kyc_check")]
		public KYCCheckDetails Kyc_check { get; set; }
		
		/// <summary>
		/// The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="previous_attempt_id")]
		public string Previous_attempt_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redacted_at")]
		public System.Nullable<System.DateTimeOffset> Redacted_at { get; set; }
		
		/// <summary>
		/// Additional information for the `risk_check` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_check")]
		public RiskCheckDetails Risk_check { get; set; }
		
		/// <summary>
		/// A shareable URL that can be sent directly to the user to complete verification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shareable_url")]
		public string Shareable_url { get; set; }
		
		/// <summary>
		/// The status of this Identity Verification attempt.
		///
		///
		///`active` - The Identity Verification attempt is incomplete. The user may have completed part of the session, but has neither failed or passed.
		///
		///`success` - The Identity Verification attempt has completed, passing all steps defined to the associated Identity Verification template
		///
		///`failed` - The user failed one or more steps in the session and was told to contact support.
		///
		///`expired` - The Identity Verification attempt was active for a long period of time without being completed and was automatically marked as expired. Note that sessions currently do not expire. Automatic expiration is expected to be enabled in the future.
		///
		///`canceled` - The Identity Verification attempt was canceled, either via the dashboard by a user, or via API. The user may have completed part of the session, but has neither failed or passed.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public IdentityVerificationStatus Status { get; set; }
		
		/// <summary>
		/// Each step will be one of the following values:
		///
		///
		///`active` - This step is the user's current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as `active` at any given point.
		///
		///`success` - The Identity Verification attempt has completed this step.
		///
		///`failed` - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.
		///
		///`waiting_for_prerequisite` - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.
		///
		///`not_applicable` - This step will not be run for this session.
		///
		///`skipped` - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.
		///
		///`expired` - This step had not yet been completed when the Identity Verification attempt as a whole expired.
		///
		///`canceled` - The Identity Verification attempt was canceled before the user completed this step.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		///
		///`manually_approved` - The step was manually overridden to pass by a team member in the dashboard.
		///
		///`manually_rejected` - The step was manually overridden to fail by a team member in the dashboard.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public IdentityVerificationStepSummary Steps { get; set; }
		
		/// <summary>
		/// The resource ID and version number of the template configuring the behavior of a given identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public IdentityVerificationTemplateReference Template { get; set; }
		
		/// <summary>
		/// The identity data that was either collected from the user or provided via API in order to perform an identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IdentityVerificationUserData User { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Additional information for the `kyc_check` step. This field will be `null` unless `steps.kyc_check` has reached a terminal state of either `success` or `failed`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KYCCheckDetails
	{
		
		/// <summary>
		/// Result summary object specifying how the `address` field matched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public KYCCheckAddressSummary Address { get; set; }
		
		/// <summary>
		/// Result summary object specifying how the `date_of_birth` field matched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public KYCCheckDateOfBirthSummary Date_of_birth { get; set; }
		
		/// <summary>
		/// Result summary object specifying how the `id_number` field matched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id_number")]
		public KYCCheckIDNumberSummary Id_number { get; set; }
		
		/// <summary>
		/// Result summary object specifying how the `name` field matched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public KYCCheckNameSummary Name { get; set; }
		
		/// <summary>
		/// Result summary object specifying how the `phone` field matched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public KYCCheckPhoneSummary Phone_number { get; set; }
		
		/// <summary>
		/// The outcome status for the associated Identity Verification attempt's `kyc_check` step. This field will always have the same value as `steps.kyc_check`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Result summary object specifying how the `address` field matched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KYCCheckAddressSummary
	{
		
		/// <summary>
		/// Field describing whether the associated address is a post office box. Will be `yes` when a P.O. box is detected, `no` when Plaid confirmed the address is not a P.O. box, and `no_data` when Plaid was not able to determine if the address is a P.O. box.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="po_box")]
		public KYCCheckAddressSummaryPo_box Po_box { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public EntityScreeningHitAnalysisDocuments Summary { get; set; }
		
		/// <summary>
		/// Field describing whether the associated address is being used for commercial or residential purposes.
		///
		///Note: This value will be `no_data` when Plaid does not have sufficient data to determine the address's use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AddressPurposeLabel Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum KYCCheckAddressSummaryPo_box
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Result summary object specifying how the `date_of_birth` field matched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KYCCheckDateOfBirthSummary
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public EntityScreeningHitAnalysisDocuments Summary { get; set; }
	}
	
	/// <summary>
	/// Result summary object specifying how the `id_number` field matched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KYCCheckIDNumberSummary
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public EntityScreeningHitAnalysisDocuments Summary { get; set; }
	}
	
	/// <summary>
	/// Result summary object specifying how the `name` field matched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KYCCheckNameSummary
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public EntityScreeningHitAnalysisDocuments Summary { get; set; }
	}
	
	/// <summary>
	/// Result summary object specifying how the `phone` field matched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KYCCheckPhoneSummary
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public EntityScreeningHitAnalysisDocuments Summary { get; set; }
	}
	
	/// <summary>
	/// Additional information for the `risk_check` step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RiskCheckDetails
	{
		
		/// <summary>
		/// Result summary object specifying values for `behavior` attributes of risk check, when available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="behavior")]
		public RiskCheckBehavior Behavior { get; set; }
		
		/// <summary>
		/// Array of result summary objects specifying values for `device` attributes of risk check.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="devices")]
		public RiskCheckDevice[] Devices { get; set; }
		
		/// <summary>
		/// Result summary object specifying values for `email` attributes of risk check.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public RiskCheckEmail Email { get; set; }
		
		/// <summary>
		/// Result summary object specifying values for `phone` attributes of risk check.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public RiskCheckPhone Phone { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public RiskCheckDetailsStatus Status { get; set; }
	}
	
	/// <summary>
	/// Result summary object specifying values for `behavior` attributes of risk check, when available.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RiskCheckBehavior
	{
		
		/// <summary>
		/// Field describing the outcome of a bot detection behavior risk check.
		///
		///`yes` indicates that automated activity was detected.
		///
		///`no` indicates that automated activity was not detected.
		///
		///`no_data` indicates there was not enough information available to give an accurate signal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bot_detected")]
		public KYCCheckAddressSummaryPo_box Bot_detected { get; set; }
		
		/// <summary>
		/// Field describing the outcome of a fraud ring behavior risk check.
		///
		///`yes` indicates that fraud ring activity was detected.
		///
		///`no` indicates that fraud ring activity was not detected.
		///
		///`no_data` indicates there was not enough information available to give an accurate signal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fraud_ring_detected")]
		public KYCCheckAddressSummaryPo_box Fraud_ring_detected { get; set; }
		
		/// <summary>
		/// Field describing the overall user interaction signals of a behavior risk check. This value represents how familiar the user is with the personal data they provide, based on a number of signals that are collected during their session.
		///
		///`genuine` indicates the user has high familiarity with the data they are providing, and that fraud is unlikely.
		///
		///`neutral` indicates some signals are present in between `risky` and `genuine`, but there are not enough clear signals to determine an outcome.
		///
		///`risky` indicates the user has low familiarity with the data they are providing, and that fraud is likely.
		///
		///`no_data` indicates there is not sufficient information to give an accurate signal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_interactions")]
		public RiskCheckBehaviorUser_interactions User_interactions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckBehaviorUser_interactions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		genuine = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		neutral = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		risky = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 3,
	}
	
	/// <summary>
	/// Result summary object specifying values for `device` attributes of risk check.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RiskCheckDevice
	{
		
		/// <summary>
		/// An enum indicating whether a network proxy is present and if so what type it is.
		///
		///`none_detected` indicates the user is not on a detectable proxy network.
		///
		///`tor` indicates the user was using a Tor browser, which sends encrypted traffic on a decentralized network and is somewhat similar to a VPN (Virtual Private Network).
		///
		///`vpn` indicates the user is on a VPN (Virtual Private Network)
		///
		///`web_proxy` indicates the user is on a web proxy server, which may allow them to conceal information such as their IP address or other identifying information.
		///
		///`public_proxy` indicates the user is on a public web proxy server, which is similar to a web proxy but can be shared by multiple users. This may allow multiple users to appear as if they have the same IP address for instance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ip_proxy_type")]
		public System.Nullable<RiskCheckDeviceIp_proxy_type> Ip_proxy_type { get; set; }
		
		/// <summary>
		/// Count of spam lists the IP address is associated with if known.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ip_spam_list_count")]
		public System.Nullable<System.Int32> Ip_spam_list_count { get; set; }
		
		/// <summary>
		/// UTC offset of the timezone associated with the IP address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ip_timezone_offset")]
		public string Ip_timezone_offset { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckDeviceIp_proxy_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none_detected = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tor = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vpn = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		web_proxy = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public_proxy = 4,
	}
	
	/// <summary>
	/// Result summary object specifying values for `email` attributes of risk check.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RiskCheckEmail
	{
		
		/// <summary>
		/// Count of all known breaches of this email address if known.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="breach_count")]
		public System.Nullable<System.Int32> Breach_count { get; set; }
		
		/// <summary>
		/// Indicates whether the email address domain is custom if known, i.e. a company domain and not free or disposable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain_is_custom")]
		public KYCCheckAddressSummaryPo_box Domain_is_custom { get; set; }
		
		/// <summary>
		/// Indicates whether the email domain is listed as disposable if known. Disposable domains are often used to create email addresses that are part of a fake set of user details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain_is_disposable")]
		public KYCCheckAddressSummaryPo_box Domain_is_disposable { get; set; }
		
		/// <summary>
		/// Indicates whether the email address domain is a free provider such as Gmail or Hotmail if known.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain_is_free_provider")]
		public KYCCheckAddressSummaryPo_box Domain_is_free_provider { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain_registered_at")]
		public System.Nullable<System.DateOnly> Domain_registered_at { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_breached_at")]
		public System.Nullable<System.DateOnly> First_breached_at { get; set; }
		
		/// <summary>
		/// SMTP-MX check to confirm the email address exists if known.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_deliverable")]
		public KYCCheckAddressSummaryPo_box Is_deliverable { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_breached_at")]
		public System.Nullable<System.DateOnly> Last_breached_at { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="linked_services")]
		public RiskCheckLinkedService[] Linked_services { get; set; }
		
		/// <summary>
		/// Indicates whether the email address top level domain, which is the last part of the domain, is fraudulent or risky if known. In most cases, a suspicious top level domain is also associated with a disposable or high-risk domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="top_level_domain_is_suspicious")]
		public KYCCheckAddressSummaryPo_box Top_level_domain_is_suspicious { get; set; }
	}
	
	/// <summary>
	/// An enum indicating the type of a linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckLinkedService
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		apple = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebay = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		facebook = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		flickr = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		foursquare = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		github = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		google = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gravatar = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		instagram = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lastfm = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		linkedin = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		microsoft = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		myspace = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pinterest = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		skype = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		spotify = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		telegram = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tumblr = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		twitter = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		viber = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vimeo = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		weibo = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		whatsapp = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yahoo = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		airbnb = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		amazon = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		booking = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		discord = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		kakao = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ok = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		qzone = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		line = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		snapchat = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zalo = 33,
	}
	
	/// <summary>
	/// Result summary object specifying values for `phone` attributes of risk check.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RiskCheckPhone
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="linked_services")]
		public RiskCheckLinkedService[] Linked_services { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckDetailsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		waiting_for_prerequisite = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_applicable = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		skipped = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_approved = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_rejected = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityVerificationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 5,
	}
	
	/// <summary>
	/// Each step will be one of the following values:
	///
	///
	///`active` - This step is the user's current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as `active` at any given point.
	///
	///`success` - The Identity Verification attempt has completed this step.
	///
	///`failed` - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.
	///
	///`waiting_for_prerequisite` - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.
	///
	///`not_applicable` - This step will not be run for this session.
	///
	///`skipped` - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.
	///
	///`expired` - This step had not yet been completed when the Identity Verification attempt as a whole expired.
	///
	///`canceled` - The Identity Verification attempt was canceled before the user completed this step.
	///
	///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
	///
	///`manually_approved` - The step was manually overridden to pass by a team member in the dashboard.
	///
	///`manually_rejected` - The step was manually overridden to fail by a team member in the dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationStepSummary
	{
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accept_tos")]
		public RiskCheckDetailsStatus Accept_tos { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentary_verification")]
		public RiskCheckDetailsStatus Documentary_verification { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kyc_check")]
		public RiskCheckDetailsStatus Kyc_check { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_check")]
		public RiskCheckDetailsStatus Risk_check { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="selfie_check")]
		public RiskCheckDetailsStatus Selfie_check { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verify_sms")]
		public RiskCheckDetailsStatus Verify_sms { get; set; }
		
		/// <summary>
		/// The status of a step in the identity verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening")]
		public RiskCheckDetailsStatus Watchlist_screening { get; set; }
	}
	
	/// <summary>
	/// The resource ID and version number of the template configuring the behavior of a given identity verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationTemplateReference
	{
		
		/// <summary>
		/// ID of the associated Identity Verification template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Version of the associated Identity Verification template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		public double Version { get; set; }
	}
	
	/// <summary>
	/// The identity data that was either collected from the user or provided via API in order to perform an identity verification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationUserData
	{
		
		/// <summary>
		/// Even if an address has been collected, some fields may be null depending on the region's addressing system. For example:
		///
		///Addresses from the United Kingdom will not include a region
		///
		///Addresses from Hong Kong will not include postal code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public IdentityVerificationUserAddress Address { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public System.Nullable<System.DateOnly> Date_of_birth { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID number submitted by the user, currently used only for the Identity Verification product. If the user has not submitted this data yet, this field will be `null`. Otherwise, both fields are guaranteed to be filled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id_number")]
		public UserIDNumber Id_number { get; set; }
		
		/// <summary>
		/// An IPv4 or IPV6 address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		/// <summary>
		/// The full name provided by the user. If the user has not submitted their name, this field will be null. Otherwise, both fields are guaranteed to be filled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public IdentityVerificationResponseUserName Name { get; set; }
		
		/// <summary>
		/// A phone number in E.164 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// Even if an address has been collected, some fields may be null depending on the region's addressing system. For example:
	///
	///Addresses from the United Kingdom will not include a region
	///
	///Addresses from Hong Kong will not include postal code
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationUserAddress
	{
		
		/// <summary>
		/// City from the end user's address
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code for the associated address. Between 2 and 10 alphanumeric characters. For US-based addresses this must be 5 numeric digits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// An ISO 3166-2 subdivision code. Related terms would be "state", "province", "prefecture", "zone", "subdivision", etc.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The primary street portion of an address. If the user has submitted their address, this field will always be filled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
		
		/// <summary>
		/// Extra street information, like an apartment or suite number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street2")]
		public string Street2 { get; set; }
	}
	
	/// <summary>
	/// ID number submitted by the user, currently used only for the Identity Verification product. If the user has not submitted this data yet, this field will be `null`. Otherwise, both fields are guaranteed to be filled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserIDNumber
	{
		
		/// <summary>
		/// A globally unique and human readable ID type, specific to the country and document category. For more context on this field, see [Hybrid Input Validation](https://plaid.com/docs/identity-verification/hybrid-input-validation).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public IDNumberType Type { get; set; }
		
		/// <summary>
		/// Value of identity document value typed in by user. Alpha-numeric, with all formatting characters stripped.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The full name provided by the user. If the user has not submitted their name, this field will be null. Otherwise, both fields are guaranteed to be filled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationResponseUserName
	{
		
		/// <summary>
		/// A string with at least one non-whitespace character, with a max length of 100 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="family_name")]
		public string Family_name { get; set; }
		
		/// <summary>
		/// A string with at least one non-whitespace character, with a max length of 100 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="given_name")]
		public string Given_name { get; set; }
	}
	
	/// <summary>
	/// Request schema for '/identity_verification/create'
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A flag specifying whether the end user has already agreed to a privacy policy specifying that their data will be shared with Plaid for verification purposes.
		///
		///If `gave_consent` is set to `true`, the `accept_tos` step will be marked as `skipped` and the end user's session will start at the next step requirement.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(false)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="gave_consent")]
		public bool Gave_consent { get; set; } = false;
		
		/// <summary>
		/// An optional flag specifying how you would like Plaid to handle attempts to create an Identity Verification when an Identity Verification already exists for the provided `client_user_id` and `template_id`.
		///If idempotency is enabled, Plaid will return the existing Identity Verification. If idempotency is disabled, Plaid will reject the request with a `400 Bad Request` status code if an Identity Verification already exists for the supplied `client_user_id` and `template_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_idempotent")]
		public System.Nullable<System.Boolean> Is_idempotent { get; set; }
		
		/// <summary>
		/// A flag specifying whether you would like Plaid to expose a shareable URL for the verification being created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_shareable")]
		public bool Is_shareable { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
		
		/// <summary>
		/// User information collected outside of Link, most likely via your own onboarding process.
		///
		///Each of the following identity fields are optional:
		///
		///`email_address`
		///
		///`phone_number`
		///
		///`date_of_birth`
		///
		///`name`
		///
		///`address`
		///
		///`id_number`
		///
		///Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value.
		///Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the `accept_tos` step, depending on the value provided to the `gave_consent` field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IdentityVerificationRequestUser User { get; set; }
	}
	
	/// <summary>
	/// User information collected outside of Link, most likely via your own onboarding process.
	///
	///Each of the following identity fields are optional:
	///
	///`email_address`
	///
	///`phone_number`
	///
	///`date_of_birth`
	///
	///`name`
	///
	///`address`
	///
	///`id_number`
	///
	///Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value.
	///Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the `accept_tos` step, depending on the value provided to the `gave_consent` field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationRequestUser
	{
		
		/// <summary>
		/// Home address for the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public UserAddress Address { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public System.Nullable<System.DateOnly> Date_of_birth { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID number submitted by the user, currently used only for the Identity Verification product. If the user has not submitted this data yet, this field will be `null`. Otherwise, both fields are guaranteed to be filled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id_number")]
		public UserIDNumber Id_number { get; set; }
		
		/// <summary>
		/// You can use this field to pre-populate the user's legal name; if it is provided here, they will not be prompted to enter their name in the identity verification attempt.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public IdentityVerificationRequestUserName Name { get; set; }
		
		/// <summary>
		/// A phone number in E.164 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// Home address for the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserAddress
	{
		
		/// <summary>
		/// City from the end user's address
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code for the associated address. Between 2 and 10 alphanumeric characters. For US-based addresses this must be 5 numeric digits.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// An ISO 3166-2 subdivision code. Related terms would be "state", "province", "prefecture", "zone", "subdivision", etc.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The primary street portion of an address. If the user has submitted their address, this field will always be filled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
		
		/// <summary>
		/// Extra street information, like an apartment or suite number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street2")]
		public string Street2 { get; set; }
	}
	
	/// <summary>
	/// You can use this field to pre-populate the user's legal name; if it is provided here, they will not be prompted to enter their name in the identity verification attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationRequestUserName
	{
		
		/// <summary>
		/// A string with at least one non-whitespace character, with a max length of 100 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="family_name")]
		public string Family_name { get; set; }
		
		/// <summary>
		/// A string with at least one non-whitespace character, with a max length of 100 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="given_name")]
		public string Given_name { get; set; }
	}
	
	/// <summary>
	/// A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationCreateResponse
	{
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Data, images, analysis, and results from the `documentary_verification` step. This field will be `null` unless `steps.documentary_verification` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentary_verification")]
		public DocumentaryVerification Documentary_verification { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional information for the `kyc_check` step. This field will be `null` unless `steps.kyc_check` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kyc_check")]
		public KYCCheckDetails Kyc_check { get; set; }
		
		/// <summary>
		/// The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="previous_attempt_id")]
		public string Previous_attempt_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redacted_at")]
		public System.Nullable<System.DateTimeOffset> Redacted_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Additional information for the `risk_check` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_check")]
		public RiskCheckDetails Risk_check { get; set; }
		
		/// <summary>
		/// A shareable URL that can be sent directly to the user to complete verification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shareable_url")]
		public string Shareable_url { get; set; }
		
		/// <summary>
		/// The status of this Identity Verification attempt.
		///
		///
		///`active` - The Identity Verification attempt is incomplete. The user may have completed part of the session, but has neither failed or passed.
		///
		///`success` - The Identity Verification attempt has completed, passing all steps defined to the associated Identity Verification template
		///
		///`failed` - The user failed one or more steps in the session and was told to contact support.
		///
		///`expired` - The Identity Verification attempt was active for a long period of time without being completed and was automatically marked as expired. Note that sessions currently do not expire. Automatic expiration is expected to be enabled in the future.
		///
		///`canceled` - The Identity Verification attempt was canceled, either via the dashboard by a user, or via API. The user may have completed part of the session, but has neither failed or passed.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public IdentityVerificationStatus Status { get; set; }
		
		/// <summary>
		/// Each step will be one of the following values:
		///
		///
		///`active` - This step is the user's current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as `active` at any given point.
		///
		///`success` - The Identity Verification attempt has completed this step.
		///
		///`failed` - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.
		///
		///`waiting_for_prerequisite` - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.
		///
		///`not_applicable` - This step will not be run for this session.
		///
		///`skipped` - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.
		///
		///`expired` - This step had not yet been completed when the Identity Verification attempt as a whole expired.
		///
		///`canceled` - The Identity Verification attempt was canceled before the user completed this step.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		///
		///`manually_approved` - The step was manually overridden to pass by a team member in the dashboard.
		///
		///`manually_rejected` - The step was manually overridden to fail by a team member in the dashboard.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public IdentityVerificationStepSummary Steps { get; set; }
		
		/// <summary>
		/// The resource ID and version number of the template configuring the behavior of a given identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public IdentityVerificationTemplateReference Template { get; set; }
		
		/// <summary>
		/// The identity data that was either collected from the user or provided via API in order to perform an identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IdentityVerificationUserData User { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Request input for fetching an identity verification
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identity_verification_id")]
		public string Identity_verification_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationGetResponse
	{
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Data, images, analysis, and results from the `documentary_verification` step. This field will be `null` unless `steps.documentary_verification` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentary_verification")]
		public DocumentaryVerification Documentary_verification { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional information for the `kyc_check` step. This field will be `null` unless `steps.kyc_check` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kyc_check")]
		public KYCCheckDetails Kyc_check { get; set; }
		
		/// <summary>
		/// The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="previous_attempt_id")]
		public string Previous_attempt_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redacted_at")]
		public System.Nullable<System.DateTimeOffset> Redacted_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Additional information for the `risk_check` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_check")]
		public RiskCheckDetails Risk_check { get; set; }
		
		/// <summary>
		/// A shareable URL that can be sent directly to the user to complete verification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shareable_url")]
		public string Shareable_url { get; set; }
		
		/// <summary>
		/// The status of this Identity Verification attempt.
		///
		///
		///`active` - The Identity Verification attempt is incomplete. The user may have completed part of the session, but has neither failed or passed.
		///
		///`success` - The Identity Verification attempt has completed, passing all steps defined to the associated Identity Verification template
		///
		///`failed` - The user failed one or more steps in the session and was told to contact support.
		///
		///`expired` - The Identity Verification attempt was active for a long period of time without being completed and was automatically marked as expired. Note that sessions currently do not expire. Automatic expiration is expected to be enabled in the future.
		///
		///`canceled` - The Identity Verification attempt was canceled, either via the dashboard by a user, or via API. The user may have completed part of the session, but has neither failed or passed.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public IdentityVerificationStatus Status { get; set; }
		
		/// <summary>
		/// Each step will be one of the following values:
		///
		///
		///`active` - This step is the user's current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as `active` at any given point.
		///
		///`success` - The Identity Verification attempt has completed this step.
		///
		///`failed` - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.
		///
		///`waiting_for_prerequisite` - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.
		///
		///`not_applicable` - This step will not be run for this session.
		///
		///`skipped` - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.
		///
		///`expired` - This step had not yet been completed when the Identity Verification attempt as a whole expired.
		///
		///`canceled` - The Identity Verification attempt was canceled before the user completed this step.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		///
		///`manually_approved` - The step was manually overridden to pass by a team member in the dashboard.
		///
		///`manually_rejected` - The step was manually overridden to fail by a team member in the dashboard.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public IdentityVerificationStepSummary Steps { get; set; }
		
		/// <summary>
		/// The resource ID and version number of the template configuring the behavior of a given identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public IdentityVerificationTemplateReference Template { get; set; }
		
		/// <summary>
		/// The identity data that was either collected from the user or provided via API in order to perform an identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IdentityVerificationUserData User { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing identity verifications
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
	}
	
	/// <summary>
	/// Paginated list of Plaid sessions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationListResponse
	{
		
		/// <summary>
		/// List of Plaid sessions
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identity_verifications")]
		public IdentityVerification[] Identity_verifications { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Fired when identity verification has been retried, which can be triggered via the dashboard or the API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationRetriedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identity_verification_id")]
		public string Identity_verification_id { get; set; }
		
		/// <summary>
		/// `RETRIED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `IDENTITY_VERIFICATION`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Request input for retrying an identity verification attempt
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationRetryRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Instructions for the `custom` retry strategy specifying which steps should be required or skipped.
		///
		///
		///Note:
		///
		///
		///This field must be provided when the retry strategy is `custom` and must be omitted otherwise.
		///
		///Custom retries override settings in your Plaid Template. For example, if your Plaid Template has `verify_sms` disabled, a custom retry with `verify_sms` enabled will still require the step.
		///
		///The `selfie_check` step is currently not supported on the sandbox server. Sandbox requests will silently disable the `selfie_check` step when provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public IdentityVerificationRetryRequestStepsObject Steps { get; set; }
		
		/// <summary>
		/// An instruction specifying what steps the new Identity Verification attempt should require the user to complete:
		///
		///
		///`reset` - Restart the user at the beginning of the session, regardless of whether they successfully completed part of their previous session.
		///
		///`incomplete` - Start the new session at the step that the user failed in the previous session, skipping steps that have already been successfully completed.
		///
		///`infer` - If the most recent Identity Verification attempt associated with the given `client_user_id` has a status of `failed` or `expired`, retry using the `incomplete` strategy. Otherwise, use the `reset` strategy.
		///
		///`custom` - Start the new session with a custom configuration, specified by the value of the `steps` field
		///
		///Note:
		///
		///The `incomplete` strategy cannot be applied if the session's failing step is `screening` or `risk_check`.
		///
		///The `infer` strategy cannot be applied if the session's status is still `active`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public IdentityVerificationRetryRequestStrategy Strategy { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
	}
	
	/// <summary>
	/// Instructions for the `custom` retry strategy specifying which steps should be required or skipped.
	///
	///
	///Note:
	///
	///
	///This field must be provided when the retry strategy is `custom` and must be omitted otherwise.
	///
	///Custom retries override settings in your Plaid Template. For example, if your Plaid Template has `verify_sms` disabled, a custom retry with `verify_sms` enabled will still require the step.
	///
	///The `selfie_check` step is currently not supported on the sandbox server. Sandbox requests will silently disable the `selfie_check` step when provided.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationRetryRequestStepsObject
	{
		
		/// <summary>
		/// A boolean field specifying whether the new session should require or skip the `documentary_verification` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentary_verification")]
		public bool Documentary_verification { get; set; }
		
		/// <summary>
		/// A boolean field specifying whether the new session should require or skip the `kyc_check` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kyc_check")]
		public bool Kyc_check { get; set; }
		
		/// <summary>
		/// A boolean field specifying whether the new session should require or skip the `selfie_check` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="selfie_check")]
		public bool Selfie_check { get; set; }
		
		/// <summary>
		/// A boolean field specifying whether the new session should require or skip the `verify_sms` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verify_sms")]
		public bool Verify_sms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityVerificationRetryRequestStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reset = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		incomplete = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		infer = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom = 3,
	}
	
	/// <summary>
	/// A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationRetryResponse
	{
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Data, images, analysis, and results from the `documentary_verification` step. This field will be `null` unless `steps.documentary_verification` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="documentary_verification")]
		public DocumentaryVerification Documentary_verification { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional information for the `kyc_check` step. This field will be `null` unless `steps.kyc_check` has reached a terminal state of either `success` or `failed`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kyc_check")]
		public KYCCheckDetails Kyc_check { get; set; }
		
		/// <summary>
		/// The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="previous_attempt_id")]
		public string Previous_attempt_id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redacted_at")]
		public System.Nullable<System.DateTimeOffset> Redacted_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Additional information for the `risk_check` step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="risk_check")]
		public RiskCheckDetails Risk_check { get; set; }
		
		/// <summary>
		/// A shareable URL that can be sent directly to the user to complete verification
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shareable_url")]
		public string Shareable_url { get; set; }
		
		/// <summary>
		/// The status of this Identity Verification attempt.
		///
		///
		///`active` - The Identity Verification attempt is incomplete. The user may have completed part of the session, but has neither failed or passed.
		///
		///`success` - The Identity Verification attempt has completed, passing all steps defined to the associated Identity Verification template
		///
		///`failed` - The user failed one or more steps in the session and was told to contact support.
		///
		///`expired` - The Identity Verification attempt was active for a long period of time without being completed and was automatically marked as expired. Note that sessions currently do not expire. Automatic expiration is expected to be enabled in the future.
		///
		///`canceled` - The Identity Verification attempt was canceled, either via the dashboard by a user, or via API. The user may have completed part of the session, but has neither failed or passed.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public IdentityVerificationStatus Status { get; set; }
		
		/// <summary>
		/// Each step will be one of the following values:
		///
		///
		///`active` - This step is the user's current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as `active` at any given point.
		///
		///`success` - The Identity Verification attempt has completed this step.
		///
		///`failed` - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.
		///
		///`waiting_for_prerequisite` - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.
		///
		///`not_applicable` - This step will not be run for this session.
		///
		///`skipped` - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.
		///
		///`expired` - This step had not yet been completed when the Identity Verification attempt as a whole expired.
		///
		///`canceled` - The Identity Verification attempt was canceled before the user completed this step.
		///
		///`pending_review` - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.
		///
		///`manually_approved` - The step was manually overridden to pass by a team member in the dashboard.
		///
		///`manually_rejected` - The step was manually overridden to fail by a team member in the dashboard.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public IdentityVerificationStepSummary Steps { get; set; }
		
		/// <summary>
		/// The resource ID and version number of the template configuring the behavior of a given identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public IdentityVerificationTemplateReference Template { get; set; }
		
		/// <summary>
		/// The identity data that was either collected from the user or provided via API in order to perform an identity verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IdentityVerificationUserData User { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Fired when the status of an identity verification has been updated, which can be triggered via the dashboard or the API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationStatusUpdatedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identity_verification_id")]
		public string Identity_verification_id { get; set; }
		
		/// <summary>
		/// `STATUS_UPDATED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `IDENTITY_VERIFICATION`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// The status of a step in the identity verification process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityVerificationStepStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		waiting_for_prerequisite = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_applicable = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		skipped = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_approved = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_rejected = 10,
	}
	
	/// <summary>
	/// Fired when an end user has completed a step of the Identity Verification process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityVerificationStepUpdatedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The ID of the associated Identity Verification attempt.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identity_verification_id")]
		public string Identity_verification_id { get; set; }
		
		/// <summary>
		/// `STEP_UPDATED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `IDENTITY_VERIFICATION`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// A high level description of the quality of the image the user submitted.
	///
	///For example, an image that is blurry, distorted by glare from a nearby light source, or improperly framed might be marked as low or medium quality. Poor quality images are more likely to fail OCR and/or template conformity checks.
	///
	///Note: By default, Plaid will let a user recapture document images twice before failing the entire session if we attribute the failure to low image quality.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ImageQuality
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		high = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		medium = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		low = 2,
	}
	
	/// <summary>
	/// An object representing a breakdown of the different income types on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeBreakdown
	{
		
		/// <summary>
		/// The number of hours logged for this income for this pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public System.Nullable<System.Double> Hours { get; set; }
		
		/// <summary>
		/// The hourly rate at which the income is paid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
		
		/// <summary>
		/// The total pay for this pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		/// <summary>
		/// The type of income. Possible values include:
		///  `"regular"`: regular income
		///  `"overtime"`: overtime income
		///  `"bonus"`: bonus income
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<IncomeBreakdownType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IncomeBreakdownType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bonus = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		overtime = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		regular = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 3,
	}
	
	/// <summary>
	/// Specify payroll data on the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeOverride
	{
		
		/// <summary>
		/// A list of paystubs associated with the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paystubs")]
		public PaystubOverride[] Paystubs { get; set; }
	}
	
	/// <summary>
	/// An object representing data from a paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubOverride
	{
		
		/// <summary>
		/// The employee on the paystub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public PaystubOverrideEmployee Employee { get; set; }
		
		/// <summary>
		/// The employer on the paystub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public PaystubOverrideEmployer Employer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="income_breakdown")]
		public IncomeBreakdown[] Income_breakdown { get; set; }
		
		/// <summary>
		/// Details about the pay period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_period_details")]
		public PayPeriodDetails Pay_period_details { get; set; }
	}
	
	/// <summary>
	/// The employee on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubOverrideEmployee
	{
		
		/// <summary>
		/// The address of the employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PaystubOverrideEmployeeAddress Address { get; set; }
		
		/// <summary>
		/// The name of the employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The address of the employee.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubOverrideEmployeeAddress
	{
		
		/// <summary>
		/// The full city name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The country of the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// 5 digit postal code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state
		///Example: `"NC"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address
		///Example: `"564 Main Street, APT 15"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// The employer on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubOverrideEmployer
	{
		
		/// <summary>
		/// The name of the employer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Details about the pay period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayPeriodDetails
	{
		
		/// <summary>
		/// The amount of the paycheck.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="check_amount")]
		public System.Nullable<System.Double> Check_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distribution_breakdown")]
		public DistributionBreakdown[] Distribution_breakdown { get; set; }
		
		/// <summary>
		/// The pay period end date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// Total earnings before tax/deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gross_earnings")]
		public System.Nullable<System.Double> Gross_earnings { get; set; }
		
		/// <summary>
		/// The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_date")]
		public System.Nullable<System.DateOnly> Pay_date { get; set; }
		
		/// <summary>
		/// The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_day")]
		public System.Nullable<System.DateOnly> Pay_day { get; set; }
		
		/// <summary>
		/// The frequency at which an individual is paid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public System.Nullable<PayPeriodDetailsPay_frequency> Pay_frequency { get; set; }
		
		/// <summary>
		/// The pay period start date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: "yyyy-mm-dd".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PayPeriodDetailsPay_frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAY_FREQUENCY_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAY_FREQUENCY_WEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAY_FREQUENCY_BIWEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAY_FREQUENCY_SEMIMONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAY_FREQUENCY_MONTHLY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 5,
	}
	
	/// <summary>
	/// The verified fields from a paystub verification. All fields are provided as reported on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeSummary
	{
		
		/// <summary>
		/// The name of the employee, as reported on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee_name")]
		public EmployeeIncomeSummaryFieldString Employee_name { get; set; }
		
		/// <summary>
		/// The name of the employer, as reported on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer_name")]
		public EmployerIncomeSummaryFieldString Employer_name { get; set; }
		
		/// <summary>
		/// The frequency of the pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public PayFrequency Pay_frequency { get; set; }
		
		/// <summary>
		/// The employee's estimated annual salary, as derived from information reported on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="projected_wage")]
		public ProjectedIncomeSummaryFieldNumber Projected_wage { get; set; }
		
		/// <summary>
		/// Information about the matched direct deposit transaction used to verify a user's payroll information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verified_transaction")]
		public TransactionData Verified_transaction { get; set; }
		
		/// <summary>
		/// Year-to-date pre-tax earnings, as reported on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_gross_income")]
		public YTDGrossIncomeSummaryFieldNumber Ytd_gross_income { get; set; }
		
		/// <summary>
		/// Year-to-date earnings after any tax withholdings, benefit payments or deductions, as reported on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_net_income")]
		public YTDNetIncomeSummaryFieldNumber Ytd_net_income { get; set; }
	}
	
	/// <summary>
	/// The frequency of the pay period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayFrequency
	{
		
		/// <summary>
		/// The frequency of the pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public PayFrequencyValue Value { get; set; }
		
		/// <summary>
		/// The verification status. One of the following:
		///
		///`"VERIFIED"`: The information was successfully verified.
		///
		///`"UNVERIFIED"`: The verification has not yet been performed.
		///
		///`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.
		///
		///"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.
		///
		///`"UNKNOWN"`: The verification status is unknown.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public PayFrequencyVerification_status Verification_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PayFrequencyValue
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		semimonthly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		weekly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		biweekly = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PayFrequencyVerification_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNVERIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEEDS_INFO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNABLE_TO_VERIFY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 4,
	}
	
	/// <summary>
	/// Information about the matched direct deposit transaction used to verify a user's payroll information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionData
	{
		
		/// <summary>
		/// A unique identifier for the end user's account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The amount of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.DateOnly Date { get; set; }
		
		/// <summary>
		/// The description of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique identifier for the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
	}
	
	/// <summary>
	/// Field number for income summary
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeSummaryFieldNumber
	{
		
		/// <summary>
		/// The value of the field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public double Value { get; set; }
		
		/// <summary>
		/// The verification status. One of the following:
		///
		///`"VERIFIED"`: The information was successfully verified.
		///
		///`"UNVERIFIED"`: The verification has not yet been performed.
		///
		///`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.
		///
		///"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.
		///
		///`"UNKNOWN"`: The verification status is unknown.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public PayFrequencyVerification_status Verification_status { get; set; }
	}
	
	/// <summary>
	/// Data about the income summary
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeSummaryFieldString
	{
		
		/// <summary>
		/// The value of the field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		/// <summary>
		/// The verification status. One of the following:
		///
		///`"VERIFIED"`: The information was successfully verified.
		///
		///`"UNVERIFIED"`: The verification has not yet been performed.
		///
		///`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.
		///
		///"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.
		///
		///`"UNKNOWN"`: The verification status is unknown.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public PayFrequencyVerification_status Verification_status { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationCreateRequest defines the request schema for `/income/verification/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Optional arguments for `/income/verification/create`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public IncomeVerificationCreateRequestOptions Options { get; set; }
		
		/// <summary>
		/// The ID of a precheck created with `/income/verification/precheck`. Will be used to improve conversion of the income verification flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precheck_id")]
		public string Precheck_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The URL endpoint to which Plaid should send webhooks related to the progress of the income verification process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// Optional arguments for `/income/verification/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationCreateRequestOptions
	{
		
		/// <summary>
		/// An array of access tokens corresponding to the Items that will be cross-referenced with the product data. Plaid will attempt to correlate transaction history from these Items with data from the user's paystub, such as date and amount. The `verification` status of the paystub as returned by `/income/verification/paystubs/get` will indicate if the verification status was successful, or, if not, why it failed. If the `transactions` product was not initialized for the Items during Link, it will be initialized after this Link session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_tokens")]
		public string[] Access_tokens { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationCreateResponse defines the response schema for `/income/verification/create`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationCreateResponse
	{
		
		/// <summary>
		/// ID of the verification. This ID is persisted throughout the lifetime of the verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="income_verification_id")]
		public string Income_verification_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationDocumentsDownloadRequest defines the request schema for `/income/verification/documents/download`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationDocumentsDownloadRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The document ID to download. If passed, a single document will be returned in the resulting zip file, rather than all document
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_id")]
		public string Document_id { get; set; }
		
		/// <summary>
		/// The ID of the verification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_verification_id")]
		public string Income_verification_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Flow types to retrieve payroll income data
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IncomeVerificationPayrollFlowType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll_digital_income = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll_document_income = 1,
	}
	
	/// <summary>
	/// IncomeVerificationPaystubsGetRequest defines the request schema for `/income/verification/paystubs/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPaystubsGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID of the verification for which to get paystub information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_verification_id")]
		public string Income_verification_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationPaystubsGetResponse defines the response schema for `/income/verification/paystubs/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPaystubsGetResponse
	{
		
		/// <summary>
		/// Metadata for an income document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_metadata")]
		public DocumentMetadata[] Document_metadata { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paystubs")]
		public Paystub[] Paystubs { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object representing data extracted from the end user's paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Paystub
	{
		
		/// <summary>
		/// An object with the deduction information found on a paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deductions")]
		public Deductions Deductions { get; set; }
		
		/// <summary>
		/// An identifier of the document referenced by the document metadata.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="doc_id")]
		public string Doc_id { get; set; }
		
		/// <summary>
		/// An object representing both a breakdown of earnings on a paystub and the total earnings.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="earnings")]
		public Earnings Earnings { get; set; }
		
		/// <summary>
		/// Data about the employee.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public Employee Employee { get; set; }
		
		/// <summary>
		/// Information about the employer on the paystub
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public PaystubEmployer Employer { get; set; }
		
		/// <summary>
		/// An object representing employment details found on a paystub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_details")]
		public EmploymentDetails Employment_details { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="income_breakdown")]
		public IncomeBreakdown[] Income_breakdown { get; set; }
		
		/// <summary>
		/// An object representing information about the net pay amount on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="net_pay")]
		public NetPay Net_pay { get; set; }
		
		/// <summary>
		/// Details about the pay period.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pay_period_details")]
		public PayPeriodDetails Pay_period_details { get; set; }
		
		/// <summary>
		/// An object representing details that can be found on the paystub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paystub_details")]
		public PaystubDetails Paystub_details { get; set; }
		
		/// <summary>
		/// The amount of income earned year to date, as based on paystub data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_earnings")]
		public PaystubYTDDetails Ytd_earnings { get; set; }
	}
	
	/// <summary>
	/// Information about the employer on the paystub
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubEmployer
	{
		
		/// <summary>
		/// Address on the paystub
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PaystubAddress Address { get; set; }
		
		/// <summary>
		/// The name of the employer on the paystub.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An object representing information about the net pay amount on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetPay
	{
		
		/// <summary>
		/// Raw amount of the net pay for the pay period
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_amount")]
		public System.Nullable<System.Double> Current_amount { get; set; }
		
		/// <summary>
		/// Description of the net pay
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// An object representing both the current pay period and year to date amount for a category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public Total Total { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The year-to-date amount of the net pay
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ytd_amount")]
		public System.Nullable<System.Double> Ytd_amount { get; set; }
	}
	
	/// <summary>
	/// An object representing details that can be found on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubDetails
	{
		
		/// <summary>
		/// Pay date on the paystub in the 'YYYY-MM-DD' format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_date")]
		public System.Nullable<System.DateOnly> Pay_date { get; set; }
		
		/// <summary>
		/// The frequency at which the employee is paid. Possible values: `MONTHLY`, `BI-WEEKLY`, `WEEKLY`, `SEMI-MONTHLY`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public System.Nullable<PaystubDetailsPay_frequency> Pay_frequency { get; set; }
		
		/// <summary>
		/// Ending date of the pay period on the paystub in the 'YYYY-MM-DD' format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_period_end_date")]
		public System.Nullable<System.DateOnly> Pay_period_end_date { get; set; }
		
		/// <summary>
		/// Beginning date of the pay period on the paystub in the 'YYYY-MM-DD' format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_period_start_date")]
		public System.Nullable<System.DateOnly> Pay_period_start_date { get; set; }
		
		/// <summary>
		/// The name of the payroll provider that generated the paystub, e.g. ADP
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="paystub_provider")]
		public string Paystub_provider { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaystubDetailsPay_frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BI-WEEKLY")]
		BIMinusWEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEMI-MONTHLY")]
		SEMIMinusMONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 4,
	}
	
	/// <summary>
	/// The amount of income earned year to date, as based on paystub data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubYTDDetails
	{
		
		/// <summary>
		/// Year-to-date gross earnings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gross_earnings")]
		public System.Nullable<System.Double> Gross_earnings { get; set; }
		
		/// <summary>
		/// Year-to-date net (take home) earnings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="net_earnings")]
		public System.Nullable<System.Double> Net_earnings { get; set; }
	}
	
	/// <summary>
	/// The confidence that Plaid can support the user in the digital income verification flow instead of requiring a manual paystub upload. One of the following:
	///
	///`"HIGH"`: It is very likely that this user can use the digital income verification flow.
	///
	///"`LOW`": It is unlikely that this user can use the digital income verification flow.
	///
	///`"UNKNOWN"`: It was not possible to determine if the user is supportable with the information passed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IncomeVerificationPrecheckConfidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
	}
	
	/// <summary>
	/// Data about the components comprising an address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckEmployerAddressData
	{
		
		/// <summary>
		/// The full city name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.
		///Example: `"NC"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address
		///Example: `"564 Main Street, APT 15"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationPrecheckRequest defines the request schema for `/income/verification/precheck`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Information about the end user's employer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public IncomeVerificationPrecheckEmployer Employer { get; set; }
		
		/// <summary>
		/// Information about the end user's payroll institution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payroll_institution")]
		public IncomeVerificationPrecheckPayrollInstitution Payroll_institution { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transactions_access_token")]
		public string Transactions_access_token { get; set; }
		
		/// <summary>
		/// An array of access tokens corresponding to Items belonging to the user whose eligibility is being checked. Note that if the Items specified here are not already initialized with `transactions`, providing them in this field will cause these Items to be initialized with (and billed for) the Transactions product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions_access_tokens")]
		public string[] Transactions_access_tokens { get; set; }
		
		/// <summary>
		/// Data about military info in the income verification precheck.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="us_military_info")]
		public IncomeVerificationPrecheckMilitaryInfo Us_military_info { get; set; }
		
		/// <summary>
		/// Information about the user whose eligibility is being evaluated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public IncomeVerificationPrecheckUser User { get; set; }
	}
	
	/// <summary>
	/// Information about the user whose eligibility is being evaluated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckUser
	{
		
		/// <summary>
		/// The user's email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's first name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Data about the components comprising an address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="home_address")]
		public SignalAddressData Home_address { get; set; }
		
		/// <summary>
		/// The user's last name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
	}
	
	/// <summary>
	/// Data about the components comprising an address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalAddressData
	{
		
		/// <summary>
		/// The full city name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state
		///Example: `"NC"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address
		///Example: `"564 Main Street, APT 15"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationPrecheckResponse defines the response schema for `/income/verification/precheck`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationPrecheckResponse
	{
		
		/// <summary>
		/// The confidence that Plaid can support the user in the digital income verification flow instead of requiring a manual paystub upload. One of the following:
		///
		///`"HIGH"`: It is very likely that this user can use the digital income verification flow.
		///
		///"`LOW`": It is unlikely that this user can use the digital income verification flow.
		///
		///`"UNKNOWN"`: It was not possible to determine if the user is supportable with the information passed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public CreditPayrollIncomePrecheckResponseConfidence Confidence { get; set; }
		
		/// <summary>
		/// ID of the precheck. Provide this value when calling `/link/token/create` in order to optimize Link conversion.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="precheck_id")]
		public string Precheck_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The types of source income data that users should be able to share
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IncomeVerificationSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bank = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 1,
	}
	
	/// <summary>
	/// Fired when the status of an income verification instance has changed. It will typically take several minutes for this webhook to fire after the end user has uploaded their documents in the Document Income flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationStatusWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The Item ID associated with the verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The Plaid `user_id` of the User associated with this webhook, warning, or error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
		
		/// <summary>
		/// `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.
		///
		///`VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
		///
		///`VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public string Verification_status { get; set; }
		
		/// <summary>
		/// `INCOME_VERIFICATION`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `"INCOME"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationTaxformsGetRequest defines the request schema for `/income/verification/taxforms/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationTaxformsGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID of the verification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_verification_id")]
		public string Income_verification_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// IncomeVerificationTaxformsGetResponse defines the response schema for `/income/verification/taxforms/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationTaxformsGetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_metadata")]
		public DocumentMetadata[] Document_metadata { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A list of forms.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="taxforms")]
		public Taxform[] Taxforms { get; set; }
	}
	
	/// <summary>
	/// Data about an official document used to report the user's income to the IRS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Taxform
	{
		
		/// <summary>
		/// An identifier of the document referenced by the document metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doc_id")]
		public string Doc_id { get; set; }
		
		/// <summary>
		/// The type of tax document. Currently, the only supported value is `w2`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_type")]
		public string Document_type { get; set; }
		
		/// <summary>
		/// W2 is an object that represents income data taken from a W2 tax document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="w2")]
		public W2 W2 { get; set; }
	}
	
	/// <summary>
	/// W2 is an object that represents income data taken from a W2 tax document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class W2
	{
		
		/// <summary>
		/// Allocated tips.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allocated_tips")]
		public string Allocated_tips { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="box_12")]
		public W2Box12[] Box_12 { get; set; }
		
		/// <summary>
		/// Contents from box 9 on the W2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="box_9")]
		public string Box_9 { get; set; }
		
		/// <summary>
		/// Dependent care benefits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dependent_care_benefits")]
		public string Dependent_care_benefits { get; set; }
		
		/// <summary>
		/// Data about the employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public Employee Employee { get; set; }
		
		/// <summary>
		/// Information about the employer on the paystub
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public PaystubEmployer Employer { get; set; }
		
		/// <summary>
		/// An employee identification number or EIN.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_id_number")]
		public string Employer_id_number { get; set; }
		
		/// <summary>
		/// Federal income tax withheld for the tax year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="federal_income_tax_withheld")]
		public string Federal_income_tax_withheld { get; set; }
		
		/// <summary>
		/// Medicare tax withheld for the tax year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medicare_tax_withheld")]
		public string Medicare_tax_withheld { get; set; }
		
		/// <summary>
		/// Wages and tips from medicare.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medicare_wages_and_tips")]
		public string Medicare_wages_and_tips { get; set; }
		
		/// <summary>
		/// Nonqualified plans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nonqualified_plans")]
		public string Nonqualified_plans { get; set; }
		
		/// <summary>
		/// Other.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="other")]
		public string Other { get; set; }
		
		/// <summary>
		/// Retirement plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retirement_plan")]
		public string Retirement_plan { get; set; }
		
		/// <summary>
		/// Social security tax withheld for the tax year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_security_tax_withheld")]
		public string Social_security_tax_withheld { get; set; }
		
		/// <summary>
		/// Tips from social security.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_security_tips")]
		public string Social_security_tips { get; set; }
		
		/// <summary>
		/// Wages from social security.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_security_wages")]
		public string Social_security_wages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state_and_local_wages")]
		public W2StateAndLocalWages[] State_and_local_wages { get; set; }
		
		/// <summary>
		/// Statutory employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statutory_employee")]
		public string Statutory_employee { get; set; }
		
		/// <summary>
		/// The tax year of the W2 document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_year")]
		public string Tax_year { get; set; }
		
		/// <summary>
		/// Third party sick pay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="third_party_sick_pay")]
		public string Third_party_sick_pay { get; set; }
		
		/// <summary>
		/// Wages from tips and other compensation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wages_tips_other_comp")]
		public string Wages_tips_other_comp { get; set; }
	}
	
	/// <summary>
	/// Status of the income verification webhook
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IncomeVerificationWebhookStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Name information for the associated individual watchlist hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndividualScreeningHitNames
	{
		
		/// <summary>
		/// The full name of the individual, including all parts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="full")]
		public string Full { get; set; }
		
		/// <summary>
		/// Primary names are those most commonly used to refer to this person. Only one name will ever be marked as primary.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_primary")]
		public bool Is_primary { get; set; }
		
		/// <summary>
		/// Names that are explicitly marked as low quality either by their `source` list, or by `plaid` by a series of additional checks done by Plaid. Plaid does not ever surface a hit as a result of a weak name alone. If a name has no quality issues, this value will be `none`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="weak_alias_determination")]
		public EntityScreeningHitNamesWeak_alias_determination Weak_alias_determination { get; set; }
	}
	
	/// <summary>
	/// Shorthand identifier for a specific screening list for individuals.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IndividualWatchlistCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AU_CON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CA_CON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EU_CON = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_CIA = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_IPL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_PEP = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_UNC = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IZ_WBK = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UK_HMC = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_DPL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_DTC = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_FBI = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_FSE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_ISN = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_MBS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_PLC = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_SDN = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US_SSI = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SG_SOF = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TR_TWL = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TR_DFD = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TR_FOR = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TR_WMD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TR_CMB = 23,
	}
	
	/// <summary>
	/// A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of individuals.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IndividualWatchlistProgram
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Archived programs are read-only and cannot screen new customers nor participate in ongoing monitoring.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_archived")]
		public bool Is_archived { get; set; }
		
		/// <summary>
		/// Indicator specifying whether the program is enabled and will perform daily rescans.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_rescanning_enabled")]
		public bool Is_rescanning_enabled { get; set; }
		
		/// <summary>
		/// Watchlists enabled for the associated program
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lists_enabled")]
		public IndividualWatchlistCode[] Lists_enabled { get; set; }
		
		/// <summary>
		/// A name for the program to define its purpose. For example, "High Risk Individuals", "US Cardholders", or "Applicants".
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The valid name matching sensitivity configurations for a screening program. Note that while certain matching techniques may be more prevalent on less strict settings, all matching algorithms are enabled for every sensitivity.
		///
		///`coarse` - See more potential matches. This sensitivity will see more broad phonetic matches across alphabets that make missing a potential hit very unlikely. This setting is noisier and will require more manual review.
		///
		///`balanced` - A good default for most companies. This sensitivity is balanced to show high quality hits with reduced noise.
		///
		///`strict` - Aggressive false positive reduction. This sensitivity will require names to be more similar than `coarse` and `balanced` settings, relying less on phonetics, while still accounting for character transpositions, missing tokens, and other common permutations.
		///
		///`exact` - Matches must be nearly exact. This sensitivity will only show hits with exact or nearly exact name matches with only basic correction such as extraneous symbols and capitalization. This setting is generally not recommended unless you have a very specific use case.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name_sensitivity")]
		public EntityWatchlistProgramName_sensitivity Name_sensitivity { get; set; }
	}
	
	/// <summary>
	/// The `inflow_model` allows you to model a test account that receives regular income or make regular payments on a loan. Any transactions generated by the `inflow_model` will appear in addition to randomly generated test data or transactions specified by `override_accounts`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InflowModel
	{
		
		/// <summary>
		/// Amount of income per month. This value is required if `type` is `monthly-income`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="income_amount")]
		public double Income_amount { get; set; }
		
		/// <summary>
		/// Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the income transaction will appear. The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_day_of_month")]
		public double Payment_day_of_month { get; set; }
		
		/// <summary>
		/// Number between 1 and 28, or `last` meaning the last day of the month. The day of the month on which the balance is calculated for the next payment. The name of the income transaction. This field is required if `type` is `monthly-balance-payment` or `monthly-interest-only-payment`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="statement_day_of_month")]
		public string Statement_day_of_month { get; set; }
		
		/// <summary>
		/// The name of the income transaction. This field is required if `type` is `monthly-income`, `monthly-balance-payment` or `monthly-interest-only-payment`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_name")]
		public string Transaction_name { get; set; }
		
		/// <summary>
		/// Inflow model. One of the following:
		///
		///`none`: No income
		///
		///`monthly-income`: Income occurs once per month `monthly-balance-payment`: Pays off the balance on a liability account at the given statement day of month.
		///
		///`monthly-interest-only-payment`: Makes an interest-only payment on a liability account at the given statement day of month.
		///
		///Note that account types supported by Liabilities will accrue interest in the Sandbox. The types impacted are account type `credit` with subtype `credit` or `paypal`, and account type `loan` with subtype `student` or `mortgage`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Fired when an Item's initial transaction pull is completed. Once this webhook has been fired, transaction data for the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.
	///
	///This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InitialUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The error code associated with the webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The number of new, unfetched transactions available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_transactions")]
		public double New_transactions { get; set; }
		
		/// <summary>
		/// `INITIAL_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Details relating to a specific financial institution
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Institution
	{
		
		/// <summary>
		/// Metadata that captures information about the Auth features of an institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth_metadata")]
		public AuthMetadata Auth_metadata { get; set; }
		
		/// <summary>
		/// A list of the country codes supported by the institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_codes")]
		public CountryCode[] Country_codes { get; set; }
		
		/// <summary>
		/// A partial list of DTC numbers associated with the institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dtc_numbers")]
		public string[] Dtc_numbers { get; set; }
		
		/// <summary>
		/// Unique identifier for the institution
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// Base64 encoded representation of the institution's logo, returned as a base64 encoded 152x152 PNG. Not all institutions' logos are available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo")]
		public string Logo { get; set; }
		
		/// <summary>
		/// The official name of the institution
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Indicates that the institution has a mandatory OAuth login flow. Note that `oauth` may be `false` even for institutions that support OAuth, if the institution is in the process of migrating to OAuth and some active Items still exist that do not use OAuth.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="oauth")]
		public bool Oauth { get; set; }
		
		/// <summary>
		/// Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_initiation_metadata")]
		public PaymentInitiationMetadata Payment_initiation_metadata { get; set; }
		
		/// <summary>
		/// Hexadecimal representation of the primary color used by the institution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_color")]
		public string Primary_color { get; set; }
		
		/// <summary>
		/// A list of the Plaid products supported by the institution. Note that only institutions that support Instant Auth will return `auth` in the product array; institutions that do not list `auth` may still support other Auth methods such as Instant Match or Automated Micro-deposit Verification. To identify institutions that support those methods, use the `auth_metadata` object. For more details, see [Full Auth coverage](https://plaid.com/docs/auth/coverage/).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="products")]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="routing_numbers")]
		public string[] Routing_numbers { get; set; }
		
		/// <summary>
		/// The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.
		///
		///Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public InstitutionStatus Status { get; set; }
		
		/// <summary>
		/// The URL for the institution's website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationMetadata
	{
		
		/// <summary>
		/// A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the institution.
		///
		///Example: `{"GBP": "10000"}`
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maximum_payment_amount")]
		public PaymentInitiationMaximumPaymentAmount Maximum_payment_amount { get; set; }
		
		/// <summary>
		/// Metadata specifically related to valid Payment Initiation standing order configurations for the institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="standing_order_metadata")]
		public PaymentInitiationStandingOrderMetadata Standing_order_metadata { get; set; }
		
		/// <summary>
		/// Indicates whether the institution supports payments from a different country.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="supports_international_payments")]
		public bool Supports_international_payments { get; set; }
		
		/// <summary>
		/// Indicates whether the institution supports returning refund details when initiating a payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="supports_refund_details")]
		public bool Supports_refund_details { get; set; }
		
		/// <summary>
		/// Indicates whether the institution supports SEPA Instant payments.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="supports_sepa_instant")]
		public bool Supports_sepa_instant { get; set; }
	}
	
	/// <summary>
	/// A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the institution.
	///
	///Example: `{"GBP": "10000"}`
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationMaximumPaymentAmount
	{
	}
	
	/// <summary>
	/// Metadata specifically related to valid Payment Initiation standing order configurations for the institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationStandingOrderMetadata
	{
		
		/// <summary>
		/// Indicates whether the institution supports closed-ended standing orders by providing an end date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="supports_standing_order_end_date")]
		public bool Supports_standing_order_end_date { get; set; }
		
		/// <summary>
		/// This is only applicable to `MONTHLY` standing orders. Indicates whether the institution supports negative integers (-1 to -5) for setting up a `MONTHLY` standing order relative to the end of the month.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="supports_standing_order_negative_execution_days")]
		public bool Supports_standing_order_negative_execution_days { get; set; }
		
		/// <summary>
		/// A list of the valid standing order intervals supported by the institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="valid_standing_order_intervals")]
		public PaymentScheduleInterval[] Valid_standing_order_intervals { get; set; }
	}
	
	/// <summary>
	/// The frequency interval of the payment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentScheduleInterval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 1,
	}
	
	/// <summary>
	/// The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.
	///
	///Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionStatus
	{
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth")]
		public ProductStatus Auth { get; set; }
		
		/// <summary>
		/// Details of recent health incidents associated with the institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="health_incidents")]
		public HealthIncident[] Health_incidents { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public ProductStatus Identity { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investments")]
		public ProductStatus Investments { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investments_updates")]
		public ProductStatus Investments_updates { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_logins")]
		public ProductStatus Item_logins { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="liabilities")]
		public ProductStatus Liabilities { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="liabilities_updates")]
		public ProductStatus Liabilities_updates { get; set; }
		
		/// <summary>
		/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions_updates")]
		public ProductStatus Transactions_updates { get; set; }
	}
	
	/// <summary>
	/// A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProductStatus
	{
		
		/// <summary>
		/// A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1. The time range used for calculating the breakdown may range from the most recent few minutes to the past six hours. In general, smaller institutions will show status that was calculated over a longer period of time. For Investment updates, which are refreshed less frequently, the period assessed may be 24 hours or more. For more details, see [Institution status details](https://plaid.com/docs/account/activity/#institution-status-details).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="breakdown")]
		public ProductStatusBreakdown Breakdown { get; set; }
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_status_change")]
		public System.DateTimeOffset Last_status_change { get; set; }
		
		/// <summary>
		/// This field is deprecated in favor of the `breakdown` object, which provides more granular institution health data.
		///
		///`HEALTHY`: the majority of requests are successful
		///`DEGRADED`: only some requests are successful
		///`DOWN`: all requests are failing
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ProductStatusStatus Status { get; set; }
	}
	
	/// <summary>
	/// A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1. The time range used for calculating the breakdown may range from the most recent few minutes to the past six hours. In general, smaller institutions will show status that was calculated over a longer period of time. For Investment updates, which are refreshed less frequently, the period assessed may be 24 hours or more. For more details, see [Institution status details](https://plaid.com/docs/account/activity/#institution-status-details).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProductStatusBreakdown
	{
		
		/// <summary>
		/// The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_institution")]
		public double Error_institution { get; set; }
		
		/// <summary>
		/// The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_plaid")]
		public double Error_plaid { get; set; }
		
		/// <summary>
		/// The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refresh_interval")]
		public System.Nullable<ProductStatusBreakdownRefresh_interval> Refresh_interval { get; set; }
		
		/// <summary>
		/// The percentage of login attempts that are successful, expressed as a decimal.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="success")]
		public double Success { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProductStatusBreakdownRefresh_interval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELAYED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProductStatusStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTHY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEGRADED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOWN = 2,
	}
	
	/// <summary>
	/// Contains the RTP network and types supported by the linked Item's institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionSupportedNetworks
	{
		
		/// <summary>
		/// Contains the supported service types in RTP
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rtp")]
		public TransferCapabilitiesGetRTP Rtp { get; set; }
	}
	
	/// <summary>
	/// Contains the supported service types in RTP
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCapabilitiesGetRTP
	{
		
		/// <summary>
		/// When `true`, the linked Item's institution supports RTP credit transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public System.Nullable<System.Boolean> Credit { get; set; }
	}
	
	/// <summary>
	/// InstitutionsGetByIdRequest defines the request schema for `/institutions/get_by_id`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsGetByIdRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_codes")]
		public CountryCode[] Country_codes { get; set; }
		
		/// <summary>
		/// The ID of the institution to get details about
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public InstitutionsGetByIdRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsGetByIdRequestOptions
	{
		
		/// <summary>
		/// When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_auth_metadata")]
		public System.Nullable<System.Boolean> Include_auth_metadata { get; set; }
		
		/// <summary>
		/// When `true`, return an institution's logo, brand color, and URL. When available, the bank's logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.
		///
		///Note that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_optional_metadata")]
		public System.Nullable<System.Boolean> Include_optional_metadata { get; set; }
		
		/// <summary>
		/// When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_payment_initiation_metadata")]
		public System.Nullable<System.Boolean> Include_payment_initiation_metadata { get; set; }
		
		/// <summary>
		/// If `true`, the response will include status information about the institution. Default value is `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_status")]
		public System.Nullable<System.Boolean> Include_status { get; set; }
	}
	
	/// <summary>
	/// InstitutionsGetByIdResponse defines the response schema for `/institutions/get_by_id`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsGetByIdResponse
	{
		
		/// <summary>
		/// Details relating to a specific financial institution
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution")]
		public Institution Institution { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// InstitutionsGetRequest defines the request schema for `/institutions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The total number of Institutions to return.
		/// Required
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public int Count { get; set; }
		
		/// <summary>
		/// Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.
		///
		///In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
		///
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_codes")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public CountryCode[] Country_codes { get; set; }
		
		/// <summary>
		/// The number of Institutions to skip.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Offset { get; set; }
		
		/// <summary>
		/// An optional object to filter `/institutions/get` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public InstitutionsGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/institutions/get` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsGetRequestOptions
	{
		
		/// <summary>
		/// When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_auth_metadata")]
		public System.Nullable<System.Boolean> Include_auth_metadata { get; set; }
		
		/// <summary>
		/// When `true`, return the institution's homepage URL, logo and primary brand color.
		///
		///Note that Plaid does not own any of the logos shared by the API, and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_optional_metadata")]
		public System.Nullable<System.Boolean> Include_optional_metadata { get; set; }
		
		/// <summary>
		/// When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_payment_initiation_metadata")]
		public System.Nullable<System.Boolean> Include_payment_initiation_metadata { get; set; }
		
		/// <summary>
		/// Limit results to institutions with or without mandatory OAuth login flows. Note that institutions will only have `oauth` set to `true` if *all* Items associated with that institution are required to use OAuth flows; institutions in a state of migration to OAuth may have the `oauth` attribute set to `false` even if they support OAuth.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oauth")]
		public System.Nullable<System.Boolean> Oauth { get; set; }
		
		/// <summary>
		/// Filter the Institutions based on which products they support. 
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// Specify an array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array. Routing number records used for this matching are not comprehensive; failure to match a given routing number to an institution does not mean that the institution is unsupported by Plaid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routing_numbers")]
		public string[] Routing_numbers { get; set; }
	}
	
	/// <summary>
	/// InstitutionsGetResponse defines the response schema for `/institutions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsGetResponse
	{
		
		/// <summary>
		/// A list of Plaid institutions
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institutions")]
		public Institution[] Institutions { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The total number of institutions available via this endpoint
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public int Total { get; set; }
	}
	
	/// <summary>
	/// An account filter to apply to institutions search requests
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsSearchAccountFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public AccountSubtype[] Credit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="depository")]
		public AccountSubtype[] Depository { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="investment")]
		public AccountSubtype[] Investment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public AccountSubtype[] Loan { get; set; }
	}
	
	/// <summary>
	/// Additional options that will be used to filter institutions by various Payment Initiation configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsSearchPaymentInitiationOptions
	{
		
		/// <summary>
		/// A unique ID identifying the payment consent
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// A unique ID identifying the payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
	}
	
	/// <summary>
	/// InstitutionsSearchRequest defines the request schema for `/institutions/search`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsSearchRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_codes")]
		public CountryCode[] Country_codes { get; set; }
		
		/// <summary>
		/// An optional object to filter `/institutions/search` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public InstitutionsSearchRequestOptions Options { get; set; }
		
		/// <summary>
		/// Filter the Institutions based on whether they support all products listed in `products`. Provide `null` to get institutions regardless of supported products. Note that when `auth` is specified as a product, if you are enabled for Instant Match or Automated Micro-deposits, institutions that support those products will be returned even if `auth` is not present in their product array.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="products")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// The search query. Institutions with names matching the query are returned
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Query { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/institutions/search` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsSearchRequestOptions
	{
		
		/// <summary>
		/// When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_auth_metadata")]
		public System.Nullable<System.Boolean> Include_auth_metadata { get; set; }
		
		/// <summary>
		/// When true, return the institution's homepage URL, logo and primary brand color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_optional_metadata")]
		public System.Nullable<System.Boolean> Include_optional_metadata { get; set; }
		
		/// <summary>
		/// When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_payment_initiation_metadata")]
		public System.Nullable<System.Boolean> Include_payment_initiation_metadata { get; set; }
		
		/// <summary>
		/// Limit results to institutions with or without mandatory OAuth login flows. Note that institutions will only have `oauth` set to `true` if *all* Items associated with that institution are required to use OAuth flows; institutions in a state of migration to OAuth may have the `oauth` attribute set to `false` even if they support OAuth.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oauth")]
		public System.Nullable<System.Boolean> Oauth { get; set; }
		
		/// <summary>
		/// Additional options that will be used to filter institutions by various Payment Initiation configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_initiation")]
		public InstitutionsSearchPaymentInitiationOptions Payment_initiation { get; set; }
	}
	
	/// <summary>
	/// InstitutionsSearchResponse defines the response schema for `/institutions/search`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstitutionsSearchResponse
	{
		
		/// <summary>
		/// An array of institutions matching the search criteria
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institutions")]
		public Institution[] Institutions { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An investment account. Supported products for `investment` accounts are: Balance and Investments. In API versions 2018-05-22 and earlier, this type is called `brokerage`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentAccountSubtypeStandalone
	{
		
		/// <summary>
		/// Tax-advantaged college savings and prepaid tuition 529 plans (US)
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="529")]
		public string _529 { get; set; }
		
		/// <summary>
		/// Employer-sponsored money-purchase 401(a) retirement plan (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="401a")]
		public string _401a { get; set; }
		
		/// <summary>
		/// Standard 401(k) retirement account (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="401k")]
		public string _401k { get; set; }
		
		/// <summary>
		/// 403(b) retirement savings account for non-profits and schools (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="403B")]
		public string _403B { get; set; }
		
		/// <summary>
		/// Tax-advantaged deferred-compensation 457(b) retirement plan for governments and non-profits (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="457b")]
		public string _457b { get; set; }
		
		/// <summary>
		/// Standard brokerage account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="brokerage")]
		public string Brokerage { get; set; }
		
		/// <summary>
		/// Individual Savings Account (ISA) that pays interest tax-free (UK)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cash isa")]
		public string Cash_isa { get; set; }
		
		/// <summary>
		/// Standard cryptocurrency exchange account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="crypto exchange")]
		public string Crypto_exchange { get; set; }
		
		/// <summary>
		/// Tax-advantaged Coverdell Education Savings Account (ESA) (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="education savings account")]
		public string Education_savings_account { get; set; }
		
		/// <summary>
		/// Fixed annuity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fixed annuity")]
		public string Fixed_annuity { get; set; }
		
		/// <summary>
		/// Guaranteed Investment Certificate (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="gic")]
		public string Gic { get; set; }
		
		/// <summary>
		/// Tax-advantaged Health Reimbursement Arrangement (HRA) benefit plan (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="health reimbursement arrangement")]
		public string Health_reimbursement_arrangement { get; set; }
		
		/// <summary>
		/// Non-cash tax-advantaged medical Health Savings Account (HSA) (US)
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hsa")]
		public string Hsa { get; set; }
		
		/// <summary>
		/// Traditional Individual Retirement Account (IRA) (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ira")]
		public string Ira { get; set; }
		
		/// <summary>
		/// Non-cash Individual Savings Account (ISA) (UK)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="isa")]
		public string Isa { get; set; }
		
		/// <summary>
		/// Keogh self-employed retirement plan (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="keogh")]
		public string Keogh { get; set; }
		
		/// <summary>
		/// Life Income Fund (LIF) retirement account (Canada)
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lif")]
		public string Lif { get; set; }
		
		/// <summary>
		/// Life insurance account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="life insurance")]
		public string Life_insurance { get; set; }
		
		/// <summary>
		/// Locked-in Retirement Account (LIRA) (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lira")]
		public string Lira { get; set; }
		
		/// <summary>
		/// Locked-in Retirement Income Fund (LRIF) (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lrif")]
		public string Lrif { get; set; }
		
		/// <summary>
		/// Locked-in Retirement Savings Plan (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lrsp")]
		public string Lrsp { get; set; }
		
		/// <summary>
		/// Mutual fund account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mutual fund")]
		public string Mutual_fund { get; set; }
		
		/// <summary>
		/// A cryptocurrency wallet where the user controls the private key
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="non-custodial wallet")]
		public string Non_custodial_wallet { get; set; }
		
		/// <summary>
		/// A non-taxable brokerage account that is not covered by a more specific subtype
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="non-taxable brokerage account")]
		public string Non_taxable_brokerage_account { get; set; }
		
		/// <summary>
		/// An account whose type could not be determined
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other")]
		public string Other { get; set; }
		
		/// <summary>
		/// An annuity account not covered by other subtypes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other annuity")]
		public string Other_annuity { get; set; }
		
		/// <summary>
		/// An insurance account not covered by other subtypes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other insurance")]
		public string Other_insurance { get; set; }
		
		/// <summary>
		/// Standard pension account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pension")]
		public string Pension { get; set; }
		
		/// <summary>
		/// Prescribed Registered Retirement Income Fund (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prif")]
		public string Prif { get; set; }
		
		/// <summary>
		/// Plan that gives employees share of company profits
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="profit sharing plan")]
		public string Profit_sharing_plan { get; set; }
		
		/// <summary>
		/// Qualifying share account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="qshr")]
		public string Qshr { get; set; }
		
		/// <summary>
		/// Registered Disability Savings Plan (RSDP) (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rdsp")]
		public string Rdsp { get; set; }
		
		/// <summary>
		/// Registered Education Savings Plan (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resp")]
		public string Resp { get; set; }
		
		/// <summary>
		/// Retirement account not covered by other subtypes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retirement")]
		public string Retirement { get; set; }
		
		/// <summary>
		/// Restricted Life Income Fund (RLIF) (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rlif")]
		public string Rlif { get; set; }
		
		/// <summary>
		/// Roth IRA (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roth")]
		public string Roth { get; set; }
		
		/// <summary>
		/// Employer-sponsored Roth 401(k) plan (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roth 401k")]
		public string Roth_401k { get; set; }
		
		/// <summary>
		/// Registered Retirement Income Fund (RRIF) (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rrif")]
		public string Rrif { get; set; }
		
		/// <summary>
		/// Registered Retirement Savings Plan (Canadian, similar to US 401(k))
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rrsp")]
		public string Rrsp { get; set; }
		
		/// <summary>
		/// Salary Reduction Simplified Employee Pension Plan (SARSEP), discontinued retirement plan (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sarsep")]
		public string Sarsep { get; set; }
		
		/// <summary>
		/// Simplified Employee Pension IRA (SEP IRA), retirement plan for small businesses and self-employed (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sep ira")]
		public string Sep_ira { get; set; }
		
		/// <summary>
		/// Savings Incentive Match Plan for Employees IRA, retirement plan for small businesses (US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="simple ira")]
		public string Simple_ira { get; set; }
		
		/// <summary>
		/// Self-Invested Personal Pension (SIPP) (UK)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sipp")]
		public string Sipp { get; set; }
		
		/// <summary>
		/// Standard stock plan account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stock plan")]
		public string Stock_plan { get; set; }
		
		/// <summary>
		/// Tax-Free Savings Account (TFSA), a retirement plan similar to a Roth IRA (Canada)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tfsa")]
		public string Tfsa { get; set; }
		
		/// <summary>
		/// Account representing funds or assets held by a trustee for the benefit of a beneficiary. Includes both revocable and irrevocable trusts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trust")]
		public string Trust { get; set; }
		
		/// <summary>
		/// 'Uniform Gift to Minors Act' (brokerage account for minors, US)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ugma")]
		public string Ugma { get; set; }
		
		/// <summary>
		/// 'Uniform Transfers to Minors Act' (brokerage account for minors, US)
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="utma")]
		public string Utma { get; set; }
		
		/// <summary>
		/// Tax-deferred capital accumulation annuity contract
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="variable annuity")]
		public string Variable_annuity { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/investments/holdings/get` results. If provided, must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentHoldingsGetRequestOptions
	{
		
		/// <summary>
		/// An array of `account_id`s to retrieve for the Item. An error will be returned if a provided `account_id` is not associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
	}
	
	/// <summary>
	/// A transaction within an investment account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentTransaction
	{
		
		/// <summary>
		/// The `account_id` of the account against which this transaction posted.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// A legacy field formerly used internally by Plaid to identify certain canceled transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancel_transaction_id")]
		public string Cancel_transaction_id { get; set; }
		
		/// <summary>
		/// The [ISO 8601](https://wikipedia.org/wiki/ISO_8601) posting date for the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.DateOnly Date { get; set; }
		
		/// <summary>
		/// The combined value of all fees applied to this transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fees")]
		public System.Nullable<System.Double> Fees { get; set; }
		
		/// <summary>
		/// The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="investment_transaction_id")]
		public string Investment_transaction_id { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The institutionâ€™s description of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The price of the security at which this transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public double Price { get; set; }
		
		/// <summary>
		/// The number of units of the security involved in this transaction. Positive for buy transactions; negative for sell transactions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public double Quantity { get; set; }
		
		/// <summary>
		/// The `security_id` to which this transaction is related.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="security_id")]
		public string Security_id { get; set; }
		
		/// <summary>
		/// For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public InvestmentTransactionSubtype Subtype { get; set; }
		
		/// <summary>
		/// Value is one of the following:
		///`buy`: Buying an investment
		///`sell`: Selling an investment
		///`cancel`: A cancellation of a pending transaction
		///`cash`: Activity that modifies a cash position
		///`fee`: A fee on the account
		///`transfer`: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
		///
		///For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public InvestmentTransactionType Type { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvestmentTransactionSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="account fee")]
		account_fee = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		adjustment = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assignment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		buy = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="buy to cover")]
		buy_to_cover = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		contribution = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deposit = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		distribution = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dividend = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dividend reinvestment")]
		dividend_reinvestment = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		exercise = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expire = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fund fee")]
		fund_fee = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		interest = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="interest receivable")]
		interest_receivable = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="interest reinvestment")]
		interest_reinvestment = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="legal fee")]
		legal_fee = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="loan payment")]
		loan_payment = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="long-term capital gain")]
		longMinusterm_capital_gain = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="long-term capital gain reinvestment")]
		longMinusterm_capital_gain_reinvestment = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="management fee")]
		management_fee = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="margin expense")]
		margin_expense = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		merger = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="miscellaneous fee")]
		miscellaneous_fee = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-qualified dividend")]
		nonMinusqualified_dividend = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-resident tax")]
		nonMinusresident_tax = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pending credit")]
		pending_credit = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pending debit")]
		pending_debit = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="qualified dividend")]
		qualified_dividend = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rebalance = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="return of principal")]
		return_of_principal = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		request = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sell = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sell short")]
		sell_short = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		send = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="short-term capital gain")]
		shortMinusterm_capital_gain = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="short-term capital gain reinvestment")]
		shortMinusterm_capital_gain_reinvestment = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="spin off")]
		spin_off = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		split = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="stock distribution")]
		stock_distribution = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tax = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tax withheld")]
		tax_withheld = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trade = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transfer = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="transfer fee")]
		transfer_fee = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="trust fee")]
		trust_fee = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unqualified gain")]
		unqualified_gain = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		withdrawal = 47,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvestmentTransactionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		buy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sell = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancel = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cash = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fee = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transfer = 5,
	}
	
	/// <summary>
	/// Fired when new transactions have been detected on an investment account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentsDefaultUpdateWebhook
	{
		
		/// <summary>
		/// The number of canceled transactions reported since the last time this webhook was fired.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="canceled_investments_transactions")]
		public double Canceled_investments_transactions { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The number of new transactions reported since the last time this webhook was fired.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_investments_transactions")]
		public double New_investments_transactions { get; set; }
		
		/// <summary>
		/// `DEFAULT_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `INVESTMENTS_TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// InvestmentsHoldingsGetRequest defines the request schema for `/investments/holdings/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentsHoldingsGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/investments/holdings/get` results. If provided, must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public InvestmentHoldingsGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// InvestmentsHoldingsGetResponse defines the response schema for `/investments/holdings/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentsHoldingsGetResponse
	{
		
		/// <summary>
		/// The accounts associated with the Item
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountBase[] Accounts { get; set; }
		
		/// <summary>
		/// The holdings belonging to investment accounts associated with the Item. Details of the securities in the holdings are provided in the `securities` field. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="holdings")]
		public Holding[] Holdings { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Objects describing the securities held in the accounts associated with the Item. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="securities")]
		public Security[] Securities { get; set; }
	}
	
	/// <summary>
	/// Contains details about a security
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Security
	{
		
		/// <summary>
		/// Price of the security at the close of the previous trading session. Null for non-public securities.
		///
		///If the security is a foreign currency this field will be updated daily and will be priced in USD.
		///
		///If the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="close_price")]
		public System.Nullable<System.Double> Close_price { get; set; }
		
		/// <summary>
		/// Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="close_price_as_of")]
		public System.Nullable<System.DateOnly> Close_price_as_of { get; set; }
		
		/// <summary>
		/// 9-character CUSIP, an identifier assigned to North American securities. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cusip")]
		public string Cusip { get; set; }
		
		/// <summary>
		/// If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// An identifier given to the security by the institution
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_security_id")]
		public string Institution_security_id { get; set; }
		
		/// <summary>
		/// Indicates that a security is a highly liquid asset and can be treated like cash.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_cash_equivalent")]
		public System.Nullable<System.Boolean> Is_cash_equivalent { get; set; }
		
		/// <summary>
		/// 12-character ISIN, a globally unique securities identifier. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="isin")]
		public string Isin { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// A descriptive name for the security, suitable for display.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="proxy_security_id")]
		public string Proxy_security_id { get; set; }
		
		/// <summary>
		/// A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="security_id")]
		public string Security_id { get; set; }
		
		/// <summary>
		/// 7-character SEDOL, an identifier assigned to securities in the UK.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sedol")]
		public string Sedol { get; set; }
		
		/// <summary>
		/// The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ticker_symbol")]
		public string Ticker_symbol { get; set; }
		
		/// <summary>
		/// The security type of the holding. Valid security types are:
		///
		///`cash`: Cash, currency, and money market funds
		///
		///`cryptocurrency`: Digital or virtual currencies
		///
		///`derivative`: Options, warrants, and other derivative instruments
		///
		///`equity`: Domestic and foreign equities
		///
		///`etf`: Multi-asset exchange-traded investment funds
		///
		///`fixed income`: Bonds and certificates of deposit (CDs)
		///
		///`loan`: Loans and loan receivables
		///
		///`mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors
		///
		///`other`: Unknown or other investment types
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// Date and time at which `close_price` is accurate, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ). Always `null` if `close_price` is `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update_datetime")]
		public System.Nullable<System.DateTimeOffset> Update_datetime { get; set; }
	}
	
	/// <summary>
	/// InvestmentsTransactionsGetRequest defines the request schema for `/investments/transactions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentsTransactionsGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.DateOnly End_date { get; set; }
		
		/// <summary>
		/// An optional object to filter `/investments/transactions/get` results. If provided, must be non-`null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public InvestmentsTransactionsGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.DateOnly Start_date { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/investments/transactions/get` results. If provided, must be non-`null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentsTransactionsGetRequestOptions
	{
		
		/// <summary>
		/// An array of `account_ids` to retrieve for the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
		
		/// <summary>
		/// The number of transactions to fetch.
		///
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The number of transactions to skip when fetching transaction history
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
	}
	
	/// <summary>
	/// InvestmentsTransactionsGetResponse defines the response schema for `/investments/transactions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvestmentsTransactionsGetResponse
	{
		
		/// <summary>
		/// The accounts for which transaction history is being fetched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountBase[] Accounts { get; set; }
		
		/// <summary>
		/// The transactions being fetched
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="investment_transactions")]
		public InvestmentTransaction[] Investment_transactions { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// All securities for which there is a corresponding transaction being fetched.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="securities")]
		public Security[] Securities { get; set; }
		
		/// <summary>
		/// The total number of transactions available within the date range specified. If `total_investment_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_investment_transactions")]
		public int Total_investment_transactions { get; set; }
	}
	
	/// <summary>
	/// Specify the list of investments transactions on the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Investments_TransactionsOverride
	{
		
		/// <summary>
		/// Either a valid `iso_currency_code` or `unofficial_currency_code`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// Posting date for the transaction. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.DateOnly Date { get; set; }
		
		/// <summary>
		/// The combined value of all fees applied to this transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fees")]
		public System.Nullable<System.Double> Fees { get; set; }
		
		/// <summary>
		/// The institution's description of the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The price of the security at which this transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public double Price { get; set; }
		
		/// <summary>
		/// The number of units of the security involved in this transaction. Must be positive if the type is a buy and negative if the type is a sell.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public double Quantity { get; set; }
		
		/// <summary>
		/// Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (`ticker_symbol`, `cusip`, `isin`, or `sedol`) are required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="security")]
		public SecurityOverride Security { get; set; }
		
		/// <summary>
		/// The type of the investment transaction. Possible values are:
		///`buy`: Buying an investment
		///`sell`: Selling an investment
		///`cash`: Activity that modifies a cash position
		///`fee`: A fee on the account
		///`transfer`: Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A binary match indicator specifying whether the country that issued the provided document matches the country that the user separately provided to Plaid.
	///
	///Note: You can configure whether a `no_match` on `issuing_country` fails the `documentary_verification` by editing your Plaid Template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IssuingCountry
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 1,
	}
	
	/// <summary>
	/// ItemAccessTokenInvalidateRequest defines the request schema for `/item/access_token/invalidate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemAccessTokenInvalidateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ItemAccessTokenInvalidateResponse defines the response schema for `/item/access_token/invalidate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemAccessTokenInvalidateResponse
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_access_token")]
		public string New_access_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request to list a historical log of user consent events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemActivityListRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Cursor used for pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Describes a historical log of user consent events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemActivityListResponse
	{
		
		/// <summary>
		/// A list of activities.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="activities")]
		public Activity[] Activities { get; set; }
		
		/// <summary>
		/// Cursor used for pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// An array of objects containing timestamps for the last time each data type was accessed per application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_data_access_times")]
		public LastDataAccessTimes[] Last_data_access_times { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Describes the last time each datatype was accessed by an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LastDataAccessTimes
	{
		
		/// <summary>
		/// The last time account_balance_info was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_balance_info")]
		public System.Nullable<System.DateTimeOffset> Account_balance_info { get; set; }
		
		/// <summary>
		/// The last time account_routing_number was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_routing_number")]
		public System.Nullable<System.DateTimeOffset> Account_routing_number { get; set; }
		
		/// <summary>
		/// ID of the application accessing data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_id")]
		public string Application_id { get; set; }
		
		/// <summary>
		/// The last time contact_details was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contact_details")]
		public System.Nullable<System.DateTimeOffset> Contact_details { get; set; }
		
		/// <summary>
		/// The last time credit_and_loans was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="credit_and_loans")]
		public System.Nullable<System.DateTimeOffset> Credit_and_loans { get; set; }
		
		/// <summary>
		/// The last time investments was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="investments")]
		public System.Nullable<System.DateTimeOffset> Investments { get; set; }
		
		/// <summary>
		/// The last time payroll_info was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payroll_info")]
		public System.Nullable<System.DateTimeOffset> Payroll_info { get; set; }
		
		/// <summary>
		/// The last time transaction_risk_info was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_risk_info")]
		public System.Nullable<System.DateTimeOffset> Transaction_risk_info { get; set; }
		
		/// <summary>
		/// The last time transactions was accessed by this application in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format in UTC. null if never accessed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public System.Nullable<System.DateTimeOffset> Transactions { get; set; }
	}
	
	/// <summary>
	/// Request to list connected applications for a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemApplicationListRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Describes the connected application for a particular end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemApplicationListResponse
	{
		
		/// <summary>
		/// A list of connected applications.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="applications")]
		public ConnectedApplication[] Applications { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// User authentication parameters, for clients making a request without an `access_token`. This is only allowed for select clients and will not be supported in the future. Most clients should call /item/import to obtain an access token before making a request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemApplicationListUserAuth
	{
		
		/// <summary>
		/// Account username hashed by FI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fi_username_hash")]
		public string Fi_username_hash { get; set; }
		
		/// <summary>
		/// Account username.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
	}
	
	/// <summary>
	/// ItemApplicationScopesUpdateRequest defines the request schema for `/item/application/scopes/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemApplicationScopesUpdateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_id")]
		public string Application_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An indicator for when scopes are being updated. When scopes are updated via enrollment (i.e. OAuth), the partner must send `ENROLLMENT`. When scopes are updated in a post-enrollment view, the partner must send `PORTAL`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="context")]
		public ItemApplicationScopesUpdateRequestContext Context { get; set; }
		
		/// <summary>
		/// The scopes object
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public Scopes Scopes { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// When scopes are updated during enrollment, this field must be populated with the state sent to the partner in the OAuth Login URI. This field is required when the context is `ENROLLMENT`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ItemApplicationScopesUpdateRequestContext
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENROLLMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTAL = 1,
	}
	
	/// <summary>
	/// The scopes object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Scopes
	{
		
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountAccess[] Accounts { get; set; }
		
		/// <summary>
		/// Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="new_accounts")]
		public System.Nullable<System.Boolean> New_accounts { get; set; }
		
		/// <summary>
		/// The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_access")]
		public ProductAccess Product_access { get; set; }
	}
	
	/// <summary>
	/// The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProductAccess
	{
		
		/// <summary>
		/// Allow access to "accounts_details_transactions". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts_details_transactions")]
		public System.Nullable<System.Boolean> Accounts_details_transactions { get; set; }
		
		/// <summary>
		/// Allow access to "accounts_routing_number". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts_routing_number")]
		public System.Nullable<System.Boolean> Accounts_routing_number { get; set; }
		
		/// <summary>
		/// Allow access to "accounts_statements". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts_statements")]
		public System.Nullable<System.Boolean> Accounts_statements { get; set; }
		
		/// <summary>
		/// Allow access to "accounts_tax_statements". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts_tax_statements")]
		public System.Nullable<System.Boolean> Accounts_tax_statements { get; set; }
		
		/// <summary>
		/// Allow access to account number details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth")]
		public System.Nullable<System.Boolean> Auth { get; set; }
		
		/// <summary>
		/// Allow access to "customers_profiles". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customers_profiles")]
		public System.Nullable<System.Boolean> Customers_profiles { get; set; }
		
		/// <summary>
		/// Allow access to the Identity product (name, email, phone, address). Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public System.Nullable<System.Boolean> Identity { get; set; }
		
		/// <summary>
		/// Allow access to statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statements")]
		public System.Nullable<System.Boolean> Statements { get; set; }
		
		/// <summary>
		/// Allow access to transaction details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public System.Nullable<System.Boolean> Transactions { get; set; }
	}
	
	/// <summary>
	/// ItemApplicationScopesUpdateResponse defines the response schema for `/item/application/scopes/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemApplicationScopesUpdateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Fired when an error is encountered with an Item. The error can be resolved by having the user go through Linkâ€™s update mode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemErrorWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `ERROR`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ITEM`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// ItemGetRequest defines the request schema for `/item/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ItemGetResponse defines the response schema for `/item/get` and `/item/webhook/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemGetResponse
	{
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Information about the last successful and failed transactions update for the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ItemStatusNullable Status { get; set; }
	}
	
	/// <summary>
	/// ItemImportRequest defines the request schema for `/item/import`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemImportRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to configure `/item/import` request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public ItemImportRequestOptions Options { get; set; }
		
		/// <summary>
		/// Array of product strings
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="products")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Object of user ID and auth token pair, permitting Plaid to aggregate a userâ€™s accounts
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_auth")]
		public ItemImportRequestUserAuth User_auth { get; set; }
	}
	
	/// <summary>
	/// An optional object to configure `/item/import` request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemImportRequestOptions
	{
		
		/// <summary>
		/// Specifies a webhook URL to associate with an Item. Plaid fires a webhook if credentials fail.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// Object of user ID and auth token pair, permitting Plaid to aggregate a userâ€™s accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemImportRequestUserAuth
	{
		
		/// <summary>
		/// Authorization token Plaid will use to aggregate this userâ€™s accounts
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="auth_token")]
		public string Auth_token { get; set; }
		
		/// <summary>
		/// Opaque user identifier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
	}
	
	/// <summary>
	/// ItemImportResponse defines the response schema for `/item/import`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemImportResponse
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Fired when an Item login is repaired and the Item no longer needs to go through update mode. This will occur when the user completed the update mode flow for the Item, either in your application or in another Plaid-connected app. If you have messaging that tells the user to complete the update mode flow (such as in-app banners or out-of-band notifications) you should silence this messaging upon receiving the `LOGIN_REPAIRED` webhook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemLoginRepairedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `LOGIN_REPAIRED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ITEM`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Fired once Plaid calculates income from an Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemProductReadyWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `PRODUCT_READY`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `INCOME`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// ItemPublicTokenCreateRequest defines the request schema for `/item/public_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemPublicTokenCreateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ItemPublicTokenCreateResponse defines the response schema for `/item/public_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemPublicTokenCreateResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="expiration")]
		public System.Nullable<System.DateTimeOffset> Expiration { get; set; }
		
		/// <summary>
		/// A `public_token` for the particular Item corresponding to the specified `access_token`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_token")]
		public string Public_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// ItemPublicTokenExchangeRequest defines the request schema for `/item/public_token/exchange`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemPublicTokenExchangeRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your `public_token`, obtained from the Link `onSuccess` callback or `/sandbox/item/public_token/create`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_token")]
		public string Public_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ItemPublicTokenExchangeResponse defines the response schema for `/item/public_token/exchange`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemPublicTokenExchangeResponse
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The `item_id` value of the Item associated with the returned `access_token`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// ItemRemoveRequest defines the request schema for `/item/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemRemoveRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ItemRemoveResponse defines the response schema for `/item/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemRemoveResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object with information about the status of the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemStatus
	{
		
		/// <summary>
		/// Information about the last successful and failed investments update for the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investments")]
		public ItemStatusInvestments Investments { get; set; }
		
		/// <summary>
		/// Information about the last webhook fired for the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_webhook")]
		public ItemStatusLastWebhook Last_webhook { get; set; }
		
		/// <summary>
		/// Information about the last successful and failed transactions update for the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public ItemStatusTransactions Transactions { get; set; }
	}
	
	/// <summary>
	/// Information about the last successful and failed investments update for the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemStatusInvestments
	{
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed investments update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_failed_update")]
		public System.Nullable<System.DateTimeOffset> Last_failed_update { get; set; }
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful investments update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_successful_update")]
		public System.Nullable<System.DateTimeOffset> Last_successful_update { get; set; }
	}
	
	/// <summary>
	/// Information about the last webhook fired for the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemStatusLastWebhook
	{
		
		/// <summary>
		/// The last webhook code sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code_sent")]
		public string Code_sent { get; set; }
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of when the webhook was fired.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sent_at")]
		public System.Nullable<System.DateTimeOffset> Sent_at { get; set; }
	}
	
	/// <summary>
	/// Information about the last successful and failed transactions update for the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemStatusTransactions
	{
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed transactions update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_failed_update")]
		public System.Nullable<System.DateTimeOffset> Last_failed_update { get; set; }
		
		/// <summary>
		/// [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful transactions update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_successful_update")]
		public System.Nullable<System.DateTimeOffset> Last_successful_update { get; set; }
	}
	
	/// <summary>
	/// Information about the last successful and failed transactions update for the Item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemStatusNullable : ItemStatus
	{
	}
	
	/// <summary>
	/// ItemWebhookUpdateRequest defines the request schema for `/item/webhook/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemWebhookUpdateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The new webhook URL to associate with the Item. To remove a webhook from an Item, set to `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// ItemWebhookUpdateResponse defines the response schema for `/item/webhook/update`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemWebhookUpdateResponse
	{
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A JSON Web Key (JWK) that can be used in conjunction with [JWT libraries](https://jwt.io/#libraries-io) to verify Plaid webhooks
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JWKPublicKey
	{
		
		/// <summary>
		/// The alg member identifies the cryptographic algorithm family used with the key.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alg")]
		public string Alg { get; set; }
		
		/// <summary>
		/// The timestamp when the key was created, in Unix time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public int Created_at { get; set; }
		
		/// <summary>
		/// The crv member identifies the cryptographic curve used with the key.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="crv")]
		public string Crv { get; set; }
		
		/// <summary>
		/// The timestamp when the key expired, in Unix time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expired_at")]
		public System.Nullable<System.Int32> Expired_at { get; set; }
		
		/// <summary>
		/// The kid (Key ID) member can be used to match a specific key. This can be used, for instance, to choose among a set of keys within the JWK during key rollover.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kid")]
		public string Kid { get; set; }
		
		/// <summary>
		/// The kty (key type) parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kty")]
		public string Kty { get; set; }
		
		/// <summary>
		/// The use (public key use) parameter identifies the intended use of the public key.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="use")]
		public string Use { get; set; }
		
		/// <summary>
		/// The x member contains the x coordinate for the elliptic curve point, provided as a base64url-encoded string of the coordinate's big endian representation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="x")]
		public string X { get; set; }
		
		/// <summary>
		/// The y member contains the y coordinate for the elliptic curve point, provided as a base64url-encoded string of the coordinate's big endian representation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="y")]
		public string Y { get; set; }
	}
	
	/// <summary>
	/// A JWT Header, used for webhook validation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JWTHeader
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.
	///
	///Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["past_amount_due"] }`
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilitiesAccountIdsWithUpdatedLiabilities
	{
	}
	
	/// <summary>
	/// The webhook of type `LIABILITIES` and code `DEFAULT_UPDATE` will be fired when new or updated liabilities have been detected on a liabilities item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilitiesDefaultUpdateWebhook
	{
		
		/// <summary>
		/// An array of `account_id`'s for accounts that contain new liabilities.'
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_ids_with_new_liabilities")]
		public string[] Account_ids_with_new_liabilities { get; set; }
		
		/// <summary>
		/// An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.
		///
		///Example: `{ "XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58": ["past_amount_due"] }`
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_ids_with_updated_liabilities")]
		public LiabilitiesAccountIdsWithUpdatedLiabilities Account_ids_with_updated_liabilities { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `DEFAULT_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `LIABILITIES`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// LiabilitiesGetRequest defines the request schema for `/liabilities/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilitiesGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/liabilities/get` results. If provided, `options` cannot be null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public LiabilitiesGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/liabilities/get` results. If provided, `options` cannot be null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilitiesGetRequestOptions
	{
		
		/// <summary>
		/// A list of accounts to retrieve for the Item.
		///
		///An error will be returned if a provided `account_id` is not associated with the Item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
	}
	
	/// <summary>
	/// LiabilitiesGetResponse defines the response schema for `/liabilities/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilitiesGetResponse
	{
		
		/// <summary>
		/// An array of accounts associated with the Item
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountBase[] Accounts { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// An object containing liability accounts
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="liabilities")]
		public LiabilitiesObject Liabilities { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object containing liability accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilitiesObject
	{
		
		/// <summary>
		/// The credit accounts returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public CreditCardLiability[] Credit { get; set; }
		
		/// <summary>
		/// The mortgage accounts returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mortgage")]
		public MortgageLiability[] Mortgage { get; set; }
		
		/// <summary>
		/// The student loan accounts returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="student")]
		public StudentLoan[] Student { get; set; }
	}
	
	/// <summary>
	/// Contains details about a mortgage account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MortgageLiability
	{
		
		/// <summary>
		/// The ID of the account that this liability belongs to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The account number of the loan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The current outstanding amount charged for late payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_late_fee")]
		public System.Nullable<System.Double> Current_late_fee { get; set; }
		
		/// <summary>
		/// Total amount held in escrow to pay taxes and insurance on behalf of the borrower.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="escrow_balance")]
		public System.Nullable<System.Double> Escrow_balance { get; set; }
		
		/// <summary>
		/// Indicates whether the borrower has private mortgage insurance in effect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="has_pmi")]
		public System.Nullable<System.Boolean> Has_pmi { get; set; }
		
		/// <summary>
		/// Indicates whether the borrower will pay a penalty for early payoff of mortgage.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="has_prepayment_penalty")]
		public System.Nullable<System.Boolean> Has_prepayment_penalty { get; set; }
		
		/// <summary>
		/// Object containing metadata about the interest rate for the mortgage.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interest_rate")]
		public MortgageInterestRate Interest_rate { get; set; }
		
		/// <summary>
		/// The amount of the last payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_amount")]
		public System.Nullable<System.Double> Last_payment_amount { get; set; }
		
		/// <summary>
		/// The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_date")]
		public System.Nullable<System.DateOnly> Last_payment_date { get; set; }
		
		/// <summary>
		/// Full duration of mortgage as at origination (e.g. `10 year`).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan_term")]
		public string Loan_term { get; set; }
		
		/// <summary>
		/// Description of the type of loan, for example `conventional`, `fixed`, or `variable`. This field is provided directly from the loan servicer and does not have an enumerated set of possible values.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan_type_description")]
		public string Loan_type_description { get; set; }
		
		/// <summary>
		/// Original date on which mortgage is due in full. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maturity_date")]
		public System.Nullable<System.DateOnly> Maturity_date { get; set; }
		
		/// <summary>
		/// The amount of the next payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_monthly_payment")]
		public System.Nullable<System.Double> Next_monthly_payment { get; set; }
		
		/// <summary>
		/// The due date for the next payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_payment_due_date")]
		public System.Nullable<System.DateOnly> Next_payment_due_date { get; set; }
		
		/// <summary>
		/// The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_date")]
		public System.Nullable<System.DateOnly> Origination_date { get; set; }
		
		/// <summary>
		/// The original principal balance of the mortgage.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_principal_amount")]
		public System.Nullable<System.Double> Origination_principal_amount { get; set; }
		
		/// <summary>
		/// Amount of loan (principal + interest) past due for payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="past_due_amount")]
		public System.Nullable<System.Double> Past_due_amount { get; set; }
		
		/// <summary>
		/// Object containing fields describing property address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="property_address")]
		public MortgagePropertyAddress Property_address { get; set; }
		
		/// <summary>
		/// The year to date (YTD) interest paid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_interest_paid")]
		public System.Nullable<System.Double> Ytd_interest_paid { get; set; }
		
		/// <summary>
		/// The YTD principal paid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_principal_paid")]
		public System.Nullable<System.Double> Ytd_principal_paid { get; set; }
	}
	
	/// <summary>
	/// Object containing metadata about the interest rate for the mortgage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MortgageInterestRate
	{
		
		/// <summary>
		/// Percentage value (interest rate of current mortgage, not APR) of interest payable on a loan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="percentage")]
		public System.Nullable<System.Double> Percentage { get; set; }
		
		/// <summary>
		/// The type of interest charged (fixed or variable).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Object containing fields describing property address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MortgagePropertyAddress
	{
		
		/// <summary>
		/// The city name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The five or nine digit postal code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state (example "NC").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address (example "564 Main Street, Apt 15").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// Contains details about a student loan account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StudentLoan
	{
		
		/// <summary>
		/// The ID of the account that this liability belongs to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The account number of the loan. For some institutions, this may be a masked version of the number (e.g., the last 4 digits instead of the entire number).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The dates on which loaned funds were disbursed or will be disbursed. These are often in the past. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="disbursement_dates")]
		public string[] Disbursement_dates { get; set; }
		
		/// <summary>
		/// The date when the student loan is expected to be paid off. Availability for this field is limited. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expected_payoff_date")]
		public System.Nullable<System.DateOnly> Expected_payoff_date { get; set; }
		
		/// <summary>
		/// The guarantor of the student loan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantor")]
		public string Guarantor { get; set; }
		
		/// <summary>
		/// The interest rate on the loan as a percentage.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interest_rate_percentage")]
		public double Interest_rate_percentage { get; set; }
		
		/// <summary>
		/// `true` if a payment is currently overdue. Availability for this field is limited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_overdue")]
		public System.Nullable<System.Boolean> Is_overdue { get; set; }
		
		/// <summary>
		/// The amount of the last payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_amount")]
		public System.Nullable<System.Double> Last_payment_amount { get; set; }
		
		/// <summary>
		/// The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_date")]
		public System.Nullable<System.DateOnly> Last_payment_date { get; set; }
		
		/// <summary>
		/// The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_statement_issue_date")]
		public System.Nullable<System.DateOnly> Last_statement_issue_date { get; set; }
		
		/// <summary>
		/// The type of loan, e.g., "Consolidation Loans".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan_name")]
		public string Loan_name { get; set; }
		
		/// <summary>
		/// An object representing the status of the student loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan_status")]
		public StudentLoanStatus Loan_status { get; set; }
		
		/// <summary>
		/// The minimum payment due for the next billing cycle. There are some exceptions:
		///Some institutions require a minimum payment across all loans associated with an account number. Our API presents that same minimum payment amount on each loan. The institutions that do this are: Great Lakes ( `ins_116861`), Firstmark (`ins_116295`), Commonbond Firstmark Services (`ins_116950`), Nelnet (`ins_116528`), EdFinancial Services (`ins_116304`), Granite State (`ins_116308`), and Oklahoma Student Loan Authority (`ins_116945`).
		///Firstmark (`ins_116295` ) and Navient (`ins_116248`) will display as $0 if there is an autopay program in effect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="minimum_payment_amount")]
		public System.Nullable<System.Double> Minimum_payment_amount { get; set; }
		
		/// <summary>
		/// The due date for the next payment. The due date is `null` if a payment is not expected. A payment is not expected if `loan_status.type` is `deferment`, `in_school`, `consolidated`, `paid in full`, or `transferred`. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_payment_due_date")]
		public System.Nullable<System.DateOnly> Next_payment_due_date { get; set; }
		
		/// <summary>
		/// The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_date")]
		public System.Nullable<System.DateOnly> Origination_date { get; set; }
		
		/// <summary>
		/// The original principal balance of the loan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_principal_amount")]
		public System.Nullable<System.Double> Origination_principal_amount { get; set; }
		
		/// <summary>
		/// The total dollar amount of the accrued interest balance. For Sallie Mae ( `ins_116944`), this amount is included in the current balance of the loan, so this field will return as `null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outstanding_interest_amount")]
		public System.Nullable<System.Double> Outstanding_interest_amount { get; set; }
		
		/// <summary>
		/// The relevant account number that should be used to reference this loan for payments. In the majority of cases, `payment_reference_number` will match `account_number,` but in some institutions, such as Great Lakes (`ins_116861`), it will be different.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_reference_number")]
		public string Payment_reference_number { get; set; }
		
		/// <summary>
		/// Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is FedLoan (`ins_116527`). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pslf_status")]
		public PSLFStatus Pslf_status { get; set; }
		
		/// <summary>
		/// An object representing the repayment plan for the student loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_plan")]
		public StudentRepaymentPlan Repayment_plan { get; set; }
		
		/// <summary>
		/// The sequence number of the student loan. Heartland ECSI (`ins_116948`) does not make this field available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sequence_number")]
		public string Sequence_number { get; set; }
		
		/// <summary>
		/// The address of the student loan servicer. This is generally the remittance address to which payments should be sent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicer_address")]
		public ServicerAddressData Servicer_address { get; set; }
		
		/// <summary>
		/// The year to date (YTD) interest paid. Availability for this field is limited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_interest_paid")]
		public System.Nullable<System.Double> Ytd_interest_paid { get; set; }
		
		/// <summary>
		/// The year to date (YTD) principal paid. Availability for this field is limited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ytd_principal_paid")]
		public System.Nullable<System.Double> Ytd_principal_paid { get; set; }
	}
	
	/// <summary>
	/// An object representing the status of the student loan
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StudentLoanStatus
	{
		
		/// <summary>
		/// The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The status type of the student loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<StudentLoanStatusType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StudentLoanStatusType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="charged off")]
		charged_off = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		claim = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consolidated = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deferment = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delinquent = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		discharged = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		extension = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forbearance = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in grace")]
		in_grace = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in military")]
		in_military = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in school")]
		in_school = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="not fully disbursed")]
		not_fully_disbursed = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="paid in full")]
		paid_in_full = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		refunded = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		repayment = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transferred = 17,
	}
	
	/// <summary>
	/// Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is FedLoan (`ins_116527`). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PSLFStatus
	{
		
		/// <summary>
		/// The estimated date borrower will have completed 120 qualifying monthly payments. Returned in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="estimated_eligibility_date")]
		public System.Nullable<System.DateOnly> Estimated_eligibility_date { get; set; }
		
		/// <summary>
		/// The number of qualifying payments that have been made.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payments_made")]
		public System.Nullable<System.Double> Payments_made { get; set; }
		
		/// <summary>
		/// The number of qualifying payments remaining.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payments_remaining")]
		public System.Nullable<System.Double> Payments_remaining { get; set; }
	}
	
	/// <summary>
	/// An object representing the repayment plan for the student loan
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StudentRepaymentPlan
	{
		
		/// <summary>
		/// The description of the repayment plan as provided by the servicer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The type of the repayment plan.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<StudentRepaymentPlanType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StudentRepaymentPlanType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="extended graduated")]
		extended_graduated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="extended standard")]
		extended_standard = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		graduated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="income-contingent repayment")]
		incomeMinuscontingent_repayment = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="income-based repayment")]
		incomeMinusbased_repayment = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="interest-only")]
		interestMinusonly = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pay as you earn")]
		pay_as_you_earn = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="revised pay as you earn")]
		revised_pay_as_you_earn = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 10,
	}
	
	/// <summary>
	/// The address of the student loan servicer. This is generally the remittance address to which payments should be sent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServicerAddressData
	{
		
		/// <summary>
		/// The full city name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The region or state
		///Example: `"NC"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The full street address
		///Example: `"564 Main Street, APT 15"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// Used to configure Sandbox test data for the Liabilities product
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LiabilityOverride
	{
		
		/// <summary>
		/// The balance transfer APR percentage value. Can only be set if `type` is `credit`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="balance_transfer_apr")]
		public double Balance_transfer_apr { get; set; }
		
		/// <summary>
		/// The cash APR percentage value. Can only be set if `type` is `credit`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cash_apr")]
		public double Cash_apr { get; set; }
		
		/// <summary>
		/// Override the `expected_payoff_date` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expected_payoff_date")]
		public System.DateOnly Expected_payoff_date { get; set; }
		
		/// <summary>
		/// Override the `guarantor` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantor")]
		public string Guarantor { get; set; }
		
		/// <summary>
		/// If set, interest capitalization begins at the given number of months after loan origination. By default interest is never capitalized. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interest_capitalization_grace_period_months")]
		public double Interest_capitalization_grace_period_months { get; set; }
		
		/// <summary>
		/// Override the `is_federal` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_federal")]
		public bool Is_federal { get; set; }
		
		/// <summary>
		/// Override the `is_overdue` field
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_overdue")]
		public bool Is_overdue { get; set; }
		
		/// <summary>
		/// Override the `last_payment_amount` field. Can only be set if `type` is `credit`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_payment_amount")]
		public double Last_payment_amount { get; set; }
		
		/// <summary>
		/// Override the `loan_name` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan_name")]
		public string Loan_name { get; set; }
		
		/// <summary>
		/// An object representing the status of the student loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan_status")]
		public StudentLoanStatus Loan_status { get; set; }
		
		/// <summary>
		/// Override the `minimum_payment_amount` field. Can only be set if `type` is `credit` or `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="minimum_payment_amount")]
		public double Minimum_payment_amount { get; set; }
		
		/// <summary>
		/// The interest rate on the loan as a percentage. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nominal_apr")]
		public double Nominal_apr { get; set; }
		
		/// <summary>
		/// The date on which the loan was initially lent, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_date")]
		public System.DateOnly Origination_date { get; set; }
		
		/// <summary>
		/// Override the `payment_reference_number` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_reference_number")]
		public string Payment_reference_number { get; set; }
		
		/// <summary>
		/// The original loan principal. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="principal")]
		public double Principal { get; set; }
		
		/// <summary>
		/// Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is FedLoan (`ins_116527`). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pslf_status")]
		public PSLFStatus Pslf_status { get; set; }
		
		/// <summary>
		/// The purchase APR percentage value. For simplicity, this is the only interest rate used to calculate interest charges. Can only be set if `type` is `credit`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="purchase_apr")]
		public double Purchase_apr { get; set; }
		
		/// <summary>
		/// Student loan repayment information used to configure Sandbox test data for the Liabilities product
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_model")]
		public StudentLoanRepaymentModel Repayment_model { get; set; }
		
		/// <summary>
		/// Override the `repayment_plan.description` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_plan_description")]
		public string Repayment_plan_description { get; set; }
		
		/// <summary>
		/// Override the `repayment_plan.type` field. Can only be set if `type` is `student`. Possible values are: `"extended graduated"`, `"extended standard"`, `"graduated"`, `"income-contingent repayment"`, `"income-based repayment"`, `"interest only"`, `"other"`, `"pay as you earn"`, `"revised pay as you earn"`, or `"standard"`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_plan_type")]
		public string Repayment_plan_type { get; set; }
		
		/// <summary>
		/// Override the `sequence_number` field. Can only be set if `type` is `student`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sequence_number")]
		public string Sequence_number { get; set; }
		
		/// <summary>
		/// A physical mailing address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicer_address")]
		public Address Servicer_address { get; set; }
		
		/// <summary>
		/// The special APR percentage value. Can only be set if `type` is `credit`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="special_apr")]
		public double Special_apr { get; set; }
		
		/// <summary>
		/// The type of the liability object, either `credit` or `student`. Mortgages are not currently supported in the custom Sandbox.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Student loan repayment information used to configure Sandbox test data for the Liabilities product
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StudentLoanRepaymentModel
	{
		
		/// <summary>
		/// Configures the number of months before repayment starts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="non_repayment_months")]
		public double Non_repayment_months { get; set; }
		
		/// <summary>
		/// Configures the number of months of repayments before the loan is paid off.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_months")]
		public double Repayment_months { get; set; }
		
		/// <summary>
		/// The only currently supported value for this field is `standard`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Information related to the callback from the hosted Link session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkCallbackMetadata
	{
		
		/// <summary>
		/// A list of accounts attached to the connected Item. If Account Select is enabled via the developer dashboard, accounts will only include selected accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public LinkDeliveryAccount[] Accounts { get; set; }
		
		/// <summary>
		/// The type of Link callback event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callback_type")]
		public System.Nullable<LinkCallbackMetadataCallback_type> Callback_type { get; set; }
		
		/// <summary>
		/// A string representing the event that has just occurred in the Link flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_name")]
		public System.Nullable<LinkCallbackMetadataEvent_name> Event_name { get; set; }
		
		/// <summary>
		/// Information related to the financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution")]
		public LinkDeliveryInstitution Institution { get; set; }
		
		/// <summary>
		/// A unique identifier associated with a user's actions and events through the Link flow. Include this identifier when opening a support ticket for faster turnaround.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link_session_id")]
		public string Link_session_id { get; set; }
		
		/// <summary>
		/// The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Indicates where in the flow the Link user exited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Information related to account attached to the connected Item
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryAccount
	{
		
		/// <summary>
		/// If micro-deposit verification is being used, indicates whether the account being verified is a `business` or `personal` account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="class_type")]
		public string Class_type { get; set; }
		
		/// <summary>
		/// The Plaid `account_id`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts. It may also not match the mask that the bank displays to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mask")]
		public string Mask { get; set; }
		
		/// <summary>
		/// The official account name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The account subtype. See the [Account schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full list of possible values
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public string Subtype { get; set; }
		
		/// <summary>
		/// The account type. See the [Account schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full list of possible values
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Indicates an Item's micro-deposit-based verification status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public AccountBaseVerification_status Verification_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkCallbackMetadataCallback_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_EVENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_EXIT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkCallbackMetadataEvent_name
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INCOME_INSIGHTS_COMPLETED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOSE_OAUTH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXIT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAIL_OAUTH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANDOFF = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN_MY_PLAID = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN_OAUTH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_INSTITUTION = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_AUTH_TYPE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_BRAND = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_DEGRADED_INSTITUTION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_DOWN_INSTITUTION = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_INSTITUTION = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_ACCOUNT_NUMBER = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_CREDENTIALS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_DOCUMENTS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_DOCUMENTS_ERROR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_DOCUMENTS_SUCCESS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_MFA = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_ROUTING_NUMBER = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSITION_VIEW = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEW_DATA_TYPES = 23,
	}
	
	/// <summary>
	/// Information related to the financial institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryInstitution
	{
		
		/// <summary>
		/// The Plaid institution identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The full institution name, such as 'Wells Fargo'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Webhook containing metadata proxied over from Link callback e.g `onEvent`, `onExit`, `onSuccess`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryCallbackWebhook
	{
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// Information related to the callback from the hosted Link session.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_callback_metadata")]
		public LinkCallbackMetadata Link_callback_metadata { get; set; }
		
		/// <summary>
		/// The ID of the link delivery session.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_delivery_session_id")]
		public string Link_delivery_session_id { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		/// <summary>
		/// `LINK_CALLBACK`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `LINK_DELIVERY`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// The communication method containing both the type and address to send the URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryCommunicationMethod
	{
		
		/// <summary>
		/// The phone number / email address that link delivery sessions are delivered to. Phone numbers must be in E.164 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		/// <summary>
		/// The delivery method to be used to deliver the Link Delivery URL.
		///
		///`SMS`: The URL will be delivered through SMS
		///
		///`EMAIL`: The URL will be delivered through email
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public System.Nullable<LinkDeliveryCommunicationMethodMethod> Method { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryCommunicationMethodMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 1,
	}
	
	/// <summary>
	/// LinkDeliveryCreateRequest defines the request schema for `/link_delivery/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A `link_token` from a previous invocation of `/link/token/create` with Link Delivery enabled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_token")]
		public string Link_token { get; set; }
		
		/// <summary>
		/// Optional metadata related to the link delivery session
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public LinkDeliveryOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Optional metadata related to the link delivery session
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryOptions
	{
		
		/// <summary>
		/// Metadata related to the recipient. If the information required to populate this field is not available, leave it blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient")]
		public LinkDeliveryRecipient Recipient { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the recipient. If the information required to populate this field is not available, leave it blank.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryRecipient
	{
		
		/// <summary>
		/// The list of communication methods to send the Link Delivery URL to. If delivery is not required, leave this field blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="communication_methods")]
		public LinkDeliveryCommunicationMethod[] Communication_methods { get; set; }
		
		/// <summary>
		/// First name of the recipient. Will be used in the body of the email / text (if configured). If this information is not available, leave this field blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
	}
	
	/// <summary>
	/// LinkDeliveryCreateResponse defines the response schema for `/link_delivery/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryCreateResponse
	{
		
		/// <summary>
		/// The ID for the Link Delivery session. Same as the `link_token` string excluding the "link-{env}-" prefix.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_delivery_session_id")]
		public string Link_delivery_session_id { get; set; }
		
		/// <summary>
		/// The URL to the Link Delivery session, which will be delivered by the specified delivery method.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_delivery_url")]
		public string Link_delivery_url { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The delivery method to be used to deliver the Link Delivery URL.
	///
	///`SMS`: The URL will be delivered through SMS
	///
	///`EMAIL`: The URL will be delivered through email
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryDeliveryMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 1,
	}
	
	/// <summary>
	/// LinkDeliveryGetRequest defines the request schema for `/link_delivery/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID for the Link Delivery session from a previous invocation of `/link_delivery/create`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_delivery_session_id")]
		public string Link_delivery_session_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// LinkDeliveryGetRequest defines the response schema for `/link_delivery/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryGetResponse
	{
		
		/// <summary>
		/// An array of access tokens associated with the Link Delivery session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_tokens")]
		public string[] Access_tokens { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Link Delivery Session was completed at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Link Delivery Session was created at.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// An array of `item_id`s associated with the Link Delivery session.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_ids")]
		public string[] Item_ids { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The status of the given Link Delivery Session.
		///
		///`CREATED`: The session is created but not yet accessed by the user
		///
		///`OPENED`: The session is opened by the user but not yet completed
		///
		///`COMPLETED`: The session has been completed by the user
		///
		///`EXPIRED`: The session has expired
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public LinkDeliveryGetResponseStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryGetResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPENED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 3,
	}
	
	/// <summary>
	/// Information related to the related to the delivery of the link session to users
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkDeliveryMetadata
	{
		
		/// <summary>
		/// The communication method used to deliver the hosted link session
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="communication_method")]
		public System.Nullable<LinkDeliveryMetadataCommunication_method> Communication_method { get; set; }
		
		/// <summary>
		/// The status of the delivery of the hosted link to the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public System.Nullable<LinkDeliveryMetadataDelivery_status> Delivery_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryMetadataCommunication_method
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryMetadataDelivery_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 1,
	}
	
	/// <summary>
	/// The status of the given Link Delivery Session.
	///
	///`CREATED`: The session is created but not yet accessed by the user
	///
	///`OPENED`: The session is opened by the user but not yet completed
	///
	///`COMPLETED`: The session has been completed by the user
	///
	///`EXPIRED`: The session has expired
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliverySessionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPENED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 3,
	}
	
	/// <summary>
	/// Indicates an Item's micro-deposit-based verification status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryVerificationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		automatically_verified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_automatic_verification = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_manual_verification = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manually_verified = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verification_expired = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verification_failed = 5,
	}
	
	/// <summary>
	/// The type of Link callback event
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryWebhookCallbackType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_EVENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_EXIT = 2,
	}
	
	/// <summary>
	/// The communication method used to deliver the hosted link session
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryWebhookCommunicationMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 1,
	}
	
	/// <summary>
	/// The status of the delivery of the hosted link to the user
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkDeliveryWebhookDeliveryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 1,
	}
	
	/// <summary>
	/// A string representing the event that has just occurred in the Link flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkEventName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INCOME_INSIGHTS_COMPLETED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOSE_OAUTH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXIT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAIL_OAUTH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANDOFF = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN_MY_PLAID = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN_OAUTH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_INSTITUTION = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_AUTH_TYPE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_BRAND = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_DEGRADED_INSTITUTION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_DOWN_INSTITUTION = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELECT_INSTITUTION = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_ACCOUNT_NUMBER = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_CREDENTIALS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_DOCUMENTS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_DOCUMENTS_ERROR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_DOCUMENTS_SUCCESS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_MFA = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMIT_ROUTING_NUMBER = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSITION_VIEW = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEW_DATA_TYPES = 23,
	}
	
	/// <summary>
	/// LinkOAuthCorrelationIdExchangeRequest defines the request schema for `/link/oauth/correlation_id/exchange`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkOAuthCorrelationIdExchangeRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A `link_correlation_id` from a received OAuth redirect URI callback
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_correlation_id")]
		public string Link_correlation_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// LinkOAuthCorrelationIdExchangeResponse defines the response schema for `/link/oauth/correlation_id/exchange`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkOAuthCorrelationIdExchangeResponse
	{
		
		/// <summary>
		/// The `link_token` associated to the given `link_correlation_id`, which can be used to re-initialize Link.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_token")]
		public string Link_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the `products` parameter of `/link/token/create`, and, if `auth` is specified in the `products` array, will also filter out accounts other than `checking` and `savings` accounts on the Account Select pane. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
	///
	///For institutions using OAuth, the filter will not affect the list of accounts shown by the bank in the OAuth window.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenAccountFilters
	{
		
		/// <summary>
		/// A filter to apply to `credit`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public CreditFilter Credit { get; set; }
		
		/// <summary>
		/// A filter to apply to `depository`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="depository")]
		public DepositoryFilter Depository { get; set; }
		
		/// <summary>
		/// A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investment")]
		public InvestmentFilter Investment { get; set; }
		
		/// <summary>
		/// A filter to apply to `loan`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public LoanFilter Loan { get; set; }
	}
	
	/// <summary>
	/// A filter to apply to `credit`-type accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateCreditFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public CreditAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// A filter to apply to `depository`-type accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateDepositoryFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public DepositoryAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// A map containing data used to highlight institutions in Link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateInstitutionData
	{
		
		/// <summary>
		/// The routing number of the bank to highlight.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
	}
	
	/// <summary>
	/// A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateInvestmentFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public InvestmentAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// A filter to apply to `loan`-type accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateLoanFilter
	{
		
		/// <summary>
		/// An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema). 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_subtypes")]
		public LoanAccountSubtype[] Account_subtypes { get; set; }
	}
	
	/// <summary>
	/// LinkTokenCreateRequest defines the request schema for `/link/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequest
	{
		
		/// <summary>
		/// The `access_token` associated with the Item to update or reference, used when updating, modifying, or accessing an existing `access_token`. Used when launching Link in update mode, when completing the Same-day (manual) Micro-deposit flow, or (optionally) when initializing Link for a returning user as part of the Transfer UI flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the `products` parameter of `/link/token/create`, and, if `auth` is specified in the `products` array, will also filter out accounts other than `checking` and `savings` accounts on the Account Select pane. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
		///
		///For institutions using OAuth, the filter will not affect the list of accounts shown by the bank in the OAuth window.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_filters")]
		public LinkTokenAccountFilters Account_filters { get; set; }
		
		/// <summary>
		/// (Beta) This field has no effect unless you are participating in the Product Scope Transparency beta program.
		///List of additional Plaid product(s) you wish to collect consent for. These products will not be billed until you start using them by calling the relevant endpoints.
		///
		///`balance` is *not* a valid value, the Balance product does not require explicit initialization and will automatically have consent collected.
		///
		///Institutions that do not support these products will still be shown in Link
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additional_consented_products")]
		public Products[] Additional_consented_products { get; set; }
		
		/// <summary>
		/// The name of your app's Android package. Required if using the `link_token` to initialize Link on Android. Any package name specified here must also be added to the Allowed Android package names setting on the [developer dashboard](https://dashboard.plaid.com/team/api). When creating a `link_token` for initializing Link on other platforms, `android_package_name` must be left blank and `redirect_uri` should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="android_package_name")]
		public string Android_package_name { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with the Auth product. This field can be used to enable or disable extended Auth flows for the resulting Link session. Omitting any field will result in a default that can be configured by your account manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth")]
		public LinkTokenCreateRequestAuth Auth { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The name of your application, as it should be displayed in Link. Maximum length of 30 characters. If a value longer than 30 characters is provided, Link will display "This Application" instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_name")]
		public string Client_name { get; set; }
		
		/// <summary>
		/// Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Institutions from all listed countries will be shown. For a complete mapping of supported products by country, see https://plaid.com/global/.
		///
		///If Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link. Note that while all countries are enabled by default in Sandbox and Development, in Production only US and Canada are enabled by default. Access to European institutions requires additional compliance steps. To request access to European institutions in the Production environment, [file a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access) via the Plaid dashboard. If you initialize with a European country code, your users will see the European consent panel during the Link flow.
		///
		///If using a Link customization, make sure the country codes in the customization match those specified in `country_codes`, or the customization may not be applied.
		///
		///If using the Auth features Instant Match, Same-day Micro-deposits, or Automated Micro-deposits, `country_codes` must be set to `['US']`.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_codes")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public CountryCode[] Country_codes { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with the Deposit Switch (beta) product. This field is required if `deposit_switch` is included in the `products` array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deposit_switch")]
		public LinkTokenCreateRequestDepositSwitch Deposit_switch { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with the Employment product. This field is required if `employment` is included in the `products` array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment")]
		public LinkTokenCreateRequestEmployment Employment { get; set; }
		
		/// <summary>
		/// Configuration parameters for EU flows
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eu_config")]
		public LinkTokenEUConfig Eu_config { get; set; }
		
		/// <summary>
		/// Specifies option for initializing Link for use with the Identity Verification product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity_verification")]
		public LinkTokenCreateRequestIdentityVerification Identity_verification { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with the Income product. This field is required if `income_verification` is included in the `products` array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_verification")]
		public LinkTokenCreateRequestIncomeVerification Income_verification { get; set; }
		
		/// <summary>
		/// A map containing data used to highlight institutions in Link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_data")]
		public LinkTokenCreateInstitutionData Institution_data { get; set; }
		
		/// <summary>
		/// Used for certain Europe-only configurations, as well as certain legacy use cases in other regions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// Configuration parameters for the Investments product
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investments")]
		public LinkTokenInvestments Investments { get; set; }
		
		/// <summary>
		/// The language that Link should be displayed in. When initializing with Identity Verification, this field is not used; for more details, see [Identity Verification supported languages](https://www.plaid.com/docs/identity-verification/#supported-languages).
		///
		///Supported languages are:
		///- Danish (`'da'`)
		///- Dutch (`'nl'`)
		///- English (`'en'`)
		///- Estonian (`'et'`)
		///- French (`'fr'`)
		///- German (`'de'`)
		///- Italian (`'it'`)
		///- Latvian (`'lv'`)
		///- Lithuanian (`'lt'`)
		///- Norwegian (`'no'`)
		///- Polish (`'pl'`)
		///- Portuguese (`'pt'`)
		///- Romanian (`'ro'`)
		///- Spanish (`'es'`)
		///- Swedish (`'se'`)
		///
		///When using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link_customization_name")]
		public string Link_customization_name { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with the Payment Initiation (Europe) product. This field is required if `payment_initiation` is included in the `products` array. Either `payment_id` or `consent_id` must be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_initiation")]
		public LinkTokenCreateRequestPaymentInitiation Payment_initiation { get; set; }
		
		/// <summary>
		/// List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted (unless you are using update mode to add Income or Assets to an Item); required otherwise.
		///
		///`balance` is *not* a valid value, the Balance product does not require explicit initialization and will automatically be initialized when any other product is initialized.
		///
		///The products specified here will determine which institutions will be available to your users in Link. Only institutions that support *all* requested products can be selected; a if a user attempts to select an institution that does not support a listed product, a "Connectivity not supported" error message will appear in Link. To maximize the number of institutions available, initialize Link with the minimal product set required for your use case. Additional products can be added after Link initialization by calling the relevant endpoints. For details and exceptions, see [Choosing when to initialize products](https://plaid.com/docs/link/initializing-products/).
		///
		///Note that, unless you have opted to disable Instant Match support, institutions that support Instant Match will also be shown in Link if `auth` is specified as a product, even though these institutions do not contain `auth` in their product array.
		///
		///In Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. When used in Production or Development, must be an https URI. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. Note that any redirect URI must also be added to the Allowed redirect URIs list in the [developer dashboard](https://dashboard.plaid.com/team/api). If initializing on Android, `android_package_name` must be specified instead and `redirect_uri` should be left blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirect_uri")]
		public string Redirect_uri { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with the Transfer product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transfer")]
		public LinkTokenCreateRequestTransfer Transfer { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for [update mode](https://plaid.com/docs/link/update-mode).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update")]
		public LinkTokenCreateRequestUpdate Update { get; set; }
		
		/// <summary>
		/// An object specifying information about the end user who will be linking their account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public LinkTokenCreateRequestUser User { get; set; }
		
		/// <summary>
		/// A user token generated using `/user/create`. Any Item created during the Link session will be associated with the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
		
		/// <summary>
		/// The destination URL to which any webhooks should be sent. Note that webhooks for Payment Initiation (e-wallet transactions only), Transfer, Bank Transfer (including Auth micro-deposit notification webhooks) and Identity Verification are configured via the Dashboard instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with the Auth product. This field can be used to enable or disable extended Auth flows for the resulting Link session. Omitting any field will result in a default that can be configured by your account manager.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestAuth
	{
		
		/// <summary>
		/// Specifies whether Auth Type Select is enabled for the Link session, allowing the end user to choose between linking instantly or manually prior to selecting their financial institution. Note that this can only be true if `same_day_microdeposits_enabled` is set to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auth_type_select_enabled")]
		public System.Nullable<System.Boolean> Auth_type_select_enabled { get; set; }
		
		/// <summary>
		/// Specifies whether the Link session is enabled for the Automated Micro-deposits flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automated_microdeposits_enabled")]
		public System.Nullable<System.Boolean> Automated_microdeposits_enabled { get; set; }
		
		/// <summary>
		/// This field has been deprecated in favor of `auth_type_select_enabled`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flow_type")]
		public System.Nullable<LinkTokenCreateRequestAuthFlow_type> Flow_type { get; set; }
		
		/// <summary>
		/// Specifies whether the Link session is enabled for the Instant Match flow. As of November 2022, Instant Match will be enabled by default. Instant Match can be disabled by setting this field to `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instant_match_enabled")]
		public System.Nullable<System.Boolean> Instant_match_enabled { get; set; }
		
		/// <summary>
		/// Specifies whether the Link session is enabled for the Same Day Micro-deposits flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="same_day_microdeposits_enabled")]
		public System.Nullable<System.Boolean> Same_day_microdeposits_enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkTokenCreateRequestAuthFlow_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLEXIBLE_AUTH = 0,
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with the Deposit Switch (beta) product. This field is required if `deposit_switch` is included in the `products` array.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestDepositSwitch
	{
		
		/// <summary>
		/// The `deposit_switch_id` provided by the `/deposit_switch/create` endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deposit_switch_id")]
		public string Deposit_switch_id { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with the Employment product. This field is required if `employment` is included in the `products` array.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestEmployment
	{
		
		/// <summary>
		/// Specifies options for initializing Link for use with Bank Employment. This field is required if `employment` is included in the `products` array and `bank` is specified in `employment_source_types`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_employment")]
		public LinkTokenCreateRequestEmploymentBankIncome Bank_employment { get; set; }
		
		/// <summary>
		/// The types of source employment data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_source_types")]
		public EmploymentSourceType[] Employment_source_types { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with Bank Employment. This field is required if `employment` is included in the `products` array and `bank` is specified in `employment_source_types`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestEmploymentBankIncome
	{
		
		/// <summary>
		/// The number of days of data to request for the Bank Employment product.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		public int Days_requested { get; set; }
	}
	
	/// <summary>
	/// Configuration parameters for EU flows
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenEUConfig
	{
		
		/// <summary>
		/// If `true`, open Link without an initial UI. Defaults to `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headless")]
		public System.Nullable<System.Boolean> Headless { get; set; }
	}
	
	/// <summary>
	/// Specifies option for initializing Link for use with the Identity Verification product.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestIdentityVerification
	{
		
		[System.Runtime.Serialization.DataMember(Name="consent")]
		public System.Nullable<System.Boolean> Consent { get; set; }
		
		/// <summary>
		/// A flag specifying whether the end user has already agreed to a privacy policy specifying that their data will be shared with Plaid for verification purposes.
		///
		///If `gave_consent` is set to `true`, the `accept_tos` step will be marked as `skipped` and the end user's session will start at the next step requirement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gave_consent")]
		public System.Nullable<System.Boolean> Gave_consent { get; set; }
		
		/// <summary>
		/// ID of the associated Identity Verification template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public string Template_id { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with the Income product. This field is required if `income_verification` is included in the `products` array.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestIncomeVerification
	{
		
		/// <summary>
		/// An array of access tokens corresponding to Items that a user has previously connected with. Data from these institutions will be cross-referenced with document data received during the Document Income flow to help verify that the uploaded documents are accurate. If the `transactions` product was not initialized for these Items during link, it will be initialized after this Link session.
		///
		///This field should only be used with the `payroll` income source type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_tokens")]
		public string[] Access_tokens { get; set; }
		
		/// <summary>
		/// The `asset_report_id` of an asset report associated with the user, as provided by `/asset_report/create`. Providing an `asset_report_id` is optional and can be used to verify the user through a streamlined flow. If provided, the bank linking flow will be skipped.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset_report_id")]
		public string Asset_report_id { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with Bank Income. This field is required if `income_verification` is included in the `products` array and `bank` is specified in `income_source_types`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income")]
		public LinkTokenCreateRequestIncomeVerificationBankIncome Bank_income { get; set; }
		
		/// <summary>
		/// The types of source income data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_source_types")]
		public IncomeVerificationSourceType[] Income_source_types { get; set; }
		
		/// <summary>
		/// The `income_verification_id` of the verification instance, as provided by `/income/verification/create`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_verification_id")]
		public string Income_verification_id { get; set; }
		
		/// <summary>
		/// Specifies options for initializing Link for use with Payroll Income.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payroll_income")]
		public LinkTokenCreateRequestIncomeVerificationPayrollIncome Payroll_income { get; set; }
		
		/// <summary>
		/// The ID of a precheck created with `/income/verification/precheck`. Will be used to improve conversion of the income verification flow by streamlining the Link interface presented to the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precheck_id")]
		public string Precheck_id { get; set; }
		
		/// <summary>
		/// A list of user stated income sources
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stated_income_sources")]
		public LinkTokenCreateRequestUserStatedIncomeSource[] Stated_income_sources { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with Bank Income. This field is required if `income_verification` is included in the `products` array and `bank` is specified in `income_source_types`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestIncomeVerificationBankIncome
	{
		
		/// <summary>
		/// The number of days of data to request for the Bank Income product
		/// Required
		/// Minimum: 1
		/// Maximum: 731
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		[System.ComponentModel.DataAnnotations.Range(1, 731)]
		public int Days_requested { get; set; }
		
		/// <summary>
		/// Whether to enable multiple Items to be added in the Link session
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_multiple_items")]
		public System.Nullable<System.Boolean> Enable_multiple_items { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with Payroll Income.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestIncomeVerificationPayrollIncome
	{
		
		/// <summary>
		/// The types of payroll income verification to enable for the Link session. If none are specified, then users will see both document and digital payroll income.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flow_types")]
		public IncomeVerificationPayrollFlowType[] Flow_types { get; set; }
		
		/// <summary>
		/// An identifier to indicate whether the income verification Link token will be used for an update or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_update_mode")]
		public System.Nullable<System.Boolean> Is_update_mode { get; set; }
		
		/// <summary>
		/// Uniquely identify a payroll income item to update with. It should only be used for update mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id_to_update")]
		public string Item_id_to_update { get; set; }
	}
	
	/// <summary>
	/// Specifies user stated income sources for the Income product
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestUserStatedIncomeSource
	{
		
		/// <summary>
		/// The income category for a specified income source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public System.Nullable<LinkTokenCreateRequestUserStatedIncomeSourceCategory> Category { get; set; }
		
		/// <summary>
		/// The employer corresponding to an income source specified by the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public string Employer { get; set; }
		
		/// <summary>
		/// The income amount paid annually for a specified income source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_annual")]
		public System.Nullable<System.Double> Pay_annual { get; set; }
		
		/// <summary>
		/// The pay frequency of a specified income source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_frequency")]
		public System.Nullable<LinkTokenCreateRequestUserStatedIncomeSourcePay_frequency> Pay_frequency { get; set; }
		
		/// <summary>
		/// The income amount paid per cycle for a specified income source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_per_cycle")]
		public System.Nullable<System.Double> Pay_per_cycle { get; set; }
		
		/// <summary>
		/// The pay type - `GROSS`, `NET`, or `UNKNOWN` for a specified income source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pay_type")]
		public System.Nullable<LinkTokenCreateRequestUserStatedIncomeSourcePay_type> Pay_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkTokenCreateRequestUserStatedIncomeSourceCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALARY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNEMPLOYMENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIG_ECONOMY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENTAL = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHILD_SUPPORT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILITARY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIREMENT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_TERM_DISABILITY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INTEREST = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkTokenCreateRequestUserStatedIncomeSourcePay_frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIWEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEMI_MONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LinkTokenCreateRequestUserStatedIncomeSourcePay_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROSS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NET = 2,
	}
	
	/// <summary>
	/// Configuration parameters for the Investments product
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenInvestments
	{
		
		/// <summary>
		/// If `true`, allow self-custody crypto wallets to be added without requiring signature verification. Defaults to `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allow_unverified_crypto_wallets")]
		public System.Nullable<System.Boolean> Allow_unverified_crypto_wallets { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with the Payment Initiation (Europe) product. This field is required if `payment_initiation` is included in the `products` array. Either `payment_id` or `consent_id` must be provided.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestPaymentInitiation
	{
		
		/// <summary>
		/// The `consent_id` provided by the `/payment_initiation/consent/create` endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// The `payment_id` provided by the `/payment_initiation/payment/create` endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for use with the Transfer product.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestTransfer
	{
		
		/// <summary>
		/// The `id` returned by the `/transfer/intent/create` endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intent_id")]
		public string Intent_id { get; set; }
		
		/// <summary>
		/// The `payment_profile_token` returned by the `/payment_profile/create` endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
	}
	
	/// <summary>
	/// Specifies options for initializing Link for [update mode](https://plaid.com/docs/link/update-mode).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestUpdate
	{
		
		/// <summary>
		/// If `true`, enables [update mode with Account Select](https://plaid.com/docs/link/update-mode/#using-update-mode-to-request-new-accounts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_selection_enabled")]
		public System.Nullable<System.Boolean> Account_selection_enabled { get; set; }
	}
	
	/// <summary>
	/// An object specifying information about the end user who will be linking their account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestUser
	{
		
		/// <summary>
		/// Home address for the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public UserAddress Address { get; set; }
		
		/// <summary>
		/// A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// To be provided in the format "yyyy-mm-dd". Not currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public System.Nullable<System.DateOnly> Date_of_birth { get; set; }
		
		/// <summary>
		/// The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#pre-authenticated-rux).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The date and time the email address was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.
		///
		/// Only pass a verification time for an email address that you have verified. If you have performed verification but donâ€™t have the time, you may supply a signal value of the start of the UNIX epoch.
		///
		/// Example: `2020-01-01T00:00:00Z`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address_verified_time")]
		public System.Nullable<System.DateTimeOffset> Email_address_verified_time { get; set; }
		
		/// <summary>
		/// ID number submitted by the user, currently used only for the Identity Verification product. If the user has not submitted this data yet, this field will be `null`. Otherwise, both fields are guaranteed to be filled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id_number")]
		public UserIDNumber Id_number { get; set; }
		
		/// <summary>
		/// The user's full legal name, used for [micro-deposit based verification flows](https://plaid.com/docs/auth/coverage/). For a small number of customers on legacy flows, providing this field is required to enable micro-deposit-based flows. For all other customers, this field is optional, but providing the user's name in this field when using micro-deposit-based verification will enable certain risk checks and can reduce micro-deposit fraud.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public IdentityVerificationRequestUserName Name { get; set; }
		
		/// <summary>
		/// The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// The date and time the phone number was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.
		///
		/// Only pass a verification time for a phone number that you have verified. If you have performed verification but donâ€™t have the time, you may supply a signal value of the start of the UNIX epoch.
		///
		/// Example: `2020-01-01T00:00:00Z`
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number_verified_time")]
		public System.Nullable<System.DateTimeOffset> Phone_number_verified_time { get; set; }
		
		/// <summary>
		/// To be provided in the format "ddd-dd-dddd". Not currently used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssn")]
		public string Ssn { get; set; }
	}
	
	/// <summary>
	/// By default, Link will only display account types that are compatible with all products supplied in the `products` parameter of `/link/token/create`. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `"all"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link.
	///
	///For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
	///
	///For institutions using OAuth, the filter will not affect the list of institutions or accounts shown by the bank in the OAuth window.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateRequestAccountSubtypes
	{
		
		/// <summary>
		/// A filter to apply to `credit`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public LinkTokenCreateCreditFilter Credit { get; set; }
		
		/// <summary>
		/// A filter to apply to `depository`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="depository")]
		public LinkTokenCreateDepositoryFilter Depository { get; set; }
		
		/// <summary>
		/// A filter to apply to `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investment")]
		public LinkTokenCreateInvestmentFilter Investment { get; set; }
		
		/// <summary>
		/// A filter to apply to `loan`-type accounts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public LinkTokenCreateLoanFilter Loan { get; set; }
	}
	
	/// <summary>
	/// LinkTokenCreateResponse defines the response schema for `/link/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenCreateResponse
	{
		
		/// <summary>
		/// The expiration date for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 4 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration")]
		public System.DateTimeOffset Expiration { get; set; }
		
		/// <summary>
		/// A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_token")]
		public string Link_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object specifying the arguments originally provided to the `/link/token/create` call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenGetMetadataResponse
	{
		
		/// <summary>
		/// The `account_filters` specified in the original call to `/link/token/create`.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_filters")]
		public AccountFiltersResponse Account_filters { get; set; }
		
		/// <summary>
		/// The `client_name` specified in the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_name")]
		public string Client_name { get; set; }
		
		/// <summary>
		/// The `country_codes` specified in the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country_codes")]
		public CountryCode[] Country_codes { get; set; }
		
		/// <summary>
		/// The `products` specified in the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initial_products")]
		public Products[] Initial_products { get; set; }
		
		/// <summary>
		/// A map containing data used to highlight institutions in Link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institution_data")]
		public LinkTokenCreateInstitutionData Institution_data { get; set; }
		
		/// <summary>
		/// The `language` specified in the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The `redirect_uri` specified in the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_uri")]
		public string Redirect_uri { get; set; }
		
		/// <summary>
		/// The `webhook` specified in the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// LinkTokenGetRequest defines the request schema for `/link/token/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A `link_token` from a previous invocation of `/link/token/create`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_token")]
		public string Link_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// LinkTokenGetResponse defines the response schema for `/link/token/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkTokenGetResponse
	{
		
		/// <summary>
		/// The creation timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The expiration timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expiration")]
		public System.Nullable<System.DateTimeOffset> Expiration { get; set; }
		
		/// <summary>
		/// A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_token")]
		public string Link_token { get; set; }
		
		/// <summary>
		/// An object specifying the arguments originally provided to the `/link/token/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public LinkTokenGetMetadataResponse Metadata { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Webhook indicating that the status of the delivery of the hosted link session to a user
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinkUserDeliveryStatusWebhook
	{
		
		/// <summary>
		/// Information related to the related to the delivery of the link session to users
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_delivery_metadata")]
		public LinkDeliveryMetadata Link_delivery_metadata { get; set; }
		
		/// <summary>
		/// The ID of the link delivery session.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_delivery_session_id")]
		public string Link_delivery_session_id { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		/// <summary>
		/// `DELIVERY_STATUS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `LINK_DELIVERY`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoanAccount
	{
		
		/// <summary>
		/// Auto loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="auto")]
		public string Auto { get; set; }
		
		/// <summary>
		/// Business loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="business")]
		public string Business { get; set; }
		
		/// <summary>
		/// Commercial loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="commercial")]
		public string Commercial { get; set; }
		
		/// <summary>
		/// Construction loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="construction")]
		public string Construction { get; set; }
		
		/// <summary>
		/// Consumer loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consumer")]
		public string Consumer { get; set; }
		
		/// <summary>
		/// Home Equity Line of Credit (HELOC)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="home equity")]
		public string Home_equity { get; set; }
		
		/// <summary>
		/// Pre-approved line of credit
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="line of credit")]
		public string Line_of_credit { get; set; }
		
		/// <summary>
		/// General loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public string Loan { get; set; }
		
		/// <summary>
		/// Mortgage loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mortgage")]
		public string Mortgage { get; set; }
		
		/// <summary>
		/// Other loan type or unknown loan type
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other")]
		public string Other { get; set; }
		
		/// <summary>
		/// Pre-approved overdraft account, usually tied to a checking account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="overdraft")]
		public string Overdraft { get; set; }
		
		/// <summary>
		/// Student loan
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="student")]
		public string Student { get; set; }
	}
	
	/// <summary>
	/// A value from a MISMO prescribed list that specifies the type of loan identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoanIdentifierType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LenderLoan = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UniversalLoan = 1,
	}
	
	/// <summary>
	/// Specifies the multi-factor authentication settings to use with this test account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MFA
	{
		
		/// <summary>
		/// Number of rounds of questions. Required if value of `type` is `questions`. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="question_rounds")]
		public double Question_rounds { get; set; }
		
		/// <summary>
		/// Number of questions per round. Required if value of `type` is `questions`. If value of type is `selections`, default value is 2.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="questions_per_round")]
		public double Questions_per_round { get; set; }
		
		/// <summary>
		/// Number of rounds of selections, used if `type` is `selections`. Defaults to 1.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="selection_rounds")]
		public double Selection_rounds { get; set; }
		
		/// <summary>
		/// Number of available answers per question, used if `type` is `selection`. Defaults to 2.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="selections_per_question")]
		public double Selections_per_question { get; set; }
		
		/// <summary>
		/// Possible values are `device`, `selections`, or `questions`.
		///
		///If value is `device`, the MFA answer is `1234`.
		///
		///If value is `selections`, the MFA answer is always the first option.
		///
		///If value is `questions`, the MFA answer is  `answer_<i>_<j>` for the j-th question in the i-th round, starting from 0. For example, the answer to the first question in the second round is `answer_1_0`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// An enum indicating the match type between data provided by user and data checked against an external data source.
	///
	///
	///`match` indicates that the provided input data was a strong match against external data.
	///
	///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
	///
	///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
	///
	///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
	///
	///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MatchSummaryCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		match = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partial_match = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_match = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_input = 4,
	}
	
	/// <summary>
	/// Allows specifying the metadata of the test account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Meta
	{
		
		/// <summary>
		/// The account's limit
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public double Limit { get; set; }
		
		/// <summary>
		/// The account's mask. Should be a string of 2-4 alphanumeric characters. This allows you to model a mask which does not match the account number (such as with a virtual account number).
		/// Required
		/// Min length: 2
		/// Max length: 4
		/// Pattern: ^[A-Za-z0-9]{2,4}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mask")]
		[System.ComponentModel.DataAnnotations.Length(2, 4)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[A-Za-z0-9]{2,4}$")]
		public string Mask { get; set; }
		
		/// <summary>
		/// The account's name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The account's official name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="official_name")]
		public string Official_name { get; set; }
	}
	
	/// <summary>
	/// Fired when Plaid detects a new account for Items created or updated with [Account Select v2](https://plaid.com/docs/link/customization/#account-select). Upon receiving this webhook, you can prompt your users to share new accounts with you through [Account Select v2 update mode](https://plaid.com/docs/link/update-mode/#using-update-mode-to-request-new-accounts).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NewAccountsAvailableWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `NEW_ACCOUNTS_AVAILABLE`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ITEM`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Account and bank identifier number data used to configure the test account. All values are optional.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbers
	{
		
		/// <summary>
		/// Will be used for the account number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account")]
		public string Account { get; set; }
		
		/// <summary>
		/// Must be a valid ACH routing number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_routing")]
		public string Ach_routing { get; set; }
		
		/// <summary>
		/// Must be a valid wire transfer routing number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_wire_routing")]
		public string Ach_wire_routing { get; set; }
		
		/// <summary>
		/// BACS sort code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs_sort_code")]
		public string Bacs_sort_code { get; set; }
		
		/// <summary>
		/// EFT branch number. Must be specified alongside `eft_institution`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eft_branch")]
		public string Eft_branch { get; set; }
		
		/// <summary>
		/// EFT institution number. Must be specified alongside `eft_branch`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eft_institution")]
		public string Eft_institution { get; set; }
		
		/// <summary>
		/// Bank identifier code (BIC). Must be specified alongside `international_iban`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international_bic")]
		public string International_bic { get; set; }
		
		/// <summary>
		/// International bank account number (IBAN). If no account number is specified via `account`, will also be used as the account number by default. Must be specified alongside `international_bic`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international_iban")]
		public string International_iban { get; set; }
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from a US account via ACH or wire transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersACHNullable : NumbersACH
	{
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from a UK bank account via BACS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersBACSNullable : NumbersBACS
	{
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from a Canadian bank account via EFT.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersEFTNullable : NumbersEFT
	{
	}
	
	/// <summary>
	/// Account numbers using the International Bank Account Number and BIC/SWIFT code format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersInternationalIBAN
	{
		
		/// <summary>
		/// The Business Identifier Code, also known as SWIFT code, for this bank account.
		/// Required
		/// Min length: 8
		/// Max length: 11
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bic")]
		[System.ComponentModel.DataAnnotations.Length(8, 11)]
		public string Bic { get; set; }
		
		/// <summary>
		/// International Bank Account Number (IBAN).
		/// Required
		/// Min length: 15
		/// Max length: 34
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iban")]
		[System.ComponentModel.DataAnnotations.Length(15, 34)]
		public string Iban { get; set; }
	}
	
	/// <summary>
	/// Identifying information for transferring money to or from an international bank account via wire transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumbersInternationalNullable : NumbersInternational
	{
	}
	
	/// <summary>
	/// Originator and their status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Originator
	{
		
		/// <summary>
		/// Originatorâ€™s client ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Originatorâ€™s diligence status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_diligence_status")]
		public DetailedOriginatorTransfer_diligence_status Transfer_diligence_status { get; set; }
	}
	
	/// <summary>
	/// `investment:` Investment account.
	///
	///`credit:` Credit card
	///
	///`depository:` Depository account
	///
	///`loan:` Loan account
	///
	///`payroll:` Payroll account
	///
	///`other:` Non-specified account type
	///
	///See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OverrideAccountType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		investment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		depository = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	/// <summary>
	/// Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OverrideAccounts
	{
		
		/// <summary>
		/// ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="force_available_balance")]
		public double Force_available_balance { get; set; }
		
		/// <summary>
		/// Specify the holdings on the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holdings")]
		public HoldingsOverride Holdings { get; set; }
		
		/// <summary>
		/// Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public OwnerOverride Identity { get; set; }
		
		/// <summary>
		/// Specify payroll data on the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income")]
		public IncomeOverride Income { get; set; }
		
		/// <summary>
		/// The `inflow_model` allows you to model a test account that receives regular income or make regular payments on a loan. Any transactions generated by the `inflow_model` will appear in addition to randomly generated test data or transactions specified by `override_accounts`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inflow_model")]
		public InflowModel Inflow_model { get; set; }
		
		/// <summary>
		/// Specify the list of investments transactions on the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="investment_transactions")]
		public Investments_TransactionsOverride Investment_transactions { get; set; }
		
		/// <summary>
		/// Used to configure Sandbox test data for the Liabilities product
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="liability")]
		public LiabilityOverride Liability { get; set; }
		
		/// <summary>
		/// Allows specifying the metadata of the test account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Account and bank identifier number data used to configure the test account. All values are optional.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numbers")]
		public Numbers Numbers { get; set; }
		
		/// <summary>
		/// If provided, the account will start with this amount as the current balance.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="starting_balance")]
		public double Starting_balance { get; set; }
		
		/// <summary>
		/// See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public System.Nullable<OverrideAccountsSubtype> Subtype { get; set; }
		
		/// <summary>
		/// Specify the list of transactions on the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public TransactionOverride[] Transactions { get; set; }
		
		/// <summary>
		/// `investment:` Investment account.
		///
		///`credit:` Credit card
		///
		///`depository:` Depository account
		///
		///`loan:` Loan account
		///
		///`payroll:` Payroll account
		///
		///`other:` Non-specified account type
		///
		///See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public OverrideAccountType Type { get; set; }
	}
	
	/// <summary>
	/// Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OwnerOverride
	{
		
		/// <summary>
		/// Data about the various addresses associated with the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// A list of email addresses associated with the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. Note that the same name data will be used for all accounts associated with an Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="names")]
		public string[] Names { get; set; }
		
		/// <summary>
		/// A list of phone numbers associated with the account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OverrideAccountsSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401a")]
		_401a = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="401k")]
		_401k = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="403B")]
		_403B = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="457b")]
		_457b = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="529")]
		_529 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		brokerage = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash isa")]
		cash_isa = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crypto exchange")]
		crypto_exchange = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="education savings account")]
		education_savings_account = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebt = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed annuity")]
		fixed_annuity = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gic = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="health reimbursement arrangement")]
		health_reimbursement_arrangement = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hsa = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		isa = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ira = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lif = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="life insurance")]
		life_insurance = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lira = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrif = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lrsp = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-custodial wallet")]
		nonMinuscustodial_wallet = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="non-taxable brokerage account")]
		nonMinustaxable_brokerage_account = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other insurance")]
		other_insurance = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other annuity")]
		other_annuity = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prif = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rdsp = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resp = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rlif = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrif = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pension = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="profit sharing plan")]
		profit_sharing_plan = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		retirement = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		roth = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="roth 401k")]
		roth_401k = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rrsp = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sep ira")]
		sep_ira = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="simple ira")]
		simple_ira = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sipp = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="stock plan")]
		stock_plan = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="thrift savings plan")]
		thrift_savings_plan = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tfsa = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trust = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ugma = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utma = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="variable annuity")]
		variable_annuity = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="credit card")]
		credit_card = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paypal = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cd = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checking = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		savings = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="money market")]
		money_market = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prepaid = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		auto = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		business = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		commercial = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		construction = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		consumer = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="home equity")]
		home_equity = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loan = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mortgage = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		overdraft = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="line of credit")]
		line_of_credit = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		student = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cash management")]
		cash_management = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		keogh = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mutual fund")]
		mutual_fund = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recurring = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rewards = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="safe deposit")]
		safe_deposit = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sarsep = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		payroll = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 73,
	}
	
	/// <summary>
	/// Data to populate as test transaction data. If not specified, random transactions will be generated instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionOverride
	{
		
		/// <summary>
		/// The transaction amount. Can be negative.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// The ISO-4217 format currency code for the transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Posted dates in the past or present will result in posted transactions; posted dates in the future will result in pending transactions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_posted")]
		public System.DateOnly Date_posted { get; set; }
		
		/// <summary>
		/// The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transactions in Sandbox will move from pending to posted once their transaction date has been reached. If a `date_transacted` is not provided by the institution, a transaction date may be available in the [`authorized_date`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-authorized-date) field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_transacted")]
		public System.DateOnly Date_transacted { get; set; }
		
		/// <summary>
		/// The transaction description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// How an asset is owned.
	///
	///`association`: Ownership by a corporation, partnership, or unincorporated association, including for-profit and not-for-profit organizations.
	///`individual`: Ownership by an individual.
	///`joint`: Joint ownership by multiple parties.
	///`trust`: Ownership by a revocable or irrevocable trust.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OwnershipType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		individual = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		joint = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		association = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trust = 4,
	}
	
	/// <summary>
	/// Field describing whether the associated address is a post office box. Will be `yes` when a P.O. box is detected, `no` when Plaid confirmed the address is not a P.O. box, and `no_data` when Plaid was not able to determine if the address is a P.O. box.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum POBoxStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Request schema for `/partner/customer/create`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerCreateRequest
	{
		
		/// <summary>
		/// The end customer's address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PartnerEndCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The name of the end customer's application. This will be shown to end users when they go through the Plaid Link flow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="application_name")]
		public string Application_name { get; set; }
		
		/// <summary>
		/// Assets under management for the given end customer. Required for end customers with monthly service commitments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assets_under_management")]
		public PartnerEndCustomerAssetsUnderManagement Assets_under_management { get; set; }
		
		/// <summary>
		/// The billing contact for the end customer. Defaults to partner's billing contact if omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_contact")]
		public PartnerEndCustomerBillingContact Billing_contact { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The company name of the end customer being created. This will be used to display the end customer in the Plaid Dashboard. It will not be shown to end users.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// If `true`, the end customer's default Link customization will be set to match the partner's. You can always change the end customer's Link customization in the Plaid Dashboard. See the [Link Customization docs](https://plaid.com/docs/link/customization/) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_link_customization")]
		public System.Nullable<System.Boolean> Create_link_customization { get; set; }
		
		/// <summary>
		/// This information is public. Users of your app will see this information when managing connections between your app and their bank accounts in Plaid Portal. Defaults to partner's customer support info if omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer_support_info")]
		public PartnerEndCustomerCustomerSupportInfo Customer_support_info { get; set; }
		
		/// <summary>
		/// Denotes whether the partner has forwarded the Plaid bank addendum to the end customer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_bank_addendum_completed")]
		public bool Is_bank_addendum_completed { get; set; }
		
		/// <summary>
		/// Denotes whether or not the partner has completed attestation of diligence for the end customer to be created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_diligence_attested")]
		public bool Is_diligence_attested { get; set; }
		
		/// <summary>
		/// The end customer's legal name. This will be shared with financial institutions as part of the OAuth registration process. It will not be shown to end users.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_entity_name")]
		public string Legal_entity_name { get; set; }
		
		/// <summary>
		/// Base64-encoded representation of the end customer's logo. Must be a PNG of size 1024x1024 under 4MB. The logo will be shared with financial institutions and shown to the end user during Link flows. A logo is required if `create_link_customization` is `true`. If `create_link_customization` is `false` and the logo is omitted, a stock logo will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo")]
		public string Logo { get; set; }
		
		/// <summary>
		/// The products to be enabled for the end customer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="products")]
		public Products[] Products { get; set; }
		
		/// <summary>
		/// A list of URIs indicating the destination(s) where a user can be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. URIs should not contain any query parameters. When used in Production or Development, URIs must use https. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. To modify redirect URIs for an end customer after creating them, go to the end customer's [API page](https://dashboard.plaid.com/team/api) in the Dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirect_uris")]
		public string[] Redirect_uris { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The technical contact for the end customer. Defaults to partner's technical contact if omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="technical_contact")]
		public PartnerEndCustomerTechnicalContact Technical_contact { get; set; }
		
		/// <summary>
		/// The end customer's website.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	/// <summary>
	/// The end customer's address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerAddress
	{
		
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// ISO-3166-1 alpha-2 country code standard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// Assets under management for the given end customer. Required for end customers with monthly service commitments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerAssetsUnderManagement
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
	}
	
	/// <summary>
	/// The billing contact for the end customer. Defaults to partner's billing contact if omitted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerBillingContact
	{
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="family_name")]
		public string Family_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="given_name")]
		public string Given_name { get; set; }
	}
	
	/// <summary>
	/// This information is public. Users of your app will see this information when managing connections between your app and their bank accounts in Plaid Portal. Defaults to partner's customer support info if omitted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerCustomerSupportInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="contact_url")]
		public string Contact_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="link_update_url")]
		public string Link_update_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// The technical contact for the end customer. Defaults to partner's technical contact if omitted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerTechnicalContact
	{
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="family_name")]
		public string Family_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="given_name")]
		public string Given_name { get; set; }
	}
	
	/// <summary>
	/// Response schema for `/partner/customer/create`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerCreateResponse
	{
		
		/// <summary>
		/// The details for the newly created end customer, including secrets for non-Production environments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_customer")]
		public PartnerEndCustomerWithSecrets End_customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The details for the newly created end customer, including secrets for non-Production environments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerWithSecrets
	{
	}
	
	/// <summary>
	/// Request schema for `/partner/customer/enable`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerEnableRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_customer_client_id")]
		public string End_customer_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Response schema for `/partner/customer/enable`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerEnableResponse
	{
		
		/// <summary>
		/// The end customer's secret key for the Production environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="production_secret")]
		public string Production_secret { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request schema for `/partner/customer/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_customer_client_id")]
		public string End_customer_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Response schema for `/partner/customer/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerGetResponse
	{
		
		/// <summary>
		/// The details for an end customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_customer")]
		public PartnerEndCustomer End_customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The details for an end customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomer
	{
		
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The status of the given end customer.
		///
		///`UNDER_REVIEW`: The end customer has been created and enabled in the non-Production environments. The end customer must be manually reviewed by the Plaid team before it can be enabled in production, at which point its status will automatically transition to `PENDING_ENABLEMENT` or `DENIED`.
		///
		///`PENDING_ENABLEMENT`: The end customer is ready to be enabled in the Production environment. Call the `/partner/customer/enable` endpoint to enable the end customer in Production.
		///
		///`ACTIVE`: The end customer has been enabled in all environments.
		///
		///`DENIED`: The end customer has been created and enabled in the non-Production environments, but it did not pass review by the Plaid team and therefore cannot be enabled in the Production environment. Talk to your Account Manager for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<PartnerEndCustomerStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDER_REVIEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ENABLEMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENIED = 3,
	}
	
	/// <summary>
	/// Request schema for `/partner/customer/oauth_institutions/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerOAuthInstitutionsGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_customer_client_id")]
		public string End_customer_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Response schema for `/partner/customer/oauth_institutions/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerOAuthInstitutionsGetResponse
	{
		
		/// <summary>
		/// The status of the addendum to the Plaid MSA ("flowdown") for the end customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flowdown_status")]
		public System.Nullable<PartnerCustomerOAuthInstitutionsGetResponseFlowdown_status> Flowdown_status { get; set; }
		
		/// <summary>
		/// The OAuth institutions with which the end customer's application is being registered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="institutions")]
		public PartnerEndCustomerOAuthInstitution[] Institutions { get; set; }
		
		/// <summary>
		/// The status of the end customer's security questionnaire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="questionnaire_status")]
		public System.Nullable<PartnerCustomerOAuthInstitutionsGetResponseQuestionnaire_status> Questionnaire_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerCustomerOAuthInstitutionsGetResponseFlowdown_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEGOTIATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
	}
	
	/// <summary>
	/// The OAuth registration information for an institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerOAuthInstitution
	{
		
		/// <summary>
		/// The date on which non-OAuth Item adds will no longer be supported for this institution, or an empty string if no such date has been set by the institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="classic_disablement_date")]
		public string Classic_disablement_date { get; set; }
		
		/// <summary>
		/// Registration statuses by environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public PartnerEndCustomerOAuthInstitutionEnvironments Environments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date on which the end customer's application was approved by the institution, or an empty string if their application has not yet been approved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="production_enablement_date")]
		public string Production_enablement_date { get; set; }
	}
	
	/// <summary>
	/// Registration statuses by environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerOAuthInstitutionEnvironments
	{
		
		/// <summary>
		/// The registration status for the end customer's application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="development")]
		public System.Nullable<PartnerEndCustomerOAuthInstitutionEnvironmentsDevelopment> Development { get; set; }
		
		/// <summary>
		/// The registration status for the end customer's application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="production")]
		public PartnerEndCustomerOAuthInstitutionEnvironmentsDevelopment Production { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerOAuthInstitutionEnvironmentsDevelopment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTENTION_REQUIRED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerCustomerOAuthInstitutionsGetResponseQuestionnaire_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECEIVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 2,
	}
	
	/// <summary>
	/// Request schema for `/partner/customer/remove`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerRemoveRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_customer_client_id")]
		public string End_customer_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Response schema for `/partner/customer/remove`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerCustomerRemoveResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The status of the addendum to the Plaid MSA ("flowdown") for the end customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerFlowdownStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEGOTIATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
	}
	
	/// <summary>
	/// The registration status for the end customer's application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerOAuthInstitutionApplicationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTENTION_REQUIRED = 4,
	}
	
	/// <summary>
	/// The OAuth status of the update
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerOAuthStatusUpdatedValues
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="not-started")]
		notMinusstarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approved = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="attention-required")]
		attentionMinusrequired = 4,
	}
	
	/// <summary>
	/// The webhook of type `PARTNER` and code `END_CUSTOMER_OAUTH_STATUS_UPDATED` will be fired when a partner's end customer has an update on their OAuth registration status with an institution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerOAuthStatusUpdatedWebhook
	{
		
		/// <summary>
		/// The client ID of the end customer
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_customer_client_id")]
		public string End_customer_client_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The institution ID
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// The institution name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_name")]
		public string Institution_name { get; set; }
		
		/// <summary>
		/// The OAuth status of the update
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PartnerEndCustomerOAuthStatusUpdatedWebhookStatus Status { get; set; }
		
		/// <summary>
		/// `END_CUSTOMER_OAUTH_STATUS_UPDATED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `PARTNER`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerOAuthStatusUpdatedWebhookStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="not-started")]
		notMinusstarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approved = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="attention-required")]
		attentionMinusrequired = 4,
	}
	
	/// <summary>
	/// The status of the end customer's security questionnaire.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartnerEndCustomerQuestionnaireStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECEIVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 2,
	}
	
	/// <summary>
	/// The secrets for the newly created end customer in non-Production environments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartnerEndCustomerSecrets
	{
		
		/// <summary>
		/// The end customer's secret key for the Development environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="development")]
		public string Development { get; set; }
		
		/// <summary>
		/// The end customer's secret key for the Sandbox environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sandbox")]
		public string Sandbox { get; set; }
	}
	
	/// <summary>
	/// A value from a MISMO defined list that identifies the role that the party plays in the transaction. Parties may be either a person or legal entity. A party may play multiple roles in a transaction.A value from a MISMO defined list that identifies the role that the party plays in the transaction. Parties may be either a person or legal entity. A party may play multiple roles in a transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PartyRoleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Borrower = 0,
	}
	
	/// <summary>
	/// The amount and currency of a payment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentAmount
	{
		
		/// <summary>
		/// The ISO-4217 currency code of the payment. For standing orders and payment consents, `"GBP"` must be used.
		/// Required
		/// Min length: 3
		/// Max length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		[System.ComponentModel.DataAnnotations.Length(3, 3)]
		public PaymentAmountCurrency Currency { get; set; }
		
		/// <summary>
		/// The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public double Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentAmountCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 5,
	}
	
	/// <summary>
	/// The amount and currency of a payment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentAmountNullable
	{
		
		/// <summary>
		/// The ISO-4217 currency code of the payment. For standing orders and payment consents, `"GBP"` must be used.
		/// Required
		/// Min length: 3
		/// Max length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		[System.ComponentModel.DataAnnotations.Length(3, 3)]
		public PaymentAmountCurrency Currency { get; set; }
		
		/// <summary>
		/// The amount of the payment. Must contain at most two digits of precision e.g. `1.23`.
		/// Required
		/// Minimum: 0.01
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		[System.ComponentModel.DataAnnotations.Range(0.01, System.Double.MaxValue)]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// The amount and currency of a payment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentAmountRefunded : PaymentAmountNullable
	{
	}
	
	/// <summary>
	/// The amount and currency of a payment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentAmountToRefund : PaymentAmountNullable
	{
	}
	
	/// <summary>
	/// The channel used to make a payment.
	///`online:` transactions that took place online.
	///
	///`in store:` transactions that were made at a physical location.
	///
	///`other:` transactions that relate to banks, e.g. fees or deposits.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentChannel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		online = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in store")]
		in_store = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	/// <summary>
	/// Maximum amount of a single payment initiated using the payment consent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentConsentMaxPaymentAmount
	{
	}
	
	/// <summary>
	/// Where the payment consent period should start.
	///
	///`CALENDAR`: line up with a calendar.
	///
	///`CONSENT`: on the date of consent creation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentConsentPeriodicAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CALENDAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSENT = 1,
	}
	
	/// <summary>
	/// Defines consent payments limitations per period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentConsentPeriodicAmount
	{
		
		/// <summary>
		/// Where the payment consent period should start.
		///
		///`CALENDAR`: line up with a calendar.
		///
		///`CONSENT`: on the date of consent creation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alignment")]
		public PaymentConsentPeriodicAlignment Alignment { get; set; }
		
		/// <summary>
		/// Maximum cumulative amount for all payments in the specified interval.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public PaymentConsentPeriodicAmountAmount Amount { get; set; }
		
		/// <summary>
		/// Payment consent periodic interval.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interval")]
		public PaymentConsentPeriodicAmountInterval Interval { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentConsentPeriodicAmountInterval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR = 3,
	}
	
	/// <summary>
	/// Maximum cumulative amount for all payments in the specified interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentConsentPeriodicAmountAmount
	{
	}
	
	/// <summary>
	/// Payment consent periodic interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentConsentPeriodicInterval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR = 3,
	}
	
	/// <summary>
	/// Life span for the payment consent. After the `to` date the payment consent expires and can no longer be used for payment initiation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentConsentValidDateTime
	{
		
		/// <summary>
		/// The date and time from which the consent should be active, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from")]
		public System.Nullable<System.DateTimeOffset> From { get; set; }
		
		/// <summary>
		/// The date and time at which the consent expires, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to")]
		public System.Nullable<System.DateTimeOffset> To { get; set; }
	}
	
	/// <summary>
	/// The optional address of the payment recipient. Required by most institutions outside of the UK.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationAddress
	{
		
		/// <summary>
		/// The city where the recipient is located. Maximum of 35 characters.
		/// Required
		/// Min length: 1
		/// Max length: 35
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		[System.ComponentModel.DataAnnotations.Length(1, 35)]
		public string City { get; set; }
		
		/// <summary>
		/// The ISO 3166-1 alpha-2 country code where the recipient is located.
		/// Required
		/// Min length: 2
		/// Max length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.Length(2, 2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code where the recipient is located. Maximum of 16 characters.
		/// Required
		/// Min length: 1
		/// Max length: 16
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		[System.ComponentModel.DataAnnotations.Length(1, 16)]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// An array of length 1-2 representing the street address where the recipient is located. Maximum of 70 characters.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Street { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationConsent defines a payment initiation consent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsent
	{
		
		/// <summary>
		/// The consent ID.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// Limitations that will be applied to payments initiated using the payment consent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public PaymentInitiationConsentConstraints Constraints { get; set; }
		
		/// <summary>
		/// Consent creation timestamp, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// The ID of the recipient the payment consent is for.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// A reference for the payment consent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// An array of payment consent scopes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		public PaymentInitiationConsentScope[] Scopes { get; set; }
		
		/// <summary>
		/// The status of the payment consent.
		///
		///`UNAUTHORISED`: Consent created, but requires user authorisation.
		///
		///`REJECTED`: Consent authorisation was rejected by the user and/or the bank.
		///
		///`AUTHORISED`: Consent is active and ready to be used.
		///
		///`REVOKED`: Consent has been revoked and can no longer be used.
		///
		///`EXPIRED`: Consent is no longer valid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationConsentStatus Status { get; set; }
	}
	
	/// <summary>
	/// Limitations that will be applied to payments initiated using the payment consent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentConstraints
	{
		
		/// <summary>
		/// Maximum amount of a single payment initiated using the payment consent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_payment_amount")]
		public PaymentConsentMaxPaymentAmount Max_payment_amount { get; set; }
		
		/// <summary>
		/// A list of amount limitations per period of time.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="periodic_amounts")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public PaymentConsentPeriodicAmount[] Periodic_amounts { get; set; }
		
		/// <summary>
		/// Life span for the payment consent. After the `to` date the payment consent expires and can no longer be used for payment initiation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valid_date_time")]
		public PaymentConsentValidDateTime Valid_date_time { get; set; }
	}
	
	/// <summary>
	/// Payment consent scope. Defines possible directions for payments made with the given consent.
	///
	///`ME_TO_ME`: Allows moving money between accounts owned by the same user.
	///
	///`EXTERNAL`: Allows initiating payments from the user's account to third parties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationConsentScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ME_TO_ME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationConsentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAUTHORISED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHORISED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVOKED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 4,
	}
	
	/// <summary>
	/// PaymentInitiationConsentCreateRequest defines the request schema for `/payment_initiation/consent/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Limitations that will be applied to payments initiated using the payment consent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public PaymentInitiationConsentConstraints Constraints { get; set; }
		
		/// <summary>
		/// Additional payment consent options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public ExternalPaymentInitiationConsentOptions Options { get; set; }
		
		/// <summary>
		/// The ID of the recipient the payment consent is for. The created consent can be used to transfer funds to this recipient only.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// A reference for the payment consent. This must be an alphanumeric string with at most 18 characters and must not contain any special characters.
		/// Required
		/// Min length: 1
		/// Max length: 18
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		[System.ComponentModel.DataAnnotations.Length(1, 18)]
		public string Reference { get; set; }
		
		/// <summary>
		/// An array of payment consent scopes.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scopes")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public PaymentInitiationConsentScope[] Scopes { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationConsentCreateResponse defines the response schema for `/payment_initiation/consent/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentCreateResponse
	{
		
		/// <summary>
		/// A unique ID identifying the payment consent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The status of the payment consent.
		///
		///`UNAUTHORISED`: Consent created, but requires user authorisation.
		///
		///`REJECTED`: Consent authorisation was rejected by the user and/or the bank.
		///
		///`AUTHORISED`: Consent is active and ready to be used.
		///
		///`REVOKED`: Consent has been revoked and can no longer be used.
		///
		///`EXPIRED`: Consent is no longer valid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationConsentStatus Status { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationConsentGetRequest defines the request schema for `/payment_initiation/consent/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The `consent_id` returned from `/payment_initiation/consent/create`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationConsentGetResponse defines the response schema for `/payment_initation/consent/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentGetResponse
	{
	}
	
	/// <summary>
	/// PaymentInitiationConsentPaymentExecuteRequest defines the request schema for `/payment_initiation/consent/payment/execute`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentPaymentExecuteRequest
	{
		
		/// <summary>
		/// The amount and currency of a payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public PaymentAmount Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The consent ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique consent payment. Maximum of 128 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a consent payment fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single payment is created. If the request was successfully processed, it will prevent any payment that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationConsentPaymentExecuteResponse defines the response schema for `/payment_initiation/consent/payment/execute`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentPaymentExecuteResponse
	{
		
		/// <summary>
		/// A unique ID identifying the payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The status of the payment.
		///
		///`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.
		///
		///`PAYMENT_STATUS_INITIATED`: The payment has been successfully authorised and accepted by the financial institution but has not been executed.
		///
		///`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.
		///
		///`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.
		///
		///`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.
		///
		///`PAYMENT_STATUS_AUTHORISING`: The payment is currently being processed. The payment will automatically exit this state when the financial institution has authorised the transaction.
		///
		///`PAYMENT_STATUS_CANCELLED`: The payment was cancelled during authorisation.
		///
		///`PAYMENT_STATUS_EXECUTED`: The payment has been successfully executed and is considered complete.
		///
		///`PAYMENT_STATUS_SETTLED`: The payment has settled and funds are available for use. Payment settlement can only be guaranteed by using Plaid virtual accounts. A payment will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`PAYMENT_STATUS_ESTABLISHED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		///
		///`PAYMENT_STATUS_REJECTED`: The payment was rejected by the financial institution.
		///
		///Deprecated:
		///These statuses will be removed in a future release.
		///
		///`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
		///
		///`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.
		///
		///`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationConsentPaymentExecuteResponseStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationConsentPaymentExecuteResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INPUT_NEEDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INITIATED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INSUFFICIENT_FUNDS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_BLOCKED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_UNKNOWN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_EXECUTED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_SETTLED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_AUTHORISING = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_CANCELLED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_ESTABLISHED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_REJECTED = 13,
	}
	
	/// <summary>
	/// PaymentInitiationConsentRevokeRequest defines the request schema for `/payment_initiation/consent/revoke`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentRevokeRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The consent ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationConsentRevokeResponse defines the response schema for `/payment_initation/consent/revoke`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationConsentRevokeResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An optional object used to restrict the accounts used for payments. If provided, the end user will be able to send payments only from the specified bank account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationOptionalRestrictionBacs : RecipientBACS
	{
	}
	
	/// <summary>
	/// PaymentInitiationPayment defines a payment initiation payment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPayment
	{
		
		/// <summary>
		/// The value of the reference sent to the bank after adjustment to pass bank validation rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjusted_reference")]
		public string Adjusted_reference { get; set; }
		
		/// <summary>
		/// Payment scheme. If not specified - the default in the region will be used (e.g. `SEPA_CREDIT_TRANSFER` for EU). Using unsupported values will result in a failed payment.
		///
		///`LOCAL_DEFAULT`: The default payment scheme for the selected market and currency will be used.
		///
		///`LOCAL_INSTANT`: The instant payment scheme for the selected market and currency will be used (if applicable). Fees may be applied by the institution. If the market does not support an Instant Scheme (e.g. Denmark), the default in the region will be used.
		///
		///`SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.
		///
		///`SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment within the SEPA area. May involve additional fees and may not be available at some banks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjusted_scheme")]
		public System.Nullable<PaymentInitiationPaymentAdjusted_scheme> Adjusted_scheme { get; set; }
		
		/// <summary>
		/// The amount and currency of a payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public PaymentAmount Amount { get; set; }
		
		/// <summary>
		/// The amount and currency of a payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_refunded")]
		public PaymentAmountRefunded Amount_refunded { get; set; }
		
		/// <summary>
		/// An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public SenderBACSNullable Bacs { get; set; }
		
		/// <summary>
		/// The payment consent ID that this payment was initiated with. Is present only when payment was initiated using the payment consent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the sender, if specified in the `/payment_initiation/payment/create` call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
		
		/// <summary>
		/// The date and time of the last time the `status` was updated, in IS0 8601 format
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_status_update")]
		public System.DateTimeOffset Last_status_update { get; set; }
		
		/// <summary>
		/// The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// The ID of the recipient
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// A reference for the payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// Details about external payment refund
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refund_details")]
		public ExternalPaymentRefundDetails Refund_details { get; set; }
		
		/// <summary>
		/// Refund IDs associated with the payment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refund_ids")]
		public string[] Refund_ids { get; set; }
		
		/// <summary>
		/// The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public ExternalPaymentScheduleGet Schedule { get; set; }
		
		/// <summary>
		/// Payment scheme. If not specified - the default in the region will be used (e.g. `SEPA_CREDIT_TRANSFER` for EU). Using unsupported values will result in a failed payment.
		///
		///`LOCAL_DEFAULT`: The default payment scheme for the selected market and currency will be used.
		///
		///`LOCAL_INSTANT`: The instant payment scheme for the selected market and currency will be used (if applicable). Fees may be applied by the institution. If the market does not support an Instant Scheme (e.g. Denmark), the default in the region will be used.
		///
		///`SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.
		///
		///`SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment within the SEPA area. May involve additional fees and may not be available at some banks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheme")]
		public System.Nullable<PaymentInitiationPaymentScheme> Scheme { get; set; }
		
		/// <summary>
		/// The status of the payment.
		///
		///`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.
		///
		///`PAYMENT_STATUS_INITIATED`: The payment has been successfully authorised and accepted by the financial institution but has not been executed.
		///
		///`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.
		///
		///`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.
		///
		///`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.
		///
		///`PAYMENT_STATUS_AUTHORISING`: The payment is currently being processed. The payment will automatically exit this state when the financial institution has authorised the transaction.
		///
		///`PAYMENT_STATUS_CANCELLED`: The payment was cancelled during authorisation.
		///
		///`PAYMENT_STATUS_EXECUTED`: The payment has been successfully executed and is considered complete.
		///
		///`PAYMENT_STATUS_SETTLED`: The payment has settled and funds are available for use. Payment settlement can only be guaranteed by using Plaid virtual accounts. A payment will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`PAYMENT_STATUS_ESTABLISHED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		///
		///`PAYMENT_STATUS_REJECTED`: The payment was rejected by the financial institution.
		///
		///Deprecated:
		///These statuses will be removed in a future release.
		///
		///`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
		///
		///`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.
		///
		///`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationConsentPaymentExecuteResponseStatus Status { get; set; }
		
		/// <summary>
		/// The transaction ID that this payment is associated with, if any. This is present only when a payment was initiated using virtual accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
		
		/// <summary>
		/// The EMI (E-Money Institution) wallet that this payment is associated with, if any. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		public string Wallet_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationPaymentAdjusted_scheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_DEFAULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_INSTANT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER_INSTANT = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationPaymentScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_DEFAULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_INSTANT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER_INSTANT = 4,
	}
	
	/// <summary>
	/// PaymentInitiationPaymentCreateRequest defines the request schema for `/payment_initiation/payment/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentCreateRequest
	{
		
		/// <summary>
		/// The amount and currency of a payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public PaymentAmount Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Additional payment options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public ExternalPaymentOptions Options { get; set; }
		
		/// <summary>
		/// The ID of the recipient the payment is for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// A reference for the payment. This must be an alphanumeric string with at most 18 characters and must not contain any special characters (since not all institutions support them).
		///In order to track settlement via Payment Confirmation, each payment must have a unique reference. If the reference provided through the API is not unique, Plaid will adjust it.
		///Both the originally provided and automatically adjusted references (if any) can be found in the `reference` and `adjusted_reference` fields, respectively.
		/// Required
		/// Min length: 1
		/// Max length: 18
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		[System.ComponentModel.DataAnnotations.Length(1, 18)]
		public string Reference { get; set; }
		
		/// <summary>
		/// The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public ExternalPaymentScheduleRequest Schedule { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentCreateResponse defines the response schema for `/payment_initiation/payment/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentCreateResponse
	{
		
		/// <summary>
		/// A unique ID identifying the payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// For a payment returned by this endpoint, there is only one possible value:
		///
		///`PAYMENT_STATUS_INPUT_NEEDED`: The initial phase of the payment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationPaymentCreateResponseStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationPaymentCreateResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INPUT_NEEDED = 0,
	}
	
	/// <summary>
	/// For a payment returned by this endpoint, there is only one possible value:
	///
	///`PAYMENT_STATUS_INPUT_NEEDED`: The initial phase of the payment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationPaymentCreateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INPUT_NEEDED = 0,
	}
	
	/// <summary>
	/// PaymentInitiationPaymentGetRequest defines the request schema for `/payment_initiation/payment/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The `payment_id` returned from `/payment_initiation/payment/create`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentGetResponse defines the response schema for `/payment_initation/payment/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentGetResponse : PaymentInitiationPayment
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentListRequest defines the request schema for `/payment_initiation/payment/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The consent ID. If specified, only payments, executed using this consent, will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consent_id")]
		public string Consent_id { get; set; }
		
		/// <summary>
		/// The maximum number of payments to return. If `count` is not specified, a maximum of 10 payments will be returned, beginning with the most recent payment before the cursor (if specified).
		/// Minimum: 1
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 200)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string in RFC 3339 format (i.e. "2019-12-06T22:35:49Z"). Only payments created before the cursor will be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public System.Nullable<System.DateTimeOffset> Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentListResponse defines the response schema for `/payment_initiation/payment/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentListResponse
	{
		
		/// <summary>
		/// The value that, when used as the optional `cursor` parameter to `/payment_initiation/payment/list`, will return the next unreturned payment as its first payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public System.Nullable<System.DateTimeOffset> Next_cursor { get; set; }
		
		/// <summary>
		/// An array of payments that have been created, associated with the given `client_id`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payments")]
		public PaymentInitiationPayment[] Payments { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentReverseRequest defines the request schema for `/payment_initiation/payment/reverse`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentReverseRequest
	{
		
		/// <summary>
		/// The amount and currency of a payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public PaymentAmountToRefund Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique wallet transaction. Maximum of 128 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a wallet transaction fails due to a network connection error, then after a minimum delay of one minute, you can retry the request with the same idempotency key to guarantee that only a single wallet transaction is created. If the request was successfully processed, it will prevent any transaction that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// The ID of the payment to reverse
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// A reference for the refund. This must be an alphanumeric string with 6 to 18 characters and must not contain any special characters or spaces.
		/// Required
		/// Min length: 6
		/// Max length: 18
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		[System.ComponentModel.DataAnnotations.Length(6, 18)]
		public string Reference { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentReverseResponse defines the response schema for `/payment_initation/payment/reverse`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentReverseResponse
	{
		
		/// <summary>
		/// A unique ID identifying the refund
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refund_id")]
		public string Refund_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The status of the transaction.
		///
		///`AUTHORISING`: The transaction is being processed for validation and compliance.
		///
		///`INITIATED`: The transaction has been initiated and is currently being processed.
		///
		///`EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.
		///
		///`SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`FAILED`: The transaction failed to process successfully. This is a terminal status.
		///
		///`BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationPaymentReverseResponseStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationPaymentReverseResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHORISING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SETTLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCKED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
	}
	
	/// <summary>
	/// The status of the payment.
	///
	///`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.
	///
	///`PAYMENT_STATUS_INITIATED`: The payment has been successfully authorised and accepted by the financial institution but has not been executed.
	///
	///`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.
	///
	///`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.
	///
	///`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.
	///
	///`PAYMENT_STATUS_AUTHORISING`: The payment is currently being processed. The payment will automatically exit this state when the financial institution has authorised the transaction.
	///
	///`PAYMENT_STATUS_CANCELLED`: The payment was cancelled during authorisation.
	///
	///`PAYMENT_STATUS_EXECUTED`: The payment has been successfully executed and is considered complete.
	///
	///`PAYMENT_STATUS_SETTLED`: The payment has settled and funds are available for use. Payment settlement can only be guaranteed by using Plaid virtual accounts. A payment will typically settle within seconds to several days, depending on which payment rail is used.
	///
	///`PAYMENT_STATUS_ESTABLISHED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
	///
	///`PAYMENT_STATUS_REJECTED`: The payment was rejected by the financial institution.
	///
	///Deprecated:
	///These statuses will be removed in a future release.
	///
	///`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
	///
	///`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.
	///
	///`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentInitiationPaymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INPUT_NEEDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INITIATED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_INSUFFICIENT_FUNDS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_BLOCKED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_UNKNOWN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_EXECUTED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_SETTLED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_AUTHORISING = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_CANCELLED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_ESTABLISHED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_STATUS_REJECTED = 13,
	}
	
	/// <summary>
	/// PaymentInitiationPaymentTokenCreateRequest defines the request schema for `/payment_initiation/payment/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentTokenCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The `payment_id` returned from `/payment_initiation/payment/create`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationPaymentTokenCreateResponse defines the response schema for `/payment_initiation/payment/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationPaymentTokenCreateResponse
	{
		
		/// <summary>
		/// A `payment_token` that can be provided to Link initialization to enter the payment initiation flow
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_token")]
		public string Payment_token { get; set; }
		
		/// <summary>
		/// The date and time at which the token will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `payment_token` expires after 15 minutes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_token_expiration_time")]
		public System.DateTimeOffset Payment_token_expiration_time { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipient defines a payment initiation recipient
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipient
	{
		
		/// <summary>
		/// The optional address of the payment recipient. Required by most institutions outside of the UK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PaymentInitiationAddress Address { get; set; }
		
		/// <summary>
		/// An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public RecipientBACSNullable Bacs { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
		
		/// <summary>
		/// The name of the recipient.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The ID of the recipient.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipientCreateRequest defines the request schema for `/payment_initiation/recipient/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipientCreateRequest
	{
		
		/// <summary>
		/// The optional address of the payment recipient. Required by most institutions outside of the UK.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PaymentInitiationAddress Address { get; set; }
		
		/// <summary>
		/// An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public RecipientBACSNullable Bacs { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN) for the recipient. If BACS data is not provided, an IBAN is required.
		/// Min length: 15
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		[System.ComponentModel.DataAnnotations.Length(15, 34)]
		public string Iban { get; set; }
		
		/// <summary>
		/// The name of the recipient. We recommend using strings of length 18 or less and avoid special characters to ensure compatibility with all institutions.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipientCreateResponse defines the response schema for `/payment_initation/recipient/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipientCreateResponse
	{
		
		/// <summary>
		/// A unique ID identifying the recipient
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipientGetRequest defines the request schema for `/payment_initiation/recipient/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipientGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID of the recipient
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipientGetResponse defines the response schema for `/payment_initiation/recipient/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipientGetResponse : PaymentInitiationRecipient
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipientListRequest defines the request schema for `/payment_initiation/recipient/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipientListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentInitiationRecipientListResponse defines the response schema for `/payment_initiation/recipient/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentInitiationRecipientListResponse
	{
		
		/// <summary>
		/// An array of payment recipients created for Payment Initiation
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PaymentInitiationRecipient[] Recipients { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.
	///
	///If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentMeta
	{
		
		/// <summary>
		/// The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="by_order_of")]
		public string By_order_of { get; set; }
		
		/// <summary>
		/// For transfers, the party that is receiving the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payee")]
		public string Payee { get; set; }
		
		/// <summary>
		/// For transfers, the party that is paying the transaction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payer")]
		public string Payer { get; set; }
		
		/// <summary>
		/// The type of transfer, e.g. 'ACH'
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public string Payment_method { get; set; }
		
		/// <summary>
		/// The name of the payment processor
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_processor")]
		public string Payment_processor { get; set; }
		
		/// <summary>
		/// The ACH PPD ID for the payer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ppd_id")]
		public string Ppd_id { get; set; }
		
		/// <summary>
		/// The payer-supplied description of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The transaction reference number supplied by the financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference_number")]
		public string Reference_number { get; set; }
	}
	
	/// <summary>
	/// PaymentProfileCreateRequest defines the request schema for `/payment_profile/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentProfileCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentProfileCreateResponse defines the response schema for `/payment_profile/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentProfileCreateResponse
	{
		
		/// <summary>
		/// A payment profile token associated with the Payment Profile data that is being requested.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// PaymentProfileGetRequest defines the request schema for `/payment_profile/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentProfileGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A payment profile token associated with the Payment Profile data that is being requested.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentProfileGetResponse defines the response schema for `/payment_profile/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentProfileGetResponse
	{
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Payment Profile was created at
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the time the given Payment Profile was deleted at. Always `null` if the Payment Profile has not been deleted
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deleted_at")]
		public System.Nullable<System.DateTimeOffset> Deleted_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The status of the given Payment Profile.
		///
		///`READY`: This Payment Profile is ready to be used to create transfers using `/transfer/authorization/create` and `/transfer/create`.
		///
		///`PENDING`: This Payment Profile is not ready to be used. Youâ€™ll need to call `/link/token/create` and provide the `payment_profile_token` in the `transfer.payment_profile_token` field to initiate the account linking experience.
		///
		///`REMOVED`: This Payment Profile has been removed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentProfileGetResponseStatus Status { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time the given Payment Profile was updated at
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.DateTimeOffset Updated_at { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentProfileGetResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 2,
	}
	
	/// <summary>
	/// PaymentProfileRemoveRequest defines the request schema for `/payment_profile/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentProfileRemoveRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A payment profile token associated with the Payment Profile data that is being requested.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// PaymentProfileRemoveResponse defines the response schema for `/payment_profile/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentProfileRemoveResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The status of the given Payment Profile.
	///
	///`READY`: This Payment Profile is ready to be used to create transfers using `/transfer/authorization/create` and `/transfer/create`.
	///
	///`PENDING`: This Payment Profile is not ready to be used. Youâ€™ll need to call `/link/token/create` and provide the `payment_profile_token` in the `transfer.payment_profile_token` field to initiate the account linking experience.
	///
	///`REMOVED`: This Payment Profile has been removed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentProfileStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 2,
	}
	
	/// <summary>
	/// Payment scheme. If not specified - the default in the region will be used (e.g. `SEPA_CREDIT_TRANSFER` for EU). Using unsupported values will result in a failed payment.
	///
	///`LOCAL_DEFAULT`: The default payment scheme for the selected market and currency will be used.
	///
	///`LOCAL_INSTANT`: The instant payment scheme for the selected market and currency will be used (if applicable). Fees may be applied by the institution. If the market does not support an Instant Scheme (e.g. Denmark), the default in the region will be used.
	///
	///`SEPA_CREDIT_TRANSFER`: The standard payment to a beneficiary within the SEPA area.
	///
	///`SEPA_CREDIT_TRANSFER_INSTANT`: Instant payment within the SEPA area. May involve additional fees and may not be available at some banks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentScheme
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_DEFAULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL_INSTANT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEPA_CREDIT_TRANSFER_INSTANT = 4,
	}
	
	/// <summary>
	/// Fired when the status of a payment has changed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentStatusUpdateWebhook
	{
		
		/// <summary>
		/// The value of the reference sent to the bank after adjustment to pass bank validation rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjusted_reference")]
		public string Adjusted_reference { get; set; }
		
		/// <summary>
		/// The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="adjusted_start_date")]
		public System.Nullable<System.DateOnly> Adjusted_start_date { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The status of the payment.
		///
		///`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.
		///
		///`PAYMENT_STATUS_INITIATED`: The payment has been successfully authorised and accepted by the financial institution but has not been executed.
		///
		///`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.
		///
		///`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.
		///
		///`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.
		///
		///`PAYMENT_STATUS_AUTHORISING`: The payment is currently being processed. The payment will automatically exit this state when the financial institution has authorised the transaction.
		///
		///`PAYMENT_STATUS_CANCELLED`: The payment was cancelled during authorisation.
		///
		///`PAYMENT_STATUS_EXECUTED`: The payment has been successfully executed and is considered complete.
		///
		///`PAYMENT_STATUS_SETTLED`: The payment has settled and funds are available for use. Payment settlement can only be guaranteed by using Plaid virtual accounts. A payment will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`PAYMENT_STATUS_ESTABLISHED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		///
		///`PAYMENT_STATUS_REJECTED`: The payment was rejected by the financial institution.
		///
		///Deprecated:
		///These statuses will be removed in a future release.
		///
		///`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
		///
		///`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.
		///
		///`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_payment_status")]
		public PaymentInitiationConsentPaymentExecuteResponseStatus New_payment_status { get; set; }
		
		/// <summary>
		/// The status of the payment.
		///
		///`PAYMENT_STATUS_INPUT_NEEDED`: This is the initial state of all payments. It indicates that the payment is waiting on user input to continue processing. A payment may re-enter this state later on if further input is needed.
		///
		///`PAYMENT_STATUS_INITIATED`: The payment has been successfully authorised and accepted by the financial institution but has not been executed.
		///
		///`PAYMENT_STATUS_INSUFFICIENT_FUNDS`: The payment has failed due to insufficient funds.
		///
		///`PAYMENT_STATUS_FAILED`: The payment has failed to be initiated. This error is retryable once the root cause is resolved.
		///
		///`PAYMENT_STATUS_BLOCKED`: The payment has been blocked. This is a retryable error.
		///
		///`PAYMENT_STATUS_AUTHORISING`: The payment is currently being processed. The payment will automatically exit this state when the financial institution has authorised the transaction.
		///
		///`PAYMENT_STATUS_CANCELLED`: The payment was cancelled during authorisation.
		///
		///`PAYMENT_STATUS_EXECUTED`: The payment has been successfully executed and is considered complete.
		///
		///`PAYMENT_STATUS_SETTLED`: The payment has settled and funds are available for use. Payment settlement can only be guaranteed by using Plaid virtual accounts. A payment will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`PAYMENT_STATUS_ESTABLISHED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		///
		///`PAYMENT_STATUS_REJECTED`: The payment was rejected by the financial institution.
		///
		///Deprecated:
		///These statuses will be removed in a future release.
		///
		///`PAYMENT_STATUS_UNKNOWN`: The payment status is unknown.
		///
		///`PAYMENT_STATUS_PROCESSING`: The payment is currently being processed. The payment will automatically exit this state when processing is complete.
		///
		///`PAYMENT_STATUS_COMPLETED`: Indicates that the standing order has been successfully established. This state is only used for standing orders.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="old_payment_status")]
		public PaymentInitiationConsentPaymentExecuteResponseStatus Old_payment_status { get; set; }
		
		/// <summary>
		/// The original value of the reference when creating the payment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="original_reference")]
		public string Original_reference { get; set; }
		
		/// <summary>
		/// The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="original_start_date")]
		public System.Nullable<System.DateOnly> Original_start_date { get; set; }
		
		/// <summary>
		/// The `payment_id` for the payment being updated
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2017-09-14T14:42:19.350Z"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
		
		/// <summary>
		/// The transaction ID that this payment is associated with, if any. This is present only when a payment was initiated using virtual accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
		
		/// <summary>
		/// `PAYMENT_STATUS_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `PAYMENT_INITIATION`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Deduction on the paystub
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaystubDeduction
	{
		
		/// <summary>
		/// `true` if the deduction is pre-tax; `false` otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_pretax")]
		public System.Nullable<System.Boolean> Is_pretax { get; set; }
		
		/// <summary>
		/// The amount of the deduction.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		/// <summary>
		/// The description of the deduction, as provided on the paystub. For example: `"401(k)"`, `"FICA MED TAX"`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The frequency at which the employee is paid. Possible values: `MONTHLY`, `BI-WEEKLY`, `WEEKLY`, `SEMI-MONTHLY`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaystubPayFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BI-WEEKLY")]
		BIMinusWEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEMI-MONTHLY")]
		SEMIMinusMONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 4,
	}
	
	/// <summary>
	/// Fired when an Itemâ€™s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Linkâ€™s update mode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PendingExpirationWebhook
	{
		
		/// <summary>
		/// The date and time at which the Item's access consent will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consent_expiration_time")]
		public System.DateTimeOffset Consent_expiration_time { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `PENDING_EXPIRATION`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ITEM`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// An enum indicating whether a phone number is a phone line or a fax line.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fax = 1,
	}
	
	/// <summary>
	/// The type of identity document detected in the images provided. Will always be one of the following values:
	///
	///  `drivers_license` - A driver's license for the associated country
	///
	///  `id_card` - A general national identification card, distinct from driver's licenses
	///
	///  `passport` - A passport for the associated country
	///
	///  `residence_permit_card` - An identity document permitting a foreign citizen to <em>temporarily</em> reside in the associated country
	///
	///  `resident_card` - An identity document permitting a foreign citizen to <em>permanently</em> reside in the associated country
	///
	///Note: This value may be different from the ID type that the user selects within Link. For example, if they select "Driver's License" but then submit a picture of a passport, this field will say `passport`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhysicalDocumentCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		drivers_license = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		id_card = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		passport = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		residence_permit_card = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		resident_card = 4,
	}
	
	/// <summary>
	/// A broad categorization of the error. Safe for programmatic use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PlaidErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_RESULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_INPUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTITUTION_ERROR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RATE_LIMIT_EXCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		API_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSET_REPORT_ERROR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECAPTCHA_ERROR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAUTH_ERROR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_ERROR = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_TRANSFER_ERROR = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCOME_VERIFICATION_ERROR = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MICRODEPOSITS_ERROR = 13,
	}
	
	/// <summary>
	/// ProcessorApexProcessorTokenCreateRequest defines the request schema for `/processor/apex/processor_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorApexProcessorTokenCreateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The `account_id` value obtained from the `onSuccess` callback in Link
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ProcessorAuthGetRequest defines the request schema for `/processor/auth/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorAuthGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ProcessorAuthGetResponse defines the response schema for `/processor/auth/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorAuthGetResponse
	{
		
		/// <summary>
		/// A single account at a financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		public AccountBase Account { get; set; }
		
		/// <summary>
		/// An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numbers")]
		public ProcessorNumber Numbers { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorNumber
	{
		
		/// <summary>
		/// Identifying information for transferring money to or from a US account via ACH or wire transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach")]
		public NumbersACHNullable Ach { get; set; }
		
		/// <summary>
		/// Identifying information for transferring money to or from a UK bank account via BACS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public NumbersBACSNullable Bacs { get; set; }
		
		/// <summary>
		/// Identifying information for transferring money to or from a Canadian bank account via EFT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eft")]
		public NumbersEFTNullable Eft { get; set; }
		
		/// <summary>
		/// Identifying information for transferring money to or from an international bank account via wire transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international")]
		public NumbersInternationalNullable International { get; set; }
	}
	
	/// <summary>
	/// ProcessorBalanceGetRequest defines the request schema for `/processor/balance/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorBalanceGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to filter `/processor/balance/get` results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public ProcessorBalanceGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to filter `/processor/balance/get` results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorBalanceGetRequestOptions
	{
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.
		///
		///If the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.
		///
		///This field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="min_last_updated_datetime")]
		public System.Nullable<System.DateTimeOffset> Min_last_updated_datetime { get; set; }
	}
	
	/// <summary>
	/// ProcessorBalanceGetResponse defines the response schema for `/processor/balance/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorBalanceGetResponse
	{
		
		/// <summary>
		/// A single account at a financial institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		public AccountBase Account { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/processor/bank_transfer/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorBankTransferCreateRequest
	{
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the bank transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An arbitrary string provided by the client for storage with the bank transfer. May be up to 100 characters.
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_tag")]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Custom_tag { get; set; }
		
		/// <summary>
		/// The transfer description. Maximum of 10 characters.
		/// Required
		/// Max length: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string Description { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique bank transfer. Maximum of 50 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a bank transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single bank transfer is created.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount â€“ should be set to "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public BankTransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer. Valid options are `ach`, `same-day-ach`, or `wire`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public ProcessorBankTransferCreateRequestNetwork Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public BankTransferUser User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProcessorBankTransferCreateRequestNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wire = 2,
	}
	
	/// <summary>
	/// Defines the response schema for `/processor/bank_transfer/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorBankTransferCreateResponse
	{
		
		/// <summary>
		/// Represents a bank transfer within the Bank Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer")]
		public BankTransfer Bank_transfer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// ProcessorIdentityGetRequest defines the request schema for `/processor/identity/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorIdentityGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ProcessorIdentityGetResponse defines the response schema for `/processor/identity/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorIdentityGetResponse
	{
		
		/// <summary>
		/// Identity information about an account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account")]
		public AccountIdentity Account { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// ProcessorSignalDecisionReportRequest defines the request schema for `/processor/signal/decision/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorSignalDecisionReportRequest
	{
		
		/// <summary>
		/// The amount (in USD) made available to your customers instantly following the debit transaction. It could be a partial amount of the requested transaction (example: 102.05).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_instantly_available")]
		public System.Nullable<System.Double> Amount_instantly_available { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
		/// Required
		/// Min length: 1
		/// Max length: 36
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_transaction_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 36)]
		public string Client_transaction_id { get; set; }
		
		/// <summary>
		/// The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate.
		///
		///For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_funds_on_hold")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Days_funds_on_hold { get; set; }
		
		/// <summary>
		/// The payment decision from the risk assessment.
		///
		///`APPROVE`: approve the transaction without requiring further actions from your customers. For example, use this field if you are placing a standard hold for all the approved transactions before making funds available to your customers. You should also use this field if you decide to accelerate the fund availability for your customers.
		///
		///`REVIEW`: the transaction requires manual review
		///
		///`REJECT`: reject the transaction
		///
		///`TAKE_OTHER_RISK_MEASURES`: for example, placing a longer hold on funds than those approved transactions or introducing customer frictions such as step-up verification/authentication
		///
		///`NOT_EVALUATED`: if only logging the Signal results without using them
		///
		///Possible values:  `APPROVE`, `REVIEW`, `REJECT`, `TAKE_OTHER_RISK_MEASURES`, `NOT_EVALUATED`
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decision_outcome")]
		public System.Nullable<ProcessorSignalDecisionReportRequestDecision_outcome> Decision_outcome { get; set; }
		
		/// <summary>
		/// `true` if the ACH transaction was initiated, `false` otherwise.
		///
		///This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initiated")]
		public bool Initiated { get; set; }
		
		/// <summary>
		/// The payment method to complete the transaction after the risk assessment. It may be different from the default payment method.
		///
		///`SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
		///
		///`NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
		///
		///`STANDARD_ACH`: standard ACH by NACHA
		///
		///`REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
		///
		///`DEBIT_CARD`: if the default payment is over debit card networks
		///
		///`MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
		///
		///Possible values: `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public System.Nullable<ProcessorSignalDecisionReportRequestPayment_method> Payment_method { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProcessorSignalDecisionReportRequestDecision_outcome
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAKE_OTHER_RISK_MEASURES = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EVALUATED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProcessorSignalDecisionReportRequestPayment_method
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAME_DAY_ACH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_DAY_ACH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_ACH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REAL_TIME_PAYMENTS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBIT_CARD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTIPLE_PAYMENT_METHODS = 5,
	}
	
	/// <summary>
	/// ProcessorSignalDecisionReportResponse defines the response schema for `/processor/signal/decision/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorSignalDecisionReportResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// ProcessorSignalEvaluateRequest defines the request schema for `/processor/signal/evaluate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorSignalEvaluateRequest
	{
		
		/// <summary>
		/// The transaction amount, in USD (e.g. `102.05`)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.
		/// Required
		/// Min length: 1
		/// Max length: 36
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_transaction_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 36)]
		public string Client_transaction_id { get; set; }
		
		/// <summary>
		/// A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. The max length for this field is 36 characters. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
		/// Max length: 36
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// The default ACH or non-ACH payment method to complete the transaction.
		///`SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
		///`NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
		///`STANDARD_ACH`: standard ACH by NACHA
		///`REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
		///`DEBIT_CARD`: if the default payment is over debit card networks
		///`MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
		///Possible values:  `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_payment_method")]
		public string Default_payment_method { get; set; }
		
		/// <summary>
		/// Details about the end user's device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public SignalDevice Device { get; set; }
		
		/// <summary>
		/// **true** if the ACH transaction is a recurring transaction; **false** otherwise 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_recurring")]
		public System.Nullable<System.Boolean> Is_recurring { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Details about the end user initiating the transaction (i.e., the account holder).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public SignalUser User { get; set; }
		
		/// <summary>
		/// `true` if the end user is present while initiating the ACH transfer and the endpoint is being called; `false` otherwise (for example, when the ACH transfer is scheduled and the end user is not present, or you call this endpoint after the ACH transfer but before submitting the Nacha file for ACH processing).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_present")]
		public System.Nullable<System.Boolean> User_present { get; set; }
	}
	
	/// <summary>
	/// Details about the end user's device
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalDevice
	{
		
		/// <summary>
		/// The IP address of the device that initiated the transaction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		/// <summary>
		/// The user agent of the device that initiated the transaction (e.g. "Mozilla/5.0")
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_agent")]
		public string User_agent { get; set; }
	}
	
	/// <summary>
	/// Details about the end user initiating the transaction (i.e., the account holder).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalUser
	{
		
		/// <summary>
		/// Data about the components comprising an address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public SignalAddressData Address { get; set; }
		
		/// <summary>
		/// The user's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's legal name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SignalPersonName Name { get; set; }
		
		/// <summary>
		/// The user's phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// The user's legal name
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalPersonName
	{
		
		/// <summary>
		/// The user's family name / surname
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="family_name")]
		public string Family_name { get; set; }
		
		/// <summary>
		/// The user's given name. If the user has a one-word name, it should be provided in this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="given_name")]
		public string Given_name { get; set; }
		
		/// <summary>
		/// The user's middle name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// The user's name prefix (e.g. "Mr.")
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
		
		/// <summary>
		/// The user's name suffix (e.g. "II")
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
	}
	
	/// <summary>
	/// ProcessorSignalEvaluateResponse defines the response schema for `/processor/signal/evaluate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorSignalEvaluateResponse
	{
		
		/// <summary>
		/// The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:
		///
		///`days_since_first_plaid_connection`: The number of days since the first time the Item was connected to an application via Plaid
		///`plaid_connections_count_7d`: The number of times the Item has been connected to applications via Plaid over the past 7 days
		///`plaid_connections_count_30d`: The number of times the Item has been connected to applications via Plaid over the past 30 days
		///`total_plaid_connections_count`: The number of times the Item has been connected to applications via Plaid
		///`is_savings_or_money_market_account`: Indicates whether the ACH transaction funding account is a savings/money market account
		///
		///For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="core_attributes")]
		public SignalEvaluateCoreAttributes Core_attributes { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Risk scoring details broken down by risk category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public SignalScores Scores { get; set; }
	}
	
	/// <summary>
	/// The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:
	///
	///`days_since_first_plaid_connection`: The number of days since the first time the Item was connected to an application via Plaid
	///`plaid_connections_count_7d`: The number of times the Item has been connected to applications via Plaid over the past 7 days
	///`plaid_connections_count_30d`: The number of times the Item has been connected to applications via Plaid over the past 30 days
	///`total_plaid_connections_count`: The number of times the Item has been connected to applications via Plaid
	///`is_savings_or_money_market_account`: Indicates whether the ACH transaction funding account is a savings/money market account
	///
	///For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalEvaluateCoreAttributes
	{
		
		/// <summary>
		/// The number of times the account's addresses on file have changed over the past 28 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_change_count_28d")]
		public System.Nullable<System.Int32> Address_change_count_28d { get; set; }
		
		/// <summary>
		/// The number of times the account's addresses on file have changed over the past 90 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address_change_count_90d")]
		public System.Nullable<System.Int32> Address_change_count_90d { get; set; }
		
		/// <summary>
		/// Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available_balance")]
		public System.Nullable<System.Double> Available_balance { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="balance_last_updated")]
		public System.Nullable<System.DateTimeOffset> Balance_last_updated { get; set; }
		
		/// <summary>
		/// The total number of credit (inflow) transactions over the past 10 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit_transactions_count_10d")]
		public System.Nullable<System.Int32> Credit_transactions_count_10d { get; set; }
		
		/// <summary>
		/// The total number of credit (inflow) transactions over the past 30 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit_transactions_count_30d")]
		public System.Nullable<System.Int32> Credit_transactions_count_30d { get; set; }
		
		/// <summary>
		/// The total number of credit (inflow) transactions over the past 60 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit_transactions_count_60d")]
		public System.Nullable<System.Int32> Credit_transactions_count_60d { get; set; }
		
		/// <summary>
		/// The total number of credit (inflow) transactions over the past 90 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credit_transactions_count_90d")]
		public System.Nullable<System.Int32> Credit_transactions_count_90d { get; set; }
		
		/// <summary>
		/// Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_balance")]
		public System.Nullable<System.Double> Current_balance { get; set; }
		
		/// <summary>
		/// The number of days since the first time the Item was connected to an application via Plaid
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_since_first_plaid_connection")]
		public System.Nullable<System.Int32> Days_since_first_plaid_connection { get; set; }
		
		/// <summary>
		/// The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_with_negative_balance_count_90d")]
		public System.Nullable<System.Int32> Days_with_negative_balance_count_90d { get; set; }
		
		/// <summary>
		/// The total number of debit (outflow) transactions over the past 10 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="debit_transactions_count_10d")]
		public System.Nullable<System.Int32> Debit_transactions_count_10d { get; set; }
		
		/// <summary>
		/// The total number of debit (outflow) transactions over the past 30 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="debit_transactions_count_30d")]
		public System.Nullable<System.Int32> Debit_transactions_count_30d { get; set; }
		
		/// <summary>
		/// The total number of debit (outflow) transactions over the past 60 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="debit_transactions_count_60d")]
		public System.Nullable<System.Int32> Debit_transactions_count_60d { get; set; }
		
		/// <summary>
		/// The total number of debit (outflow) transactions over the past 90 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="debit_transactions_count_90d")]
		public System.Nullable<System.Int32> Debit_transactions_count_90d { get; set; }
		
		/// <summary>
		/// The number of times the account's email addresses on file have changed over the past 28 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_change_count_28d")]
		public System.Nullable<System.Int32> Email_change_count_28d { get; set; }
		
		/// <summary>
		/// The number of times the account's email addresses on file have changed over the past 90 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_change_count_90d")]
		public System.Nullable<System.Int32> Email_change_count_90d { get; set; }
		
		/// <summary>
		/// The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 30 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failed_plaid_non_oauth_authentication_attempts_count_30d")]
		public System.Nullable<System.Int32> Failed_plaid_non_oauth_authentication_attempts_count_30d { get; set; }
		
		/// <summary>
		/// The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 3 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failed_plaid_non_oauth_authentication_attempts_count_3d")]
		public System.Nullable<System.Int32> Failed_plaid_non_oauth_authentication_attempts_count_3d { get; set; }
		
		/// <summary>
		/// The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 7 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failed_plaid_non_oauth_authentication_attempts_count_7d")]
		public System.Nullable<System.Int32> Failed_plaid_non_oauth_authentication_attempts_count_7d { get; set; }
		
		/// <summary>
		/// Indicates if the ACH transaction funding account is a savings/money market account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_savings_or_money_market_account")]
		public System.Nullable<System.Boolean> Is_savings_or_money_market_account { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nsf_overdraft_transactions_count_30d")]
		public System.Nullable<System.Int32> Nsf_overdraft_transactions_count_30d { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nsf_overdraft_transactions_count_60d")]
		public System.Nullable<System.Int32> Nsf_overdraft_transactions_count_60d { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nsf_overdraft_transactions_count_7d")]
		public System.Nullable<System.Int32> Nsf_overdraft_transactions_count_7d { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nsf_overdraft_transactions_count_90d")]
		public System.Nullable<System.Int32> Nsf_overdraft_transactions_count_90d { get; set; }
		
		/// <summary>
		/// The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p10_eod_balance_30d")]
		public System.Nullable<System.Double> P10_eod_balance_30d { get; set; }
		
		/// <summary>
		/// The 10th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p10_eod_balance_31d_to_60d")]
		public System.Nullable<System.Double> P10_eod_balance_31d_to_60d { get; set; }
		
		/// <summary>
		/// The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p10_eod_balance_60d")]
		public System.Nullable<System.Double> P10_eod_balance_60d { get; set; }
		
		/// <summary>
		/// The 10th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p10_eod_balance_61d_to_90d")]
		public System.Nullable<System.Double> P10_eod_balance_61d_to_90d { get; set; }
		
		/// <summary>
		/// The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p10_eod_balance_90d")]
		public System.Nullable<System.Double> P10_eod_balance_90d { get; set; }
		
		/// <summary>
		/// The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_credit_transactions_amount_28d")]
		public System.Nullable<System.Double> P50_credit_transactions_amount_28d { get; set; }
		
		/// <summary>
		/// The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_debit_transactions_amount_28d")]
		public System.Nullable<System.Double> P50_debit_transactions_amount_28d { get; set; }
		
		/// <summary>
		/// The 50th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_eod_balance_30d")]
		public System.Nullable<System.Double> P50_eod_balance_30d { get; set; }
		
		/// <summary>
		/// The 50th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_eod_balance_31d_to_60d")]
		public System.Nullable<System.Double> P50_eod_balance_31d_to_60d { get; set; }
		
		/// <summary>
		/// The 50th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_eod_balance_60d")]
		public System.Nullable<System.Double> P50_eod_balance_60d { get; set; }
		
		/// <summary>
		/// The 50th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_eod_balance_61d_to_90d")]
		public System.Nullable<System.Double> P50_eod_balance_61d_to_90d { get; set; }
		
		/// <summary>
		/// The 50th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p50_eod_balance_90d")]
		public System.Nullable<System.Double> P50_eod_balance_90d { get; set; }
		
		/// <summary>
		/// The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p90_eod_balance_30d")]
		public System.Nullable<System.Double> P90_eod_balance_30d { get; set; }
		
		/// <summary>
		/// The 90th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p90_eod_balance_31d_to_60d")]
		public System.Nullable<System.Double> P90_eod_balance_31d_to_60d { get; set; }
		
		/// <summary>
		/// The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p90_eod_balance_60d")]
		public System.Nullable<System.Double> P90_eod_balance_60d { get; set; }
		
		/// <summary>
		/// The 90th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p90_eod_balance_61d_to_90d")]
		public System.Nullable<System.Double> P90_eod_balance_61d_to_90d { get; set; }
		
		/// <summary>
		/// The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p90_eod_balance_90d")]
		public System.Nullable<System.Double> P90_eod_balance_90d { get; set; }
		
		/// <summary>
		/// The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p95_credit_transactions_amount_28d")]
		public System.Nullable<System.Double> P95_credit_transactions_amount_28d { get; set; }
		
		/// <summary>
		/// The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="p95_debit_transactions_amount_28d")]
		public System.Nullable<System.Double> P95_debit_transactions_amount_28d { get; set; }
		
		/// <summary>
		/// The number of times the account's phone numbers on file have changed over the past 28 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_change_count_28d")]
		public System.Nullable<System.Int32> Phone_change_count_28d { get; set; }
		
		/// <summary>
		/// The number of times the account's phone numbers on file have changed over the past 90 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_change_count_90d")]
		public System.Nullable<System.Int32> Phone_change_count_90d { get; set; }
		
		/// <summary>
		/// The number of times the Item has been connected to applications via Plaid over the past 30 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plaid_connections_count_30d")]
		public System.Nullable<System.Int32> Plaid_connections_count_30d { get; set; }
		
		/// <summary>
		/// The number of times the Item has been connected to applications via Plaid over the past 7 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plaid_connections_count_7d")]
		public System.Nullable<System.Int32> Plaid_connections_count_7d { get; set; }
		
		/// <summary>
		/// The number of non-OAuth authentication attempts via Plaid for this bank account over the past 30 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plaid_non_oauth_authentication_attempts_count_30d")]
		public System.Nullable<System.Int32> Plaid_non_oauth_authentication_attempts_count_30d { get; set; }
		
		/// <summary>
		/// The number of non-OAuth authentication attempts via Plaid for this bank account over the past 3 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plaid_non_oauth_authentication_attempts_count_3d")]
		public System.Nullable<System.Int32> Plaid_non_oauth_authentication_attempts_count_3d { get; set; }
		
		/// <summary>
		/// The number of non-OAuth authentication attempts via Plaid for this bank account over the past 7 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plaid_non_oauth_authentication_attempts_count_7d")]
		public System.Nullable<System.Int32> Plaid_non_oauth_authentication_attempts_count_7d { get; set; }
		
		/// <summary>
		/// The total credit (inflow) transaction amount over the past 10 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_credit_transactions_amount_10d")]
		public System.Nullable<System.Double> Total_credit_transactions_amount_10d { get; set; }
		
		/// <summary>
		/// The total credit (inflow) transaction amount over the past 30 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_credit_transactions_amount_30d")]
		public System.Nullable<System.Double> Total_credit_transactions_amount_30d { get; set; }
		
		/// <summary>
		/// The total credit (inflow) transaction amount over the past 60 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_credit_transactions_amount_60d")]
		public System.Nullable<System.Double> Total_credit_transactions_amount_60d { get; set; }
		
		/// <summary>
		/// The total credit (inflow) transaction amount over the past 90 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_credit_transactions_amount_90d")]
		public System.Nullable<System.Double> Total_credit_transactions_amount_90d { get; set; }
		
		/// <summary>
		/// The total debit (outflow) transaction amount over the past 10 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_debit_transactions_amount_10d")]
		public System.Nullable<System.Double> Total_debit_transactions_amount_10d { get; set; }
		
		/// <summary>
		/// The total debit (outflow) transaction amount over the past 30 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_debit_transactions_amount_30d")]
		public System.Nullable<System.Double> Total_debit_transactions_amount_30d { get; set; }
		
		/// <summary>
		/// The total debit (outflow) transaction amount over the past 60 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_debit_transactions_amount_60d")]
		public System.Nullable<System.Double> Total_debit_transactions_amount_60d { get; set; }
		
		/// <summary>
		/// The total debit (outflow) transaction amount over the past 90 days from the account that will be debited
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_debit_transactions_amount_90d")]
		public System.Nullable<System.Double> Total_debit_transactions_amount_90d { get; set; }
		
		/// <summary>
		/// The total number of times the Item has been connected to applications via Plaid
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_plaid_connections_count")]
		public System.Nullable<System.Int32> Total_plaid_connections_count { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the transactions for the given account have been updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions_last_updated")]
		public System.Nullable<System.DateTimeOffset> Transactions_last_updated { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unauthorized_transactions_count_30d")]
		public System.Nullable<System.Int32> Unauthorized_transactions_count_30d { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unauthorized_transactions_count_60d")]
		public System.Nullable<System.Int32> Unauthorized_transactions_count_60d { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unauthorized_transactions_count_7d")]
		public System.Nullable<System.Int32> Unauthorized_transactions_count_7d { get; set; }
		
		/// <summary>
		/// We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unauthorized_transactions_count_90d")]
		public System.Nullable<System.Int32> Unauthorized_transactions_count_90d { get; set; }
	}
	
	/// <summary>
	/// Risk scoring details broken down by risk category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalScores
	{
		
		/// <summary>
		/// The object contains a risk score and a risk tier that evaluate the transaction return risk because an account is overdrawn or because an ineligible account is used. Common return codes in this category include: "R01", "R02", "R03", "R04", "R06", "R08",  "R09", "R13", "R16", "R17", "R20", "R23". These returns have a turnaround time of 2 banking days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_initiated_return_risk")]
		public BankInitiatedReturnRisk Bank_initiated_return_risk { get; set; }
		
		/// <summary>
		/// The object contains a risk score and a risk tier that evaluate the transaction return risk of an unauthorized debit. Common return codes in this category include: "R05", "R07", "R10", "R11", "R29". These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer_initiated_return_risk")]
		public CustomerInitiatedReturnRisk Customer_initiated_return_risk { get; set; }
	}
	
	/// <summary>
	/// ProcessorSignalReturnReportRequest defines the request schema for `/processor/signal/return/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorSignalReturnReportRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Must be the same as the `client_transaction_id` supplied when calling `/processor/signal/evaluate`
		/// Required
		/// Min length: 1
		/// Max length: 36
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_transaction_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 36)]
		public string Client_transaction_id { get; set; }
		
		/// <summary>
		/// The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// Must be a valid ACH return code (e.g. "R01")
		///
		///If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="return_code")]
		public string Return_code { get; set; }
		
		/// <summary>
		/// Date and time when you receive the returns from your payment processors, in ISO 8601 format (`YYYY-MM-DDTHH:mm:ssZ`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returned_at")]
		public System.Nullable<System.DateTimeOffset> Returned_at { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ProcessorSignalReturnReportResponse defines the response schema for `/processor/signal/return/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorSignalReturnReportResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// ProcessorStripeBankAccountTokenCreateRequest defines the request schema for `/processor/stripe/bank_account/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorStripeBankAccountTokenCreateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The `account_id` value obtained from the `onSuccess` callback in Link
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// ProcessorStripeBankAccountTokenCreateResponse defines the response schema for `/processor/stripe/bank_account/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorStripeBankAccountTokenCreateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A token that can be sent to Stripe for use in making API calls to Plaid
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stripe_bank_account_token")]
		public string Stripe_bank_account_token { get; set; }
	}
	
	/// <summary>
	/// ProcessorTokenCreateRequest defines the request schema for `/processor/token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorTokenCreateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The `account_id` value obtained from the `onSuccess` callback in Link
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The processor you are integrating with.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor")]
		public ProcessorTokenCreateRequestProcessor Processor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProcessorTokenCreateRequestProcessor
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dwolla = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		galileo = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		modern_treasury = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ocrolus = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prime_trust = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vesta = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		drivewealth = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vopay = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		achq = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		check = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checkbook = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		circle = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sila_money = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rize = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		svb_api = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unit = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wyre = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lithic = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		alpaca = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		astra = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		moov = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		treasury_prime = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		marqeta = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checkout = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		solid = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		highnote = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		apex_clearing = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gusto = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		adyen = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		atomic = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i2c = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wepay = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		riskified = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utb = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		adp_roll = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fortress_trust = 35,
	}
	
	/// <summary>
	/// ProcessorTokenCreateResponse defines the response schema for `/processor/token/create` and `/processor/apex/processor_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessorTokenCreateResponse
	{
		
		/// <summary>
		/// The `processor_token` that can then be used by the Plaid partner to make API requests
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The valid name matching sensitivity configurations for a screening program. Note that while certain matching techniques may be more prevalent on less strict settings, all matching algorithms are enabled for every sensitivity.
	///
	///`coarse` - See more potential matches. This sensitivity will see more broad phonetic matches across alphabets that make missing a potential hit very unlikely. This setting is noisier and will require more manual review.
	///
	///`balanced` - A good default for most companies. This sensitivity is balanced to show high quality hits with reduced noise.
	///
	///`strict` - Aggressive false positive reduction. This sensitivity will require names to be more similar than `coarse` and `balanced` settings, relying less on phonetics, while still accounting for character transpositions, missing tokens, and other common permutations.
	///
	///`exact` - Matches must be nearly exact. This sensitivity will only show hits with exact or nearly exact name matches with only basic correction such as extraneous symbols and capitalization. This setting is generally not recommended unless you have a very specific use case.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProgramNameSensitivity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		coarse = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		balanced = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		strict = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		exact = 3,
	}
	
	/// <summary>
	/// The employee's estimated annual salary, as derived from information reported on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProjectedIncomeSummaryFieldNumber : IncomeSummaryFieldNumber
	{
	}
	
	/// <summary>
	/// An enum indicating whether a network proxy is present and if so what type it is.
	///
	///`none_detected` indicates the user is not on a detectable proxy network.
	///
	///`tor` indicates the user was using a Tor browser, which sends encrypted traffic on a decentralized network and is somewhat similar to a VPN (Virtual Private Network).
	///
	///`vpn` indicates the user is on a VPN (Virtual Private Network)
	///
	///`web_proxy` indicates the user is on a web proxy server, which may allow them to conceal information such as their IP address or other identifying information.
	///
	///`public_proxy` indicates the user is on a public web proxy server, which is similar to a web proxy but can be shared by multiple users. This may allow multiple users to appear as if they have the same IP address for instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProxyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none_detected = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tor = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vpn = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		web_proxy = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		public_proxy = 4,
	}
	
	/// <summary>
	/// The request was flagged by Plaid's fraud system, and requires additional verification to ensure they are not a bot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Recaptcha_RequiredError
	{
		
		/// <summary>
		/// Plaid's fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="common_causes")]
		public string Common_causes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="display_message")]
		public string Display_message { get; set; }
		
		/// <summary>
		/// RECAPTCHA_REQUIRED
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// RECAPTCHA_ERROR
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_type")]
		public string Error_type { get; set; }
		
		/// <summary>
		/// 400
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http_code")]
		public string Http_code { get; set; }
		
		/// <summary>
		/// Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user's request is resubmitted and they are directed to the next Item creation step.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="link_user_experience")]
		public string Link_user_experience { get; set; }
		
		/// <summary>
		/// Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.
		///
		///If your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="troubleshooting_steps")]
		public string Troubleshooting_steps { get; set; }
	}
	
	/// <summary>
	/// An object containing a BACS account number and sort code. If an IBAN is not provided or if you need to accept domestic GBP-denominated payments, BACS data is required.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecipientBACS
	{
		
		/// <summary>
		/// The account number of the account. Maximum of 10 characters.
		/// Min length: 1
		/// Max length: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account")]
		[System.ComponentModel.DataAnnotations.Length(1, 10)]
		public string Account { get; set; }
		
		/// <summary>
		/// The 6-character sort code of the account.
		/// Min length: 6
		/// Max length: 6
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sort_code")]
		[System.ComponentModel.DataAnnotations.Length(6, 6)]
		public string Sort_code { get; set; }
	}
	
	/// <summary>
	/// An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecipientBACSNullable : RecipientBACS
	{
	}
	
	/// <summary>
	/// Fired when a recurring transfer is cancelled by Plaid.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringCancelledWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// `RECURRING_CANCELLED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSFER`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Fired when a new transfer of a recurring transfer is originated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringNewTransferWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
		
		/// <summary>
		/// `RECURRING_NEW_TRANSFER`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSFER`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Describes the frequency of the transaction stream.
	///
	///`WEEKLY`: Assigned to a transaction stream that occurs approximately every week.
	///
	///`BIWEEKLY`: Assigned to a transaction stream that occurs approximately every 2 weeks.
	///
	///`SEMI_MONTHLY`: Assigned to a transaction stream that occurs approximately twice per month. This frequency is typically seen for inflow transaction streams.
	///
	///`MONTHLY`: Assigned to a transaction stream that occurs approximately every month.
	///
	///`ANNUALLY`: Assigned to a transaction stream that occurs approximately every year.
	///
	///`UNKNOWN`: Assigned to a transaction stream that does not fit any of the pre-defined frequencies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecurringTransactionFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIWEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEMI_MONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANNUALLY = 5,
	}
	
	/// <summary>
	/// Fired when recurring transactions data is updated. This includes when a new recurring stream is detected or when a new transaction is added to an existing recurring stream. The `RECURRING_TRANSACTIONS_UPDATE` webhook will also fire when one or more attributes of the recurring stream changes, which is usually a result of the addition, update, or removal of transactions to the stream.
	///
	///After receipt of this webhook, the updated data can be fetched from `/transactions/recurring/get`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringTransactionsUpdateWebhook
	{
		
		/// <summary>
		/// A list of `account_ids` for accounts that have new or updated recurring transactions data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `RECURRING_TRANSACTIONS_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Represents a recurring transfer within the Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringTransfer
	{
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The datetime when this transfer was created. This will be of the form `2006-01-02T15:04:05Z`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// The description of the recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount, e.g. "USD"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public RecurringTransferNetwork Network { get; set; }
		
		/// <summary>
		/// A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
		///
		///The next transfer origination date after bank holiday adjustment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_origination_date")]
		public System.DateOnly Next_origination_date { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account that was used for this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// The schedule that the recurring transfer will be executed on.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public TransferRecurringSchedule Schedule { get; set; }
		
		/// <summary>
		/// The status of the recurring transfer.
		///
		///`active`: The recurring transfer is currently active.
		///`cancelled`: The recurring transfer was cancelled by the client or Plaid.
		///`expired`: The recurring transfer has completed all originations according to its recurring schedule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public RecurringTransferStatus Status { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a test clock.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_clock_id")]
		public string Test_clock_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_ids")]
		public string[] Transfer_ids { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInResponse User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecurringTransferNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rtp = 2,
	}
	
	/// <summary>
	/// The schedule that the recurring transfer will be executed on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringSchedule
	{
		
		/// <summary>
		/// A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). The recurring transfer will end on the last `interval_execution_day` on or before the `end_date`.
		///If the `interval_execution_day` between the start date and the end date (inclusive) is also the same day that `/transfer/recurring/create` was called, the bank *may* make a payment on that day, but it is not guaranteed to do so.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The number of recurring `interval_units` between originations. The recurring interval(before holiday adjustment) is calculated by multiplying `interval_unit` and `interval_count`.
		///For instance, to schedule a recurring transfer which originates once every two weeks, set `interval_unit` = `week` and `interval_count` = 2.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interval_count")]
		public int Interval_count { get; set; }
		
		/// <summary>
		/// The day of the interval on which to schedule the transfer.
		///
		///If the `interval_unit` is `week`, `interval_execution_day` should be an integer from 1 (Monday) to 5 (Friday).
		///
		///If the `interval_unit` is `month`, `interval_execution_day` should be an integer indicating which day of the month to make the transfer on. Integers from 1 to 28 can be used to make a transfer on that day of the month. Negative integers from -1 to -5 can be used to make a transfer relative to the end of the month. To make a transfer on the last day of the month, use -1; to make the transfer on the second-to-last day, use -2, and so on.
		///
		///The transfer will be originated on next available banking day if the designated day is a non banking day.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interval_execution_day")]
		public int Interval_execution_day { get; set; }
		
		/// <summary>
		/// The unit of the recurring interval.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="interval_unit")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public TransferRecurringScheduleInterval_unit Interval_unit { get; set; }
		
		/// <summary>
		/// A date in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). The recurring transfer will begin on the first `interval_execution_day` on or after the `start_date`.
		///
		///If the first `interval_execution_day` on or after the start date is also the same day that `/transfer/recurring/create` was called, the bank *may* make the first payment on that day, but it is not guaranteed to do so.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.DateOnly Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferRecurringScheduleInterval_unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		week = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		month = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecurringTransferStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 2,
	}
	
	/// <summary>
	/// The legal name and other information for the account holder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferUserInResponse
	{
		
		/// <summary>
		/// The address associated with the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address")]
		public TransferUserAddressInResponse Address { get; set; }
		
		/// <summary>
		/// The user's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's legal name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The user's phone number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// The address associated with the account holder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferUserAddressInResponse
	{
		
		/// <summary>
		/// Ex. "San Francisco"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// A two-letter country code (e.g., "US").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code (e.g., "94103").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or province (e.g., "CA").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The street number and name (i.e., "100 Market St.").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// Represents a recurring transfer within the Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringTransferNullable
	{
	}
	
	/// <summary>
	/// Fired when Plaid is unable to originate a new ACH transaction of the recurring transfer on the planned date.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringTransferSkippedWebhook
	{
		
		/// <summary>
		/// 
		///A decision regarding the proposed transfer.
		///
		///`approved` â€“ The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.
		///
		///`declined` â€“ Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorization_decision")]
		public RecurringTransferSkippedWebhookAuthorization_decision Authorization_decision { get; set; }
		
		/// <summary>
		/// A code representing the rationale for approving or declining the proposed transfer. Possible values are:
		///
		///`MANUALLY_VERIFIED_ITEM` â€“ Item created via same-day micro deposits, limited information available. Plaid will offer `approved` as a transaction decision.
		///
		///`ITEM_LOGIN_REQUIRED` â€“ Unable to collect the account information due to Item staleness. Can be rectified using Link in update mode. Plaid will offer `approved` as a transaction decision.
		///
		///`PAYMENT_PROFILE_LOGIN_REQUIRED` - Unable to collect the account information due to invalid login when using Payment Profiles. Can be rectified using update mode for Payment Profile. Plaid will offer `approved` as a transaction decision.
		///
		///`ERROR` â€“ Unable to collect the account information due to an error. Plaid will offer `approved` as a transaction decision.
		///
		///`NSF` â€“ Transaction likely to result in a return due to insufficient funds. Plaid will offer `declined` as a transaction decision.
		///
		///`RISK` - Transaction is high-risk. Plaid will offer `declined` as a transaction decision.
		///
		///`TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit. Plaid will offer `declined` as a transaction decision.
		///
		///`MIGRATED_ACCOUNT_ITEM` - Item created via `/transfer/account_migration` endpoint, limited information available. Plaid will offer `approved` as a transaction decision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorization_decision_rationale_code")]
		public System.Nullable<RecurringTransferSkippedWebhookAuthorization_decision_rationale_code> Authorization_decision_rationale_code { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// The planned date on which Plaid is unable to originate a new ACH transaction of the recurring transfer. This will be of the form YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="skipped_origination_date")]
		public System.DateOnly Skipped_origination_date { get; set; }
		
		/// <summary>
		/// `RECURRING_TRANSFER_SKIPPED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSFER`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecurringTransferSkippedWebhookAuthorization_decision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		declined = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecurringTransferSkippedWebhookAuthorization_decision_rationale_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NSF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_LIMIT_REACHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANUALLY_VERIFIED_ITEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_LOGIN_REQUIRED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_PROFILE_LOGIN_REQUIRED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIGRATED_ACCOUNT_ITEM = 7,
	}
	
	/// <summary>
	/// A representation of a removed transaction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemovedTransaction
	{
		
		/// <summary>
		/// The ID of the removed transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
	}
	
	/// <summary>
	/// The report type. It can be `assets` or `income`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReportType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assets = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		income = 1,
	}
	
	/// <summary>
	/// Field describing the outcome of a bot detection behavior risk check.
	///
	///`yes` indicates that automated activity was detected.
	///
	///`no` indicates that automated activity was not detected.
	///
	///`no_data` indicates there was not enough information available to give an accurate signal.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckBehaviorBotDetectedLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Field describing the outcome of a fraud ring behavior risk check.
	///
	///`yes` indicates that fraud ring activity was detected.
	///
	///`no` indicates that fraud ring activity was not detected.
	///
	///`no_data` indicates there was not enough information available to give an accurate signal.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckBehaviorFraudRingDetectedLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Field describing the overall user interaction signals of a behavior risk check. This value represents how familiar the user is with the personal data they provide, based on a number of signals that are collected during their session.
	///
	///`genuine` indicates the user has high familiarity with the data they are providing, and that fraud is unlikely.
	///
	///`neutral` indicates some signals are present in between `risky` and `genuine`, but there are not enough clear signals to determine an outcome.
	///
	///`risky` indicates the user has low familiarity with the data they are providing, and that fraud is likely.
	///
	///`no_data` indicates there is not sufficient information to give an accurate signal.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckBehaviorUserInteractionsLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		genuine = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		neutral = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		risky = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 3,
	}
	
	/// <summary>
	/// Indicates whether the email address domain is custom if known, i.e. a company domain and not free or disposable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckEmailDomainIsCustom
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Indicates whether the email domain is listed as disposable if known. Disposable domains are often used to create email addresses that are part of a fake set of user details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckEmailDomainIsDisposable
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Indicates whether the email address domain is a free provider such as Gmail or Hotmail if known.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckEmailDomainIsFreeProvider
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// SMTP-MX check to confirm the email address exists if known.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckEmailIsDeliverableStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Indicates whether the email address top level domain, which is the last part of the domain, is fraudulent or risky if known. In most cases, a suspicious top level domain is also associated with a disposable or high-risk domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RiskCheckEmailTopLevelDomainIsSuspicious
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		yes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		no_data = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/bank_transfer/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxBankTransferFireWebhookRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The URL to which the webhook should be sent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/bank_transfer/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxBankTransferFireWebhookResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/bank_transfer/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxBankTransferSimulateRequest
	{
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a bank transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bank_transfer_id")]
		public string Bank_transfer_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The asynchronous event to be simulated. May be: `posted`, `failed`, or `reversed`.
		///
		///An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:
		///
		///`pending` --> `failed`
		///
		///`pending` --> `posted`
		///
		///`posted` --> `reversed`
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_type")]
		public string Event_type { get; set; }
		
		/// <summary>
		/// The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public BankTransferFailure Failure_reason { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/bank_transfer/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxBankTransferSimulateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxIncomeFireWebhookRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The Item ID associated with the verification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The Plaid `user_id` of the User associated with this webhook, warning, or error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
		
		/// <summary>
		/// `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.
		///
		///`VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
		///
		///`VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public SandboxIncomeFireWebhookRequestVerification_status Verification_status { get; set; }
		
		/// <summary>
		/// The URL to which the webhook should be sent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SandboxIncomeFireWebhookRequestVerification_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_STATUS_PROCESSING_COMPLETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_STATUS_PROCESSING_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_STATUS_PENDING_APPROVAL = 2,
	}
	
	/// <summary>
	/// SandboxIncomeFireWebhookResponse defines the response schema for `/sandbox/income/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxIncomeFireWebhookResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// SandboxItemFireWebhookRequest defines the request schema for `/sandbox/item/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxItemFireWebhookRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The webhook codes that can be fired by this test endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public SandboxItemFireWebhookRequestWebhook_code Webhook_code { get; set; }
		
		/// <summary>
		/// The webhook types that can be fired by this test endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public System.Nullable<SandboxItemFireWebhookRequestWebhook_type> Webhook_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SandboxItemFireWebhookRequestWebhook_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW_ACCOUNTS_AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH_DATA_UPDATE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECURRING_TRANSACTIONS_UPDATE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNC_UPDATES_AVAILABLE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SandboxItemFireWebhookRequestWebhook_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOLDINGS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVESTMENTS_TRANSACTIONS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIABILITIES = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONS = 5,
	}
	
	/// <summary>
	/// SandboxItemFireWebhookResponse defines the response schema for `/sandbox/item/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxItemFireWebhookResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Value is `true`  if the test` webhook_code`  was successfully fired.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_fired")]
		public bool Webhook_fired { get; set; }
	}
	
	/// <summary>
	/// SandboxItemResetLoginRequest defines the request schema for `/sandbox/item/reset_login`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxItemResetLoginRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// SandboxItemResetLoginResponse defines the response schema for `/sandbox/item/reset_login`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxItemResetLoginResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// `true` if the call succeeded
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reset_login")]
		public bool Reset_login { get; set; }
	}
	
	/// <summary>
	/// SandboxItemSetVerificationStatusRequest defines the request schema for `/sandbox/item/set_verification_status`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxItemSetVerificationStatusRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The `account_id` of the account whose verification status is to be modified
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The verification status to set the account to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_status")]
		public SandboxItemSetVerificationStatusRequestVerification_status Verification_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SandboxItemSetVerificationStatusRequestVerification_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		automatically_verified = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		verification_expired = 1,
	}
	
	/// <summary>
	/// SandboxItemSetVerificationStatusResponse defines the response schema for `/sandbox/item/set_verification_status`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxItemSetVerificationStatusResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `sandbox/oauth/select_accounts`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxOauthSelectAccountsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public string[] Accounts { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="oauth_state_id")]
		public string Oauth_state_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/oauth/select_accounts`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxOauthSelectAccountsResponse
	{
	}
	
	/// <summary>
	/// SandboxPaymentProfileResetLoginRequest defines the request schema for `/sandbox/payment_profile/reset_login`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPaymentProfileResetLoginRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A payment profile token associated with the Payment Profile data that is being requested.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// SandboxPaymentProfileResetLoginResponse defines the response schema for `/sandbox/payment_profile/reset_login`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPaymentProfileResetLoginResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// `true` if the call succeeded
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reset_login")]
		public bool Reset_login { get; set; }
	}
	
	/// <summary>
	/// SandboxProcessorTokenCreateRequest defines the request schema for `/sandbox/processor_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxProcessorTokenCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The ID of the institution the Item will be associated with
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// An optional set of options to be used when configuring the Item. If specified, must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public SandboxProcessorTokenCreateRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional set of options to be used when configuring the Item. If specified, must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxProcessorTokenCreateRequestOptions
	{
		
		/// <summary>
		/// Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.
		/// </summary>
		[System.ComponentModel.DefaultValue("pass_good")]
		[System.Runtime.Serialization.DataMember(Name="override_password")]
		public string Override_password { get; set; } = "pass_good";
		
		/// <summary>
		/// Test username to use for the creation of the Sandbox Item. Default value is `user_good`.
		/// </summary>
		[System.ComponentModel.DefaultValue("user_good")]
		[System.Runtime.Serialization.DataMember(Name="override_username")]
		public string Override_username { get; set; } = "user_good";
	}
	
	/// <summary>
	/// SandboxProcessorTokenCreateResponse defines the response schema for `/sandbox/processor_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxProcessorTokenCreateResponse
	{
		
		/// <summary>
		/// A processor token that can be used to call the `/processor/` endpoints.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processor_token")]
		public string Processor_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// SandboxPublicTokenCreateRequest defines the request schema for `/sandbox/public_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPublicTokenCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The products to initially pull for the Item. May be any products that the specified `institution_id`  supports. This array may not be empty.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initial_products")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Products[] Initial_products { get; set; }
		
		/// <summary>
		/// The ID of the institution the Item will be associated with
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_id")]
		public string Institution_id { get; set; }
		
		/// <summary>
		/// An optional set of options to be used when configuring the Item. If specified, must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public SandboxPublicTokenCreateRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// An optional set of options to be used when configuring the Item. If specified, must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPublicTokenCreateRequestOptions
	{
		
		/// <summary>
		/// A set of parameters for income verification options. This field is required if `income_verification` is included in the `initial_products` array.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_verification")]
		public SandboxPublicTokenCreateRequestOptionsIncomeVerification Income_verification { get; set; }
		
		/// <summary>
		/// Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.
		/// </summary>
		[System.ComponentModel.DefaultValue("pass_good")]
		[System.Runtime.Serialization.DataMember(Name="override_password")]
		public string Override_password { get; set; } = "pass_good";
		
		/// <summary>
		/// Test username to use for the creation of the Sandbox Item. Default value is `user_good`.
		/// </summary>
		[System.ComponentModel.DefaultValue("user_good")]
		[System.Runtime.Serialization.DataMember(Name="override_username")]
		public string Override_username { get; set; } = "user_good";
		
		/// <summary>
		/// An optional set of parameters corresponding to transactions options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public SandboxPublicTokenCreateRequestOptionsTransactions Transactions { get; set; }
		
		/// <summary>
		/// Specify a webhook to associate with the new Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// A set of parameters for income verification options. This field is required if `income_verification` is included in the `initial_products` array.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPublicTokenCreateRequestOptionsIncomeVerification
	{
		
		/// <summary>
		/// Specifies options for Bank Income. This field is required if `income_verification` is included in the `initial_products` array and `bank` is specified in `income_source_types`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_income")]
		public SandboxPublicTokenCreateRequestIncomeVerificationBankIncome Bank_income { get; set; }
		
		/// <summary>
		/// The types of source income data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="income_source_types")]
		public IncomeVerificationSourceType[] Income_source_types { get; set; }
	}
	
	/// <summary>
	/// Specifies options for Bank Income. This field is required if `income_verification` is included in the `initial_products` array and `bank` is specified in `income_source_types`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPublicTokenCreateRequestIncomeVerificationBankIncome
	{
		
		/// <summary>
		/// The number of days of data to request for the Bank Income product
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_requested")]
		public System.Nullable<System.Int32> Days_requested { get; set; }
	}
	
	/// <summary>
	/// An optional set of parameters corresponding to transactions options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPublicTokenCreateRequestOptionsTransactions
	{
		
		/// <summary>
		/// The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
	}
	
	/// <summary>
	/// SandboxPublicTokenCreateResponse defines the response schema for `/sandbox/public_token/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxPublicTokenCreateResponse
	{
		
		/// <summary>
		/// A public token that can be exchanged for an access token using `/item/public_token/exchange`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="public_token")]
		public string Public_token { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferFireWebhookRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The URL to which the webhook should be sent.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook")]
		public string Webhook { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/fire_webhook`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferFireWebhookResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/repayment/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferRepaymentSimulateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/repayment/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferRepaymentSimulateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferSimulateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The asynchronous event to be simulated. May be: `posted`, `settled`, `failed`, or `returned`.
		///
		///An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:
		///
		///`pending` --> `failed`
		///
		///`pending` --> `posted`
		///
		///`posted` --> `returned`
		///
		///`posted` --> `settled`
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_type")]
		public string Event_type { get; set; }
		
		/// <summary>
		/// The failure reason if the event type for a transfer is `"failed"` or `"returned"`. Null value otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public TransferFailure Failure_reason { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
	}
	
	/// <summary>
	/// The failure reason if the event type for a transfer is `"failed"` or `"returned"`. Null value otherwise.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferFailure
	{
		
		/// <summary>
		/// The ACH return code, e.g. `R01`.  A return code will be provided if and only if the transfer status is `returned`. For a full listing of ACH return codes, see [Transfer errors](https://plaid.com/docs/errors/transfer/#ach-return-codes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_return_code")]
		public string Ach_return_code { get; set; }
		
		/// <summary>
		/// A human-readable description of the reason for the failure or reversal.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferSimulateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/sweep/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferSweepSimulateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/sweep/simulate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferSweepSimulateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A sweep returned from the `/sandbox/transfer/sweep/simulate` endpoint.
		///Can be null if there are no transfers to include in a sweep.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sweep")]
		public SimulatedTransferSweep Sweep { get; set; }
	}
	
	/// <summary>
	/// A sweep returned from the `/sandbox/transfer/sweep/simulate` endpoint.
	///Can be null if there are no transfers to include in a sweep.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimulatedTransferSweep
	{
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/test_clock/advance`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockAdvanceRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_virtual_time")]
		public System.DateTimeOffset New_virtual_time { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a test clock.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_clock_id")]
		public string Test_clock_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/test_clock/advance`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockAdvanceResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/test_clock/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="virtual_time")]
		public System.DateTimeOffset Virtual_time { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/test_clock/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockCreateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Defines the test clock for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_clock")]
		public TransferTestClock Test_clock { get; set; }
	}
	
	/// <summary>
	/// Defines the test clock for a transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferTestClock
	{
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a test clock.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_clock_id")]
		public string Test_clock_id { get; set; }
		
		/// <summary>
		/// The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="virtual_time")]
		public System.DateTimeOffset Virtual_time { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/test_clock/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a test clock.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_clock_id")]
		public string Test_clock_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/test_clock/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockGetResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Defines the test clock for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_clock")]
		public TransferTestClock Test_clock { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/sandbox/transfer/test_clock/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of test clocks to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end virtual timestamp of test clocks to return. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_virtual_time")]
		public System.Nullable<System.DateTimeOffset> End_virtual_time { get; set; }
		
		/// <summary>
		/// The number of test clocks to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start virtual timestamp of test clocks to return. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_virtual_time")]
		public System.Nullable<System.DateTimeOffset> Start_virtual_time { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/sandbox/transfer/test_clock/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SandboxTransferTestClockListResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_clocks")]
		public TransferTestClock[] Test_clocks { get; set; }
	}
	
	/// <summary>
	/// An indicator for when scopes are being updated. When scopes are updated via enrollment (i.e. OAuth), the partner must send `ENROLLMENT`. When scopes are updated in a post-enrollment view, the partner must send `PORTAL`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScopesContext
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENROLLMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PORTAL = 1,
	}
	
	/// <summary>
	/// The scopes object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScopesNullable : Scopes
	{
	}
	
	/// <summary>
	/// Analysis information describing why a screening hit matched the provided user information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreeningHitAnalysis
	{
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dates_of_birth")]
		public EntityScreeningHitAnalysisDocuments Dates_of_birth { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public EntityScreeningHitAnalysisDocuments Documents { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public EntityScreeningHitAnalysisDocuments Locations { get; set; }
		
		/// <summary>
		/// An enum indicating the match type between data provided by user and data checked against an external data source.
		///
		///
		///`match` indicates that the provided input data was a strong match against external data.
		///
		///`partial_match` indicates the data approximately matched against external data. For example, "Knope" vs. "Knope-Wyatt" for last name.
		///
		///`no_match` indicates that Plaid was able to perform a check against an external data source and it did not match the provided input data.
		///
		///`no_data` indicates that Plaid was unable to find external data to compare against the provided input data.
		///
		///`no_input` indicates that Plaid was unable to perform a check because no information was provided for this field by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public EntityScreeningHitAnalysisDocuments Names { get; set; }
		
		/// <summary>
		/// The version of the screening's `search_terms` that were compared when the screening hit was added. screening hits are immutable once they have been reviewed. If changes are detected due to updates to the screening's `search_terms`, the associated program, or the list's source data prior to review, the screening hit will be updated to reflect those changes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms_version")]
		public double Search_terms_version { get; set; }
	}
	
	/// <summary>
	/// Information associated with the watchlist hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreeningHitData
	{
		
		/// <summary>
		/// Dates of birth associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dates_of_birth")]
		public ScreeningHitDateOfBirthItem[] Dates_of_birth { get; set; }
		
		/// <summary>
		/// Documents associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public ScreeningHitDocumentsItems[] Documents { get; set; }
		
		/// <summary>
		/// Locations associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public GenericScreeningHitLocationItems[] Locations { get; set; }
		
		/// <summary>
		/// Names associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public ScreeningHitNamesItems[] Names { get; set; }
	}
	
	/// <summary>
	/// Analyzed date of birth for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreeningHitDateOfBirthItem
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// A date range with a start and end date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DateRange Data { get; set; }
	}
	
	/// <summary>
	/// Analyzed document information for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreeningHitDocumentsItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// An official document, usually issued by a governing body or institution, with an associated identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public WatchlistScreeningDocument Data { get; set; }
	}
	
	/// <summary>
	/// An official document, usually issued by a governing body or institution, with an associated identifier.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningDocument
	{
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Required
		/// Min length: 4
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Number { get; set; }
		
		/// <summary>
		/// The kind of official document represented by this object.
		///
		///`birth_certificate` - A certificate of birth
		///
		///`drivers_license` - A license to operate a motor vehicle
		///
		///`immigration_number` - Immigration or residence documents
		///
		///`military_id` - Identification issued by a military group
		///
		///`other` - Any document not covered by other categories
		///
		///`passport` - An official passport issue by a government
		///
		///`personal_identification` - Any generic personal identification that is not covered by other categories
		///
		///`ration_card` - Identification that entitles the holder to rations
		///
		///`ssn` - United States Social Security Number
		///
		///`student_id` - Identification issued by an educational institution
		///
		///`tax_id` - Identification issued for the purpose of collecting taxes
		///
		///`travel_document` - Visas, entry permits, refugee documents, etc.
		///
		///`voter_id` - Identification issued for the purpose of voting
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public WatchlistScreeningDocumentType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WatchlistScreeningDocumentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		birth_certificate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		drivers_license = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		immigration_number = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		military_id = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		passport = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal_identification = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ration_card = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ssn = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		student_id = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tax_id = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		travel_document = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		voter_id = 12,
	}
	
	/// <summary>
	/// Analyzed name information for the associated hit
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreeningHitNamesItems
	{
		
		/// <summary>
		/// Summary object reflecting the match result of the associated data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public MatchSummary Analysis { get; set; }
		
		/// <summary>
		/// Name information for the associated individual watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public IndividualScreeningHitNames Data { get; set; }
	}
	
	/// <summary>
	/// Fired when an individual screening status has changed, which can occur manually via the dashboard or during ongoing monitoring.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreeningStatusUpdatedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="screening_id")]
		public string Screening_id { get; set; }
		
		/// <summary>
		/// `STATUS_UPDATED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `SCREENING`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// An object containing a BACS account number and sort code. If an IBAN is not provided or if this recipient needs to accept domestic GBP-denominated payments, BACS data is required.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SenderBACSNullable : RecipientBACS
	{
	}
	
	/// <summary>
	/// Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ServiceProductFulfillmentIdentifier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOA = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOETRANSACTIONS = 1,
	}
	
	/// <summary>
	/// The payment decision from the risk assessment.
	///
	///`APPROVE`: approve the transaction without requiring further actions from your customers. For example, use this field if you are placing a standard hold for all the approved transactions before making funds available to your customers. You should also use this field if you decide to accelerate the fund availability for your customers.
	///
	///`REVIEW`: the transaction requires manual review
	///
	///`REJECT`: reject the transaction
	///
	///`TAKE_OTHER_RISK_MEASURES`: for example, placing a longer hold on funds than those approved transactions or introducing customer frictions such as step-up verification/authentication
	///
	///`NOT_EVALUATED`: if only logging the Signal results without using them
	///
	///Possible values:  `APPROVE`, `REVIEW`, `REJECT`, `TAKE_OTHER_RISK_MEASURES`, `NOT_EVALUATED`
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SignalDecisionOutcome
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAKE_OTHER_RISK_MEASURES = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EVALUATED = 4,
	}
	
	/// <summary>
	/// SignalDecisionReportRequest defines the request schema for `/signal/decision/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalDecisionReportRequest
	{
		
		/// <summary>
		/// The amount (in USD) made available to your customers instantly following the debit transaction. It could be a partial amount of the requested transaction (example: 102.05).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_instantly_available")]
		public System.Nullable<System.Double> Amount_instantly_available { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
		/// Required
		/// Min length: 1
		/// Max length: 36
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_transaction_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 36)]
		public string Client_transaction_id { get; set; }
		
		/// <summary>
		/// The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate.
		///
		///For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days_funds_on_hold")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Days_funds_on_hold { get; set; }
		
		/// <summary>
		/// The payment decision from the risk assessment.
		///
		///`APPROVE`: approve the transaction without requiring further actions from your customers. For example, use this field if you are placing a standard hold for all the approved transactions before making funds available to your customers. You should also use this field if you decide to accelerate the fund availability for your customers.
		///
		///`REVIEW`: the transaction requires manual review
		///
		///`REJECT`: reject the transaction
		///
		///`TAKE_OTHER_RISK_MEASURES`: for example, placing a longer hold on funds than those approved transactions or introducing customer frictions such as step-up verification/authentication
		///
		///`NOT_EVALUATED`: if only logging the Signal results without using them
		///
		///Possible values:  `APPROVE`, `REVIEW`, `REJECT`, `TAKE_OTHER_RISK_MEASURES`, `NOT_EVALUATED`
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decision_outcome")]
		public ProcessorSignalDecisionReportRequestDecision_outcome Decision_outcome { get; set; }
		
		/// <summary>
		/// `true` if the ACH transaction was initiated, `false` otherwise.
		///
		///This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initiated")]
		public bool Initiated { get; set; }
		
		/// <summary>
		/// The payment method to complete the transaction after the risk assessment. It may be different from the default payment method.
		///
		///`SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
		///
		///`NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
		///
		///`STANDARD_ACH`: standard ACH by NACHA
		///
		///`REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
		///
		///`DEBIT_CARD`: if the default payment is over debit card networks
		///
		///`MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
		///
		///Possible values: `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_method")]
		public ProcessorSignalDecisionReportRequestPayment_method Payment_method { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// SignalDecisionReportResponse defines the response schema for `/signal/decision/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalDecisionReportResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// SignalEvaluateRequest defines the request schema for `/signal/evaluate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalEvaluateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` of the account that is the funding source for the proposed transaction. The `account_id` is returned in the `/accounts/get` endpoint as well as the [`onSuccess`](/docs/link/ios/#link-ios-onsuccess-linkSuccess-metadata-accounts-id) callback metadata.
		///
		///This will return an [`INVALID_ACCOUNT_ID`](/docs/errors/invalid-input/#invalid_account_id) error if the account has been removed at the bank or if the `account_id` is no longer valid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The transaction amount, in USD (e.g. `102.05`)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters.
		/// Required
		/// Min length: 1
		/// Max length: 36
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_transaction_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 36)]
		public string Client_transaction_id { get; set; }
		
		/// <summary>
		/// A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. The max length for this field is 36 characters. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
		/// Max length: 36
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// The default ACH or non-ACH payment method to complete the transaction.
		///`SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
		///`NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
		///`STANDARD_ACH`: standard ACH by NACHA
		///`REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
		///`DEBIT_CARD`: if the default payment is over debit card networks
		///`MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
		///Possible values:  `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_payment_method")]
		public string Default_payment_method { get; set; }
		
		/// <summary>
		/// Details about the end user's device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public SignalDevice Device { get; set; }
		
		/// <summary>
		/// `true` if the ACH transaction is a recurring transaction; `false` otherwise 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_recurring")]
		public System.Nullable<System.Boolean> Is_recurring { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Details about the end user initiating the transaction (i.e., the account holder).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public SignalUser User { get; set; }
		
		/// <summary>
		/// `true` if the end user is present while initiating the ACH transfer and the endpoint is being called; `false` otherwise (for example, when the ACH transfer is scheduled and the end user is not present, or you call this endpoint after the ACH transfer but before submitting the Nacha file for ACH processing).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_present")]
		public System.Nullable<System.Boolean> User_present { get; set; }
	}
	
	/// <summary>
	/// SignalEvaluateResponse defines the response schema for `/signal/income/evaluate`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalEvaluateResponse
	{
		
		/// <summary>
		/// The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:
		///
		///`days_since_first_plaid_connection`: The number of days since the first time the Item was connected to an application via Plaid
		///`plaid_connections_count_7d`: The number of times the Item has been connected to applications via Plaid over the past 7 days
		///`plaid_connections_count_30d`: The number of times the Item has been connected to applications via Plaid over the past 30 days
		///`total_plaid_connections_count`: The number of times the Item has been connected to applications via Plaid
		///`is_savings_or_money_market_account`: Indicates whether the ACH transaction funding account is a savings/money market account
		///
		///For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="core_attributes")]
		public SignalEvaluateCoreAttributes Core_attributes { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Risk scoring details broken down by risk category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public SignalScores Scores { get; set; }
		
		/// <summary>
		/// If bank information was not able to be used as features into the Signal model, this array contains warnings describing why we were missing bank data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public SignalWarning[] Warnings { get; set; }
	}
	
	/// <summary>
	/// Conveys information about the errors causing missing or stale bank data used to construct the /signal/evaluate scores and response
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalWarning
	{
		
		/// <summary>
		/// The particular warning code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warning_code")]
		public string Warning_code { get; set; }
		
		/// <summary>
		/// A developer-friendly representation of the warning code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warning_message")]
		public string Warning_message { get; set; }
		
		/// <summary>
		/// Broad categorization of the warning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warning_type")]
		public string Warning_type { get; set; }
	}
	
	/// <summary>
	/// The payment method to complete the transaction after the risk assessment. It may be different from the default payment method.
	///
	///`SAME_DAY_ACH`: Same Day ACH by NACHA. The debit transaction is processed and settled on the same day
	///
	///`NEXT_DAY_ACH`: Next Day ACH settlement for debit transactions, offered by some payment processors
	///
	///`STANDARD_ACH`: standard ACH by NACHA
	///
	///`REAL_TIME_PAYMENTS`: real-time payments such as RTP and FedNow
	///
	///`DEBIT_CARD`: if the default payment is over debit card networks
	///
	///`MULTIPLE_PAYMENT_METHODS`: if there is no default debit rail or there are multiple payment methods
	///
	///Possible values: `SAME_DAY_ACH`, `NEXT_DAY_ACH`, `STANDARD_ACH`, `REAL_TIME_PAYMENTS`, `DEBIT_CARD`, `MULTIPLE_PAYMENT_METHODS`
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SignalPaymentMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAME_DAY_ACH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_DAY_ACH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_ACH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REAL_TIME_PAYMENTS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBIT_CARD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTIPLE_PAYMENT_METHODS = 5,
	}
	
	/// <summary>
	/// SignalPrepareRequest defines the request schema for `/signal/prepare`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalPrepareRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// SignalPrepareResponse defines the response schema for `/signal/prepare`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalPrepareResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// SignalReturnReportRequest defines the request schema for `/signal/return/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalReturnReportRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
		/// Required
		/// Min length: 1
		/// Max length: 36
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_transaction_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 36)]
		public string Client_transaction_id { get; set; }
		
		/// <summary>
		/// Must be a valid ACH return code (e.g. "R01")
		///
		///If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="return_code")]
		public string Return_code { get; set; }
		
		/// <summary>
		/// Date and time when you receive the returns from your payment processors, in ISO 8601 format (`YYYY-MM-DDTHH:mm:ssZ`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returned_at")]
		public System.Nullable<System.DateTimeOffset> Returned_at { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// SignalReturnReportResponse defines the response schema for `/signal/return/report`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalReturnReportResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A type indicating whether a dashboard user, an API-based user, or Plaid last touched this object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Source
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dashboard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		link = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		system = 3,
	}
	
	/// <summary>
	/// The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneAccountType
	{
		
		/// <summary>
		/// A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="credit")]
		public string Credit { get; set; }
		
		/// <summary>
		/// An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth (`checking` and `savings` types only), Balance, Transactions, Identity, Payment Initiation, and Assets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="depository")]
		public string Depository { get; set; }
		
		/// <summary>
		/// An investment account. Supported products for `investment` accounts are: Balance and Investments. In API versions 2018-05-22 and earlier, this type is called `brokerage`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="investment")]
		public string Investment { get; set; }
		
		/// <summary>
		/// A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loan")]
		public string Loan { get; set; }
		
		/// <summary>
		/// Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="other")]
		public string Other { get; set; }
	}
	
	/// <summary>
	/// The following currency codes are supported by Plaid.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneCurrencyCodeList
	{
		
		/// <summary>
		/// Plaid supports all ISO 4217 currency codes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// List of unofficial currency codes
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	/// <summary>
	/// Buying an investment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneInvestmentTransactionBuyType
	{
		
		/// <summary>
		/// Assignment of short option holding
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignment")]
		public string Assignment { get; set; }
		
		/// <summary>
		/// Purchase to open or increase a position
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="buy")]
		public string Buy { get; set; }
		
		/// <summary>
		/// Purchase to close a short position
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="buy to cover")]
		public string Buy_to_cover { get; set; }
		
		/// <summary>
		/// Inflow of assets into a tax-advantaged account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contribution")]
		public string Contribution { get; set; }
		
		/// <summary>
		/// Purchase using proceeds from a cash dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dividend reinvestment")]
		public string Dividend_reinvestment { get; set; }
		
		/// <summary>
		/// Purchase using proceeds from a cash interest payment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interest reinvestment")]
		public string Interest_reinvestment { get; set; }
		
		/// <summary>
		/// Purchase using long-term capital gain cash proceeds
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long-term capital gain reinvestment")]
		public string Long_term_capital_gain_reinvestment { get; set; }
		
		/// <summary>
		/// Purchase using short-term capital gain cash proceeds
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="short-term capital gain reinvestment")]
		public string Short_term_capital_gain_reinvestment { get; set; }
	}
	
	/// <summary>
	/// Activity that modifies a cash position
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneInvestmentTransactionCashType
	{
		
		/// <summary>
		/// Fees paid for account maintenance
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account fee")]
		public string Account_fee { get; set; }
		
		/// <summary>
		/// Inflow of assets into a tax-advantaged account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contribution")]
		public string Contribution { get; set; }
		
		/// <summary>
		/// Inflow of cash into an account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deposit")]
		public string Deposit { get; set; }
		
		/// <summary>
		/// Inflow of cash from a dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dividend")]
		public string Dividend { get; set; }
		
		/// <summary>
		/// Inflow of cash from interest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interest")]
		public string Interest { get; set; }
		
		/// <summary>
		/// Fees paid for legal charges or services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal fee")]
		public string Legal_fee { get; set; }
		
		/// <summary>
		/// Long-term capital gain received as cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long-term capital gain")]
		public string Long_term_capital_gain { get; set; }
		
		/// <summary>
		/// Fees paid for investment management of a mutual fund or other pooled investment vehicle
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="management fee")]
		public string Management_fee { get; set; }
		
		/// <summary>
		/// Fees paid for maintaining margin debt
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="margin expense")]
		public string Margin_expense { get; set; }
		
		/// <summary>
		/// Inflow of cash from a non-qualified dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="non-qualified dividend")]
		public string Non_qualified_dividend { get; set; }
		
		/// <summary>
		/// Taxes paid on behalf of the investor for non-residency in investment jurisdiction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="non-resident tax")]
		public string Non_resident_tax { get; set; }
		
		/// <summary>
		/// Pending inflow of cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending credit")]
		public string Pending_credit { get; set; }
		
		/// <summary>
		/// Pending outflow of cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending debit")]
		public string Pending_debit { get; set; }
		
		/// <summary>
		/// Inflow of cash from a qualified dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualified dividend")]
		public string Qualified_dividend { get; set; }
		
		/// <summary>
		/// Short-term capital gain received as cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="short-term capital gain")]
		public string Short_term_capital_gain { get; set; }
		
		/// <summary>
		/// Inflow of stock from a distribution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stock distribution")]
		public string Stock_distribution { get; set; }
		
		/// <summary>
		/// Taxes paid on behalf of the investor
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax")]
		public string Tax { get; set; }
		
		/// <summary>
		/// Taxes withheld on behalf of the customer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax withheld")]
		public string Tax_withheld { get; set; }
		
		/// <summary>
		/// Fees incurred for transfer of a holding or account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transfer fee")]
		public string Transfer_fee { get; set; }
		
		/// <summary>
		/// Fees related to administration of a trust account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trust fee")]
		public string Trust_fee { get; set; }
		
		/// <summary>
		/// Unqualified capital gain received as cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unqualified gain")]
		public string Unqualified_gain { get; set; }
		
		/// <summary>
		/// Outflow of cash from an account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="withdrawal")]
		public string Withdrawal { get; set; }
	}
	
	/// <summary>
	/// Fees on the account, e.g. commission, bookkeeping, options-related.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneInvestmentTransactionFeeType
	{
		
		/// <summary>
		/// Fees paid for account maintenance
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account fee")]
		public string Account_fee { get; set; }
		
		/// <summary>
		/// Increase or decrease in quantity of item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjustment")]
		public string Adjustment { get; set; }
		
		/// <summary>
		/// Inflow of cash from a dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dividend")]
		public string Dividend { get; set; }
		
		/// <summary>
		/// Inflow of cash from interest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interest")]
		public string Interest { get; set; }
		
		/// <summary>
		/// Inflow of cash from interest receivable
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interest receivable")]
		public string Interest_receivable { get; set; }
		
		/// <summary>
		/// Fees paid for legal charges or services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal fee")]
		public string Legal_fee { get; set; }
		
		/// <summary>
		/// Long-term capital gain received as cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long-term capital gain")]
		public string Long_term_capital_gain { get; set; }
		
		/// <summary>
		/// Fees paid for investment management of a mutual fund or other pooled investment vehicle
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="management fee")]
		public string Management_fee { get; set; }
		
		/// <summary>
		/// Fees paid for maintaining margin debt
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="margin expense")]
		public string Margin_expense { get; set; }
		
		/// <summary>
		/// Inflow of cash from a non-qualified dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="non-qualified dividend")]
		public string Non_qualified_dividend { get; set; }
		
		/// <summary>
		/// Taxes paid on behalf of the investor for non-residency in investment jurisdiction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="non-resident tax")]
		public string Non_resident_tax { get; set; }
		
		/// <summary>
		/// Inflow of cash from a qualified dividend
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualified dividend")]
		public string Qualified_dividend { get; set; }
		
		/// <summary>
		/// Repayment of loan principal
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="return of principal")]
		public string Return_of_principal { get; set; }
		
		/// <summary>
		/// Short-term capital gain received as cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="short-term capital gain")]
		public string Short_term_capital_gain { get; set; }
		
		/// <summary>
		/// Inflow of stock from a distribution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stock distribution")]
		public string Stock_distribution { get; set; }
		
		/// <summary>
		/// Taxes paid on behalf of the investor
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax")]
		public string Tax { get; set; }
		
		/// <summary>
		/// Taxes withheld on behalf of the customer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax withheld")]
		public string Tax_withheld { get; set; }
		
		/// <summary>
		/// Fees incurred for transfer of a holding or account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transfer fee")]
		public string Transfer_fee { get; set; }
		
		/// <summary>
		/// Fees related to administration of a trust account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trust fee")]
		public string Trust_fee { get; set; }
		
		/// <summary>
		/// Unqualified capital gain received as cash
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unqualified gain")]
		public string Unqualified_gain { get; set; }
	}
	
	/// <summary>
	/// Selling an investment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneInvestmentTransactionSellType
	{
		
		/// <summary>
		/// Outflow of assets from a tax-advantaged account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distribution")]
		public string Distribution { get; set; }
		
		/// <summary>
		/// Exercise of an option or warrant contract
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exercise")]
		public string Exercise { get; set; }
		
		/// <summary>
		/// Sell to close or decrease an existing holding
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sell")]
		public string Sell { get; set; }
		
		/// <summary>
		/// Sell to open a short position
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sell short")]
		public string Sell_short { get; set; }
	}
	
	/// <summary>
	/// Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneInvestmentTransactionTransferType
	{
		
		/// <summary>
		/// Increase or decrease in quantity of item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjustment")]
		public string Adjustment { get; set; }
		
		/// <summary>
		/// Assignment of short option holding
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignment")]
		public string Assignment { get; set; }
		
		/// <summary>
		/// Exercise of an option or warrant contract
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exercise")]
		public string Exercise { get; set; }
		
		/// <summary>
		/// Expiration of an option or warrant contract
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expire")]
		public string Expire { get; set; }
		
		/// <summary>
		/// Stock exchanged at a pre-defined ratio as part of a merger between companies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merger")]
		public string Merger { get; set; }
		
		/// <summary>
		/// Request fiat or cryptocurrency to an address or email
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public string Request { get; set; }
		
		/// <summary>
		/// Inflow or outflow of fiat or cryptocurrency to an address or email
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send")]
		public string Send { get; set; }
		
		/// <summary>
		/// Inflow of stock from spin-off transaction of an existing holding
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spin off")]
		public string Spin_off { get; set; }
		
		/// <summary>
		/// Inflow of stock from a forward split of an existing holding
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split")]
		public string Split { get; set; }
		
		/// <summary>
		/// Trade of one cryptocurrency for another
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trade")]
		public string Trade { get; set; }
		
		/// <summary>
		/// Movement of assets into or out of an account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transfer")]
		public string Transfer { get; set; }
	}
	
	/// <summary>
	/// Valid values for investment transaction types and subtypes. Note that transactions representing inflow of cash will appear as negative amounts, outflow of cash will appear as positive amounts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StandaloneInvestmentTransactionType
	{
		
		/// <summary>
		/// Buying an investment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="buy")]
		public string Buy { get; set; }
		
		/// <summary>
		/// A cancellation of a pending transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cancel")]
		public string Cancel { get; set; }
		
		/// <summary>
		/// Activity that modifies a cash position
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cash")]
		public string Cash { get; set; }
		
		/// <summary>
		/// Fees on the account, e.g. commission, bookkeeping, options-related.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fee")]
		public string Fee { get; set; }
		
		/// <summary>
		/// Selling an investment
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sell")]
		public string Sell { get; set; }
		
		/// <summary>
		/// Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer")]
		public string Transfer { get; set; }
	}
	
	/// <summary>
	/// An instruction specifying what steps the new Identity Verification attempt should require the user to complete:
	///
	///
	///`reset` - Restart the user at the beginning of the session, regardless of whether they successfully completed part of their previous session.
	///
	///`incomplete` - Start the new session at the step that the user failed in the previous session, skipping steps that have already been successfully completed.
	///
	///`infer` - If the most recent Identity Verification attempt associated with the given `client_user_id` has a status of `failed` or `expired`, retry using the `incomplete` strategy. Otherwise, use the `reset` strategy.
	///
	///`custom` - Start the new session with a custom configuration, specified by the value of the `steps` field
	///
	///Note:
	///
	///The `incomplete` strategy cannot be applied if the session's failing step is `screening` or `risk_check`.
	///
	///The `infer` strategy cannot be applied if the session's status is still `active`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Strategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reset = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		incomplete = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		infer = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom = 3,
	}
	
	/// <summary>
	/// Fired when an Item's transactions change. This can be due to any event resulting in new changes, such as an initial 30-day transactions fetch upon the initialization of an Item with transactions, the backfill of historical transactions that occurs shortly after, or when changes are populated from a regularly-scheduled transactions update job. It is recommended to listen for the `SYNC_UPDATES_AVAILABLE` webhook when using the `/transactions/sync` endpoint. Note that when using `/transactions/sync` the older webhooks `INITIAL_UPDATE`, `HISTORICAL_UPDATE`, `DEFAULT_UPDATE`, and `TRANSACTIONS_REMOVED`, which are intended for use with `/transactions/get`, will also continue to be sent in order to maintain backwards compatibility. It is not necessary to listen for and respond to those webhooks when using `/transactions/sync`.
	///
	///After receipt of this webhook, the new changes can be fetched for the Item from `/transactions/sync`.
	///
	///Note that to receive this webhook for an Item, `/transactions/sync` must have been called at least once on that Item. This means that, unlike the `INITIAL_UPDATE` and `HISTORICAL_UPDATE` webhooks, it will not fire immediately upon Item creation. If `/transactions/sync` is called on an Item that was *not* initialized with Transactions, the webhook will fire twice: once the first 30 days of transactions data has been fetched, and a second time when all available historical transactions data has been fetched.
	///
	///This webhook will typically not fire in the Sandbox environment, due to the lack of dynamic transactions data. To test this webhook in Sandbox, call `/sandbox/item/fire_webhook`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SyncUpdatesAvailableWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// Indicates if historical pull information is available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="historical_update_complete")]
		public bool Historical_update_complete { get; set; }
		
		/// <summary>
		/// Indicates if initial pull information is available.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initial_update_complete")]
		public bool Initial_update_complete { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `SYNC_UPDATES_AVAILABLE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// A value from a MISMO prescribed list that classifies identification numbers used by the Internal Revenue Service (IRS) in the administration of tax laws. A Social Security number (SSN) is issued by the SSA; all other taxpayer identification numbers are issued by the IRS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaxpayerIdentifierType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IndividualTaxpayerIdentificationNumber = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SocialSecurityNumber = 1,
	}
	
	/// <summary>
	/// Commonly used term to describe the line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TotalCanonicalDescription
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BONUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMISSION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERTIME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAID TIME OFF")]
		PAID_TIME_OFF = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REGULAR PAY")]
		REGULAR_PAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VACATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EMPLOYEE MEDICARE")]
		EMPLOYEE_MEDICARE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FICA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SOCIAL SECURITY EMPLOYEE TAX")]
		SOCIAL_SECURITY_EMPLOYEE_TAX = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDICAL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VISION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENTAL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NET PAY")]
		NET_PAY = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAXES = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_FOUND = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 16,
	}
	
	/// <summary>
	/// A representation of a transaction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Transaction : TransactionBase
	{
		
		/// <summary>
		/// The date that the transaction was authorized. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorized_date")]
		public System.Nullable<System.DateOnly> Authorized_date { get; set; }
		
		/// <summary>
		/// Date and time when a transaction was authorized in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).
		///
		///This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00). This field is only populated in API version 2019-05-29 and later.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorized_datetime")]
		public System.Nullable<System.DateTimeOffset> Authorized_datetime { get; set; }
		
		/// <summary>
		/// The counterparties present in the transaction. Counterparties, such as the financial institutions, are extracted by Plaid from the raw description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="counterparties")]
		public TransactionCounterparty[] Counterparties { get; set; }
		
		/// <summary>
		/// Date and time when a transaction was posted in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).
		///
		///This field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00). This field is only populated in API version 2019-05-29 and later.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datetime")]
		public System.Nullable<System.DateTimeOffset> Datetime { get; set; }
		
		/// <summary>
		/// The channel used to make a payment.
		///`online:` transactions that took place online.
		///
		///`in store:` transactions that were made at a physical location.
		///
		///`other:` transactions that relate to banks, e.g. fees or deposits.
		///
		///This field replaces the `transaction_type` field.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payment_channel")]
		public TransactionPayment_channel Payment_channel { get; set; }
		
		/// <summary>
		/// Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category")]
		public PersonalFinanceCategory Personal_finance_category { get; set; }
		
		/// <summary>
		/// A link to the icon associated with the primary personal finance category. The logo will always be 100x100 pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category_icon_url")]
		public string Personal_finance_category_icon_url { get; set; }
		
		/// <summary>
		/// An identifier classifying the transaction type.
		///
		///This field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.
		///
		///`adjustment:` Bank adjustment
		///
		///`atm:` Cash deposit or withdrawal via an automated teller machine
		///
		///`bank charge:` Charge or fee levied by the institution
		///
		///`bill payment`: Payment of a bill
		///
		///`cash:` Cash deposit or withdrawal
		///
		///`cashback:` Cash withdrawal while making a debit card purchase
		///
		///`cheque:` Document ordering the payment of money to another person or organization
		///
		///`direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval
		///
		///`interest:` Interest earned or incurred
		///
		///`purchase:` Purchase made with a debit or credit card
		///
		///`standing order:` Payment instructed by the account holder to a third party at a regular interval
		///
		///`transfer:` Transfer of money between accounts
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_code")]
		public System.Nullable<TransactionTransaction_code> Transaction_code { get; set; }
	}
	
	/// <summary>
	/// The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionCounterparty
	{
		
		/// <summary>
		/// The URL of a logo associated with the counterparty, if available. The logo is formatted as a 100x100 pixel PNG filepath.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The counterparty type.
		///
		///`merchant`: a provider of goods or services for purchase
		///`financial_institution`: a financial entity (bank, credit union, BNPL, fintech)
		///`payment_app`: a transfer or P2P app (e.g. Zelle)
		///`marketplace`: a marketplace (e.g DoorDash, Google Play Store)
		///`payment_terminal`: a point-of-sale payment terminal (e.g Square, Toast)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CounterpartyType Type { get; set; }
		
		/// <summary>
		/// The website associated with the counterparty.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionPayment_channel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		online = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in store")]
		in_store = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionTransaction_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		adjustment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		atm = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bank charge")]
		bank_charge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bill payment")]
		bill_payment = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cash = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cashback = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cheque = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="direct debit")]
		direct_debit = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		interest = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		purchase = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="standing order")]
		standing_order = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transfer = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 12,
	}
	
	/// <summary>
	/// A representation of a transaction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionBase
	{
		
		/// <summary>
		/// The ID of the account in which this transaction occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_owner")]
		public string Account_owner { get; set; }
		
		/// <summary>
		/// The settled value of the transaction, denominated in the transactions's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public double Amount { get; set; }
		
		/// <summary>
		/// A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		///
		///If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string[] Category { get; set; }
		
		/// <summary>
		/// The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		///
		///If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// The check number of the transaction. This field is only populated for check transactions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="check_number")]
		public string Check_number { get; set; }
		
		/// <summary>
		/// For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.DateOnly Date { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// A representation of where a transaction took place
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
		
		/// <summary>
		/// The logo associated with the merchant, if available. Formatted as a 100x100 pixels PNG file path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logo_url")]
		public string Logo_url { get; set; }
		
		/// <summary>
		/// The merchant name, as enriched by Plaid from the `name` field. This is typically a more human-readable version of the merchant counterparty in the transaction. For some bank transactions (such as checks or account transfers) where there is no meaningful merchant name, this value will be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merchant_name")]
		public string Merchant_name { get; set; }
		
		/// <summary>
		/// The merchant name or transaction description.
		///
		///If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/get`, this field is in beta and will be omitted unless the client is both enrolled in the closed beta program and has set `options.include_original_description` to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="original_description")]
		public string Original_description { get; set; }
		
		/// <summary>
		/// Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.
		///
		///If the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_meta")]
		public PaymentMeta Payment_meta { get; set; }
		
		/// <summary>
		/// When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pending")]
		public bool Pending { get; set; }
		
		/// <summary>
		/// The ID of a posted transaction's associated pending transaction, where applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending_transaction_id")]
		public string Pending_transaction_id { get; set; }
		
		/// <summary>
		/// The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
		
		/// <summary>
		/// Please use the `payment_channel` field, `transaction_type` will be deprecated in the future.
		///
		///`digital:` transactions that took place online.
		///
		///`place:` transactions that were made at a physical location.
		///
		///`special:` transactions that relate to banks, e.g. fees or deposits.
		///
		///`unresolved:` transactions that do not fit into the other three types.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transaction_type")]
		public System.Nullable<TransactionBaseTransaction_type> Transaction_type { get; set; }
		
		/// <summary>
		/// The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
		
		/// <summary>
		/// The website associated with the merchant, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionBaseTransaction_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		digital = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		place = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		special = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unresolved = 3,
	}
	
	/// <summary>
	/// An identifier classifying the transaction type.
	///
	///This field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.
	///
	///`adjustment:` Bank adjustment
	///
	///`atm:` Cash deposit or withdrawal via an automated teller machine
	///
	///`bank charge:` Charge or fee levied by the institution
	///
	///`bill payment`: Payment of a bill
	///
	///`cash:` Cash deposit or withdrawal
	///
	///`cashback:` Cash withdrawal while making a debit card purchase
	///
	///`cheque:` Document ordering the payment of money to another person or organization
	///
	///`direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval
	///
	///`interest:` Interest earned or incurred
	///
	///`purchase:` Purchase made with a debit or credit card
	///
	///`standing order:` Payment instructed by the account holder to a third party at a regular interval
	///
	///`transfer:` Transfer of money between accounts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		adjustment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		atm = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bank charge")]
		bank_charge = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bill payment")]
		bill_payment = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cash = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cashback = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cheque = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="direct debit")]
		direct_debit = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		interest = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		purchase = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="standing order")]
		standing_order = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transfer = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 12,
	}
	
	/// <summary>
	/// A grouping of related transactions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionStream
	{
		
		/// <summary>
		/// The ID of the account to which the stream belongs
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Object with data pertaining to an amount on the transaction stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="average_amount")]
		public TransactionStreamAmount Average_amount { get; set; }
		
		/// <summary>
		/// A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/api/products/transactions/#categoriesget).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string[] Category { get; set; }
		
		/// <summary>
		/// The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/api/products/transactions/#categoriesget).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// A description of the transaction stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The posted date of the earliest transaction in the stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_date")]
		public System.DateOnly First_date { get; set; }
		
		/// <summary>
		/// Describes the frequency of the transaction stream.
		///
		///`WEEKLY`: Assigned to a transaction stream that occurs approximately every week.
		///
		///`BIWEEKLY`: Assigned to a transaction stream that occurs approximately every 2 weeks.
		///
		///`SEMI_MONTHLY`: Assigned to a transaction stream that occurs approximately twice per month. This frequency is typically seen for inflow transaction streams.
		///
		///`MONTHLY`: Assigned to a transaction stream that occurs approximately every month.
		///
		///`ANNUALLY`: Assigned to a transaction stream that occurs approximately every year.
		///
		///`UNKNOWN`: Assigned to a transaction stream that does not fit any of the pre-defined frequencies.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public RecurringTransactionFrequency Frequency { get; set; }
		
		/// <summary>
		/// Indicates whether the transaction stream is still live.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_active")]
		public bool Is_active { get; set; }
		
		/// <summary>
		/// Object with data pertaining to an amount on the transaction stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_amount")]
		public TransactionStreamAmount Last_amount { get; set; }
		
		/// <summary>
		/// The posted date of the latest transaction in the stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_date")]
		public System.DateOnly Last_date { get; set; }
		
		/// <summary>
		/// The merchant associated with the transaction stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="merchant_name")]
		public string Merchant_name { get; set; }
		
		/// <summary>
		/// Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category")]
		public PersonalFinanceCategory Personal_finance_category { get; set; }
		
		/// <summary>
		/// The current status of the transaction stream.
		///
		///`MATURE`: A `MATURE` recurring stream should have at least 3 transactions and happen on a regular cadence (For Annual recurring stream, we will mark it `MATURE` after 2 instances).
		///
		///`EARLY_DETECTION`: When a recurring transaction first appears in the transaction history and before it fulfills the requirement of a mature stream, the status will be `EARLY_DETECTION`.
		///
		///`TOMBSTONED`: A stream that was previously in the `EARLY_DETECTION` status will move to the `TOMBSTONED` status when no further transactions were found at the next expected date.
		///
		///`UNKNOWN`: A stream is assigned an `UNKNOWN` status when none of the other statuses are applicable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransactionStreamStatus Status { get; set; }
		
		/// <summary>
		/// A unique id for the stream
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stream_id")]
		public string Stream_id { get; set; }
		
		/// <summary>
		/// An array of Plaid transaction IDs belonging to the stream, sorted by posted date.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_ids")]
		public string[] Transaction_ids { get; set; }
	}
	
	/// <summary>
	/// Object with data pertaining to an amount on the transaction stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionStreamAmount
	{
		
		/// <summary>
		/// Represents the numerical value of an amount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the amount. Always `null` if `unofficial_currency_code` is non-`null`.
		///
		///See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unofficial currency code of the amount. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unofficial_currency_code")]
		public string Unofficial_currency_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionStreamStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATURE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EARLY_DETECTION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOMBSTONED = 3,
	}
	
	/// <summary>
	/// A representation of a transactions category rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsCategoryRule
	{
		
		/// <summary>
		/// Date and time when a rule was created in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier of the rule created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier of the Item the rule was created for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// Personal finance category unique identifier.
		///
		///In the personal finance category taxonomy, this field is represented by the detailed category field.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category")]
		public string Personal_finance_category { get; set; }
		
		/// <summary>
		/// A representation of transactions rule details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rule_details")]
		public TransactionsRuleDetails Rule_details { get; set; }
	}
	
	/// <summary>
	/// A representation of transactions rule details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRuleDetails
	{
		
		/// <summary>
		/// Transaction field for which the rule is defined.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="field")]
		public TransactionsRuleDetailsField Field { get; set; }
		
		/// <summary>
		/// For TRANSACTION_ID field, provide transaction_id. For NAME field, provide a string pattern.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// Transaction rule's match type. For TRANSACTION_ID field, EXACT_MATCH is available.
		///Matches are case sensitive.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public TransactionsRuleDetailsType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionsRuleDetailsField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTION_ID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAME = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionsRuleDetailsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSTRING_MATCH = 1,
	}
	
	/// <summary>
	/// TransactionsEnhanceGetRequest defines the request schema for `/transactions/enhance`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsEnhanceGetRequest
	{
		
		/// <summary>
		/// The type of account for the requested transactions (`depository` or `credit`).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public string Account_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// An array of raw transactions to be enhanced.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public ClientProvidedRawTransaction[] Transactions { get; set; }
	}
	
	/// <summary>
	/// TransactionsEnhanceGetResponse defines the response schema for `/beta/transactions/v1/enhance`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsEnhanceGetResponse
	{
		
		/// <summary>
		/// An array of enhanced transactions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enhanced_transactions")]
		public ClientProvidedEnhancedTransaction[] Enhanced_transactions { get; set; }
	}
	
	/// <summary>
	/// TransactionsEnrichGetRequest defines the request schema for `/transactions/enrich`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsEnrichGetRequest
	{
		
		/// <summary>
		/// The account type for the requested transactions (either `depository` or `credit`).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public string Account_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to be used with the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public TransactionsEnrichRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// An array of transaction objects to be enriched by Plaid. Maximum of 100 transactions per request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public ClientProvidedTransaction[] Transactions { get; set; }
	}
	
	/// <summary>
	/// An optional object to be used with the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsEnrichRequestOptions
	{
		
		/// <summary>
		/// Include `legacy_category` and `legacy_category_id` in the response (in addition to the default `personal_finance_category`).
		///
		///Categories are based on Plaid's legacy taxonomy. For a full list of legacy categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_legacy_category")]
		public System.Nullable<System.Boolean> Include_legacy_category { get; set; }
	}
	
	/// <summary>
	/// TransactionsEnrichGetResponse defines the response schema for `/transactions/enrich`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsEnrichGetResponse
	{
		
		/// <summary>
		/// A list of enriched transactions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enriched_transactions")]
		public ClientProvidedEnrichedTransaction[] Enriched_transactions { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// TransactionsGetRequest defines the request schema for `/transactions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.DateOnly End_date { get; set; }
		
		/// <summary>
		/// An optional object to be used with the request. If specified, `options` must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public TransactionsGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.DateOnly Start_date { get; set; }
	}
	
	/// <summary>
	/// An optional object to be used with the request. If specified, `options` must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsGetRequestOptions
	{
		
		/// <summary>
		/// A list of `account_ids` to retrieve for the Item
		///
		///Note: An error will be returned if a provided `account_id` is not associated with the Item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
		
		/// <summary>
		/// The number of transactions to fetch.
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Include counterparties and extran merchant fields in the transaction. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_logo_and_counterparty_beta")]
		public System.Nullable<System.Boolean> Include_logo_and_counterparty_beta { get; set; }
		
		/// <summary>
		/// Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager, or submit a [Support request](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/product-functionality) .
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_original_description")]
		public System.Nullable<System.Boolean> Include_original_description { get; set; }
		
		/// <summary>
		/// Include the [`personal_finance_category`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-personal-finance-category) object in the response.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		///
		///Weâ€™re introducing Category Rules - a new beta endpoint that will enable you to change the `personal_finance_category` for a transaction based on your usersâ€™ needs. When rules are set, the selected category will override the Plaid provided category. To learn more, send a note to transactions-feedback@plaid.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_personal_finance_category")]
		public System.Nullable<System.Boolean> Include_personal_finance_category { get; set; }
		
		/// <summary>
		/// Please use [`include_personal_finance_category`](https://plaid.com/docs/api/products/transactions/#transactions-get-request-options-include-personal-finance-category) instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_personal_finance_category_beta")]
		public System.Nullable<System.Boolean> Include_personal_finance_category_beta { get; set; }
		
		/// <summary>
		/// The number of transactions to skip. The default value is 0.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
	}
	
	/// <summary>
	/// TransactionsGetResponse defines the response schema for `/transactions/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsGetResponse
	{
		
		/// <summary>
		/// An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountBase[] Accounts { get; set; }
		
		/// <summary>
		/// Metadata about the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item")]
		public Item Item { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_transactions")]
		public int Total_transactions { get; set; }
		
		/// <summary>
		/// An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public Transaction[] Transactions { get; set; }
	}
	
	/// <summary>
	/// TransactionsRecurringGetRequest defines the request schema for `/transactions/recurring/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRecurringGetRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// A list of `account_ids` to retrieve for the Item
		///
		///Note: An error will be returned if a provided `account_id` is not associated with the Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_ids")]
		public string[] Account_ids { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An optional object to be used with the request. If specified, `options` must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public TransactionsRecurringGetRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to be used with the request. If specified, `options` must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRecurringGetRequestOptions
	{
		
		/// <summary>
		/// Include the [`personal_finance_category`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-personal-finance-category) object for each transaction stream in the response.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_personal_finance_category")]
		public System.Nullable<System.Boolean> Include_personal_finance_category { get; set; }
	}
	
	/// <summary>
	/// TransactionsRecurringGetResponse defines the response schema for `/transactions/recurring/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRecurringGetResponse
	{
		
		/// <summary>
		/// An array of depository transaction streams.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inflow_streams")]
		public TransactionStream[] Inflow_streams { get; set; }
		
		/// <summary>
		/// An array of expense transaction streams.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outflow_streams")]
		public TransactionStream[] Outflow_streams { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time transaction streams for the given account were updated on
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updated_datetime")]
		public System.DateTimeOffset Updated_datetime { get; set; }
	}
	
	/// <summary>
	/// TransactionsRefreshRequest defines the request schema for `/transactions/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRefreshRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// TransactionsRefreshResponse defines the response schema for `/transactions/refresh`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRefreshResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Fired when transaction(s) for an Item are deleted. The deleted transaction IDs are included in the webhook payload. Plaid will typically check for deleted transaction data several times a day.
	///
	///This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRemovedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// An array of `transaction_ids` corresponding to the removed transactions
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="removed_transactions")]
		public string[] Removed_transactions { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS_REMOVED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSACTIONS`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Transaction field for which the rule is defined.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionsRuleField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTION_ID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAME = 1,
	}
	
	/// <summary>
	/// Transaction rule's match type. For TRANSACTION_ID field, EXACT_MATCH is available.
	///Matches are case sensitive.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransactionsRuleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSTRING_MATCH = 1,
	}
	
	/// <summary>
	/// TransactionsRulesCreateRequest defines the request schema for `beta/transactions/rules/v1/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRulesCreateRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Personal finance detailed category.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="personal_finance_category")]
		public string Personal_finance_category { get; set; }
		
		/// <summary>
		/// A representation of transactions rule details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rule_details")]
		public TransactionsRuleDetails Rule_details { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// TransactionsRulesCreateResponse defines the response schema for `/beta/transactions/rules/v1/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRulesCreateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A representation of a transactions category rule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rule")]
		public TransactionsCategoryRule Rule { get; set; }
	}
	
	/// <summary>
	/// TransactionsRulesListRequest defines the request schema for `/beta/transactions/rules/v1/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRulesListRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// TransactionsRulesListResponse defines the response schema for `/beta/transactions/rules/v1/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRulesListResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A list of the Item's transaction rules
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public TransactionsCategoryRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// TransactionsRulesRemoveRequest defines the request schema for `/beta/transactions/rules/v1/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRulesRemoveRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A rule's unique identifier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rule_id")]
		public string Rule_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// TransactionsRulesRemoveResponse defines the response schema for `/beta/transactions/rules/v1/remove`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsRulesRemoveResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// TransactionsSyncRequest defines the request schema for `/transactions/sync`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsSyncRequest
	{
		
		/// <summary>
		/// The access token associated with the Item data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The number of transaction updates to fetch.
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update.
		///If omitted, the entire history of updates will be returned, starting with the first-added transactions on the item.
		///Note: The upper-bound length of this cursor is 256 characters of base64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// An optional object to be used with the request. If specified, `options` must not be `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public TransactionsSyncRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// An optional object to be used with the request. If specified, `options` must not be `null`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsSyncRequestOptions
	{
		
		/// <summary>
		/// Include counterparties and extra merchant fields in the transaction. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_logo_and_counterparty_beta")]
		public System.Nullable<System.Boolean> Include_logo_and_counterparty_beta { get; set; }
		
		/// <summary>
		/// Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager or submit a [Support request](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/product-functionality).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_original_description")]
		public System.Nullable<System.Boolean> Include_original_description { get; set; }
		
		/// <summary>
		/// Include the [`personal_finance_category`](https://plaid.com/docs/api/products/transactions/#transactions-sync-response-added-personal-finance-category) object in the response.
		///
		///See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
		///
		///Weâ€™re introducing Category Rules - a new beta endpoint that will enable you to change the `personal_finance_category` for a transaction based on your usersâ€™ needs. When rules are set, the selected category will override the Plaid provided category. To learn more, send a note to transactions-feedback@plaid.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="include_personal_finance_category")]
		public System.Nullable<System.Boolean> Include_personal_finance_category { get; set; }
	}
	
	/// <summary>
	/// TransactionsSyncResponse defines the response schema for `/transactions/sync`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransactionsSyncResponse
	{
		
		/// <summary>
		/// Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="added")]
		public Transaction[] Added { get; set; }
		
		/// <summary>
		/// Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, itâ€™s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="has_more")]
		public bool Has_more { get; set; }
		
		/// <summary>
		/// Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modified")]
		public Transaction[] Modified { get; set; }
		
		/// <summary>
		/// Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="removed")]
		public RemovedTransaction[] Removed { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Represents a transfer within the Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Transfer
	{
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// When `true`, you can still cancel this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cancellable")]
		public bool Cancellable { get; set; }
		
		/// <summary>
		/// The datetime when this transfer was created. This will be of the form `2006-01-02T15:04:05Z`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// The description of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The expected date when the full amount of the transfer settles at the consumersâ€™ account, if the transfer is credit; or at the customer's business checking account, if the transfer is debit. Only set for ACH transfers and is null for non-ACH transfers. Only set for ACH transfers. This will be of the form YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expected_settlement_date")]
		public System.Nullable<System.DateOnly> Expected_settlement_date { get; set; }
		
		/// <summary>
		/// The expected settlement schedule of this transfer, if posted. Only applies to ACH debit transfers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expected_settlement_schedule")]
		public TransferExpectedSettlementScheduleItem[] Expected_settlement_schedule { get; set; }
		
		/// <summary>
		/// The failure reason if the event type for a transfer is `"failed"` or `"returned"`. Null value otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public TransferFailure Failure_reason { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// Indicates whether the transfer is guaranteed by Plaid (Guarantee customers only). This field will contain either `GUARANTEED` or `NOT_GUARANTEED` indicating whether Plaid will guarantee the transfer. If the transfer is not guaranteed, additional information will be provided in the `guarantee_decision_rationale` field. Refer to the `code` field in `guarantee_decision_rationale` for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantee_decision")]
		public System.Nullable<TransferGuarantee_decision> Guarantee_decision { get; set; }
		
		/// <summary>
		/// The rationale for Plaid's decision to not guarantee a transfer. Will be `null` unless `guarantee_decision` is `NOT_GUARANTEED`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantee_decision_rationale")]
		public TransferAuthorizationGuaranteeDecisionRationale Guarantee_decision_rationale { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount, e.g. "USD"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public TransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public TransferNetwork Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account that was used for this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID that is the originator of this transfer. Only present if created on behalf of another client as a third-party sender (TPS).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// The id of the recurring transfer if this transfer belongs to a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// A list of refunds associated with this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refunds")]
		public TransferRefund[] Refunds { get; set; }
		
		/// <summary>
		/// The accumulated amount that have been swept to date. This number does not reflect `return_swept` amount if the transfer is returned. Only applies to ACH debit transfers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settled_amount")]
		public string Settled_amount { get; set; }
		
		/// <summary>
		/// The date 3 business days from settlement date indicating the following ACH returns can no longer happen: R01, R02, R03, R29. This will be of the form YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="standard_return_window")]
		public System.Nullable<System.DateOnly> Standard_return_window { get; set; }
		
		/// <summary>
		/// The status of the transfer.
		///
		///`pending`: A new transfer was created; it is in the pending state.
		///`posted`: The transfer has been successfully submitted to the payment network.
		///`settled`: Credits are available to be withdrawn or debits have been deducted from the Plaid linked account.
		///`cancelled`: The transfer was cancelled by the client.
		///`failed`: The transfer failed, no funds were moved.
		///`returned`: A posted transfer was returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransferStatus Status { get; set; }
		
		/// <summary>
		/// The status of the sweep for the transfer.
		///
		///`unswept`: The transfer hasn't been swept yet.
		///`swept`: The transfer was swept to the sweep account.
		///`swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customerâ€™s business checking account.
		///`return_swept`: The transfer was returned, funds were pulled back or pushed back to the sweep account.
		///`null`: The transfer will never be swept (e.g. if the transfer is cancelled or returned before being swept)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sweep_status")]
		public System.Nullable<TransferSweep_status> Sweep_status { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The date 61 business days from settlement date indicating the following ACH returns can no longer happen: R05, R07, R10, R11, R51, R33, R37, R38, R51, R52, R53. This will be of the form YYYY-MM-DD.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unauthorized_return_window")]
		public System.Nullable<System.DateOnly> Unauthorized_return_window { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInResponse User { get; set; }
	}
	
	/// <summary>
	/// Defines an expected sweep date and amount.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferExpectedSettlementScheduleItem
	{
		
		/// <summary>
		/// The accumulated amount that have been swept by `settlement_date`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="settled_amount")]
		public string Settled_amount { get; set; }
		
		/// <summary>
		/// The settlement date of a sweep for this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="settlement_date")]
		public System.DateOnly Settlement_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferGuarantee_decision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GUARANTEED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_GUARANTEED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// The rationale for Plaid's decision to not guarantee a transfer. Will be `null` unless `guarantee_decision` is `NOT_GUARANTEED`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationGuaranteeDecisionRationale
	{
		
		/// <summary>
		/// A code representing the reason Plaid declined to guarantee this transfer:
		///
		///`RETURN_BANK`: The risk of a bank-initiated return (for example, an R01/NSF) is too high to guarantee this transfer.
		///
		///`RETURN_CUSTOMER`: The risk of a customer-initiated return (for example, a R10/Unauthorized) is too high to guarantee this transfer.
		///
		///`GUARANTEE_LIMIT_REACHED`: This transfer is low-risk, but Guarantee has exhausted an internal limit on the number or rate of guarantees that applies to this transfer.
		///
		///`RISK_ESTIMATE_UNAVAILABLE`: A risk estimate is unavailable for this Item.
		///
		///`REQUIRED_PARAM_MISSING`: Required fields are missing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public TransferAuthorizationGuaranteeDecisionRationaleCode Code { get; set; }
		
		/// <summary>
		/// A human-readable description of why the transfer cannot be guaranteed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferAuthorizationGuaranteeDecisionRationaleCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETURN_BANK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETURN_CUSTOMER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GUARANTEE_LIMIT_REACHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK_ESTIMATE_UNAVAILABLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUIRED_PARAM_MISSING = 4,
	}
	
	/// <summary>
	/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
	///The JSON values must be Strings (no nested JSON objects allowed)
	///Only ASCII characters may be used
	///Maximum of 50 key/value pairs
	///Maximum key length of 40 characters
	///Maximum value length of 500 characters
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferMetadata
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rtp = 2,
	}
	
	/// <summary>
	/// Represents a refund within the Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefund
	{
		
		/// <summary>
		/// The amount of the refund (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The datetime when this refund was created. This will be of the form `2006-01-02T15:04:05Z`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a refund.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The status of the refund.
		///
		///`pending`: A new refund was created; it is in the pending state.
		///`posted`: The refund has been successfully submitted to the payment network.
		///`cancelled`: The refund was cancelled by the client.
		///`failed`: The refund failed or was returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransferRefundStatus Status { get; set; }
		
		/// <summary>
		/// The ID of the transfer to refund.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferRefundStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		settled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		returned = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferSweep_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unswept = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept_settled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_swept = 4,
	}
	
	/// <summary>
	/// Contains the authorization decision for a proposed transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorization
	{
		
		/// <summary>
		/// The datetime representing when the authorization was created, in the format `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// 
		///A decision regarding the proposed transfer.
		///
		///`approved` â€“ The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.
		///
		///`declined` â€“ Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="decision")]
		public RecurringTransferSkippedWebhookAuthorization_decision Decision { get; set; }
		
		/// <summary>
		/// The rationale for Plaid's decision regarding a proposed transfer. It is always set for `declined` decisions, and may or may not be null for `approved` decisions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="decision_rationale")]
		public TransferAuthorizationDecisionRationale Decision_rationale { get; set; }
		
		/// <summary>
		/// Indicates whether the transfer is guaranteed by Plaid (Guarantee customers only). This field will contain either `GUARANTEED` or `NOT_GUARANTEED` indicating whether Plaid will guarantee the transfer. If the transfer is not guaranteed, additional information will be provided in the `guarantee_decision_rationale` field. Refer to the `code` field in `guarantee_decision_rationale` for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantee_decision")]
		public System.Nullable<TransferAuthorizationGuarantee_decision> Guarantee_decision { get; set; }
		
		/// <summary>
		/// The rationale for Plaid's decision to not guarantee a transfer. Will be `null` unless `guarantee_decision` is `NOT_GUARANTEED`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantee_decision_rationale")]
		public TransferAuthorizationGuaranteeDecisionRationale Guarantee_decision_rationale { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer authorization.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Details regarding the proposed transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="proposed_transfer")]
		public TransferAuthorizationProposedTransfer Proposed_transfer { get; set; }
	}
	
	/// <summary>
	/// The rationale for Plaid's decision regarding a proposed transfer. It is always set for `declined` decisions, and may or may not be null for `approved` decisions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationDecisionRationale
	{
		
		/// <summary>
		/// A code representing the rationale for approving or declining the proposed transfer. Possible values are:
		///
		///`MANUALLY_VERIFIED_ITEM` â€“ Item created via same-day micro deposits, limited information available. Plaid will offer `approved` as a transaction decision.
		///
		///`ITEM_LOGIN_REQUIRED` â€“ Unable to collect the account information due to Item staleness. Can be rectified using Link in update mode. Plaid will offer `approved` as a transaction decision.
		///
		///`PAYMENT_PROFILE_LOGIN_REQUIRED` - Unable to collect the account information due to invalid login when using Payment Profiles. Can be rectified using update mode for Payment Profile. Plaid will offer `approved` as a transaction decision.
		///
		///`ERROR` â€“ Unable to collect the account information due to an error. Plaid will offer `approved` as a transaction decision.
		///
		///`NSF` â€“ Transaction likely to result in a return due to insufficient funds. Plaid will offer `declined` as a transaction decision.
		///
		///`RISK` - Transaction is high-risk. Plaid will offer `declined` as a transaction decision.
		///
		///`TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit. Plaid will offer `declined` as a transaction decision.
		///
		///`MIGRATED_ACCOUNT_ITEM` - Item created via `/transfer/account_migration` endpoint, limited information available. Plaid will offer `approved` as a transaction decision.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public RecurringTransferSkippedWebhookAuthorization_decision_rationale_code Code { get; set; }
		
		/// <summary>
		/// A human-readable description of the code associated with a transfer approval or transfer decline.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferAuthorizationGuarantee_decision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GUARANTEED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_GUARANTEED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Details regarding the proposed transfer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationProposedTransfer
	{
		
		/// <summary>
		/// The Plaid `account_id` for the account that will be debited or credited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount. The default value is "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for the origination account that was used for this transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID that is the originator of this transfer. Only present if created on behalf of another client as a third-party sender (TPS).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInResponse User { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/authorization/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationCreateRequest
	{
		
		/// <summary>
		/// The Plaid `access_token` for the account that will be debited or credited. Required if not using `payment_profile_token`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The unique identifier returned by Plaid's [beacon](https://plaid.com/docs/transfer/guarantee/#using-a-beacon) when it is run on your webpage. Required for Guarantee customers who are not using [Transfer UI](https://plaid.com/docs/transfer/using-transfer-ui/) and have a web checkout experience.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="beacon_session_id")]
		public string Beacon_session_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Information about the device being used to initiate the authorization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public TransferAuthorizationDevice Device { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited. Defaults to the account configured during onboarding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique authorization. Maximum of 50 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create an authorization fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single authorization is created.
		///
		///Failure to provide this key may result in duplicate charges.
		///
		///Required for guaranteed ACH customers.
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount. The default value is "USD".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public TransferAuthorizationCreateRequestNetwork Network { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for the origination account for this authorization. If not specified, the default account will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID that is the originator of this transfer. Only needed if creating transfers on behalf of another client as a third-party sender (TPS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// The payment profile token associated with the Payment Profile that will be debited or credited. Required if not using `access_token`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferAuthorizationUserInRequest User { get; set; }
		
		/// <summary>
		/// Required for Guarantee. If the end user is initiating the specific transfer themselves via an interactive UI, this should be `true`; for automatic recurring payments where the end user is not actually initiating each individual transfer, it should be `false`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_present")]
		public System.Nullable<System.Boolean> User_present { get; set; }
		
		/// <summary>
		/// If set to `false`, Plaid will not offer a `guarantee_decision` for this request(Guarantee customers only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="with_guarantee")]
		public System.Nullable<System.Boolean> With_guarantee { get; set; }
	}
	
	/// <summary>
	/// Information about the device being used to initiate the authorization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationDevice
	{
		
		/// <summary>
		/// The IP address of the device being used to initiate the authorization. Required for Guarantee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		/// <summary>
		/// The user agent of the device being used to initiate the authorization. Required for Guarantee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_agent")]
		public string User_agent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferAuthorizationCreateRequestNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rtp = 2,
	}
	
	/// <summary>
	/// The legal name and other information for the account holder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationUserInRequest
	{
		
		/// <summary>
		/// The address associated with the account holder. Providing this data will improve the likelihood that Plaid will be able to guarantee the transfer, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public TransferUserAddressInRequest Address { get; set; }
		
		/// <summary>
		/// The user's email address. In order to qualify for a guaranteed transfer, at least one of `phone_number` or `email_address` must be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's legal name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The user's phone number. In order to qualify for a guaranteed transfer, at least one of `phone_number` or `email_address` must be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// The address associated with the account holder. Providing this data will improve the likelihood that Plaid will be able to guarantee the transfer, if applicable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferUserAddressInRequest
	{
		
		/// <summary>
		/// Ex. "San Francisco"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// A two-letter country code (e.g., "US").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The postal code (e.g., "94103").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or province (e.g., "CA").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The street number and name (i.e., "100 Market St.").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street")]
		public string Street { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/authorization/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferAuthorizationCreateResponse
	{
		
		/// <summary>
		/// Contains the authorization decision for a proposed transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorization")]
		public TransferAuthorization Authorization { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// 
	///A decision regarding the proposed transfer.
	///
	///`approved` â€“ The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.
	///
	///`declined` â€“ Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferAuthorizationDecision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		declined = 1,
	}
	
	/// <summary>
	/// A code representing the rationale for approving or declining the proposed transfer. Possible values are:
	///
	///`MANUALLY_VERIFIED_ITEM` â€“ Item created via same-day micro deposits, limited information available. Plaid will offer `approved` as a transaction decision.
	///
	///`ITEM_LOGIN_REQUIRED` â€“ Unable to collect the account information due to Item staleness. Can be rectified using Link in update mode. Plaid will offer `approved` as a transaction decision.
	///
	///`PAYMENT_PROFILE_LOGIN_REQUIRED` - Unable to collect the account information due to invalid login when using Payment Profiles. Can be rectified using update mode for Payment Profile. Plaid will offer `approved` as a transaction decision.
	///
	///`ERROR` â€“ Unable to collect the account information due to an error. Plaid will offer `approved` as a transaction decision.
	///
	///`NSF` â€“ Transaction likely to result in a return due to insufficient funds. Plaid will offer `declined` as a transaction decision.
	///
	///`RISK` - Transaction is high-risk. Plaid will offer `declined` as a transaction decision.
	///
	///`TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit. Plaid will offer `declined` as a transaction decision.
	///
	///`MIGRATED_ACCOUNT_ITEM` - Item created via `/transfer/account_migration` endpoint, limited information available. Plaid will offer `approved` as a transaction decision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferAuthorizationDecisionRationaleCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NSF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RISK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_LIMIT_REACHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANUALLY_VERIFIED_ITEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_LOGIN_REQUIRED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_PROFILE_LOGIN_REQUIRED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIGRATED_ACCOUNT_ITEM = 7,
	}
	
	/// <summary>
	/// Indicates whether the transfer is guaranteed by Plaid (Guarantee customers only). This field will contain either `GUARANTEED` or `NOT_GUARANTEED` indicating whether Plaid will guarantee the transfer. If the transfer is not guaranteed, additional information will be provided in the `guarantee_decision_rationale` field. Refer to the `code` field in `guarantee_decision_rationale` for details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferAuthorizationGuaranteeDecision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GUARANTEED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_GUARANTEED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCancelRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID of the transfer originator. Should only be present if `client_id` is a third-party sender (TPS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCancelResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/capabilities/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCapabilitiesGetRequest
	{
		
		/// <summary>
		/// The Plaid `access_token` for the account that will be debited or credited. Required if not using `payment_profile_token`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A payment profile token associated with the Payment Profile data that is being requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/capabilities/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCapabilitiesGetResponse
	{
		
		/// <summary>
		/// Contains the RTP network and types supported by the linked Item's institution.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="institution_supported_networks")]
		public InstitutionSupportedNetworks Institution_supported_networks { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/configuration/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferConfigurationGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID of the transfer originator. Should only be present if `client_id` is a third-party sender (TPS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/configuration/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferConfigurationGetResponse
	{
		
		/// <summary>
		/// The currency of the dollar amount, e.g. "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The max limit of sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_daily_credit_amount")]
		public string Max_daily_credit_amount { get; set; }
		
		/// <summary>
		/// The max limit of sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_daily_debit_amount")]
		public string Max_daily_debit_amount { get; set; }
		
		/// <summary>
		/// The max limit of sum of dollar amount of credit and debit transfers in one calendar month (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_monthly_amount")]
		public string Max_monthly_amount { get; set; }
		
		/// <summary>
		/// The max limit of dollar amount of a single transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_single_transfer_amount")]
		public string Max_single_transfer_amount { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCreateRequest
	{
		
		/// <summary>
		/// The Plaid `access_token` for the account that will be debited or credited. Required if not using `payment_profile_token`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer authorization. This parameter also serves the purpose of acting as an idempotency identifier.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorization_id")]
		public string Authorization_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The transfer description. Maximum of 10 characters. If reprocessing a returned transfer, please note that the `description` field must be `"Retry"` to indicate that it's a retry of a previously returned transfer. You may retry a transfer up to 2 times, within 180 days of creating the original transfer. Only transfers that were returned with code `R01` or `R09` may be retried. For a full listing of ACH return codes, see [Transfer errors](https://plaid.com/docs/errors/transfer/#ach-return-codes).
		/// Required
		/// Max length: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string Description { get; set; }
		
		/// <summary>
		/// Deprecated. `authorization_id` is now used as idempotency instead.
		///
		///A random key provided by the client, per unique transfer. Maximum of 50 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a transfer fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single transfer is created.
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount. The default value is "USD".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public TransferMetadata Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="network")]
		public TransferNetwork Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account for this transfer. If you have more than one origination account, this value must be specified. Otherwise, this field should be left blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The payment profile token associated with the Payment Profile that will be debited or credited. Required if not using `access_token`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_profile_token")]
		public string Payment_profile_token { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInRequestDeprecated User { get; set; }
	}
	
	/// <summary>
	/// The legal name and other information for the account holder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferUserInRequestDeprecated
	{
		
		/// <summary>
		/// The address associated with the account holder. Providing this data will improve the likelihood that Plaid will be able to guarantee the transfer, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public TransferUserAddressInRequest Address { get; set; }
		
		/// <summary>
		/// The user's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's legal name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The user's phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferCreateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Represents a transfer within the Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer")]
		public Transfer Transfer { get; set; }
	}
	
	/// <summary>
	/// Information about the device being used to initiate the authorization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferDevice
	{
		
		/// <summary>
		/// The IP address of the device being used to initiate the authorization.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		/// <summary>
		/// The user agent of the device being used to initiate the authorization.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_agent")]
		public string User_agent { get; set; }
	}
	
	/// <summary>
	/// Originatorâ€™s diligence status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferDiligenceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		under_review = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		approved = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		denied = 2,
	}
	
	/// <summary>
	/// Represents an event in the Transfers API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferEvent
	{
		
		/// <summary>
		/// The account ID associated with the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Event_id { get; set; }
		
		/// <summary>
		/// The type of event that this transfer represents.
		///
		///`pending`: A new transfer was created; it is in the pending state.
		///
		///`cancelled`: The transfer was cancelled by the client.
		///
		///`failed`: The transfer failed, no funds were moved.
		///
		///`posted`: The transfer has been successfully submitted to the payment network.
		///
		///`settled`: Credits are available to be withdrawn or debits have been deducted from the Plaid linked account.
		///
		///`returned`: A posted transfer was returned.
		///
		///`swept`: The transfer was swept to / from the sweep account.
		///
		///`swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customerâ€™s business checking account.
		///
		///`return_swept`: Due to the transfer being returned, funds were pulled from or pushed back to the sweep account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_type")]
		public TransferEventEvent_type Event_type { get; set; }
		
		/// <summary>
		/// The failure reason if the event type for a transfer is `"failed"` or `"returned"`. Null value otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public TransferFailure Failure_reason { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The ID of the origination account that this balance belongs to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID that is the originator of the transfer that this event applies to. Only present if the transfer was created on behalf of another client as a third-party sender (TPS).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a refund. A non-null value indicates the event is for the associated refund of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refund_id")]
		public string Refund_id { get; set; }
		
		/// <summary>
		/// A signed amount of how much was `swept` or `return_swept` for this transfer (decimal string with two digits of precision e.g. "-5.50").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweep_amount")]
		public string Sweep_amount { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a sweep.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweep_id")]
		public string Sweep_id { get; set; }
		
		/// <summary>
		/// The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_amount")]
		public string Transfer_amount { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_type")]
		public BankTransferType Transfer_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferEventEvent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		settled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		returned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept_settled = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_swept = 8,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/event/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferEventListRequest
	{
		
		/// <summary>
		/// The account ID to get events for all transactions to/from an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// Filter events by event type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_types")]
		public TransferEventType[] Event_types { get; set; }
		
		/// <summary>
		/// Filter transfer events to only those with the specified `funding_account_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The offset into the list of transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 events will be returned.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// The origination account ID to get events for transfers from a specific origination account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Filter transfer events to only those with the specified originator client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateTimeOffset> Start_date { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a sweep.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sweep_id")]
		public string Sweep_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transfer_type")]
		public System.Nullable<TransferEventListRequestTransfer_type> Transfer_type { get; set; }
	}
	
	/// <summary>
	/// The type of event that this transfer represents.
	///
	///`pending`: A new transfer was created; it is in the pending state.
	///
	///`cancelled`: The transfer was cancelled by the client.
	///
	///`failed`: The transfer failed, no funds were moved.
	///
	///`posted`: The transfer has been successfully submitted to the payment network.
	///
	///`settled`: Credits are available to be withdrawn or debits have been deducted from the Plaid linked account.
	///
	///`returned`: A posted transfer was returned.
	///
	///`swept`: The transfer was swept to / from the sweep account.
	///
	///`swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customerâ€™s business checking account.
	///
	///`return_swept`: Due to the transfer being returned, funds were pulled from or pushed back to the sweep account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		posted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		settled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		returned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept_settled = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_swept = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferEventListRequestTransfer_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/event/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferEventListResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_events")]
		public TransferEvent[] Transfer_events { get; set; }
	}
	
	/// <summary>
	/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferEventListTransferType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/event/sync`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferEventSyncRequest
	{
		
		/// <summary>
		/// The latest (largest) `event_id` fetched via the sync endpoint, or 0 initially.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="after_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int After_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of transfer events to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/event/sync`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferEventSyncResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_events")]
		public TransferEvent[] Transfer_events { get; set; }
	}
	
	/// <summary>
	/// Fired when new transfer events are available. Receiving this webhook indicates you should fetch the new events from `/transfer/event/sync`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferEventsUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// `TRANSFER_EVENTS_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `TRANSFER`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID of the transfer originator. Should only be present if `client_id` is a third-party sender (TPS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferGetResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Represents a transfer within the Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer")]
		public Transfer Transfer { get; set; }
	}
	
	/// <summary>
	/// 
	///A decision regarding the proposed transfer.
	///
	///`APPROVED` â€“ The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.
	///
	///`DECLINED` â€“ Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentAuthorizationDecision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECLINED = 1,
	}
	
	/// <summary>
	/// Represents a transfer intent within Transfer UI.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentCreate
	{
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The datetime the transfer was created. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// A description for the underlying transfer. Maximum of 8 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for the transfer intent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount, e.g. "USD"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public TransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The direction of the flow of transfer funds.
		///
		///`PAYMENT`: Transfers funds from an end user's account to your business account.
		///
		///`DISBURSEMENT`: Transfers funds from your business account to an end user's account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public TransferIntentCreateMode Mode { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer. Defaults to `same-day-ach`.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public System.Nullable<TransferIntentCreateNetwork> Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account for the intent. If not provided, the default account will be used.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="require_guarantee")]
		public System.Nullable<System.Boolean> Require_guarantee { get; set; }
		
		/// <summary>
		/// The status of the transfer intent.
		///
		///`PENDING`: The transfer intent is pending.
		///`SUCCEEDED`: The transfer intent was successfully created.
		///`FAILED`: The transfer intent was unable to be created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransferIntentCreateStatus Status { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInResponse User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentCreateMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISBURSEMENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentCreateNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentCreateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/intent/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentCreateRequest
	{
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A description for the underlying transfer. Maximum of 8 characters.
		/// Required
		/// Min length: 1
		/// Max length: 8
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(1, 8)]
		public string Description { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited. Defaults to the account configured during onboarding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount, e.g. "USD"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public TransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The direction of the flow of transfer funds.
		///
		///`PAYMENT`: Transfers funds from an end user's account to your business account.
		///
		///`DISBURSEMENT`: Transfers funds from your business account to an end user's account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public TransferIntentCreateMode Mode { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer. Defaults to `same-day-ach`.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public System.Nullable<TransferIntentCreateRequestNetwork> Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account for the intent. If not provided, the default account will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="require_guarantee")]
		public System.Nullable<System.Boolean> Require_guarantee { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInRequest User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentCreateRequestNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
	}
	
	/// <summary>
	/// The legal name and other information for the account holder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferUserInRequest
	{
		
		/// <summary>
		/// The address associated with the account holder. Providing this data will improve the likelihood that Plaid will be able to guarantee the transfer, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public TransferUserAddressInRequest Address { get; set; }
		
		/// <summary>
		/// The user's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The user's legal name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The user's phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/intent/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentCreateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Represents a transfer intent within Transfer UI.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_intent")]
		public TransferIntentCreate Transfer_intent { get; set; }
	}
	
	/// <summary>
	/// Represents a transfer intent within Transfer UI.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentGet
	{
		
		/// <summary>
		/// The Plaid `account_id` for the account that will be debited or credited. Returned only if `account_id` was set on intent creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// 
		///A decision regarding the proposed transfer.
		///
		///`APPROVED` â€“ The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.
		///
		///`DECLINED` â€“ Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorization_decision")]
		public TransferIntentAuthorizationDecision Authorization_decision { get; set; }
		
		/// <summary>
		/// The rationale for Plaid's decision regarding a proposed transfer. It is always set for `declined` decisions, and may or may not be null for `approved` decisions.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authorization_decision_rationale")]
		public TransferAuthorizationDecisionRationale Authorization_decision_rationale { get; set; }
		
		/// <summary>
		/// The datetime the transfer was created. This will be of the form `2006-01-02T15:04:05Z`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// A description for the underlying transfer. Maximum of 8 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The reason for a failed transfer intent. Returned only if the transfer intent status is `failed`. Null otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="failure_reason")]
		public TransferIntentGetFailureReason Failure_reason { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// Indicates whether the transfer is guaranteed by Plaid (Guarantee customers only). This field will contain either `GUARANTEED` or `NOT_GUARANTEED` indicating whether Plaid will guarantee the transfer. If the transfer is not guaranteed, additional information will be provided in the `guarantee_decision_rationale` field. Refer to the `code` field in `guarantee_decision_rationale` for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantee_decision")]
		public System.Nullable<TransferIntentGetGuarantee_decision> Guarantee_decision { get; set; }
		
		/// <summary>
		/// The rationale for Plaid's decision to not guarantee a transfer. Will be `null` unless `guarantee_decision` is `NOT_GUARANTEED`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="guarantee_decision_rationale")]
		public TransferAuthorizationGuaranteeDecisionRationale Guarantee_decision_rationale { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for a transfer intent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount, e.g. "USD"
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply:
		///The JSON values must be Strings (no nested JSON objects allowed)
		///Only ASCII characters may be used
		///Maximum of 50 key/value pairs
		///Maximum key length of 40 characters
		///Maximum value length of 500 characters
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public TransferMetadata Metadata { get; set; }
		
		/// <summary>
		/// The direction of the flow of transfer funds.
		///
		///`PAYMENT`: Transfers funds from an end user's account to your business account.
		///
		///`DISBURSEMENT`: Transfers funds from your business account to an end user's account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public TransferIntentCreateMode Mode { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer. Defaults to `same-day-ach`.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public System.Nullable<TransferIntentGetNetwork> Network { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for the origination account used for the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="require_guarantee")]
		public System.Nullable<System.Boolean> Require_guarantee { get; set; }
		
		/// <summary>
		/// The status of the transfer intent.
		///
		///`PENDING`: The transfer intent is pending.
		///`SUCCEEDED`: The transfer intent was successfully created.
		///`FAILED`: The transfer intent was unable to be created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public TransferIntentCreateStatus Status { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for the transfer created through the UI. Returned only if the transfer was successfully created. Null value otherwise.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInResponse User { get; set; }
	}
	
	/// <summary>
	/// The reason for a failed transfer intent. Returned only if the transfer intent status is `failed`. Null otherwise.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentGetFailureReason
	{
		
		/// <summary>
		/// A code representing the reason for a failed transfer intent (i.e., an API error or the authorization being declined).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// A human-readable description of the code associated with a failed transfer intent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_message")]
		public string Error_message { get; set; }
		
		/// <summary>
		/// A broad categorization of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_type")]
		public string Error_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentGetGuarantee_decision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GUARANTEED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_GUARANTEED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentGetNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/intent/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaid's unique identifier for a transfer intent object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_intent_id")]
		public string Transfer_intent_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/intent/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferIntentGetResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Represents a transfer intent within Transfer UI.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_intent")]
		public TransferIntentGet Transfer_intent { get; set; }
	}
	
	/// <summary>
	/// The status of the transfer intent.
	///
	///`PENDING`: The transfer intent is pending.
	///`SUCCEEDED`: The transfer intent was successfully created.
	///`FAILED`: The transfer intent was unable to be created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferIntentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of transfers to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// Filter transfers to only those with the specified `funding_account_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The number of transfers to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Filter transfers to only those originated through the specified origination account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origination_account_id")]
		public string Origination_account_id { get; set; }
		
		/// <summary>
		/// Filter transfers to only those with the specified originator client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateTimeOffset> Start_date { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferListResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfers")]
		public Transfer[] Transfers { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/metrics/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferMetricsGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The Plaid client ID of the transfer originator. Should only be present if `client_id` is a third-party sender (TPS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/metrics/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferMetricsGetResponse
	{
		
		/// <summary>
		/// Sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="daily_credit_transfer_volume")]
		public string Daily_credit_transfer_volume { get; set; }
		
		/// <summary>
		/// Sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="daily_debit_transfer_volume")]
		public string Daily_debit_transfer_volume { get; set; }
		
		/// <summary>
		/// The currency of the dollar amount, e.g. "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// Sum of dollar amount of credit and debit transfers in current calendar month (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="monthly_transfer_volume")]
		public string Monthly_transfer_volume { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/migrate_account`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferMigrateAccountRequest
	{
		
		/// <summary>
		/// The user's account number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The type of the bank account (`checking` or `savings`).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public string Account_type { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The user's routing number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The user's wire transfer routing number. This is the ABA number; for some institutions, this may differ from the ACH number used in `routing_number`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wire_routing_number")]
		public string Wire_routing_number { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/migrate_account`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferMigrateAccountResponse
	{
		
		/// <summary>
		/// The Plaid `access_token` for the newly created Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` for the newly created Item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/originator/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferOriginatorCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The company name of the end customer being created. This will be displayed in public-facing surfaces, e.g. Plaid Dashboard.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/originator/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferOriginatorCreateResponse
	{
		
		/// <summary>
		/// The company name of the end customer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Client ID of the originator. This identifier will be used when creating transfers and should be stored associated with end user information.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/originator/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferOriginatorGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Client ID of the end customer (i.e. the originator).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/originator/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferOriginatorGetResponse
	{
		
		/// <summary>
		/// Originator and their status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator")]
		public DetailedOriginator Originator { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/originator/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferOriginatorListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of originators to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The number of originators to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/originator/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferOriginatorListResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originators")]
		public Originator[] Originators { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/questionnaire/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferQuestionnaireCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Client ID of the end customer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// URL the end customer will be redirected to after completing questions in Plaid-hosted onboarding flow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirect_uri")]
		public string Redirect_uri { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/questionnaire/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferQuestionnaireCreateResponse
	{
		
		/// <summary>
		/// Plaid-hosted onboarding URL that you will redirect the end customer to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="onboarding_url")]
		public string Onboarding_url { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/recurring/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringCancelRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/recurring/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringCancelResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/recurring/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringCreateRequest
	{
		
		/// <summary>
		/// The Plaid `access_token` for the account that will be debited or credited. Required if not using `payment_profile_token`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="access_token")]
		public string Access_token { get; set; }
		
		/// <summary>
		/// The Plaid `account_id` corresponding to the end-user account that will be debited or credited. Returned only if `account_id` was set on intent creation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// Specifies the use case of the transfer. Required for transfers on an ACH network.
		///
		///`"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
		///
		///`"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
		///
		///`"tel"` - Telephone-Initiated Entry
		///
		///`"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ach_class")]
		public ACHClass Ach_class { get; set; }
		
		/// <summary>
		/// The amount of the transfer (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The description of the recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Information about the device being used to initiate the authorization.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="device")]
		public TransferDevice Device { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited. Defaults to the account configured during onboarding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique recurring transfer. Maximum of 50 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a recurring fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single recurring transfer is created.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// The currency of the transfer amount. The default value is "USD".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The network or rails used for the transfer.
		///
		///For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="network")]
		public TransferRecurringCreateRequestNetwork Network { get; set; }
		
		/// <summary>
		/// The schedule that the recurring transfer will be executed on.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public TransferRecurringSchedule Schedule { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a test clock.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_clock_id")]
		public string Test_clock_id { get; set; }
		
		/// <summary>
		/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BankTransferType Type { get; set; }
		
		/// <summary>
		/// The legal name and other information for the account holder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public TransferUserInRequest User { get; set; }
		
		/// <summary>
		/// If the end user is initiating the specific transfer themselves via an interactive UI, this should be `true`; for automatic recurring payments where the end user is not actually initiating each individual transfer, it should be `false`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_present")]
		public System.Nullable<System.Boolean> User_present { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferRecurringCreateRequestNetwork
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ach = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="same-day-ach")]
		sameMinusdayMinusach = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rtp = 2,
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/recurring/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringCreateResponse
	{
		
		/// <summary>
		/// 
		///A decision regarding the proposed transfer.
		///
		///`approved` â€“ The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.
		///
		///`declined` â€“ Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="decision")]
		public RecurringTransferSkippedWebhookAuthorization_decision Decision { get; set; }
		
		/// <summary>
		/// The rationale for Plaid's decision regarding a proposed transfer. It is always set for `declined` decisions, and may or may not be null for `approved` decisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decision_rationale")]
		public TransferAuthorizationDecisionRationale Decision_rationale { get; set; }
		
		/// <summary>
		/// Represents a recurring transfer within the Transfers API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer")]
		public RecurringTransferNullable Recurring_transfer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/recurring/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a recurring transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer_id")]
		public string Recurring_transfer_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/recurring/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringGetResponse
	{
		
		/// <summary>
		/// Represents a recurring transfer within the Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfer")]
		public RecurringTransfer Recurring_transfer { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/recurring/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of recurring transfers to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end datetime of recurring transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public System.Nullable<System.DateTimeOffset> End_time { get; set; }
		
		/// <summary>
		/// Filter recurring transfers to only those with the specified `funding_account_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The number of recurring transfers to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of recurring transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/recurring/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRecurringListResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recurring_transfers")]
		public RecurringTransfer[] Recurring_transfers { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The status of the recurring transfer.
	///
	///`active`: The recurring transfer is currently active.
	///`cancelled`: The recurring transfer was cancelled by the client or Plaid.
	///`expired`: The recurring transfer has completed all originations according to its recurring schedule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferRecurringStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 2,
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/refund/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefundCancelRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a refund.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refund_id")]
		public string Refund_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/refund/cancel`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefundCancelResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/refund/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefundCreateRequest
	{
		
		/// <summary>
		/// The amount of the refund (decimal string with two digits of precision e.g. "10.00").
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique refund. Maximum of 50 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a refund fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single refund is created.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The ID of the transfer to refund.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/refund/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefundCreateResponse
	{
		
		/// <summary>
		/// Represents a refund within the Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refund")]
		public TransferRefund Refund { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/refund/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefundGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a refund.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refund_id")]
		public string Refund_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/refund/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRefundGetResponse
	{
		
		/// <summary>
		/// Represents a refund within the Transfers API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="refund")]
		public TransferRefund Refund { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// A repayment is created automatically after one or more guaranteed transactions receive a return. If there are multiple eligible returns in a day, they are batched together into a single repayment.
	///
	///Repayments are sent over ACH, with funds typically available on the next banking day.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRepayment
	{
		
		/// <summary>
		/// Decimal amount of the repayment as it appears on your account ledger.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The datetime when the repayment occurred, in RFC 3339 format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// The currency of the repayment, e.g. "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// Identifier of the repayment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_id")]
		public string Repayment_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/repayment/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRepaymentListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of repayments to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end datetime of repayments to return (RFC 3339 format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// The number of repayments to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of repayments to return (RFC 3339 format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateTimeOffset> Start_date { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/repayments/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRepaymentListResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayments")]
		public TransferRepayment[] Repayments { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Represents a return on a Guaranteed ACH transfer that is included in the specified repayment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRepaymentReturn
	{
		
		/// <summary>
		/// The value of the returned transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The unique identifier of the corresponding `returned` transfer event.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="event_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int Event_id { get; set; }
		
		/// <summary>
		/// The currency of the repayment, e.g. "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The unique identifier of the guaranteed transfer that was returned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transfer_id")]
		public string Transfer_id { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/repayment/return/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRepaymentReturnListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of repayments to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The number of repayments to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Identifier of the repayment to query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_id")]
		public string Repayment_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/repayments/return/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferRepaymentReturnListResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="repayment_returns")]
		public TransferRepaymentReturn[] Repayment_returns { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// The unit of the recurring interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferScheduleIntervalUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		week = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		month = 1,
	}
	
	/// <summary>
	/// Describes a sweep of funds to / from the sweep account.
	///
	///A sweep is associated with many sweep events (events of type `swept` or `return_swept`) which can be retrieved by invoking the `/transfer/event/list` endpoint with the corresponding `sweep_id`.
	///
	///`swept` events occur when the transfer amount is credited or debited from your sweep account, depending on the `type` of the transfer. `return_swept` events occur when a transfer is returned and Plaid undoes the credit or debit.
	///
	///The total sum of the `swept` and `return_swept` events is equal to the `amount` of the sweep Plaid creates and matches the amount of the entry on your sweep account ledger.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferSweep
	{
		
		/// <summary>
		/// Signed decimal amount of the sweep as it appears on your sweep account ledger (e.g. "-10.00")
		///
		///If amount is not present, the sweep was net-settled to zero and outstanding debits and credits between the sweep account and Plaid are balanced.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public string Amount { get; set; }
		
		/// <summary>
		/// The datetime when the sweep occurred, in RFC 3339 format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// Identifier of the sweep.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The currency of the sweep, e.g. "USD".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
		
		/// <summary>
		/// The date when the sweep settled, in the YYYY-MM-DD format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="settled")]
		public System.Nullable<System.DateOnly> Settled { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/sweep/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferSweepGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// Plaidâ€™s unique identifier for a sweep.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweep_id")]
		public string Sweep_id { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/sweep/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferSweepGetResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Describes a sweep of funds to / from the sweep account.
		///
		///A sweep is associated with many sweep events (events of type `swept` or `return_swept`) which can be retrieved by invoking the `/transfer/event/list` endpoint with the corresponding `sweep_id`.
		///
		///`swept` events occur when the transfer amount is credited or debited from your sweep account, depending on the `type` of the transfer. `return_swept` events occur when a transfer is returned and Plaid undoes the credit or debit.
		///
		///The total sum of the `swept` and `return_swept` events is equal to the `amount` of the sweep Plaid creates and matches the amount of the entry on your sweep account ledger.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweep")]
		public TransferSweep Sweep { get; set; }
	}
	
	/// <summary>
	/// Defines the request schema for `/transfer/sweep/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferSweepListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The maximum number of sweeps to return.
		/// Minimum: 1
		/// Maximum: 25
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 25)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The end datetime of sweeps to return (RFC 3339 format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateTimeOffset> End_date { get; set; }
		
		/// <summary>
		/// Filter sweeps to only those with the specified `funding_account_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="funding_account_id")]
		public string Funding_account_id { get; set; }
		
		/// <summary>
		/// The number of sweeps to skip before returning results.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Filter sweeps to only those with the specified originator client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originator_client_id")]
		public string Originator_client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The start datetime of sweeps to return (RFC 3339 format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateTimeOffset> Start_date { get; set; }
	}
	
	/// <summary>
	/// Defines the response schema for `/transfer/sweep/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferSweepListResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sweeps")]
		public TransferSweep[] Sweeps { get; set; }
	}
	
	/// <summary>
	/// The status of the sweep for the transfer.
	///
	///`unswept`: The transfer hasn't been swept yet.
	///`swept`: The transfer was swept to the sweep account.
	///`swept_settled`: Credits are available to be withdrawn or debits have been deducted from the customerâ€™s business checking account.
	///`return_swept`: The transfer was returned, funds were pulled back or pushed back to the sweep account.
	///`null`: The transfer will never be swept (e.g. if the transfer is cancelled or returned before being swept)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferSweepStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unswept = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		swept_settled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		return_swept = 4,
	}
	
	/// <summary>
	/// The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		debit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit = 1,
	}
	
	/// <summary>
	/// List of unofficial currency codes
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnofficialCurrencyCodeList
	{
		
		/// <summary>
		/// Cardano
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ADA { get; set; }
		
		/// <summary>
		/// Basic Attention Token
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BAT { get; set; }
		
		/// <summary>
		/// Bitcoin Cash
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BCH { get; set; }
		
		/// <summary>
		/// Binance Coin
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BNB { get; set; }
		
		/// <summary>
		/// Bitcoin Satoshi Vision
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string BSV { get; set; }
		
		/// <summary>
		/// Bitcoin
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BTC { get; set; }
		
		/// <summary>
		/// Bitcoin Gold
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BTG { get; set; }
		
		/// <summary>
		/// Chinese Yuan (offshore)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CNH { get; set; }
		
		/// <summary>
		/// Dash
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DASH { get; set; }
		
		/// <summary>
		/// Dogecoin
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DOGE { get; set; }
		
		/// <summary>
		/// Ethereum Classic
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ETC { get; set; }
		
		/// <summary>
		/// Ethereum
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ETH { get; set; }
		
		/// <summary>
		/// Pence sterling, i.e. British penny
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GBX { get; set; }
		
		/// <summary>
		/// Lisk
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LSK { get; set; }
		
		/// <summary>
		/// Neo
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NEO { get; set; }
		
		/// <summary>
		/// OmiseGO
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OMG { get; set; }
		
		/// <summary>
		/// Qtum
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QTUM { get; set; }
		
		/// <summary>
		/// Tether
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string USDT { get; set; }
		
		/// <summary>
		/// Stellar Lumen
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string XLM { get; set; }
		
		/// <summary>
		/// Monero
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string XMR { get; set; }
		
		/// <summary>
		/// Ripple
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string XRP { get; set; }
		
		/// <summary>
		/// Zcash
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ZEC { get; set; }
		
		/// <summary>
		/// 0x
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ZRX { get; set; }
	}
	
	/// <summary>
	/// Search terms for editing an entity watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEntityScreeningRequestSearchTerms
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Min length: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Min length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Document_number { get; set; }
		
		/// <summary>
		/// A valid email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_program_id")]
		public string Entity_watchlist_program_id { get; set; }
		
		/// <summary>
		/// The name of the organization being screened.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// A phone number in E.164 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// An 'http' or 'https' URL (must begin with either of those).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Search terms for editing an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateIndividualScreeningRequestSearchTerms
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Min length: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public System.Nullable<System.DateOnly> Date_of_birth { get; set; }
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Min length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Document_number { get; set; }
		
		/// <summary>
		/// The legal name of the individual being screened.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="watchlist_program_id")]
		public string Watchlist_program_id { get; set; }
	}
	
	/// <summary>
	/// UserCreateRequest defines the request schema for `/user/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A unique ID representing the end user. Maximum of 128 characters. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// UserCreateResponse defines the response schema for `/user/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserCreateResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The Plaid `user_id` of the User associated with this webhook, warning, or error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
		
		/// <summary>
		/// The user token associated with the User data is being requested for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user_token")]
		public string User_token { get; set; }
	}
	
	/// <summary>
	/// Custom test accounts are configured with a JSON configuration object formulated according to the schema below. All top level fields are optional. Sending an empty object as a configuration will result in an account configured with random balances and transaction history.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserCustomPassword
	{
		
		/// <summary>
		/// An error code to force on Item creation. Possible values are:
		///
		///`"INSTITUTION_NOT_RESPONDING"`
		///`"INSTITUTION_NO_LONGER_SUPPORTED"`
		///`"INVALID_CREDENTIALS"`
		///`"INVALID_MFA"`
		///`"ITEM_LOCKED"`
		///`"ITEM_LOGIN_REQUIRED"`
		///`"ITEM_NOT_SUPPORTED"`
		///`"INVALID_LINK_TOKEN"`
		///`"MFA_NOT_SUPPORTED"`
		///`"NO_ACCOUNTS"`
		///`"PLAID_ERROR"`
		///`"USER_INPUT_TIMEOUT"`
		///`"USER_SETUP_REQUIRED"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="force_error")]
		public string Force_error { get; set; }
		
		/// <summary>
		/// Specifies the multi-factor authentication settings to use with this test account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mfa")]
		public MFA Mfa { get; set; }
		
		/// <summary>
		/// An array of account overrides to configure the accounts for the Item. By default, if no override is specified, transactions and account data will be randomly generated based on the account type and subtype, and other products will have fixed or empty data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="override_accounts")]
		public OverrideAccounts[] Override_accounts { get; set; }
		
		/// <summary>
		/// You may trigger a reCAPTCHA in Plaid Link in the Sandbox environment by using the recaptcha field. Possible values are `good` or `bad`. A value of `good` will result in successful Item creation and `bad` will result in a `RECAPTCHA_BAD` error to simulate a failed reCAPTCHA. Both values require the reCAPTCHA to be manually solved within Plaid Link.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recaptcha")]
		public string Recaptcha { get; set; }
		
		/// <summary>
		/// A seed, in the form of a string, that will be used to randomly generate account and transaction data, if this data is not specified using the `override_accounts` argument. If no seed is specified, the randomly generated data will be different each time.
		///
		///Note that transactions data is generated relative to the Item's creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="seed")]
		public string Seed { get; set; }
		
		/// <summary>
		/// The version of the password schema to use, possible values are 1 or 2. The default value is 2. You should only specify 1 if you know it is necessary for your test suite.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// The `USER_PERMISSION_REVOKED` webhook is fired when an end user has used either the [my.plaid.com portal](https://my.plaid.com) or the financial institutionâ€™s consent portal to revoke the permission that they previously granted to access an Item. Once access to an Item has been revoked, it cannot be restored. If the user subsequently returns to your application, a new Item must be created for the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserPermissionRevokedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `USER_PERMISSION_REVOKED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ITEM`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// The income category for a specified income source
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserStatedIncomeSourceCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALARY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNEMPLOYMENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIG_ECONOMY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENTAL = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHILD_SUPPORT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILITARY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIREMENT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_TERM_DISABILITY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_INTEREST = 10,
	}
	
	/// <summary>
	/// The pay frequency of a specified income source
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserStatedIncomeSourceFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIWEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEMI_MONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 4,
	}
	
	/// <summary>
	/// The pay type - `GROSS`, `NET`, or `UNKNOWN` for a specified income source
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserStatedIncomeSourcePayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROSS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NET = 2,
	}
	
	/// <summary>
	/// Fired when an Item was not verified via automated micro-deposits after seven days since the automated micro-deposit was made.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerificationExpiredWebhook
	{
		
		/// <summary>
		/// The `account_id` of the account associated with the webhook
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// `VERIFICATION_EXPIRED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `AUTH`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// The verification refresh status. One of the following:
	///
	///`"VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED"` User presence is required to refresh an income verification.
	///`"VERIFICATION_REFRESH_SUCCESSFUL"` The income verification refresh was successful.
	///`"VERIFICATION_REFRESH_NOT_FOUND"` No new data was found after the income verification refresh.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerificationRefreshStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_REFRESH_STATUS_USER_PRESENCE_REQUIRED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_REFRESH_SUCCESSFUL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_REFRESH_NOT_FOUND = 2,
	}
	
	/// <summary>
	/// The verification status. One of the following:
	///
	///`"VERIFIED"`: The information was successfully verified.
	///
	///`"UNVERIFIED"`: The verification has not yet been performed.
	///
	///`"NEEDS_INFO"`: The verification was attempted but could not be completed due to missing information.
	///
	///"`UNABLE_TO_VERIFY`": The verification was performed and the information could not be verified.
	///
	///`"UNKNOWN"`: The verification status is unknown.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerificationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNVERIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEEDS_INFO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNABLE_TO_VERIFY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 4,
	}
	
	/// <summary>
	/// An object representing the e-wallet
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Wallet
	{
		
		/// <summary>
		/// An object representing the e-wallet balance
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="balance")]
		public WalletBalance Balance { get; set; }
		
		/// <summary>
		/// An object representing the e-wallet account numbers
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numbers")]
		public WalletNumbers Numbers { get; set; }
		
		/// <summary>
		/// The ID of the recipient that corresponds to the e-wallet account numbers
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_id")]
		public string Recipient_id { get; set; }
		
		/// <summary>
		/// The status of the wallet.
		///
		///`UNKNOWN`: The wallet status is unknown.
		///
		///`ACTIVE`: The wallet is active and ready to send money to and receive money from.
		///
		///`CLOSED`: The wallet is closed. Any transactions made to or from this wallet will error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public WalletStatus Status { get; set; }
		
		/// <summary>
		/// A unique ID identifying the e-wallet
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		public string Wallet_id { get; set; }
	}
	
	/// <summary>
	/// An object representing the e-wallet balance
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletBalance
	{
		
		/// <summary>
		/// The total amount of funds in the account
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current")]
		public double Current { get; set; }
		
		/// <summary>
		/// The ISO-4217 currency code of the balance
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		public string Iso_currency_code { get; set; }
	}
	
	/// <summary>
	/// An object representing the e-wallet account numbers
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletNumbers
	{
		
		/// <summary>
		/// An object containing a BACS account number and sort code. If an IBAN is not provided or if you need to accept domestic GBP-denominated payments, BACS data is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public RecipientBACS Bacs { get; set; }
		
		/// <summary>
		/// Account numbers using the International Bank Account Number and BIC/SWIFT code format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international")]
		public NumbersInternationalIBAN International { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WalletStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOSED = 2,
	}
	
	/// <summary>
	/// WalletCreateRequest defines the request schema for `/wallet/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An ISO-4217 currency code, used with e-wallets and transactions.
		/// Required
		/// Min length: 3
		/// Max length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		[System.ComponentModel.DataAnnotations.Length(3, 3)]
		public WalletCreateRequestIso_currency_code Iso_currency_code { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WalletCreateRequestIso_currency_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 1,
	}
	
	/// <summary>
	/// WalletCreateResponse defines the response schema for `/wallet/create`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletCreateResponse
	{
	}
	
	/// <summary>
	/// WalletGetRequest defines the request schema for `/wallet/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The ID of the e-wallet
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Wallet_id { get; set; }
	}
	
	/// <summary>
	/// WalletGetResponse defines the response schema for `/wallet/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletGetResponse
	{
	}
	
	/// <summary>
	/// An ISO-4217 currency code, used with e-wallets and transactions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WalletISOCurrencyCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 1,
	}
	
	/// <summary>
	/// WalletListRequest defines the request schema for `/wallet/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The number of e-wallets to fetch
		/// Minimum: 1
		/// Maximum: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 20)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A base64 value representing the latest e-wallet that has already been requested. Set this to `next_cursor` received from the previous `/wallet/list` request. If provided, the response will only contain e-wallets created before that e-wallet. If omitted, the response will contain e-wallets starting from the most recent, and in descending order.
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Cursor { get; set; }
		
		/// <summary>
		/// An ISO-4217 currency code, used with e-wallets and transactions.
		/// Min length: 3
		/// Max length: 3
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		[System.ComponentModel.DataAnnotations.Length(3, 3)]
		public WalletCreateRequestIso_currency_code Iso_currency_code { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// WalletListResponse defines the response schema for `/wallet/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletListResponse
	{
		
		/// <summary>
		/// Cursor used for fetching e-wallets created before the latest e-wallet provided in this response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// An array of e-wallets
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallets")]
		public Wallet[] Wallets { get; set; }
	}
	
	/// <summary>
	/// The transaction details
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransaction
	{
		
		/// <summary>
		/// The amount and currency of a transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public WalletTransactionAmount Amount { get; set; }
		
		/// <summary>
		/// An object representing the e-wallet transaction's counterparty
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="counterparty")]
		public WalletTransactionCounterparty Counterparty { get; set; }
		
		/// <summary>
		/// Timestamp when the transaction was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// The date and time of the last time the `status` was updated, in IS0 8601 format
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_status_update")]
		public System.DateTimeOffset Last_status_update { get; set; }
		
		/// <summary>
		/// The payment id that this transaction is associated with, if any. This is present only for transaction types `PIS_PAY_IN` and `REFUND`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// A reference for the transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public string Reference { get; set; }
		
		/// <summary>
		/// The status of the transaction.
		///
		///`AUTHORISING`: The transaction is being processed for validation and compliance.
		///
		///`INITIATED`: The transaction has been initiated and is currently being processed.
		///
		///`EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.
		///
		///`SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`FAILED`: The transaction failed to process successfully. This is a terminal status.
		///
		///`BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationPaymentReverseResponseStatus Status { get; set; }
		
		/// <summary>
		/// A unique ID identifying the transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
		
		/// <summary>
		/// The type of the transaction. The supported transaction types that are returned are:
		///`BANK_TRANSFER:` a transaction which credits an e-wallet through an external bank transfer.
		///
		///`PAYOUT:` a transaction which debits an e-wallet by disbursing funds to a counterparty.
		///
		///`PIS_PAY_IN:` a payment which credits an e-wallet through Plaid's Payment Initiation Services (PIS) APIs. For more information see the [Payment Initiation endpoints](https://plaid.com/docs/api/products/payment-initiation/).
		///
		///`REFUND:` a transaction which debits an e-wallet by refunding a previously initiated payment made through Plaid's [PIS APIs](https://plaid.com/docs/api/products/payment-initiation/).
		///
		///`FUNDS_SWEEP`: an automated transaction which debits funds from an e-wallet to a designated client-owned account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public WalletTransactionType Type { get; set; }
		
		/// <summary>
		/// The EMI (E-Money Institution) wallet that this payment is associated with, if any. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		public string Wallet_id { get; set; }
	}
	
	/// <summary>
	/// The amount and currency of a transaction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionAmount
	{
		
		/// <summary>
		/// An ISO-4217 currency code, used with e-wallets and transactions.
		/// Required
		/// Min length: 3
		/// Max length: 3
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="iso_currency_code")]
		[System.ComponentModel.DataAnnotations.Length(3, 3)]
		public WalletCreateRequestIso_currency_code Iso_currency_code { get; set; }
		
		/// <summary>
		/// The amount of the transaction. Must contain at most two digits of precision e.g. `1.23`.
		/// Required
		/// Minimum: 0.01
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		[System.ComponentModel.DataAnnotations.Range(0.01, System.Double.MaxValue)]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// An object representing the e-wallet transaction's counterparty
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionCounterparty
	{
		
		/// <summary>
		/// The name of the counterparty
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The counterparty's bank account numbers. Exactly one of IBAN or BACS data is required.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numbers")]
		public WalletTransactionCounterpartyNumbers Numbers { get; set; }
	}
	
	/// <summary>
	/// The counterparty's bank account numbers. Exactly one of IBAN or BACS data is required.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionCounterpartyNumbers
	{
		
		/// <summary>
		/// The account number and sort code of the counterparty's account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bacs")]
		public WalletTransactionCounterpartyBACS Bacs { get; set; }
		
		/// <summary>
		/// International Bank Account Number for a Wallet Transaction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="international")]
		public WalletTransactionCounterpartyInternational International { get; set; }
	}
	
	/// <summary>
	/// International Bank Account Number for a Wallet Transaction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionCounterpartyInternational
	{
		
		/// <summary>
		/// International Bank Account Number (IBAN).
		/// Min length: 15
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		[System.ComponentModel.DataAnnotations.Length(15, 34)]
		public string Iban { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WalletTransactionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BANK_TRANSFER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYOUT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PIS_PAY_IN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REFUND = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FUNDS_SWEEP = 4,
	}
	
	/// <summary>
	/// The account number and sort code of the counterparty's account
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionCounterpartyBACS : RecipientBACS
	{
	}
	
	/// <summary>
	/// WalletTransactionExecuteRequest defines the request schema for `/wallet/transaction/execute`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionExecuteRequest
	{
		
		/// <summary>
		/// The amount and currency of a transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public WalletTransactionAmount Amount { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An object representing the e-wallet transaction's counterparty
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="counterparty")]
		public WalletTransactionCounterparty Counterparty { get; set; }
		
		/// <summary>
		/// A random key provided by the client, per unique wallet transaction. Maximum of 128 characters.
		///
		///The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a wallet transaction fails due to a network connection error, then after a minimum delay of one minute, you can retry the request with the same idempotency key to guarantee that only a single wallet transaction is created. If the request was successfully processed, it will prevent any transaction that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="idempotency_key")]
		[System.ComponentModel.DataAnnotations.Length(1, 128)]
		public string Idempotency_key { get; set; }
		
		/// <summary>
		/// A reference for the transaction. This must be an alphanumeric string with 6 to 18 characters and must not contain any special characters or spaces.
		///Ensure that the `reference` field is unique for each transaction.
		/// Required
		/// Min length: 6
		/// Max length: 18
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reference")]
		[System.ComponentModel.DataAnnotations.Length(6, 18)]
		public string Reference { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The ID of the e-wallet to debit from
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Wallet_id { get; set; }
	}
	
	/// <summary>
	/// WalletTransactionExecuteResponse defines the response schema for `/wallet/transaction/execute`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionExecuteResponse
	{
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The status of the transaction.
		///
		///`AUTHORISING`: The transaction is being processed for validation and compliance.
		///
		///`INITIATED`: The transaction has been initiated and is currently being processed.
		///
		///`EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.
		///
		///`SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`FAILED`: The transaction failed to process successfully. This is a terminal status.
		///
		///`BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PaymentInitiationPaymentReverseResponseStatus Status { get; set; }
		
		/// <summary>
		/// A unique ID identifying the transaction
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
	}
	
	/// <summary>
	/// WalletTransactionGetRequest defines the request schema for `/wallet/transaction/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The ID of the transaction to fetch
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Transaction_id { get; set; }
	}
	
	/// <summary>
	/// WalletTransactionGetResponse defines the response schema for `/wallet/transaction/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionGetResponse
	{
	}
	
	/// <summary>
	/// WalletTransactionListRequest defines the request schema for `/wallet/transaction/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The number of transactions to fetch
		/// Minimum: 1
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 200)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A base64 value representing the latest transaction that has already been requested. Set this to `next_cursor` received from the previous `/wallet/transaction/list` request. If provided, the response will only contain transactions created before that transaction. If omitted, the response will contain transactions starting from the most recent, and in descending order by the `created_at` time.
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Additional wallet transaction options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public WalletTransactionListRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The ID of the e-wallet to fetch transactions from
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Wallet_id { get; set; }
	}
	
	/// <summary>
	/// Additional wallet transaction options
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionListRequestOptions
	{
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDThh:mm:ssZ) for filtering transactions, inclusive of the provided date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public System.Nullable<System.DateTimeOffset> End_time { get; set; }
		
		/// <summary>
		/// Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDThh:mm:ssZ) for filtering transactions, inclusive of the provided date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
	}
	
	/// <summary>
	/// WalletTransactionListResponse defines the response schema for `/wallet/transaction/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionListResponse
	{
		
		/// <summary>
		/// Cursor used for fetching transactions created before the latest transaction provided in this response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// An array of transactions of an e-wallet, associated with the given `wallet_id`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transactions")]
		public WalletTransaction[] Transactions { get; set; }
	}
	
	/// <summary>
	/// The status of the transaction.
	///
	///`AUTHORISING`: The transaction is being processed for validation and compliance.
	///
	///`INITIATED`: The transaction has been initiated and is currently being processed.
	///
	///`EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.
	///
	///`SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.
	///
	///`FAILED`: The transaction failed to process successfully. This is a terminal status.
	///
	///`BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WalletTransactionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHORISING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SETTLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCKED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
	}
	
	/// <summary>
	/// Fired when the status of a wallet transaction has changed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionStatusUpdateWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// The status of the transaction.
		///
		///`AUTHORISING`: The transaction is being processed for validation and compliance.
		///
		///`INITIATED`: The transaction has been initiated and is currently being processed.
		///
		///`EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.
		///
		///`SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`FAILED`: The transaction failed to process successfully. This is a terminal status.
		///
		///`BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_status")]
		public PaymentInitiationPaymentReverseResponseStatus New_status { get; set; }
		
		/// <summary>
		/// The status of the transaction.
		///
		///`AUTHORISING`: The transaction is being processed for validation and compliance.
		///
		///`INITIATED`: The transaction has been initiated and is currently being processed.
		///
		///`EXECUTED`: The transaction has been successfully executed and is considered complete. This is only applicable for debit transactions.
		///
		///`SETTLED`: The transaction has settled and funds are available for use. This is only applicable for credit transactions. A transaction will typically settle within seconds to several days, depending on which payment rail is used.
		///
		///`FAILED`: The transaction failed to process successfully. This is a terminal status.
		///
		///`BLOCKED`: The transaction has been blocked for violating compliance rules. This is a terminal status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="old_status")]
		public PaymentInitiationPaymentReverseResponseStatus Old_status { get; set; }
		
		/// <summary>
		/// The `payment_id` associated with the transaction. This will be present in case of `REFUND` and `PIS_PAY_IN`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_id")]
		public string Payment_id { get; set; }
		
		/// <summary>
		/// The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2017-09-14T14:42:19.350Z"`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.DateTimeOffset Timestamp { get; set; }
		
		/// <summary>
		/// The `transaction_id` for the wallet transaction being updated
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transaction_id")]
		public string Transaction_id { get; set; }
		
		/// <summary>
		/// The EMI (E-Money Institution) wallet that this payment is associated with. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		public string Wallet_id { get; set; }
		
		/// <summary>
		/// `WALLET_TRANSACTION_STATUS_UPDATE`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `WALLET`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// WalletTransactionListRequest defines the request schema for `/wallet/transaction/list`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WalletTransactionsListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The number of transactions to fetch
		/// Minimum: 1
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		[System.ComponentModel.DataAnnotations.Range(1, 200)]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A base64 value representing the latest transaction that has already been requested. Set this to `next_cursor` received from the previous `/wallet/transaction/list` request. If provided, the response will only contain transactions created before that transaction. If omitted, the response will contain transactions starting from the most recent, and in descending order by the `created_at` time.
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Additional wallet transaction options
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public WalletTransactionListRequestOptions Options { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The ID of the e-wallet to fetch transactions from
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="wallet_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Wallet_id { get; set; }
	}
	
	/// <summary>
	/// Request input for creating an entity screening review
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// Search inputs for creating an entity watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public EntityWatchlistSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityCreateResponse
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Search terms associated with an entity used for searching against watchlists
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public EntityWatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request input for fetching an entity watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_id")]
		public string Entity_watchlist_screening_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityGetResponse
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Search terms associated with an entity used for searching against watchlists
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public EntityWatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request input for listing changes to entity watchlist screenings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityHistoryListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_id")]
		public string Entity_watchlist_screening_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Paginated list of entity watchlist screenings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityHistoryListResponse
	{
		
		/// <summary>
		/// List of entity watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screenings")]
		public EntityWatchlistScreening[] Entity_watchlist_screenings { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing hits for an entity watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityHitListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_id")]
		public string Entity_watchlist_screening_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Paginated list of entity watchlist screening hits
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityHitListResponse
	{
		
		/// <summary>
		/// List of entity watchlist screening hits
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_hits")]
		public EntityWatchlistScreeningHit[] Entity_watchlist_screening_hits { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing entity watchlist screenings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityListRequest
	{
		
		/// <summary>
		/// ID of the associated user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_program_id")]
		public string Entity_watchlist_program_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Paginated list of entity watchlist screenings
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityListResponse
	{
		
		/// <summary>
		/// List of entity watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screenings")]
		public EntityWatchlistScreening[] Entity_watchlist_screenings { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for fetching an entity watchlist program
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityProgramGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_program_id")]
		public string Entity_watchlist_program_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityProgramGetResponse
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// ID of the associated entity program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Archived programs are read-only and cannot screen new customers nor participate in ongoing monitoring.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_archived")]
		public bool Is_archived { get; set; }
		
		/// <summary>
		/// Indicator specifying whether the program is enabled and will perform daily rescans.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_rescanning_enabled")]
		public bool Is_rescanning_enabled { get; set; }
		
		/// <summary>
		/// Watchlists enabled for the associated program
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lists_enabled")]
		public EntityWatchlistCode[] Lists_enabled { get; set; }
		
		/// <summary>
		/// A name for the entity program to define its purpose. For example, "High Risk Organizations" or "Applicants".
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The valid name matching sensitivity configurations for a screening program. Note that while certain matching techniques may be more prevalent on less strict settings, all matching algorithms are enabled for every sensitivity.
		///
		///`coarse` - See more potential matches. This sensitivity will see more broad phonetic matches across alphabets that make missing a potential hit very unlikely. This setting is noisier and will require more manual review.
		///
		///`balanced` - A good default for most companies. This sensitivity is balanced to show high quality hits with reduced noise.
		///
		///`strict` - Aggressive false positive reduction. This sensitivity will require names to be more similar than `coarse` and `balanced` settings, relying less on phonetics, while still accounting for character transpositions, missing tokens, and other common permutations.
		///
		///`exact` - Matches must be nearly exact. This sensitivity will only show hits with exact or nearly exact name matches with only basic correction such as extraneous symbols and capitalization. This setting is generally not recommended unless you have a very specific use case.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name_sensitivity")]
		public EntityWatchlistProgramName_sensitivity Name_sensitivity { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing entity watchlist screening programs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityProgramListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Paginated list of entity watchlist screening programs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityProgramListResponse
	{
		
		/// <summary>
		/// List of entity watchlist screening programs
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_programs")]
		public EntityWatchlistProgram[] Entity_watchlist_programs { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for creating a review for an entity screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityReviewCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A comment submitted by a team member as part of reviewing a watchlist screening.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comment")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Hits to mark as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmed_hits")]
		public string[] Confirmed_hits { get; set; }
		
		/// <summary>
		/// Hits to mark as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dismissed_hits")]
		public string[] Dismissed_hits { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_id")]
		public string Entity_watchlist_screening_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// A review submitted by a team member for an entity watchlist screening. A review can be either a comment on the current screening state, actions taken
	///against hits attached to the watchlist screening, or both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityReviewCreateResponse
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// A comment submitted by a team member as part of reviewing a watchlist screening.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmed_hits")]
		public string[] Confirmed_hits { get; set; }
		
		/// <summary>
		/// Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dismissed_hits")]
		public string[] Dismissed_hits { get; set; }
		
		/// <summary>
		/// ID of the associated entity review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing reviews for an entity watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityReviewListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_id")]
		public string Entity_watchlist_screening_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Paginated list of entity watchlist screening reviews
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityReviewListResponse
	{
		
		/// <summary>
		/// List of entity watchlist screening reviews
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_reviews")]
		public EntityWatchlistScreeningReview[] Entity_watchlist_screening_reviews { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for editing an entity watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityUpdateRequest
	{
		
		/// <summary>
		/// ID of the associated user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entity_watchlist_screening_id")]
		public string Entity_watchlist_screening_id { get; set; }
		
		/// <summary>
		/// A list of fields to reset back to null
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reset_fields")]
		public WatchlistScreeningEntityUpdateRequestResettableField[] Reset_fields { get; set; }
		
		/// <summary>
		/// Search terms for editing an entity watchlist screening
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public UpdateEntityScreeningRequestSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// The name of a field that can be reset back to null
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WatchlistScreeningEntityUpdateRequestResettableField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assignee = 0,
	}
	
	/// <summary>
	/// The entity screening object allows you to represent an entity in your system, update its profile, and search for it on various watchlists. Note: Rejected entity screenings will not receive new hits, regardless of entity program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningEntityUpdateResponse
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated entity screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Search terms associated with an entity used for searching against watchlists
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public EntityWatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Data from a government watchlist or PEP list that has been attached to the screening.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningHit
	{
		
		/// <summary>
		/// Analysis information describing why a screening hit matched the provided user information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysis")]
		public ScreeningHitAnalysis Analysis { get; set; }
		
		/// <summary>
		/// Information associated with the watchlist hit
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ScreeningHitData Data { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="first_active")]
		public System.DateTimeOffset First_active { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="historical_since")]
		public System.Nullable<System.DateTimeOffset> Historical_since { get; set; }
		
		/// <summary>
		/// ID of the associated screening hit.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inactive_since")]
		public System.Nullable<System.DateTimeOffset> Inactive_since { get; set; }
		
		/// <summary>
		/// Shorthand identifier for a specific screening list for individuals.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_code")]
		public IndividualWatchlistCode List_code { get; set; }
		
		/// <summary>
		/// A universal identifier for a watchlist individual that is stable across searches and updates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="plaid_uid")]
		public string Plaid_uid { get; set; }
		
		/// <summary>
		/// The current state of review. All watchlist screening hits begin in a `pending_review` state but can be changed by creating a review. When a hit is in the `pending_review` state, it will always show the latest version of the watchlist data Plaid has available and be compared against the latest customer information saved in the watchlist screening. Once a hit has been marked as `confirmed` or `dismissed` it will no longer be updated so that the state is as it was when the review was first conducted.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="review_status")]
		public EntityWatchlistScreeningHitReview_status Review_status { get; set; }
		
		/// <summary>
		/// The identifier provided by the source sanction or watchlist. When one is not provided by the source, this is `null`.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source_uid")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Source_uid { get; set; }
	}
	
	/// <summary>
	/// The current state of review. All watchlist screening hits begin in a `pending_review` state but can be changed by creating a review. When a hit is in the `pending_review` state, it will always show the latest version of the watchlist data Plaid has available and be compared against the latest customer information saved in the watchlist screening. Once a hit has been marked as `confirmed` or `dismissed` it will no longer be updated so that the state is as it was when the review was first conducted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WatchlistScreeningHitStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		confirmed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dismissed = 2,
	}
	
	/// <summary>
	/// The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividual
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Search terms for creating an individual watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public WatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Search terms for creating an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningSearchTerms
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Required
		/// Min length: 2
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public System.Nullable<System.DateOnly> Date_of_birth { get; set; }
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Required
		/// Min length: 4
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="document_number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Document_number { get; set; }
		
		/// <summary>
		/// The legal name of the individual being screened.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// The current version of the search terms. Starts at `1` and increments with each edit to `search_terms`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		public double Version { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_program_id")]
		public string Watchlist_program_id { get; set; }
	}
	
	/// <summary>
	/// Request input for creating an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// Search inputs for creating a watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public WatchlistScreeningRequestSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Search inputs for creating a watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningRequestSearchTerms
	{
		
		/// <summary>
		/// Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
		/// Min length: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		public string Country { get; set; }
		
		/// <summary>
		/// A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_of_birth")]
		public System.Nullable<System.DateOnly> Date_of_birth { get; set; }
		
		/// <summary>
		/// The numeric or alphanumeric identifier associated with this document.
		/// Min length: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document_number")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		public string Document_number { get; set; }
		
		/// <summary>
		/// The legal name of the individual being screened.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_program_id")]
		public string Watchlist_program_id { get; set; }
	}
	
	/// <summary>
	/// The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualCreateResponse
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Search terms for creating an individual watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public WatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request input for fetching an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualGetResponse
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Search terms for creating an individual watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public WatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request input for listing changes to watchlist screenings for individuals
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualHistoryListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Paginated list of individual watchlist screenings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualHistoryListResponse
	{
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// List of individual watchlist screenings
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screenings")]
		public WatchlistScreeningIndividual[] Watchlist_screenings { get; set; }
	}
	
	/// <summary>
	/// Request input for listing hits for an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualHitListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Paginated list of individual watchlist screening hits
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualHitListResponse
	{
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// List of individual watchlist screening hits
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_hits")]
		public WatchlistScreeningHit[] Watchlist_screening_hits { get; set; }
	}
	
	/// <summary>
	/// Request input for listinging watchlist screenings for individuals
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualListRequest
	{
		
		/// <summary>
		/// ID of the associated user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_program_id")]
		public string Watchlist_program_id { get; set; }
	}
	
	/// <summary>
	/// Paginated list of individual watchlist screenings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualListResponse
	{
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// List of individual watchlist screenings
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screenings")]
		public WatchlistScreeningIndividual[] Watchlist_screenings { get; set; }
	}
	
	/// <summary>
	/// Request input for fetching an individual watchlist program
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualProgramGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_program_id")]
		public string Watchlist_program_id { get; set; }
	}
	
	/// <summary>
	/// A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of individuals.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualProgramGetResponse
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An ISO8601 formatted timestamp.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.DateTimeOffset Created_at { get; set; }
		
		/// <summary>
		/// ID of the associated program.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Archived programs are read-only and cannot screen new customers nor participate in ongoing monitoring.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_archived")]
		public bool Is_archived { get; set; }
		
		/// <summary>
		/// Indicator specifying whether the program is enabled and will perform daily rescans.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="is_rescanning_enabled")]
		public bool Is_rescanning_enabled { get; set; }
		
		/// <summary>
		/// Watchlists enabled for the associated program
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lists_enabled")]
		public IndividualWatchlistCode[] Lists_enabled { get; set; }
		
		/// <summary>
		/// A name for the program to define its purpose. For example, "High Risk Individuals", "US Cardholders", or "Applicants".
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The valid name matching sensitivity configurations for a screening program. Note that while certain matching techniques may be more prevalent on less strict settings, all matching algorithms are enabled for every sensitivity.
		///
		///`coarse` - See more potential matches. This sensitivity will see more broad phonetic matches across alphabets that make missing a potential hit very unlikely. This setting is noisier and will require more manual review.
		///
		///`balanced` - A good default for most companies. This sensitivity is balanced to show high quality hits with reduced noise.
		///
		///`strict` - Aggressive false positive reduction. This sensitivity will require names to be more similar than `coarse` and `balanced` settings, relying less on phonetics, while still accounting for character transpositions, missing tokens, and other common permutations.
		///
		///`exact` - Matches must be nearly exact. This sensitivity will only show hits with exact or nearly exact name matches with only basic correction such as extraneous symbols and capitalization. This setting is generally not recommended unless you have a very specific use case.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name_sensitivity")]
		public EntityWatchlistProgramName_sensitivity Name_sensitivity { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing watchlist screening programs for individuals
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualProgramListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Paginated list of individual watchlist screening programs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualProgramListResponse
	{
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// List of individual watchlist screening programs
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_programs")]
		public IndividualWatchlistProgram[] Watchlist_programs { get; set; }
	}
	
	/// <summary>
	/// Request input for creating a screening review
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualReviewCreateRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// A comment submitted by a team member as part of reviewing a watchlist screening.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comment")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Hits to mark as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmed_hits")]
		public string[] Confirmed_hits { get; set; }
		
		/// <summary>
		/// Hits to mark as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dismissed_hits")]
		public string[] Dismissed_hits { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// A review submitted by a team member for an individual watchlist screening. A review can be either a comment on the current screening state, actions taken
	///against hits attached to the watchlist screening, or both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualReviewCreateResponse
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// A comment submitted by a team member as part of reviewing a watchlist screening.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmed_hits")]
		public string[] Confirmed_hits { get; set; }
		
		/// <summary>
		/// Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dismissed_hits")]
		public string[] Dismissed_hits { get; set; }
		
		/// <summary>
		/// ID of the associated review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Request input for listing reviews for an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualReviewListRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursor")]
		public string Cursor { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// Paginated list of screening reviews
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualReviewListResponse
	{
		
		/// <summary>
		/// An identifier that determines which page of results you receive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="next_cursor")]
		public string Next_cursor { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// List of screening reviews
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_reviews")]
		public WatchlistScreeningReview[] Watchlist_screening_reviews { get; set; }
	}
	
	/// <summary>
	/// A review submitted by a team member for an individual watchlist screening. A review can be either a comment on the current screening state, actions taken
	///against hits attached to the watchlist screening, or both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningReview
	{
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// A comment submitted by a team member as part of reviewing a watchlist screening.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Comment { get; set; }
		
		/// <summary>
		/// Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="confirmed_hits")]
		public string[] Confirmed_hits { get; set; }
		
		/// <summary>
		/// Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dismissed_hits")]
		public string[] Dismissed_hits { get; set; }
		
		/// <summary>
		/// ID of the associated review.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Request input for editing an individual watchlist screening
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualUpdateRequest
	{
		
		/// <summary>
		/// ID of the associated user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// A list of fields to reset back to null
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reset_fields")]
		public WatchlistScreeningIndividualUpdateRequestResettableField[] Reset_fields { get; set; }
		
		/// <summary>
		/// Search terms for editing an individual watchlist screening
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public UpdateIndividualScreeningRequestSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="watchlist_screening_id")]
		public string Watchlist_screening_id { get; set; }
	}
	
	/// <summary>
	/// The name of a field that can be reset back to null
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WatchlistScreeningIndividualUpdateRequestResettableField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assignee = 0,
	}
	
	/// <summary>
	/// The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WatchlistScreeningIndividualUpdateResponse
	{
		
		/// <summary>
		/// ID of the associated user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Information about the last change made to the parent object specifying what caused the change as well as when it occurred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="audit_trail")]
		public WatchlistScreeningAuditTrail Audit_trail { get; set; }
		
		/// <summary>
		/// An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="client_user_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Client_user_id { get; set; }
		
		/// <summary>
		/// ID of the associated screening.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Search terms for creating an individual watchlist screening
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_terms")]
		public WatchlistScreeningSearchTerms Search_terms { get; set; }
		
		/// <summary>
		/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EntityWatchlistScreeningStatus Status { get; set; }
	}
	
	/// <summary>
	/// A status enum indicating whether a screening is still pending review, has been rejected, or has been cleared.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WatchlistScreeningStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rejected = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending_review = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cleared = 2,
	}
	
	/// <summary>
	/// Names that are explicitly marked as low quality either by their `source` list, or by `plaid` by a series of additional checks done by Plaid. Plaid does not ever surface a hit as a result of a weak name alone. If a name has no quality issues, this value will be `none`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WeakAliasDetermination
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		source = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		plaid = 2,
	}
	
	/// <summary>
	/// The Plaid environment the webhook was sent from
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebhookEnvironmentValues
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		development = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sandbox = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		production = 2,
	}
	
	/// <summary>
	/// The webhook types that can be fired by this test endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebhookType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOLDINGS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVESTMENTS_TRANSACTIONS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIABILITIES = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONS = 5,
	}
	
	/// <summary>
	/// Fired when an Item's webhook is updated. This will be sent to the newly specified webhook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WebhookUpdateAcknowledgedWebhook
	{
		
		/// <summary>
		/// The Plaid environment the webhook was sent from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public AssetsErrorWebhookEnvironment Environment { get; set; }
		
		/// <summary>
		/// We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public PlaidError Error { get; set; }
		
		/// <summary>
		/// The `item_id` of the Item associated with this webhook, warning, or error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="item_id")]
		public string Item_id { get; set; }
		
		/// <summary>
		/// The new webhook URL
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_webhook_url")]
		public string New_webhook_url { get; set; }
		
		/// <summary>
		/// `WEBHOOK_UPDATE_ACKNOWLEDGED`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_code")]
		public string Webhook_code { get; set; }
		
		/// <summary>
		/// `ITEM`
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="webhook_type")]
		public string Webhook_type { get; set; }
	}
	
	/// <summary>
	/// WebhookVerificationKeyGetRequest defines the request schema for `/webhook_verification_key/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WebhookVerificationKeyGetRequest
	{
		
		/// <summary>
		/// Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client_id")]
		public string Client_id { get; set; }
		
		/// <summary>
		/// The key ID ( `kid` ) from the JWT header.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key_id")]
		public string Key_id { get; set; }
		
		/// <summary>
		/// Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// WebhookVerificationKeyGetResponse defines the response schema for `/webhook_verification_key/get`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WebhookVerificationKeyGetResponse
	{
		
		/// <summary>
		/// A JSON Web Key (JWK) that can be used in conjunction with [JWT libraries](https://jwt.io/#libraries-io) to verify Plaid webhooks
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public JWKPublicKey Key { get; set; }
		
		/// <summary>
		/// A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Year-to-date pre-tax earnings, as reported on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class YTDGrossIncomeSummaryFieldNumber : IncomeSummaryFieldNumber
	{
	}
	
	/// <summary>
	/// Year-to-date earnings after any tax withholdings, benefit payments or deductions, as reported on the paystub.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class YTDNetIncomeSummaryFieldNumber : IncomeSummaryFieldNumber
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve real-time balance data
		/// The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item's accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaidâ€™s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link. As this endpoint triggers a synchronous request for fresh data, latency may be higher than for other Plaid endpoints; if you encounter errors, you may find it necessary to adjust your timeout period when making requests.
		/// AccountsBalanceGet accounts/balance/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AccountsGetResponse> AccountsBalanceGetAsync(AccountsBalanceGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/balance/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AccountsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve accounts
		/// The `/accounts/get` endpoint can be used to retrieve a list of accounts associated with any linked Item. Plaid will only return active bank accounts â€” that is, accounts that are not closed and are capable of carrying a balance.
		/// For items that went through the updated account selection pane, this endpoint only returns accounts that were permissioned by the user when they initially created the Item. If a user creates a new account after the initial link, you can capture this event through the [`NEW_ACCOUNTS_AVAILABLE`](https://plaid.com/docs/api/items/#new_accounts_available) webhook and then use Link's [update mode](https://plaid.com/docs/link/update-mode/) to request that the user share this new account with you.
		/// 
		/// This endpoint retrieves cached information, rather than extracting fresh information from the institution. As a result, balances returned may not be up-to-date; for realtime balance information, use `/accounts/balance/get` instead. Note that some information is nullable.
		/// AccountsGet accounts/get
		/// </summary>
		/// <returns>success</returns>
		public async Task<AccountsGetResponse> AccountsGetAsync(AccountsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AccountsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve information about a Plaid application
		/// Allows financial institutions to retrieve information about Plaid clients for the purpose of building control-tower experiences
		/// ApplicationGet application/get
		/// </summary>
		/// <returns>success</returns>
		public async Task<ApplicationGetResponse> ApplicationGetAsync(ApplicationGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "application/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ApplicationGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Asset Report Audit Copy
		/// Plaid can provide an Audit Copy of any Asset Report directly to a participating third party on your behalf. For example, Plaid can supply an Audit Copy directly to Fannie Mae on your behalf if you participate in the Day 1 Certaintyâ„¢ program. An Audit Copy contains the same underlying data as the Asset Report.
		/// 
		/// To grant access to an Audit Copy, use the `/asset_report/audit_copy/create` endpoint to create an `audit_copy_token` and then pass that token to the third party who needs access. Each third party has its own `auditor_id`, for example `fannie_mae`. Youâ€™ll need to create a separate Audit Copy for each third party to whom you want to grant access to the Report.
		/// AssetReportAuditCopyCreate asset_report/audit_copy/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportAuditCopyCreateResponse> AssetReportAuditCopyCreateAsync(AssetReportAuditCopyCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/audit_copy/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportAuditCopyCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve an Asset Report Audit Copy
		/// `/asset_report/audit_copy/get` allows auditors to get a copy of an Asset Report that was previously shared via the `/asset_report/audit_copy/create` endpoint.  The caller of `/asset_report/audit_copy/create` must provide the `audit_copy_token` to the auditor.  This token can then be used to call `/asset_report/audit_copy/create`.
		/// AssetReportAuditCopyGet asset_report/audit_copy/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportGetResponse> AssetReportAuditCopyGetAsync(AssetReportAuditCopyGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/audit_copy/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove Asset Report Audit Copy
		/// The `/asset_report/audit_copy/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Asset Report, the Asset Report itself and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
		/// AssetReportAuditCopyRemove asset_report/audit_copy/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportAuditCopyRemoveResponse> AssetReportAuditCopyRemoveAsync(AssetReportAuditCopyRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/audit_copy/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportAuditCopyRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an Asset Report
		/// The `/asset_report/create` endpoint initiates the process of creating an Asset Report, which can then be retrieved by passing the `asset_report_token` return value to the `/asset_report/get` or `/asset_report/pdf/get` endpoints.
		/// 
		/// The Asset Report takes some time to be created and is not available immediately after calling `/asset_report/create`. When the Asset Report is ready to be retrieved using `/asset_report/get` or `/asset_report/pdf/get`, Plaid will fire a `PRODUCT_READY` webhook. For full details of the webhook schema, see [Asset Report webhooks](https://plaid.com/docs/api/products/assets/#webhooks).
		/// 
		/// The `/asset_report/create` endpoint creates an Asset Report at a moment in time. Asset Reports are immutable. To get an updated Asset Report, use the `/asset_report/refresh` endpoint.
		/// AssetReportCreate asset_report/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportCreateResponse> AssetReportCreateAsync(AssetReportCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Filter Asset Report
		/// By default, an Asset Report will contain all of the accounts on a given Item. In some cases, you may not want the Asset Report to contain all accounts. For example, you might have the end user choose which accounts are relevant in Link using the Account Select view, which you can enable in the dashboard. Or, you might always exclude certain account types or subtypes, which you can identify by using the `/accounts/get` endpoint. To narrow an Asset Report to only a subset of accounts, use the `/asset_report/filter` endpoint.
		/// 
		/// To exclude certain Accounts from an Asset Report, first use the `/asset_report/create` endpoint to create the report, then send the `asset_report_token` along with a list of `account_ids` to exclude to the `/asset_report/filter` endpoint, to create a new Asset Report which contains only a subset of the original Asset Report's data.
		/// 
		/// Because Asset Reports are immutable, calling `/asset_report/filter` does not alter the original Asset Report in any way; rather, `/asset_report/filter` creates a new Asset Report with a new token and id. Asset Reports created via `/asset_report/filter` do not contain new Asset data, and are not billed.
		/// 
		/// Plaid will fire a [`PRODUCT_READY`](https://plaid.com/docs/api/products/assets/#product_ready) webhook once generation of the filtered Asset Report has completed.
		/// AssetReportFilter asset_report/filter
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportFilterResponse> AssetReportFilterAsync(AssetReportFilterRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/filter";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportFilterResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve an Asset Report
		/// The `/asset_report/get` endpoint retrieves the Asset Report in JSON format. Before calling `/asset_report/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](https://plaid.com/docs/api/products/assets/#product_ready) webhook to fire, indicating that the Report is ready to be retrieved.
		/// 
		/// By default, an Asset Report includes transaction descriptions as returned by the bank, as opposed to parsed and categorized by Plaid. You can also receive cleaned and categorized transactions, as well as additional insights like merchant name or location information. We call this an Asset Report with Insights. An Asset Report with Insights provides transaction category, location, and merchant information in addition to the transaction strings provided in a standard Asset Report.
		/// 
		/// If report_type was set to `VERIFICATION_OF_EMPLOYMENT` when the Asset Report was created in asset_report/create, debit transactions and transaction amounts wonâ€™t be included in the report.
		/// 
		/// To retrieve an Asset Report with Insights, call the `/asset_report/get` endpoint with `include_insights` set to `true`.
		/// AssetReportGet asset_report/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportGetResponse> AssetReportGetAsync(AssetReportGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a PDF Asset Report
		/// The `/asset_report/pdf/get` endpoint retrieves the Asset Report in PDF format. Before calling `/asset_report/pdf/get`, you must first create the Asset Report using `/asset_report/create` (or filter an Asset Report using `/asset_report/filter`) and then wait for the [`PRODUCT_READY`](https://plaid.com/docs/api/products/assets/#product_ready) webhook to fire, indicating that the Report is ready to be retrieved.
		/// 
		/// The response to `/asset_report/pdf/get` is the PDF binary data. The `request_id`  is returned in the `Plaid-Request-ID` header.
		/// 
		/// If report_type was set to `VERIFICATION_OF_EMPLOYMENT` when the Asset Report was created in asset_report/create, debit transactions and transaction amounts wonâ€™t be included in the report.
		/// 
		/// [View a sample PDF Asset Report](https://plaid.com/documents/sample-asset-report.pdf).
		/// AssetReportPdfGet asset_report/pdf/get
		/// </summary>
		/// <returns>A PDF of the Asset Report</returns>
		public async Task AssetReportPdfGetAsync(AssetReportPDFGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/pdf/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Refresh an Asset Report
		/// An Asset Report is an immutable snapshot of a user's assets. In order to "refresh" an Asset Report you created previously, you can use the `/asset_report/refresh` endpoint to create a new Asset Report based on the old one, but with the most recent data available.
		/// 
		/// The new Asset Report will contain the same Items as the original Report, as well as the same filters applied by any call to `/asset_report/filter`. By default, the new Asset Report will also use the same parameters you submitted with your original `/asset_report/create` request, but the original `days_requested` value and the values of any parameters in the `options` object can be overridden with new values. To change these arguments, simply supply new values for them in your request to `/asset_report/refresh`. Submit an empty string ("") for any previously-populated fields you would like set as empty.
		/// AssetReportRefresh asset_report/refresh
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportRefreshResponse> AssetReportRefreshAsync(AssetReportRefreshRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/refresh";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportRefreshResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an Asset Report
		/// The `/item/remove` endpoint allows you to invalidate an `access_token`, meaning you will not be able to create new Asset Reports with it. Removing an Item does not affect any Asset Reports or Audit Copies you have already created, which will remain accessible until you remove them specifically.
		/// 
		/// The `/asset_report/remove` endpoint allows you to remove an Asset Report. Removing an Asset Report invalidates its `asset_report_token`, meaning you will no longer be able to use it to access Report data or create new Audit Copies. Removing an Asset Report does not affect the underlying Items, but does invalidate any `audit_copy_tokens` associated with the Asset Report.
		/// AssetReportRemove asset_report/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportRemoveResponse> AssetReportRemoveAsync(AssetReportRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "asset_report/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve auth data
		/// The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item's checking and savings accounts, along with high-level account data and balances when available.
		/// 
		/// Note: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
		/// 
		/// Versioning note: In API version 2017-03-08, the schema of the `numbers` object returned by this endpoint is substantially different. For details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2018-05-22).
		/// AuthGet auth/get
		/// </summary>
		/// <returns>success</returns>
		public async Task<AuthGetResponse> AuthGetAsync(AuthGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "auth/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AuthGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get balance of your Bank Transfer account
		/// Use the `/bank_transfer/balance/get` endpoint to see the available balance in your bank transfer account. Debit transfers increase this balance once their status is posted. Credit transfers decrease this balance when they are created.
		/// 
		/// The transactable balance shows the amount in your account that you are able to use for transfers, and is essentially your available balance minus your minimum balance.
		/// 
		/// Note that this endpoint can only be used with FBO accounts, when using Bank Transfers in the Full Service configuration. It cannot be used on your own account when using Bank Transfers in the BTS Platform configuration.
		/// BankTransferBalanceGet bank_transfer/balance/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferBalanceGetResponse> BankTransferBalanceGetAsync(BankTransferBalanceGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/balance/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferBalanceGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancel a bank transfer
		/// Use the `/bank_transfer/cancel` endpoint to cancel a bank transfer.  A transfer is eligible for cancelation if the `cancellable` property returned by `/bank_transfer/get` is `true`.
		/// BankTransferCancel bank_transfer/cancel
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferCancelResponse> BankTransferCancelAsync(BankTransferCancelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferCancelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a bank transfer
		/// Use the `/bank_transfer/create` endpoint to initiate a new bank transfer.
		/// BankTransferCreate bank_transfer/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferCreateResponse> BankTransferCreateAsync(BankTransferCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List bank transfer events
		/// Use the `/bank_transfer/event/list` endpoint to get a list of Plaid-initiated ACH or bank transfer events based on specified filter criteria. When using Auth with micro-deposit verification enabled, this endpoint can be used to fetch status updates on ACH micro-deposits. For more details, see [micro-deposit events](https://plaid.com/docs/auth/coverage/microdeposit-events/).
		/// BankTransferEventList bank_transfer/event/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferEventListResponse> BankTransferEventListAsync(BankTransferEventListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/event/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferEventListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Sync bank transfer events
		/// `/bank_transfer/event/sync` allows you to request up to the next 25 Plaid-initiated bank transfer events that happened after a specific `event_id`. When using Auth with micro-deposit verification enabled, this endpoint can be used to fetch status updates on ACH micro-deposits. For more details, see [micro-deposit events](https://www.plaid.com/docs/auth/coverage/microdeposit-events/).
		/// BankTransferEventSync bank_transfer/event/sync
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferEventSyncResponse> BankTransferEventSyncAsync(BankTransferEventSyncRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/event/sync";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferEventSyncResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a bank transfer
		/// The `/bank_transfer/get` fetches information about the bank transfer corresponding to the given `bank_transfer_id`.
		/// BankTransferGet bank_transfer/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferGetResponse> BankTransferGetAsync(BankTransferGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List bank transfers
		/// Use the `/bank_transfer/list` endpoint to see a list of all your bank transfers and their statuses. Results are paginated; use the `count` and `offset` query parameters to retrieve the desired bank transfers.
		/// 
		/// BankTransferList bank_transfer/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferListResponse> BankTransferListAsync(BankTransferListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Migrate account into Bank Transfers
		/// As an alternative to adding Items via Link, you can also use the `/bank_transfer/migrate_account` endpoint to migrate known account and routing numbers to Plaid Items.  Note that Items created in this way are not compatible with endpoints for other products, such as `/accounts/balance/get`, and can only be used with Bank Transfer endpoints.  If you require access to other endpoints, create the Item through Link instead.  Access to `/bank_transfer/migrate_account` is not enabled by default; to obtain access, contact your Plaid Account Manager.
		/// BankTransferMigrateAccount bank_transfer/migrate_account
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferMigrateAccountResponse> BankTransferMigrateAccountAsync(BankTransferMigrateAccountRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/migrate_account";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferMigrateAccountResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a sweep
		/// The `/bank_transfer/sweep/get` endpoint fetches information about the sweep corresponding to the given `sweep_id`.
		/// BankTransferSweepGet bank_transfer/sweep/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferSweepGetResponse> BankTransferSweepGetAsync(BankTransferSweepGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/sweep/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferSweepGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List sweeps
		/// The `/bank_transfer/sweep/list` endpoint fetches information about the sweeps matching the given filters.
		/// BankTransferSweepList bank_transfer/sweep/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<BankTransferSweepListResponse> BankTransferSweepListAsync(BankTransferSweepListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "bank_transfer/sweep/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BankTransferSweepListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve information from the bank accounts used for employment verification
		/// `/credit/bank_employment/get` returns the employment report(s) derived from bank transaction data for a specified user.
		/// CreditBankEmploymentGet beta/credit/v1/bank_employment/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditBankEmploymentGetResponse> CreditBankEmploymentGetAsync(CreditBankEmploymentGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "beta/credit/v1/bank_employment/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditBankEmploymentGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create transaction category rule
		/// The `/transactions/rules/v1/create` endpoint creates transaction categorization rules.
		/// 
		/// Rules will be applied on the Item's transactions returned in `/transactions/get` response.
		/// 
		/// The product is currently in beta. To request access, contact transactions-feedback@plaid.com.
		/// TransactionsRulesCreate beta/transactions/rules/v1/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsRulesCreateResponse> TransactionsRulesCreateAsync(TransactionsRulesCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "beta/transactions/rules/v1/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsRulesCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return a list of rules created for the Item associated with the access token.
		/// The `/transactions/rules/v1/list` returns a list of transaction rules created for the Item associated with the access token.
		/// TransactionsRulesList beta/transactions/rules/v1/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsRulesListResponse> TransactionsRulesListAsync(TransactionsRulesListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "beta/transactions/rules/v1/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsRulesListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove transaction rule
		/// The `/transactions/rules/v1/remove` endpoint is used to remove a transaction rule.
		/// TransactionsRulesRemove beta/transactions/rules/v1/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsRulesRemoveResponse> TransactionsRulesRemoveAsync(TransactionsRulesRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "beta/transactions/rules/v1/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsRulesRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// enhance locally-held transaction data
		/// The `/beta/transactions/v1/enhance` endpoint enriches raw transaction data provided directly by clients.
		/// 
		/// The product is currently in beta.
		/// TransactionsEnhance beta/transactions/v1/enhance
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsEnhanceGetResponse> TransactionsEnhanceAsync(TransactionsEnhanceGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "beta/transactions/v1/enhance";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsEnhanceGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Categories
		/// Send a request to the `/categories/get` endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.
		/// CategoriesGet categories/get
		/// </summary>
		/// <returns>success</returns>
		public async Task<CategoriesGetResponse> CategoriesGetAsync(CategoriesGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "categories/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CategoriesGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve an Asset Report with Freddie Mac format. Only Freddie Mac can use this endpoint.
		/// The `credit/asset_report/freddie_mac/get` endpoint retrieves the Asset Report in Freddie Mac's JSON format.
		/// CreditAssetReportFreddieMacGet credit/asset_report/freddie_mac/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportFreddieGetResponse> CreditAssetReportFreddieMacGetAsync(AssetReportFreddieGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/asset_report/freddie_mac/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportFreddieGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Asset or Income Report Audit Copy Token
		/// Plaid can create an Audit Copy token of an Asset Report and/or Income Report to share with participating Government Sponsored Entity (GSE). If you participate in the Day 1 Certaintyâ„¢ program, Plaid can supply an Audit Copy token directly to Fannie Mae on your behalf. An Audit Copy token contains the same underlying data as the Asset Report and/or Income Report (result of /credit/payroll_income/get).
		/// 
		/// Use the `/credit/audit_copy_token/create` endpoint to create an `audit_copy_token` and then pass that token to the GSE who needs access.
		/// CreditAuditCopyTokenCreate credit/audit_copy_token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditAuditCopyTokenCreateResponse> CreditAuditCopyTokenCreateAsync(CreditAuditCopyTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/audit_copy_token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditAuditCopyTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove an Audit Copy token
		/// The `/credit/audit_copy_token/remove` endpoint allows you to remove an Audit Copy. Removing an Audit Copy invalidates the `audit_copy_token` associated with it, meaning both you and any third parties holding the token will no longer be able to use it to access Report data. Items associated with the Report data and other Audit Copies of it are not affected and will remain accessible after removing the given Audit Copy.
		/// CreditReportAuditCopyRemove credit/audit_copy_token/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditAuditCopyTokenRemoveResponse> CreditReportAuditCopyRemoveAsync(CreditAuditCopyTokenRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/audit_copy_token/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditAuditCopyTokenRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an Audit Copy Token
		/// The `/credit/audit_copy_token/update` endpoint updates an existing  Audit Copy Token by adding the report tokens in the `report_tokens` field to the `audit_copy_token`. If the Audit Copy Token already contains a report of a certain type, it will be replaced with the token provided in the `report_tokens` field.
		/// CreditAuditCopyTokenUpdate credit/audit_copy_token/update
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditAuditCopyTokenUpdateResponse> CreditAuditCopyTokenUpdateAsync(CreditAuditCopyTokenUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/audit_copy_token/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditAuditCopyTokenUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve information from the bank accounts used for income verification
		/// `/credit/bank_income/get` returns the bank income report(s) for a specified user.
		/// CreditBankIncomeGet credit/bank_income/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditBankIncomeGetResponse> CreditBankIncomeGetAsync(CreditBankIncomeGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/bank_income/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditBankIncomeGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve information from the bank accounts used for income verification in PDF format
		/// `/credit/bank_income/pdf/get` returns the most recent bank income report for a specified user in PDF format.
		/// CreditBankIncomePdfGet credit/bank_income/pdf/get
		/// </summary>
		/// <returns>A PDF of the Bank Income Report</returns>
		public async Task CreditBankIncomePdfGetAsync(CreditBankIncomePDFGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/bank_income/pdf/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Refresh a user's bank income information
		/// `/credit/bank_income/refresh` refreshes the bank income report data for a specific user.
		/// CreditBankIncomeRefresh credit/bank_income/refresh
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditBankIncomeRefreshResponse> CreditBankIncomeRefreshAsync(CreditBankIncomeRefreshRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/bank_income/refresh";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditBankIncomeRefreshResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a summary of an individual's employment information
		/// `/credit/employment/get` returns a list of items with employment information from a user's payroll provider that was verified by an end user.
		/// CreditEmploymentGet credit/employment/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditEmploymentGetResponse> CreditEmploymentGetAsync(CreditEmploymentGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/employment/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditEmploymentGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve an Asset Report with Freddie Mac format (aka VOA - Verification Of Assets), and a Verification Of Employment (VOE) report if this one is available. Only Freddie Mac can use this endpoint.
		/// The `credit/asset_report/freddie_mac/get` endpoint retrieves the Verification of Assets and Verification of Employment reports.
		/// CreditFreddieMacReportsGet credit/freddie_mac/reports/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditFreddieMacReportsGetResponse> CreditFreddieMacReportsGetAsync(CreditFreddieMacReportsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/freddie_mac/reports/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditFreddieMacReportsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a user's payroll information
		/// This endpoint gets payroll income information for a specific user, either as a result of the user connecting to their payroll provider or uploading a pay related document.
		/// CreditPayrollIncomeGet credit/payroll_income/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditPayrollIncomeGetResponse> CreditPayrollIncomeGetAsync(CreditPayrollIncomeGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/payroll_income/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditPayrollIncomeGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Check income verification eligibility and optimize conversion
		/// `/credit/payroll_income/precheck` is an optional endpoint that can be called before initializing a Link session for income verification. It evaluates whether a given user is supportable by digital income verification. If the user is eligible for digital verification, that information will be associated with the user token, and in this way will generate a Link UI optimized for the end user and their specific employer. If the user cannot be confirmed as eligible, the user can still use the income verification flow, but they may be required to manually upload a paystub to verify their income.
		/// 
		/// While all request fields are optional, providing `employer` data will increase the chance of receiving a useful result.
		/// 
		/// When testing in Sandbox, you can control the results by providing special test values in the `employer` and `access_tokens` fields. `employer_good` and `employer_bad` will result in `HIGH` and `LOW` confidence values, respectively. `employer_multi` will result in a `HIGH` confidence with multiple payroll options. Likewise, `access_good` and `access_bad` will result in `HIGH` and `LOW` confidence values, respectively. Any other value for `employer` and `access_tokens` in Sandbox will result in `UNKNOWN` confidence.
		/// CreditPayrollIncomePrecheck credit/payroll_income/precheck
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditPayrollIncomePrecheckResponse> CreditPayrollIncomePrecheckAsync(CreditPayrollIncomePrecheckRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/payroll_income/precheck";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditPayrollIncomePrecheckResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Refresh a digital payroll income verification
		/// `/credit/payroll_income/refresh` refreshes a given digital payroll income verification.
		/// CreditPayrollIncomeRefresh credit/payroll_income/refresh
		/// </summary>
		/// <returns>success</returns>
		public async Task<CreditPayrollIncomeRefreshResponse> CreditPayrollIncomeRefreshAsync(CreditPayrollIncomeRefreshRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/payroll_income/refresh";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditPayrollIncomeRefreshResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a relay token to share an Asset Report with a partner client (beta)
		/// Plaid can share an Asset Report directly with a participating third party on your behalf. The shared Asset Report is the exact same Asset Report originally created in `/asset_report/create`.
		/// 
		/// To grant a third party access to an Asset Report, use the `/credit/relay/create` endpoint to create a `relay_token` and then pass that token to your third party. Each third party has its own `secondary_client_id`; for example, `ce5bd328dcd34123456`. You'll need to create a separate `relay_token` for each third party that needs access to the report on your behalf.
		/// CreditRelayCreate credit/relay/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditRelayCreateResponse> CreditRelayCreateAsync(CreditRelayCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/relay/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditRelayCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve the reports associated with a relay token that was shared with you (beta)
		/// `/credit/relay/get` allows third parties to receive a report that was shared with them, using a `relay_token` that was created by the report owner.
		/// CreditRelayGet credit/relay/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<AssetReportGetResponse> CreditRelayGetAsync(CreditRelayGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/relay/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssetReportGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Refresh a report of a relay token (beta)
		/// The `/credit/relay/refresh` endpoint allows third parties to refresh a report that was relayed to them, using a `relay_token` that was created by the report owner. A new report will be created with the original report parameters, but with the most recent data available based on the `days_requested` value of the original report.
		/// CreditRelayRefresh credit/relay/refresh
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditRelayRefreshResponse> CreditRelayRefreshAsync(CreditRelayRefreshRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/relay/refresh";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditRelayRefreshResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove relay token (beta)
		/// The `/credit/relay/remove` endpoint allows you to invalidate a `relay_token`. The third party holding the token will no longer be able to access or refresh the reports which the `relay_token` gives access to. The original report, associated Items, and other relay tokens that provide access to the same report are not affected and will remain accessible after removing the given `relay_token`.
		/// CreditRelayRemove credit/relay/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditRelayRemoveResponse> CreditRelayRemoveAsync(CreditRelayRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/relay/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditRelayRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve Link sessions for your user
		/// This endpoint can be used for your end users after they complete the Link flow. This endpoint returns a list of Link sessions that your user completed, where each session includes the results from the Link flow.
		/// 
		/// These results include details about the Item that was created and some product related metadata (showing, for example, whether the user finished the bank income verification step).
		/// CreditSessionsGet credit/sessions/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CreditSessionsGetResponse> CreditSessionsGetAsync(CreditSessionsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "credit/sessions/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreditSessionsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a dashboard user
		/// Retrieve information about a dashboard user.
		/// DashboardUserGet dashboard_user/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<DashboardUserGetResponse> DashboardUserGetAsync(DashboardUserGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "dashboard_user/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DashboardUserGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List dashboard users
		/// List all dashboard users associated with your account.
		/// DashboardUserList dashboard_user/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<DashboardUserListResponse> DashboardUserListAsync(DashboardUserListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "dashboard_user/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DashboardUserListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a deposit switch without using Plaid Exchange
		/// This endpoint provides an alternative to `/deposit_switch/create` for customers who have not yet fully integrated with Plaid Exchange. Like `/deposit_switch/create`, it creates a deposit switch entity that will be persisted throughout the lifecycle of the switch.
		/// DepositSwitchAltCreate deposit_switch/alt/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<DepositSwitchAltCreateResponse> DepositSwitchAltCreateAsync(DepositSwitchAltCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deposit_switch/alt/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DepositSwitchAltCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a deposit switch
		/// This endpoint creates a deposit switch entity that will be persisted throughout the lifecycle of the switch.
		/// DepositSwitchCreate deposit_switch/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<DepositSwitchCreateResponse> DepositSwitchCreateAsync(DepositSwitchCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deposit_switch/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DepositSwitchCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a deposit switch
		/// This endpoint returns information related to how the user has configured their payroll allocation and the state of the switch. You can use this information to build logic related to the user's direct deposit allocation preferences.
		/// DepositSwitchGet deposit_switch/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<DepositSwitchGetResponse> DepositSwitchGetAsync(DepositSwitchGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deposit_switch/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DepositSwitchGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a deposit switch token
		/// In order for the end user to take action, you will need to create a public token representing the deposit switch. This token is used to initialize Link. It can be used one time and expires after 30 minutes.
		/// 
		/// DepositSwitchTokenCreate deposit_switch/token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<DepositSwitchTokenCreateResponse> DepositSwitchTokenCreateAsync(DepositSwitchTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deposit_switch/token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DepositSwitchTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Search employer database
		/// `/employers/search` allows you the ability to search Plaidâ€™s database of known employers, for use with Deposit Switch. You can use this endpoint to look up a user's employer in order to confirm that they are supported. Users with non-supported employers can then be routed out of the Deposit Switch flow.
		/// 
		/// The data in the employer database is currently limited. As the Deposit Switch and Income products progress through their respective beta periods, more employers are being regularly added. Because the employer database is frequently updated, we recommend that you do not cache or store data from this endpoint for more than a day.
		/// EmployersSearch employers/search
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EmployersSearchResponse> EmployersSearchAsync(EmployersSearchRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "employers/search";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<EmployersSearchResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// (Deprecated) Retrieve a summary of an individual's employment information
		/// `/employment/verification/get` returns a list of employments through a user payroll that was verified by an end user.
		/// 
		/// This endpoint has been deprecated; new integrations should use `/credit/employment/get` instead.
		/// EmploymentVerificationGet employment/verification/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EmploymentVerificationGetResponse> EmploymentVerificationGetAsync(EmploymentVerificationGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "employment/verification/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<EmploymentVerificationGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Webhook receiver for fdx notifications
		/// A generic webhook receiver endpoint for FDX Event Notifications
		/// FdxNotifications fdx/notifications
		/// </summary>
		/// <returns>OK</returns>
		public async Task FdxNotificationsAsync(FDXNotification requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "fdx/notifications";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve identity data
		/// The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.
		/// 
		/// This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
		/// 
		/// Note: In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29).
		/// IdentityGet identity/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IdentityGetResponse> IdentityGetAsync(IdentityGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IdentityGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve identity match score
		/// The `/identity/match` endpoint generates a match score, which indicates how well the provided identity data matches the identity information on file with the account holder's financial institution.
		/// 
		/// This request may take some time to complete if Identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.
		/// IdentityMatch identity/match
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IdentityMatchResponse> IdentityMatchAsync(IdentityMatchRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity/match";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IdentityMatchResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a new identity verification
		/// Create a new Identity Verification for the user specified by the `client_user_id` field. The requirements and behavior of the verification are determined by the `template_id` provided.
		/// If you don't know whether the associated user already has an active Identity Verification, you can specify `"is_idempotent": true` in the request body. With idempotency enabled, a new Identity Verification will only be created if one does not already exist for the associated `client_user_id` and `template_id`. If an Identity Verification is found, it will be returned unmodified with an `200 OK` HTTP status code.
		/// 
		/// IdentityVerificationCreate identity_verification/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IdentityVerificationCreateResponse> IdentityVerificationCreateAsync(IdentityVerificationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity_verification/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IdentityVerificationCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve Identity Verification
		/// Retrieve a previously created identity verification.
		/// IdentityVerificationGet identity_verification/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IdentityVerificationGetResponse> IdentityVerificationGetAsync(IdentityVerificationGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity_verification/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IdentityVerificationGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Identity Verifications
		/// Filter and list Identity Verifications created by your account
		/// IdentityVerificationList identity_verification/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IdentityVerificationListResponse> IdentityVerificationListAsync(IdentityVerificationListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity_verification/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IdentityVerificationListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retry an Identity Verification
		/// Allow a customer to retry their identity verification
		/// IdentityVerificationRetry identity_verification/retry
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IdentityVerificationRetryResponse> IdentityVerificationRetryAsync(IdentityVerificationRetryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity_verification/retry";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IdentityVerificationRetryResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// (Deprecated) Create an income verification instance
		/// `/income/verification/create` begins the income verification process by returning an `income_verification_id`. You can then provide the `income_verification_id` to `/link/token/create` under the `income_verification` parameter in order to create a Link instance that will prompt the user to go through the income verification flow. Plaid will fire an `INCOME` webhook once the user completes the Payroll Income flow, or when the uploaded documents in the Document Income flow have finished processing.
		/// IncomeVerificationCreate income/verification/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IncomeVerificationCreateResponse> IncomeVerificationCreateAsync(IncomeVerificationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "income/verification/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IncomeVerificationCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// (Deprecated) Download the original documents used for income verification
		/// `/income/verification/documents/download` provides the ability to download the source documents associated with the verification.
		/// 
		/// If Document Income was used, the documents will be those the user provided in Link. For Payroll Income, the most recent files available
		/// for download from the payroll provider will be available from this endpoint.
		/// 
		/// The response to `/income/verification/documents/download` is a ZIP file in binary data. If a `document_id` is passed, a single document will be contained in this file.
		/// If not, the response will contain all documents associated with the verification.
		/// 
		/// The `request_id` is returned in the `Plaid-Request-ID` header.
		/// IncomeVerificationDocumentsDownload income/verification/documents/download
		/// </summary>
		/// <returns>A ZIP file containing source documents(s) used as the basis for income verification.</returns>
		public async Task IncomeVerificationDocumentsDownloadAsync(IncomeVerificationDocumentsDownloadRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "income/verification/documents/download";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// (Deprecated) Retrieve information from the paystubs used for income verification
		/// `/income/verification/paystubs/get` returns the information collected from the paystubs that were used to verify an end user's income. It can be called once the status of the verification has been set to `VERIFICATION_STATUS_PROCESSING_COMPLETE`, as reported by the `INCOME: verification_status` webhook. Attempting to call the endpoint before verification has been completed will result in an error.
		/// 
		/// This endpoint has been deprecated; new integrations should use `/credit/payroll_income/get` instead.
		/// IncomeVerificationPaystubsGet income/verification/paystubs/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IncomeVerificationPaystubsGetResponse> IncomeVerificationPaystubsGetAsync(IncomeVerificationPaystubsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "income/verification/paystubs/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IncomeVerificationPaystubsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// (Deprecated) Check digital income verification eligibility and optimize conversion
		/// `/income/verification/precheck` is an optional endpoint that can be called before initializing a Link session for income verification. It evaluates whether a given user is supportable by digital income verification and returns a `precheck_id` that can be provided to `/link/token/create`. If the user is eligible for digital verification, providing the `precheck_id` in this way will generate a Link UI optimized for the end user and their specific employer. If the user cannot be confirmed as eligible, the `precheck_id` can still be provided to `/link/token/create` and the user can still use the income verification flow, but they may be required to manually upload a paystub to verify their income.
		/// 
		/// While all request fields are optional, providing either `employer` or `transactions_access_tokens` data will increase the chance of receiving a useful result.
		/// 
		/// This endpoint has been deprecated; new integrations should use `/credit/payroll_income/precheck` instead.
		/// IncomeVerificationPrecheck income/verification/precheck
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IncomeVerificationPrecheckResponse> IncomeVerificationPrecheckAsync(IncomeVerificationPrecheckRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "income/verification/precheck";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IncomeVerificationPrecheckResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// (Deprecated) Retrieve information from the tax documents used for income verification
		/// `/income/verification/taxforms/get` returns the information collected from forms that were used to verify an end user''s income. It can be called once the status of the verification has been set to `VERIFICATION_STATUS_PROCESSING_COMPLETE`, as reported by the `INCOME: verification_status` webhook. Attempting to call the endpoint before verification has been completed will result in an error.
		/// 
		/// This endpoint has been deprecated; new integrations should use `/credit/payroll_income/get` instead.
		/// IncomeVerificationTaxformsGet income/verification/taxforms/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<IncomeVerificationTaxformsGetResponse> IncomeVerificationTaxformsGetAsync(IncomeVerificationTaxformsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "income/verification/taxforms/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IncomeVerificationTaxformsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get details of all supported institutions
		/// Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.
		/// 
		/// If there is no overlap between an institutionâ€™s enabled products and a clientâ€™s enabled products, then the institution will be filtered out from the response. As a result, the number of institutions returned may not match the count specified in the call.
		/// InstitutionsGet institutions/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InstitutionsGetResponse> InstitutionsGetAsync(InstitutionsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "institutions/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<InstitutionsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get details of an institution
		/// Returns a JSON response containing details on a specified financial institution currently supported by Plaid.
		/// 
		/// Versioning note: API versions 2019-05-29 and earlier allow use of the `public_key` parameter instead of the `client_id` and `secret` to authenticate to this endpoint. The `public_key` has been deprecated; all customers are encouraged to use `client_id` and `secret` instead.
		/// 
		/// InstitutionsGetById institutions/get_by_id
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InstitutionsGetByIdResponse> InstitutionsGetByIdAsync(InstitutionsGetByIdRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "institutions/get_by_id";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<InstitutionsGetByIdResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Search institutions
		/// Returns a JSON response containing details for institutions that match the query parameters, up to a maximum of ten institutions per query.
		/// 
		/// Versioning note: API versions 2019-05-29 and earlier allow use of the `public_key` parameter instead of the `client_id` and `secret` parameters to authenticate to this endpoint. The `public_key` parameter has since been deprecated; all customers are encouraged to use `client_id` and `secret` instead.
		/// 
		/// InstitutionsSearch institutions/search
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InstitutionsSearchResponse> InstitutionsSearchAsync(InstitutionsSearchRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "institutions/search";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<InstitutionsSearchResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Investment holdings
		/// The `/investments/holdings/get` endpoint allows developers to receive user-authorized stock position data for `investment`-type accounts.
		/// InvestmentsHoldingsGet investments/holdings/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvestmentsHoldingsGetResponse> InvestmentsHoldingsGetAsync(InvestmentsHoldingsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "investments/holdings/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<InvestmentsHoldingsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get investment transactions
		/// The `/investments/transactions/get` endpoint allows developers to retrieve up to 24 months of user-authorized transaction data for investment accounts.
		/// 
		/// Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.
		/// 
		/// Due to the potentially large number of investment transactions associated with an Item, results are paginated. Manipulate the count and offset parameters in conjunction with the `total_investment_transactions` response body field to fetch all available investment transactions.
		/// 
		/// Note that Investments does not have a webhook to indicate when initial transaction data has loaded. Instead, if transactions data is not ready when `/investments/transactions/get` is first called, Plaid will wait for the data. For this reason, calling `/investments/transactions/get` immediately after Link may take up to one to two minutes to return.
		/// InvestmentsTransactionsGet investments/transactions/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvestmentsTransactionsGetResponse> InvestmentsTransactionsGetAsync(InvestmentsTransactionsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "investments/transactions/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<InvestmentsTransactionsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Invalidate access_token
		/// By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.
		/// 
		/// You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.
		/// 
		/// ItemAccessTokenInvalidate item/access_token/invalidate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemAccessTokenInvalidateResponse> ItemAccessTokenInvalidateAsync(ItemAccessTokenInvalidateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/access_token/invalidate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemAccessTokenInvalidateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List a historical log of user consent events
		/// List a historical log of user consent events
		/// ItemActivityList item/activity/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemActivityListResponse> ItemActivityListAsync(ItemActivityListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/activity/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemActivityListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List a userâ€™s connected applications
		/// List a userâ€™s connected applications
		/// ItemApplicationList item/application/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemApplicationListResponse> ItemApplicationListAsync(ItemApplicationListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/application/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemApplicationListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update the scopes of access for a particular application
		/// Enable consumers to update product access on selected accounts for an application.
		/// ItemApplicationScopesUpdate item/application/scopes/update
		/// </summary>
		/// <returns>success</returns>
		public async Task<ItemApplicationScopesUpdateResponse> ItemApplicationScopesUpdateAsync(ItemApplicationScopesUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/application/scopes/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemApplicationScopesUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve an Item
		/// Returns information about the status of an Item.
		/// ItemGet item/get
		/// </summary>
		/// <returns>success</returns>
		public async Task<ItemGetResponse> ItemGetAsync(ItemGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Import Item
		/// `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.
		/// 
		/// Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).
		/// ItemImport item/import
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemImportResponse> ItemImportAsync(ItemImportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/import";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemImportResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create public token
		/// Note: As of July 2020, the `/item/public_token/create` endpoint is deprecated. Instead, use `/link/token/create` with an `access_token` to create a Link token for use with [update mode](https://plaid.com/docs/link/update-mode).
		/// 
		/// If you need your user to take action to restore or resolve an error associated with an Item, generate a public token with the `/item/public_token/create` endpoint and then initialize Link with that `public_token`.
		/// 
		/// A `public_token` is one-time use and expires after 30 minutes. You use a `public_token` to initialize Link in [update mode](https://plaid.com/docs/link/update-mode) for a particular Item. You can generate a `public_token` for an Item even if you did not use Link to create the Item originally.
		/// 
		/// The `/item/public_token/create` endpoint is **not** used to create your initial `public_token`. If you have not already received an `access_token` for a specific Item, use Link to obtain your `public_token` instead. See the [Quickstart](https://plaid.com/docs/quickstart) for more information.
		/// ItemCreatePublicToken item/public_token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemPublicTokenCreateResponse> ItemCreatePublicTokenAsync(ItemPublicTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/public_token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemPublicTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Exchange public token for an access token
		/// Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes. An `access_token` does not expire, but can be revoked by calling `/item/remove`.
		/// 
		/// The response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.
		/// ItemPublicTokenExchange item/public_token/exchange
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemPublicTokenExchangeResponse> ItemPublicTokenExchangeAsync(ItemPublicTokenExchangeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/public_token/exchange";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemPublicTokenExchangeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove an Item
		/// The `/item/remove` endpoint allows you to remove an Item. Once removed, the `access_token`, as well as any processor tokens or bank account tokens associated with the Item, is no longer valid and cannot be used to access any data that was associated with the Item.
		/// 
		/// Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count. To increase your credential account in Development, contact Support.
		/// 
		/// Also note that for certain OAuth-based institutions, an Item removed via `/item/remove` may still show as an active connection in the institution's OAuth permission manager.
		/// 
		/// API versions 2019-05-29 and earlier return a `removed` boolean as part of the response.
		/// ItemRemove item/remove
		/// </summary>
		/// <returns>success</returns>
		public async Task<ItemRemoveResponse> ItemRemoveAsync(ItemRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Webhook URL
		/// The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](https://plaid.com/docs/api/items/#webhook_update_acknowledged) webhook to the newly specified webhook URL.
		/// ItemWebhookUpdate item/webhook/update
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ItemWebhookUpdateResponse> ItemWebhookUpdateAsync(ItemWebhookUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "item/webhook/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ItemWebhookUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve Liabilities data
		/// The `/liabilities/get` endpoint returns various details about an Item with loan or credit accounts. Liabilities data is available primarily for US financial institutions, with some limited coverage of Canadian institutions. Currently supported account types are account type `credit` with account subtype `credit card` or `paypal`, and account type `loan` with account subtype `student` or `mortgage`. To limit accounts listed in Link to types and subtypes supported by Liabilities, you can use the `account_filters` parameter when [creating a Link token](https://plaid.com/docs/api/tokens/#linktokencreate).
		/// 
		/// The types of information returned by Liabilities can include balances and due dates, loan terms, and account details such as original loan amount and guarantor. Data is refreshed approximately once per day; the latest data can be retrieved by calling `/liabilities/get`.
		/// 
		/// Note: This request may take some time to complete if `liabilities` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the additional data.
		/// LiabilitiesGet liabilities/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LiabilitiesGetResponse> LiabilitiesGetAsync(LiabilitiesGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "liabilities/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LiabilitiesGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Exchange the Link Correlation Id for a Link Token
		/// Exchange an OAuth `link_correlation_id` for the corresponding `link_token`. The `link_correlation_id` is only available for 'payment_initiation' products and is provided to the client via the OAuth `redirect_uri` as a query parameter.
		/// The `link_correlation_id` is ephemeral and expires in a brief period, after which it can no longer be exchanged for the 'link_token'.
		/// LinkOauthCorrelationIdExchange link/oauth/correlation_id/exchange
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LinkOAuthCorrelationIdExchangeResponse> LinkOauthCorrelationIdExchangeAsync(LinkOAuthCorrelationIdExchangeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "link/oauth/correlation_id/exchange";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LinkOAuthCorrelationIdExchangeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Link Token
		/// The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.
		/// 
		/// A `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.
		/// LinkTokenCreate link/token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LinkTokenCreateResponse> LinkTokenCreateAsync(LinkTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "link/token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LinkTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Link Token
		/// The `/link/token/get` endpoint gets information about a previously-created `link_token` using the
		/// `/link/token/create` endpoint. It can be useful for debugging purposes.
		/// LinkTokenGet link/token/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LinkTokenGetResponse> LinkTokenGetAsync(LinkTokenGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "link/token/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LinkTokenGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Link Delivery session
		/// Use the `/link_delivery/create` endpoint to create a Link Delivery session.
		/// LinkDeliveryCreate link_delivery/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LinkDeliveryCreateResponse> LinkDeliveryCreateAsync(LinkDeliveryCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "link_delivery/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LinkDeliveryCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Link Delivery session
		/// Use the `/link_delivery/get` endpoint to get the status of a Link Delivery session.
		/// LinkDeliveryGet link_delivery/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LinkDeliveryGetResponse> LinkDeliveryGetAsync(LinkDeliveryGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "link_delivery/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LinkDeliveryGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new end customer for a Plaid reseller.
		/// The `/partner/customer/create` endpoint is used by reseller partners to create end customers.
		/// PartnerCustomerCreate partner/customer/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PartnerCustomerCreateResponse> PartnerCustomerCreateAsync(PartnerCustomerCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "partner/customer/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PartnerCustomerCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables a Plaid reseller's end customer in the Production environment.
		/// The `/partner/customer/enable` endpoint is used by reseller partners to enable an end customer in the Production environment.
		/// PartnerCustomerEnable partner/customer/enable
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PartnerCustomerEnableResponse> PartnerCustomerEnableAsync(PartnerCustomerEnableRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "partner/customer/enable";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PartnerCustomerEnableResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a Plaid reseller's end customer.
		/// The `/partner/customer/get` endpoint is used by reseller partners to retrieve data about a single end customer.
		/// PartnerCustomerGet partner/customer/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PartnerCustomerGetResponse> PartnerCustomerGetAsync(PartnerCustomerGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "partner/customer/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PartnerCustomerGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns OAuth-institution registration information for a given end customer.
		/// The `/partner/customer/oauth_institutions/get` endpoint is used by reseller partners to retrieve OAuth-institution registration information about a single end customer. To learn how to set up a webhook to listen to status update events, visit the [reseller documentation](https://plaid.com/docs/account/resellers/#enabling-end-customers).
		/// PartnerCustomerOauthInstitutionsGet partner/customer/oauth_institutions/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PartnerCustomerOAuthInstitutionsGetResponse> PartnerCustomerOauthInstitutionsGetAsync(PartnerCustomerOAuthInstitutionsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "partner/customer/oauth_institutions/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PartnerCustomerOAuthInstitutionsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes a Plaid reseller's end customer.
		/// The `/partner/customer/remove` endpoint is used by reseller partners to remove an end customer. Removing an end customer will remove it from view in the Plaid Dashboard and deactivate its API keys. This endpoint can only be used to remove an end customer that has not yet been enabled in Production.
		/// PartnerCustomerRemove partner/customer/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PartnerCustomerRemoveResponse> PartnerCustomerRemoveAsync(PartnerCustomerRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "partner/customer/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PartnerCustomerRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create payment consent
		/// The `/payment_initiation/consent/create` endpoint is used to create a payment consent, which can be used to initiate payments on behalf of the user. Payment consents are created with `UNAUTHORISED` status by default and must be authorised by the user before payments can be initiated.
		/// 
		/// Consents can be limited in time and scope, and have constraints that describe limitations for payments.
		/// PaymentInitiationConsentCreate payment_initiation/consent/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationConsentCreateResponse> PaymentInitiationConsentCreateAsync(PaymentInitiationConsentCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/consent/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationConsentCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get payment consent
		/// The `/payment_initiation/consent/get` endpoint can be used to check the status of a payment consent, as well as to receive basic information such as recipient and constraints.
		/// PaymentInitiationConsentGet payment_initiation/consent/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationConsentGetResponse> PaymentInitiationConsentGetAsync(PaymentInitiationConsentGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/consent/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationConsentGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Execute a single payment using consent
		/// The `/payment_initiation/consent/payment/execute` endpoint can be used to execute payments using payment consent.
		/// PaymentInitiationConsentPaymentExecute payment_initiation/consent/payment/execute
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationConsentPaymentExecuteResponse> PaymentInitiationConsentPaymentExecuteAsync(PaymentInitiationConsentPaymentExecuteRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/consent/payment/execute";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationConsentPaymentExecuteResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Revoke payment consent
		/// The `/payment_initiation/consent/revoke` endpoint can be used to revoke the payment consent. Once the consent is revoked, it is not possible to initiate payments using it.
		/// PaymentInitiationConsentRevoke payment_initiation/consent/revoke
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationConsentRevokeResponse> PaymentInitiationConsentRevokeAsync(PaymentInitiationConsentRevokeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/consent/revoke";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationConsentRevokeResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a payment
		/// After creating a payment recipient, you can use the `/payment_initiation/payment/create` endpoint to create a payment to that recipient.  Payments can be one-time or standing order (recurring) and can be denominated in either EUR, GBP or other chosen [currency](https://plaid.com/docs/api/products/payment-initiation/#payment_initiation-payment-create-request-amount-currency).  If making domestic GBP-denominated payments, your recipient must have been created with BACS numbers. In general, EUR-denominated payments will be sent via SEPA Credit Transfer, GBP-denominated payments will be sent via the Faster Payments network and for non-Eurozone markets typically via the local payment scheme, but the payment network used will be determined by the institution. Payments sent via Faster Payments will typically arrive immediately, while payments sent via SEPA Credit Transfer or other local payment schemes will typically arrive in one business day.
		/// 
		/// Standing orders (recurring payments) must be denominated in GBP and can only be sent to recipients in the UK. Once created, standing order payments cannot be modified or canceled via the API. An end user can cancel or modify a standing order directly on their banking application or website, or by contacting the bank. Standing orders will follow the payment rules of the underlying rails (Faster Payments in UK). Payments can be sent Monday to Friday, excluding bank holidays. If the pre-arranged date falls on a weekend or bank holiday, the payment is made on the next working day. It is not possible to guarantee the exact time the payment will reach the recipientâ€™s account, although at least 90% of standing order payments are sent by 6am.
		/// 
		/// In the Development environment, payments must be below 5 GBP or other chosen [currency](https://plaid.com/docs/api/products/payment-initiation/#payment_initiation-payment-create-request-amount-currency). For details on any payment limits in Production, contact your Plaid Account Manager.
		/// PaymentInitiationPaymentCreate payment_initiation/payment/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationPaymentCreateResponse> PaymentInitiationPaymentCreateAsync(PaymentInitiationPaymentCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/payment/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationPaymentCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get payment details
		/// The `/payment_initiation/payment/get` endpoint can be used to check the status of a payment, as well as to receive basic information such as recipient and payment amount. In the case of standing orders, the `/payment_initiation/payment/get` endpoint will provide information about the status of the overall standing order itself; the API cannot be used to retrieve payment status for individual payments within a standing order.
		/// PaymentInitiationPaymentGet payment_initiation/payment/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationPaymentGetResponse> PaymentInitiationPaymentGetAsync(PaymentInitiationPaymentGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/payment/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationPaymentGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List payments
		/// The `/payment_initiation/payment/list` endpoint can be used to retrieve all created payments. By default, the 10 most recent payments are returned. You can request more payments and paginate through the results using the optional `count` and `cursor` parameters.
		/// PaymentInitiationPaymentList payment_initiation/payment/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationPaymentListResponse> PaymentInitiationPaymentListAsync(PaymentInitiationPaymentListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/payment/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationPaymentListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Reverse an existing payment
		/// Reverse a settled payment from a Plaid virtual account.
		/// 
		/// The original payment must be in a settled state to be refunded.
		/// To refund partially, specify the amount as part of the request.
		/// If the amount is not specified, the refund amount will be equal to all
		/// of the remaining payment amount that has not been refunded yet.
		/// 
		/// The refund will go back to the source account that initiated the payment.
		/// The original payment must have been initiated to a Plaid virtual account
		/// so that this account can be used to initiate the refund.
		/// 
		/// PaymentInitiationPaymentReverse payment_initiation/payment/reverse
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationPaymentReverseResponse> PaymentInitiationPaymentReverseAsync(PaymentInitiationPaymentReverseRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/payment/reverse";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationPaymentReverseResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create payment token
		/// The `/payment_initiation/payment/token/create` endpoint has been deprecated. New Plaid customers will be unable to use this endpoint, and existing customers are encouraged to migrate to the newer, `link_token`-based flow. The recommended flow is to provide the `payment_id` to `/link/token/create`, which returns a `link_token` used to initialize Link.
		/// 
		/// The `/payment_initiation/payment/token/create` is used to create a `payment_token`, which can then be used in Link initialization to enter a payment initiation flow. You can only use a `payment_token` once. If this attempt fails, the end user aborts the flow, or the token expires, you will need to create a new payment token. Creating a new payment token does not require end user input.
		/// CreatePaymentToken payment_initiation/payment/token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationPaymentTokenCreateResponse> CreatePaymentTokenAsync(PaymentInitiationPaymentTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/payment/token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationPaymentTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create payment recipient
		/// Create a payment recipient for payment initiation.  The recipient must be in Europe, within a country that is a member of the Single Euro Payment Area (SEPA) or a non-Eurozone country [supported](https://plaid.com/global) by Plaid. For a standing order (recurring) payment, the recipient must be in the UK.
		/// 
		/// It is recommended to use `bacs` in the UK and `iban` in EU.
		/// 
		/// The endpoint is idempotent: if a developer has already made a request with the same payment details, Plaid will return the same `recipient_id`.
		/// 
		/// PaymentInitiationRecipientCreate payment_initiation/recipient/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationRecipientCreateResponse> PaymentInitiationRecipientCreateAsync(PaymentInitiationRecipientCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/recipient/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationRecipientCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get payment recipient
		/// Get details about a payment recipient you have previously created.
		/// PaymentInitiationRecipientGet payment_initiation/recipient/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationRecipientGetResponse> PaymentInitiationRecipientGetAsync(PaymentInitiationRecipientGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/recipient/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationRecipientGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List payment recipients
		/// The `/payment_initiation/recipient/list` endpoint list the payment recipients that you have previously created.
		/// PaymentInitiationRecipientList payment_initiation/recipient/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentInitiationRecipientListResponse> PaymentInitiationRecipientListAsync(PaymentInitiationRecipientListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_initiation/recipient/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentInitiationRecipientListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create payment profile
		/// Use `/payment_profile/create` endpoint to create a new payment profile.
		/// To initiate the account linking experience, call `/link/token/create` and provide the `payment_profile_token` in the `transfer.payment_profile_token` field.
		/// You can then use the `payment_profile_token` when creating transfers using `/transfer/authorization/create` and `/transfer/create`.
		/// PaymentProfileCreate payment_profile/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentProfileCreateResponse> PaymentProfileCreateAsync(PaymentProfileCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_profile/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentProfileCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get payment profile
		/// Use `/payment_profile/get` endpoint to get the status of a given Payment Profile.
		/// PaymentProfileGet payment_profile/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentProfileGetResponse> PaymentProfileGetAsync(PaymentProfileGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_profile/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentProfileGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove payment profile
		/// Use the `/payment_profile/remove` endpoint to remove a given Payment Profile. Once itâ€™s removed, it can no longer be used to create transfers.
		/// PaymentProfileRemove payment_profile/remove
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentProfileRemoveResponse> PaymentProfileRemoveAsync(PaymentProfileRemoveRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "payment_profile/remove";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PaymentProfileRemoveResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Apex bank account token
		/// Used to create a token suitable for sending to Apex to enable Plaid-Apex integrations.
		/// ProcessorApexProcessorTokenCreate processor/apex/processor_token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorTokenCreateResponse> ProcessorApexProcessorTokenCreateAsync(ProcessorApexProcessorTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/apex/processor_token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve Auth data
		/// The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that''s associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available.
		/// 
		/// Versioning note: API versions 2019-05-29 and earlier use a different schema for the `numbers` object returned by this endpoint. For details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2020-09-14).
		/// 
		/// ProcessorAuthGet processor/auth/get
		/// </summary>
		/// <returns>success</returns>
		public async Task<ProcessorAuthGetResponse> ProcessorAuthGetAsync(ProcessorAuthGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/auth/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorAuthGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve Balance data
		/// The `/processor/balance/get` endpoint returns the real-time balance for each of an Item's accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached.
		/// ProcessorBalanceGet processor/balance/get
		/// </summary>
		/// <param name="requestBody">The `/processor/balance/get` endpoint returns the real-time balance for the account associated with a given `processor_token`.
		///
		///The current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.
		///
		///Note that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of `null`.</param>
		/// <returns>OK</returns>
		public async Task<ProcessorBalanceGetResponse> ProcessorBalanceGetAsync(ProcessorBalanceGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/balance/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorBalanceGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a bank transfer as a processor
		/// Use the `/processor/bank_transfer/create` endpoint to initiate a new bank transfer as a processor
		/// ProcessorBankTransferCreate processor/bank_transfer/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorBankTransferCreateResponse> ProcessorBankTransferCreateAsync(ProcessorBankTransferCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/bank_transfer/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorBankTransferCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve Identity data
		/// The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.
		/// ProcessorIdentityGet processor/identity/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorIdentityGetResponse> ProcessorIdentityGetAsync(ProcessorIdentityGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/identity/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorIdentityGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Report whether you initiated an ACH transaction
		/// After calling `/processor/signal/evaluate`, call `/processor/signal/decision/report` to report whether the transaction was initiated. This endpoint will return an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error if called a second time with a different value for `initiated`.
		/// ProcessorSignalDecisionReport processor/signal/decision/report
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorSignalDecisionReportResponse> ProcessorSignalDecisionReportAsync(ProcessorSignalDecisionReportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/signal/decision/report";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorSignalDecisionReportResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Evaluate a planned ACH transaction
		/// Use `/processor/signal/evaluate` to evaluate a planned ACH transaction as a processor to get a return risk assessment (such as a risk score and risk tier) and additional risk signals.
		/// 
		/// In order to obtain a valid score for an ACH transaction, Plaid must have an access token for the account, and the Item must be healthy (receiving product updates) or have recently been in a healthy state. If the transaction does not meet eligibility requirements, an error will be returned corresponding to the underlying cause. If `/processor/signal/evaluate` is called on the same transaction multiple times within a 24-hour period, cached results may be returned. For more information please refer to our error documentation on [item errors](/docs/errors/item/) and [Link in Update Mode](/docs/link/update-mode/).
		/// 
		/// Note: This request may take some time to complete if Signal is being added to an existing Item. This is because Plaid must communicate directly with the institution when retrieving the data for the first time.
		/// ProcessorSignalEvaluate processor/signal/evaluate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorSignalEvaluateResponse> ProcessorSignalEvaluateAsync(ProcessorSignalEvaluateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/signal/evaluate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorSignalEvaluateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Report a return for an ACH transaction
		/// Call the `/processor/signal/return/report` endpoint to report a returned transaction that was previously sent to the `/processor/signal/evaluate` endpoint. Your feedback will be used by the model to incorporate the latest risk trend in your portfolio.
		/// ProcessorSignalReturnReport processor/signal/return/report
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorSignalReturnReportResponse> ProcessorSignalReturnReportAsync(ProcessorSignalReturnReportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/signal/return/report";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorSignalReturnReportResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create Stripe bank account token
		/// 
		/// Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations. For a detailed guide on integrating Stripe, see [Add Stripe to your app](https://plaid.com/docs/auth/partnerships/stripe/).
		/// 
		/// Note that the Stripe bank account token is a one-time use token. To store bank account information for later use, you can use a Stripe customer object and create an associated bank account from the token, or you can use a Stripe Custom account and create an associated external bank account from the token. This bank account information should work indefinitely, unless the user's bank account information changes or they revoke Plaid's permissions to access their account. Stripe bank account information cannot be modified once the bank account token has been created. If you ever need to change the bank account details used by Stripe for a specific customer, have the user go through Link again and create a new bank account token from the new `access_token`.
		/// 
		/// Bank account tokens can also be revoked, using `/item/remove`.'
		/// ProcessorStripeBankAccountTokenCreate processor/stripe/bank_account_token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorStripeBankAccountTokenCreateResponse> ProcessorStripeBankAccountTokenCreateAsync(ProcessorStripeBankAccountTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/stripe/bank_account_token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorStripeBankAccountTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create processor token
		/// Used to create a token suitable for sending to one of Plaid's partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations. Once created, a processor token for a given Item cannot be modified or updated. If the account must be linked to a new or different partner resource, create a new Item by having the user go through the Link flow again; a new processor token can then be created from the new `access_token`. Processor tokens can also be revoked, using `/item/remove`.
		/// ProcessorTokenCreate processor/token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProcessorTokenCreateResponse> ProcessorTokenCreateAsync(ProcessorTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "processor/token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProcessorTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Manually fire a Bank Transfer webhook
		/// Use the `/sandbox/bank_transfer/fire_webhook` endpoint to manually trigger a Bank Transfers webhook in the Sandbox environment.
		/// SandboxBankTransferFireWebhook sandbox/bank_transfer/fire_webhook
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxBankTransferFireWebhookResponse> SandboxBankTransferFireWebhookAsync(SandboxBankTransferFireWebhookRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/bank_transfer/fire_webhook";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxBankTransferFireWebhookResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Simulate a bank transfer event in Sandbox
		/// Use the `/sandbox/bank_transfer/simulate` endpoint to simulate a bank transfer event in the Sandbox environment.  Note that while an event will be simulated and will appear when using endpoints such as `/bank_transfer/event/sync` or `/bank_transfer/event/list`, no transactions will actually take place and funds will not move between accounts, even within the Sandbox.
		/// SandboxBankTransferSimulate sandbox/bank_transfer/simulate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxBankTransferSimulateResponse> SandboxBankTransferSimulateAsync(SandboxBankTransferSimulateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/bank_transfer/simulate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxBankTransferSimulateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Manually fire an Income webhook
		/// Use the `/sandbox/income/fire_webhook` endpoint to manually trigger an Income webhook in the Sandbox environment.
		/// SandboxIncomeFireWebhook sandbox/income/fire_webhook
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxIncomeFireWebhookResponse> SandboxIncomeFireWebhookAsync(SandboxIncomeFireWebhookRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/income/fire_webhook";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxIncomeFireWebhookResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Fire a test webhook
		/// The `/sandbox/item/fire_webhook` endpoint is used to test that code correctly handles webhooks. This endpoint can trigger the following webhooks:
		/// 
		/// `DEFAULT_UPDATE`: Transactions update webhook to be fired for a given Sandbox Item. If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
		/// 
		/// `NEW_ACCOUNTS_AVAILABLE`: Webhook to be fired for a given Sandbox Item created with Account Select v2.
		/// 
		/// `AUTH_DATA_UPDATE`: Webhook to be fired for a given Sandbox Item created with Auth as an enabled product.
		/// 
		/// `RECURRING_TRANSACTIONS_UPDATE`: Recurring Transactions webhook to be fired for a given Sandbox Item. If the Item does not support Recurring Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
		/// 
		/// `SYNC_UPDATES_AVAILABLE`: Transactions webhook to be fired for a given Sandbox Item.  If the Item does not support Transactions, a `SANDBOX_PRODUCT_NOT_ENABLED` error will result.
		/// 
		/// Note that this endpoint is provided for developer ease-of-use and is not required for testing webhooks; webhooks will also fire in Sandbox under the same conditions that they would in Production or Development.
		/// SandboxItemFireWebhook sandbox/item/fire_webhook
		/// </summary>
		/// <returns>success</returns>
		public async Task<SandboxItemFireWebhookResponse> SandboxItemFireWebhookAsync(SandboxItemFireWebhookRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/item/fire_webhook";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxItemFireWebhookResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Force a Sandbox Item into an error state
		/// `/sandbox/item/reset_login/` forces an Item into an `ITEM_LOGIN_REQUIRED` state in order to simulate an Item whose login is no longer valid. This makes it easy to test Link's [update mode](https://plaid.com/docs/link/update-mode) flow in the Sandbox environment.  After calling `/sandbox/item/reset_login`, You can then use Plaid Link update mode to restore the Item to a good state. An `ITEM_LOGIN_REQUIRED` webhook will also be fired after a call to this endpoint, if one is associated with the Item.
		/// 
		/// 
		/// In the Sandbox, Items will transition to an `ITEM_LOGIN_REQUIRED` error state automatically after 30 days, even if this endpoint is not called.
		/// SandboxItemResetLogin sandbox/item/reset_login
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxItemResetLoginResponse> SandboxItemResetLoginAsync(SandboxItemResetLoginRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/item/reset_login";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxItemResetLoginResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Set verification status for Sandbox account
		/// The `/sandbox/item/set_verification_status` endpoint can be used to change the verification status of an Item in in the Sandbox in order to simulate the Automated Micro-deposit flow.
		/// 
		/// Note that not all Plaid developer accounts are enabled for micro-deposit based verification by default. Your account must be enabled for this feature in order to test it in Sandbox. To enable this features or check your status, contact your account manager or [submit a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access).
		/// 
		/// For more information on testing Automated Micro-deposits in Sandbox, see [Auth full coverage testing](https://plaid.com/docs/auth/coverage/testing#).
		/// SandboxItemSetVerificationStatus sandbox/item/set_verification_status
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxItemSetVerificationStatusResponse> SandboxItemSetVerificationStatusAsync(SandboxItemSetVerificationStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/item/set_verification_status";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxItemSetVerificationStatusResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Save the selected accounts when connecting to the Platypus Oauth institution
		/// Save the selected accounts when connecting to the Platypus Oauth institution
		/// SandboxOauthSelectAccounts sandbox/oauth/select_accounts
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxOauthSelectAccountsResponse> SandboxOauthSelectAccountsAsync(SandboxOauthSelectAccountsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/oauth/select_accounts";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxOauthSelectAccountsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Reset the login of a Payment Profile
		/// `/sandbox/payment_profile/reset_login/` forces a Payment Profile into a state where the login is no longer valid. This makes it easy to test update mode for Payment Profile in the Sandbox environment.
		/// 
		/// After calling `/sandbox/payment_profile/reset_login`, calls to the `/transfer/authorization/create` with the Payment Profile will result in a `decision_rationale` `PAYMENT_PROFILE_LOGIN_REQUIRED`. You can then use update mode for Payment Profile to restore it into a good state.
		/// 
		/// In order to invoke this endpoint, you must first [create a Payment Profile](https://plaid.com/docs/transfer/add-to-app/#create-a-payment-profile-optional) and [go through the Link flow](https://plaid.com/docs/transfer/add-to-app/#create-a-link-token).
		/// SandboxPaymentProfileResetLogin sandbox/payment_profile/reset_login
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxPaymentProfileResetLoginResponse> SandboxPaymentProfileResetLoginAsync(SandboxPaymentProfileResetLoginRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/payment_profile/reset_login";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxPaymentProfileResetLoginResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a test Item and processor token
		/// Use the `/sandbox/processor_token/create` endpoint to create a valid `processor_token` for an arbitrary institution ID and test credentials. The created `processor_token` corresponds to a new Sandbox Item. You can then use this `processor_token` with the `/processor/` API endpoints in Sandbox. You can also use `/sandbox/processor_token/create` with the [`user_custom` test username](https://plaid.com/docs/sandbox/user-custom) to generate a test account with custom data.
		/// SandboxProcessorTokenCreate sandbox/processor_token/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxProcessorTokenCreateResponse> SandboxProcessorTokenCreateAsync(SandboxProcessorTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/processor_token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxProcessorTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a test Item
		/// Use the `/sandbox/public_token/create` endpoint to create a valid `public_token`  for an arbitrary institution ID, initial products, and test credentials. The created `public_token` maps to a new Sandbox Item. You can then call `/item/public_token/exchange` to exchange the `public_token` for an `access_token` and perform all API actions. `/sandbox/public_token/create` can also be used with the [`user_custom` test username](https://plaid.com/docs/sandbox/user-custom) to generate a test account with custom data. `/sandbox/public_token/create` cannot be used with OAuth institutions.
		/// SandboxPublicTokenCreate sandbox/public_token/create
		/// </summary>
		/// <returns>success</returns>
		public async Task<SandboxPublicTokenCreateResponse> SandboxPublicTokenCreateAsync(SandboxPublicTokenCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/public_token/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxPublicTokenCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Manually fire a Transfer webhook
		/// Use the `/sandbox/transfer/fire_webhook` endpoint to manually trigger a Transfer webhook in the Sandbox environment.
		/// SandboxTransferFireWebhook sandbox/transfer/fire_webhook
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferFireWebhookResponse> SandboxTransferFireWebhookAsync(SandboxTransferFireWebhookRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/fire_webhook";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferFireWebhookResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Trigger the creation of a repayment
		/// Use the `/sandbox/transfer/repayment/simulate` endpoint to trigger the creation of a repayment. As a side effect of calling this route, a repayment is created that includes all unreimbursed returns of guaranteed transfers. If there are no such returns, an 400 error is returned.
		/// SandboxTransferRepaymentSimulate sandbox/transfer/repayment/simulate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferRepaymentSimulateResponse> SandboxTransferRepaymentSimulateAsync(SandboxTransferRepaymentSimulateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/repayment/simulate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferRepaymentSimulateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Simulate a transfer event in Sandbox
		/// Use the `/sandbox/transfer/simulate` endpoint to simulate a transfer event in the Sandbox environment.  Note that while an event will be simulated and will appear when using endpoints such as `/transfer/event/sync` or `/transfer/event/list`, no transactions will actually take place and funds will not move between accounts, even within the Sandbox.
		/// SandboxTransferSimulate sandbox/transfer/simulate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferSimulateResponse> SandboxTransferSimulateAsync(SandboxTransferSimulateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/simulate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferSimulateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Simulate creating a sweep
		/// Use the `/sandbox/transfer/sweep/simulate` endpoint to create a sweep and associated events in the Sandbox environment. Upon calling this endpoint, all `posted` or `pending` transfers with a sweep status of `unswept` will become `swept`, and all `returned` transfers with a sweep status of `swept` will become `return_swept`.
		/// SandboxTransferSweepSimulate sandbox/transfer/sweep/simulate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferSweepSimulateResponse> SandboxTransferSweepSimulateAsync(SandboxTransferSweepSimulateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/sweep/simulate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferSweepSimulateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Advance a test clock
		/// Use the `/sandbox/transfer/test_clock/advance` endpoint to advance a `test_clock` in the Sandbox environment.
		/// 
		/// A test clock object represents an independent timeline and has a `virtual_time` field indicating the current timestamp of the timeline. A test clock can be advanced by incrementing `virtual_time`, but may never go back to a lower `virtual_time`.
		/// 
		/// If a test clock is advanced, we will simulate the changes that ought to occur during the time that elapsed.
		/// For instance, a client creates a weekly recurring transfer with a test clock set at t. When the client advances the test clock by setting `virtual_time` = t + 15 days, 2 new originations should be created, along with the webhook events.
		/// 
		/// The advancement of the test clock from its current `virtual_time` should be limited such that there are no more than 20 originations resulting from the advance operation on each `recurring_transfer` associated with the `test_clock`.
		/// For instance, if the recurring transfer associated with this test clock originates once every 4 weeks, you can advance the `virtual_time` up to 80 weeks on each API call.
		/// SandboxTransferTestClockAdvance sandbox/transfer/test_clock/advance
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferTestClockAdvanceResponse> SandboxTransferTestClockAdvanceAsync(SandboxTransferTestClockAdvanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/test_clock/advance";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferTestClockAdvanceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a test clock
		/// Use the `/sandbox/transfer/test_clock/create` endpoint to create a `test_clock` in the Sandbox environment.
		/// 
		/// A test clock object represents an independent timeline and has a `virtual_time` field indicating the current timestamp of the timeline. Test clocks are used for testing recurring transfers in Sandbox.
		/// 
		/// A test clock can be associated with up to 5 recurring transfers.
		/// SandboxTransferTestClockCreate sandbox/transfer/test_clock/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferTestClockCreateResponse> SandboxTransferTestClockCreateAsync(SandboxTransferTestClockCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/test_clock/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferTestClockCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a test clock
		/// Use the `/sandbox/transfer/test_clock/get` endpoint to get a `test_clock` in the Sandbox environment.
		/// SandboxTransferTestClockGet sandbox/transfer/test_clock/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferTestClockGetResponse> SandboxTransferTestClockGetAsync(SandboxTransferTestClockGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/test_clock/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferTestClockGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List test clocks
		/// Use the `/sandbox/transfer/test_clock/list` endpoint to see a list of all your test clocks in the Sandbox environment, by ascending `virtual_time`. Results are paginated; use the `count` and `offset` query parameters to retrieve the desired test clocks.
		/// SandboxTransferTestClockList sandbox/transfer/test_clock/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SandboxTransferTestClockListResponse> SandboxTransferTestClockListAsync(SandboxTransferTestClockListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sandbox/transfer/test_clock/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SandboxTransferTestClockListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Report whether you initiated an ACH transaction
		/// After calling `/signal/evaluate`, call `/signal/decision/report` to report whether the transaction was initiated. This endpoint will return an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error if called a second time with a different value for `initiated`.
		/// SignalDecisionReport signal/decision/report
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SignalDecisionReportResponse> SignalDecisionReportAsync(SignalDecisionReportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "signal/decision/report";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SignalDecisionReportResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Evaluate a planned ACH transaction
		/// Use `/signal/evaluate` to evaluate a planned ACH transaction to get a return risk assessment (such as a risk score and risk tier) and additional risk signals.
		/// 
		/// In order to obtain a valid score for an ACH transaction, Plaid must have an access token for the account, and the Item must be healthy (receiving product updates) or have recently been in a healthy state. If the transaction does not meet eligibility requirements, an error will be returned corresponding to the underlying cause. If `/signal/evaluate` is called on the same transaction multiple times within a 24-hour period, cached results may be returned. For more information please refer to the error documentation on [Item errors](/docs/errors/item/) and [Link in Update Mode](/docs/link/update-mode/).
		/// 
		/// Note: This request may take some time to complete if Signal is being added to an existing Item. This is because Plaid must communicate directly with the institution when retrieving the data for the first time.
		/// SignalEvaluate signal/evaluate
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SignalEvaluateResponse> SignalEvaluateAsync(SignalEvaluateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "signal/evaluate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SignalEvaluateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Opt-in an Item to Signal
		/// When Link is not initialized with Signal, call `/signal/prepare` to opt-in that Item to the Signal data collection process, developing a Signal score.
		/// 
		/// If you are using other Plaid products after Link, e.g. Identity or Assets, call `/signal/prepare` after those product calls are complete.
		/// 
		/// Example flow: Link is initialized with Auth, call `/auth/get` for the account and routing number, call `/identity/get` to retrieve bank ownership details, then call `/signal/prepare` to begin Signal data collection. Later, once you have obtained details about the proposed transaction from the user, call `/signal/evaluate` for a Signal score. For more information please see [Recommendations for initializing Link with specific product combinations](https://www.plaid.com/docs/link/initializing-products/#recommendations-for-initializing-link-with-specific-product-combinations).
		/// SignalPrepare signal/prepare
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SignalPrepareResponse> SignalPrepareAsync(SignalPrepareRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "signal/prepare";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SignalPrepareResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Report a return for an ACH transaction
		/// Call the `/signal/return/report` endpoint to report a returned transaction that was previously sent to the `/signal/evaluate` endpoint. Your feedback will be used by the model to incorporate the latest risk trend in your portfolio.
		/// SignalReturnReport signal/return/report
		/// </summary>
		/// <returns>OK</returns>
		public async Task<SignalReturnReportResponse> SignalReturnReportAsync(SignalReturnReportRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "signal/return/report";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SignalReturnReportResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enrich locally-held transaction data
		/// The `/transactions/enrich` endpoint enriches raw transaction data generated by your own banking products or retrieved from other non-Plaid sources.
		/// 
		/// To request access to Enrich, reach out to your Plaid point of contact or send a note to enrich-feedback@plaid.com
		/// TransactionsEnrich transactions/enrich
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsEnrichGetResponse> TransactionsEnrichAsync(TransactionsEnrichGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transactions/enrich";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsEnrichGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get transaction data
		/// The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (only those with account subtype `student`; coverage may be limited). For transaction history from investments accounts, use the [Investments endpoint](https://plaid.com/docs/api/products/investments/) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.
		/// 
		/// Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Transactions are not immutable and can also be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  For more details, see [Pending and posted transactions](https://plaid.com/docs/transactions/transactions-data/#pending-and-posted-transactions).
		/// 
		/// Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.
		/// 
		/// Data returned by `/transactions/get` will be the data available for the Item as of the most recent successful check for new transactions. Plaid typically checks for new data multiple times a day, but these checks may occur less frequently, such as once a day, depending on the institution. An Item's `status.transactions.last_successful_update` field will show the timestamp of the most recent successful update. To force Plaid to check for new transactions, you can use the `/transactions/refresh` endpoint.
		/// 
		/// Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn't. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](https://plaid.com/docs/api/products/transactions/#initial_update) and [`HISTORICAL_UPDATE`](https://plaid.com/docs/api/products/transactions/#historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.
		/// TransactionsGet transactions/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsGetResponse> TransactionsGetAsync(TransactionsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transactions/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Fetch recurring transaction streams
		/// The `/transactions/recurring/get` endpoint allows developers to receive a summary of the recurring outflow and inflow streams (expenses and deposits) from a userâ€™s checking, savings or credit card accounts. Additionally, Plaid provides key insights about each recurring stream including the category, merchant, last amount, and more. Developers can use these insights to build tools and experiences that help their users better manage cash flow, monitor subscriptions, reduce spend, and stay on track with bill payments.
		/// 
		/// This endpoint is offered as an add-on to Transactions. To request access to this endpoint, submit a [product access request](https://dashboard.plaid.com/team/products) or contact your Plaid account manager.
		/// 
		/// This endpoint can only be called on an Item that has already been initialized with Transactions (either during Link, by specifying it in `/link/token/create`; or after Link, by calling `/transactions/get` or `/transactions/sync`). Once all historical transactions have been fetched, call `/transactions/recurring/get` to receive the Recurring Transactions streams and subscribe to the [`RECURRING_TRANSACTIONS_UPDATE`](https://plaid.com/docs/api/products/transactions/#recurring_transactions_update) webhook. To know when historical transactions have been fetched, if you are using `/transactions/sync` listen for the [`SYNC_UPDATES_AVAILABLE`](https://plaid.com/docs/api/products/transactions/#SyncUpdatesAvailableWebhook-historical-update-complete) webhook and check that the `historical_update_complete` field in the payload is `true`. If using `/transactions/get`, listen for the [`HISTORICAL_UPDATE`](https://plaid.com/docs/api/products/transactions/#historical_update) webhook.
		/// 
		/// After the initial call, you can call `/transactions/recurring/get` endpoint at any point in the future to retrieve the latest summary of recurring streams. Listen to the [`RECURRING_TRANSACTIONS_UPDATE`](https://plaid.com/docs/api/products/transactions/#recurring_transactions_update) webhook to be notified when new updates are available.
		/// TransactionsRecurringGet transactions/recurring/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsRecurringGetResponse> TransactionsRecurringGetAsync(TransactionsRecurringGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transactions/recurring/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsRecurringGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Refresh transaction data
		/// `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: for `/transactions/sync` users, [`SYNC_UPDATES_AVAILABLE`](https://plaid.com/docs/api/products/transactions/#sync_updates_available) will be fired if there are any transactions updated, added, or removed. For users of both `/transactions/sync` and `/transactions/get`, [`TRANSACTIONS_REMOVED`](https://plaid.com/docs/api/products/transactions/#transactions_removed) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](https://plaid.com/docs/api/products/transactions/#default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get` or `/transactions/sync`. Note that the `/transactions/refresh` endpoint is not supported for Capital One (`ins_128026`) and will result in a `PRODUCT_NOT_SUPPORTED` error if called on an Item from that institution.
		/// 
		/// `/transactions/refresh` is offered as an add-on to Transactions and has a separate [fee model](/docs/account/billing/#per-request-flat-fee). To request access to this endpoint, submit a [product access request](https://dashboard.plaid.com/team/products) or contact your Plaid account manager.
		/// TransactionsRefresh transactions/refresh
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsRefreshResponse> TransactionsRefreshAsync(TransactionsRefreshRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transactions/refresh";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsRefreshResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get incremental transaction updates on an Item
		/// This endpoint replaces `/transactions/get` and its associated webhooks for most common use-cases.
		/// 
		/// The `/transactions/sync` endpoint allows developers to subscribe to all transactions associated with an Item and get updates synchronously in a stream-like manner, using a cursor to track which updates have already been seen. `/transactions/sync` provides the same functionality as `/transactions/get` and can be used instead of `/transactions/get` to simplify the process of tracking transactions updates.
		/// 
		/// This endpoint provides user-authorized transaction data for `credit`, `depository`, and some loan-type accounts (only those with account subtype `student`; coverage may be limited). For transaction history from `investments` accounts, use `/investments/transactions/get` instead.
		/// 
		/// Returned transactions data is grouped into three types of update, indicating whether the transaction was added, removed, or modified since the last call to the API.
		/// 
		/// In the first call to `/transactions/sync` for an Item, the endpoint will return all historical transactions data associated with that Item up until the time of the API call (as "adds"), which then generates a `next_cursor` for that Item. In subsequent calls, send the `next_cursor` to receive only the changes that have occurred since the previous call.
		/// 
		/// Due to the potentially large number of transactions associated with an Item, results are paginated. The `has_more` field specifies if additional calls are necessary to fetch all available transaction updates. Call `/transactions/sync` with the new cursor, pulling all updates, until `has_more` is `false`.
		/// 
		/// When retrieving paginated updates, track both the `next_cursor` from the latest response and the original cursor from the first call in which `has_more` was `true`; if a call to `/transactions/sync` fails when retrieving a paginated update, which can occur as a result of the [`TRANSACTIONS_SYNC_MUTATION_DURING_PAGINATION`](https://plaid.com/docs/errors/transactions/#transactions_sync_mutation_during_pagination) error, the entire pagination request loop must be restarted beginning with the cursor for the first page of the update, rather than retrying only the single request that failed.
		/// 
		/// Whenever new or updated transaction data becomes available, `/transactions/sync` will provide these updates. Plaid typically checks for new data multiple times a day, but these checks may occur less frequently, such as once a day, depending on the institution. An Item's `status.transactions.last_successful_update` field will show the timestamp of the most recent successful update. To force Plaid to check for new transactions, use the `/transactions/refresh` endpoint.
		/// 
		/// Note that for newly created Items, data may not be immediately available to `/transactions/sync`. Plaid begins preparing transactions data when the Item is created, but the process can take anywhere from a few seconds to several minutes to complete, depending on the number of transactions available.
		/// 
		/// To be alerted when new data is available, listen for the [`SYNC_UPDATES_AVAILABLE`](https://plaid.com/docs/api/products/transactions/#sync_updates_available) webhook.
		/// TransactionsSync transactions/sync
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransactionsSyncResponse> TransactionsSyncAsync(TransactionsSyncRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transactions/sync";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransactionsSyncResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a transfer authorization
		/// Use the `/transfer/authorization/create` endpoint to determine transfer failure risk.
		/// 
		/// In Plaid's Sandbox environment the decisions will be returned as follows:
		/// 
		/// - To approve a transfer with null rationale code, make an authorization request with an `amount` less than the available balance in the account.
		/// 
		/// - To approve a transfer with the rationale code `MANUALLY_VERIFIED_ITEM`, create an Item in Link through the [Same Day Micro-deposits flow](https://plaid.com/docs/auth/coverage/testing/#testing-same-day-micro-deposits).
		/// 
		/// - To approve a transfer with the rationale code `ITEM_LOGIN_REQUIRED`, [reset the login for an Item](https://plaid.com/docs/sandbox/#item_login_required).
		/// 
		/// - To decline a transfer with the rationale code `NSF`, the available balance on the account must be less than the authorization `amount`. See [Create Sandbox test data](https://plaid.com/docs/sandbox/user-custom/) for details on how to customize data in Sandbox.
		/// 
		/// - To decline a transfer with the rationale code `RISK`, the available balance on the account must be exactly $0. See [Create Sandbox test data](https://plaid.com/docs/sandbox/user-custom/) for details on how to customize data in Sandbox.
		/// 
		/// `device.ip_address`, `device.user_agent` are required fields.
		/// 
		/// For [Guarantee](https://www.plaid.com/docs//transfer/guarantee/), the following fields are required : `idempotency_key`, `user.phone_number` (optional if `email_address` provided), `user.email_address` (optional if `phone_number` provided), `device.ip_address`, `device.user_agent`, and `user_present`.
		/// TransferAuthorizationCreate transfer/authorization/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferAuthorizationCreateResponse> TransferAuthorizationCreateAsync(TransferAuthorizationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/authorization/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferAuthorizationCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancel a transfer
		/// Use the `/transfer/cancel` endpoint to cancel a transfer.  A transfer is eligible for cancellation if the `cancellable` property returned by `/transfer/get` is `true`.
		/// TransferCancel transfer/cancel
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferCancelResponse> TransferCancelAsync(TransferCancelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferCancelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get RTP eligibility information of a transfer
		/// Use the `/transfer/capabilities/get` endpoint to determine the RTP eligibility information of a transfer.
		/// TransferCapabilitiesGet transfer/capabilities/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferCapabilitiesGetResponse> TransferCapabilitiesGetAsync(TransferCapabilitiesGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/capabilities/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferCapabilitiesGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get transfer product configuration
		/// Use the `/transfer/configuration/get` endpoint to view your transfer product configurations.
		/// TransferConfigurationGet transfer/configuration/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferConfigurationGetResponse> TransferConfigurationGetAsync(TransferConfigurationGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/configuration/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferConfigurationGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a transfer
		/// Use the `/transfer/create` endpoint to initiate a new transfer.
		/// TransferCreate transfer/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferCreateResponse> TransferCreateAsync(TransferCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List transfer events
		/// Use the `/transfer/event/list` endpoint to get a list of transfer events based on specified filter criteria.
		/// TransferEventList transfer/event/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferEventListResponse> TransferEventListAsync(TransferEventListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/event/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferEventListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Sync transfer events
		/// `/transfer/event/sync` allows you to request up to the next 25 transfer events that happened after a specific `event_id`. Use the `/transfer/event/sync` endpoint to guarantee you have seen all transfer events. When using Auth with micro-deposit verification enabled, this endpoint can be used to fetch status updates on ACH micro-deposits. For more details, see [micro-deposit events](https://www.plaid.com/docs/auth/coverage/microdeposit-events/).
		/// TransferEventSync transfer/event/sync
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferEventSyncResponse> TransferEventSyncAsync(TransferEventSyncRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/event/sync";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferEventSyncResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a transfer
		/// The `/transfer/get` endpoint fetches information about the transfer corresponding to the given `transfer_id`.
		/// TransferGet transfer/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferGetResponse> TransferGetAsync(TransferGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a transfer intent object to invoke the Transfer UI
		/// Use the `/transfer/intent/create` endpoint to generate a transfer intent object and invoke the Transfer UI.
		/// TransferIntentCreate transfer/intent/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferIntentCreateResponse> TransferIntentCreateAsync(TransferIntentCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/intent/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferIntentCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve more information about a transfer intent
		/// Use the `/transfer/intent/get` endpoint to retrieve more information about a transfer intent.
		/// TransferIntentGet transfer/intent/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferIntentGetResponse> TransferIntentGetAsync(TransferIntentGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/intent/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferIntentGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List transfers
		/// Use the `/transfer/list` endpoint to see a list of all your transfers and their statuses. Results are paginated; use the `count` and `offset` query parameters to retrieve the desired transfers.
		/// 
		/// TransferList transfer/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferListResponse> TransferListAsync(TransferListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get transfer product usage metrics
		/// Use the `/transfer/metrics/get` endpoint to view your transfer product usage metrics.
		/// TransferMetricsGet transfer/metrics/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferMetricsGetResponse> TransferMetricsGetAsync(TransferMetricsGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/metrics/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferMetricsGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Migrate account into Transfers
		/// As an alternative to adding Items via Link, you can also use the `/transfer/migrate_account` endpoint to migrate known account and routing numbers to Plaid Items.  Note that Items created in this way are not compatible with endpoints for other products, such as `/accounts/balance/get`, and can only be used with Transfer endpoints.  If you require access to other endpoints, create the Item through Link instead.  Access to `/transfer/migrate_account` is not enabled by default; to obtain access, contact your Plaid Account Manager.
		/// TransferMigrateAccount transfer/migrate_account
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferMigrateAccountResponse> TransferMigrateAccountAsync(TransferMigrateAccountRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/migrate_account";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferMigrateAccountResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a new originator
		/// Use the `/transfer/originator/create` endpoint to create a new originator and return an `originator_client_id`.
		/// TransferOriginatorCreate transfer/originator/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferOriginatorCreateResponse> TransferOriginatorCreateAsync(TransferOriginatorCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/originator/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferOriginatorCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get status of an originator's onboarding
		/// The `/transfer/originator/get` endpoint gets status updates for an originator's onboarding process. This information is also available via the Transfer page on the Plaid dashboard.
		/// TransferOriginatorGet transfer/originator/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferOriginatorGetResponse> TransferOriginatorGetAsync(TransferOriginatorGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/originator/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferOriginatorGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get status of all originators' onboarding
		/// The `/transfer/originator/list` endpoint gets status updates for all of your originators' onboarding. This information is also available via the Plaid dashboard.
		/// TransferOriginatorList transfer/originator/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferOriginatorListResponse> TransferOriginatorListAsync(TransferOriginatorListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/originator/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferOriginatorListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Generate a Plaid-hosted onboarding UI URL.
		/// The `/transfer/questionnaire/create` endpoint generates a Plaid-hosted onboarding UI URL. Redirect the originator to this URL to provide their due diligence information and agree to Plaidâ€™s terms for ACH money movement.
		/// TransferQuestionnaireCreate transfer/questionnaire/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferQuestionnaireCreateResponse> TransferQuestionnaireCreateAsync(TransferQuestionnaireCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/questionnaire/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferQuestionnaireCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancel a recurring transfer.
		/// Use the `/transfer/recurring/cancel` endpoint to cancel a recurring transfer.  Scheduled transfer that hasn't been submitted to bank will be cancelled.
		/// TransferRecurringCancel transfer/recurring/cancel
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRecurringCancelResponse> TransferRecurringCancelAsync(TransferRecurringCancelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/recurring/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRecurringCancelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a recurring transfer
		/// Use the `/transfer/recurring/create` endpoint to initiate a new recurring transfer.
		/// TransferRecurringCreate transfer/recurring/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRecurringCreateResponse> TransferRecurringCreateAsync(TransferRecurringCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/recurring/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRecurringCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a recurring transfer
		/// The `/transfer/recurring/get` fetches information about the recurring transfer corresponding to the given `recurring_transfer_id`.
		/// TransferRecurringGet transfer/recurring/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRecurringGetResponse> TransferRecurringGetAsync(TransferRecurringGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/recurring/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRecurringGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List recurring transfers
		/// Use the `/transfer/recurring/list` endpoint to see a list of all your recurring transfers and their statuses. Results are paginated; use the `count` and `offset` query parameters to retrieve the desired recurring transfers.
		/// 
		/// TransferRecurringList transfer/recurring/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRecurringListResponse> TransferRecurringListAsync(TransferRecurringListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/recurring/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRecurringListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancel a refund
		/// Use the `/transfer/refund/cancel` endpoint to cancel a refund.  A refund is eligible for cancellation if it has not yet been submitted to the payment network.
		/// TransferRefundCancel transfer/refund/cancel
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRefundCancelResponse> TransferRefundCancelAsync(TransferRefundCancelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/refund/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRefundCancelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a refund
		/// Use the `/transfer/refund/create` endpoint to create a refund for a transfer. A transfer can be refunded if the transfer was initiated in the past 180 days.
		/// 
		/// Processing of the refund will not occur until at least 3 business days following the transfer's settlement date, plus any hold/settlement delays. This 3-day window helps better protect your business from regular ACH returns. Consumer initiated returns (unauthorized returns) could still happen for about 60 days from the settlement date. If the original transfer is canceled, returned or failed, all pending refunds will automatically be canceled. Processed refunds cannot be revoked.
		/// TransferRefundCreate transfer/refund/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRefundCreateResponse> TransferRefundCreateAsync(TransferRefundCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/refund/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRefundCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a refund
		/// The `/transfer/refund/get` endpoint fetches information about the refund corresponding to the given `refund_id`.
		/// TransferRefundGet transfer/refund/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRefundGetResponse> TransferRefundGetAsync(TransferRefundGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/refund/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRefundGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists historical repayments
		/// The `/transfer/repayment/list` endpoint fetches repayments matching the given filters. Repayments are returned in reverse-chronological order (most recent first) starting at the given `start_time`.
		/// TransferRepaymentList transfer/repayment/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRepaymentListResponse> TransferRepaymentListAsync(TransferRepaymentListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/repayment/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRepaymentListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List the returns included in a repayment
		/// The `/transfer/repayment/return/list` endpoint retrieves the set of returns that were batched together into the specified repayment. The sum of amounts of returns retrieved by this request equals the amount of the repayment.
		/// TransferRepaymentReturnList transfer/repayment/return/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferRepaymentReturnListResponse> TransferRepaymentReturnListAsync(TransferRepaymentReturnListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/repayment/return/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferRepaymentReturnListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a sweep
		/// The `/transfer/sweep/get` endpoint fetches a sweep corresponding to the given `sweep_id`.
		/// TransferSweepGet transfer/sweep/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferSweepGetResponse> TransferSweepGetAsync(TransferSweepGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/sweep/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferSweepGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List sweeps
		/// The `/transfer/sweep/list` endpoint fetches sweeps matching the given filters.
		/// TransferSweepList transfer/sweep/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TransferSweepListResponse> TransferSweepListAsync(TransferSweepListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "transfer/sweep/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TransferSweepListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create user
		/// This endpoint should be called for each of your end users before they begin a Plaid income flow. This provides you a single token to access all income data associated with the user. You should only create one per end user.
		/// 
		/// If you call the endpoint multiple times with the same `client_user_id`, the first creation call will succeed and the rest will fail with an error message indicating that the user has been created for the given `client_user_id`.
		/// 
		/// Ensure that you store the `user_token` along with your user's identifier in your database, as it is not possible to retrieve a previously created `user_token`.
		/// UserCreate user/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<UserCreateResponse> UserCreateAsync(UserCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UserCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an e-wallet
		/// Create an e-wallet. The response is the newly created e-wallet object.
		/// WalletCreate wallet/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WalletCreateResponse> WalletCreateAsync(WalletCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "wallet/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WalletCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Fetch an e-wallet
		/// Fetch an e-wallet. The response includes the current balance.
		/// WalletGet wallet/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WalletGetResponse> WalletGetAsync(WalletGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "wallet/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WalletGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Fetch a list of e-wallets
		/// This endpoint lists all e-wallets in descending order of creation.
		/// WalletList wallet/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WalletListResponse> WalletListAsync(WalletListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "wallet/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WalletListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Execute a transaction using an e-wallet
		/// Execute a transaction using the specified e-wallet.
		/// Specify the e-wallet to debit from, the counterparty to credit to, the idempotency key to prevent duplicate transactions, the amount and reference for the transaction.
		/// Transactions will settle in seconds to several days, depending on the underlying payment rail.
		/// WalletTransactionExecute wallet/transaction/execute
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WalletTransactionExecuteResponse> WalletTransactionExecuteAsync(WalletTransactionExecuteRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "wallet/transaction/execute";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WalletTransactionExecuteResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Fetch an e-wallet transaction
		/// Fetch a specific e-wallet transaction
		/// WalletTransactionGet wallet/transaction/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WalletTransactionGetResponse> WalletTransactionGetAsync(WalletTransactionGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "wallet/transaction/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WalletTransactionGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List e-wallet transactions
		/// This endpoint lists the latest transactions of the specified e-wallet. Transactions are returned in descending order by the `created_at` time.
		/// WalletTransactionList wallet/transaction/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WalletTransactionListResponse> WalletTransactionListAsync(WalletTransactionListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "wallet/transaction/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WalletTransactionListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a watchlist screening for an entity
		/// Create a new entity watchlist screening to check your customer against watchlists defined in the associated entity watchlist program. If your associated program has ongoing screening enabled, this is the profile information that will be used to monitor your customer over time.
		/// WatchlistScreeningEntityCreate watchlist_screening/entity/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityCreateResponse> WatchlistScreeningEntityCreateAsync(WatchlistScreeningEntityCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get an entity screening
		/// Retrieve an entity watchlist screening.
		/// WatchlistScreeningEntityGet watchlist_screening/entity/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityGetResponse> WatchlistScreeningEntityGetAsync(WatchlistScreeningEntityGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List history for entity watchlist screenings
		/// List all changes to the entity watchlist screening in reverse-chronological order. If the watchlist screening has not been edited, no history will be returned.
		/// WatchlistScreeningEntityHistoryList watchlist_screening/entity/history/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityHistoryListResponse> WatchlistScreeningEntityHistoryListAsync(WatchlistScreeningEntityHistoryListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/history/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityHistoryListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List hits for entity watchlist screenings
		/// List all hits for the entity watchlist screening.
		/// WatchlistScreeningEntityHitList watchlist_screening/entity/hit/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityHitListResponse> WatchlistScreeningEntityHitListAsync(WatchlistScreeningEntityHitListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/hit/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityHitListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List entity watchlist screenings
		/// List all entity screenings.
		/// WatchlistScreeningEntityList watchlist_screening/entity/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityListResponse> WatchlistScreeningEntityListAsync(WatchlistScreeningEntityListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get entity watchlist screening program
		/// Get an entity watchlist screening program
		/// WatchlistScreeningEntityProgramGet watchlist_screening/entity/program/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityProgramGetResponse> WatchlistScreeningEntityProgramGetAsync(WatchlistScreeningEntityProgramGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/program/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityProgramGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List entity watchlist screening programs
		/// List all entity watchlist screening programs
		/// WatchlistScreeningEntityProgramList watchlist_screening/entity/program/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityProgramListResponse> WatchlistScreeningEntityProgramListAsync(WatchlistScreeningEntityProgramListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/program/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityProgramListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a review for an entity watchlist screening
		/// Create a review for an entity watchlist screening. Reviews are compliance reports created by users in your organization regarding the relevance of potential hits found by Plaid.
		/// WatchlistScreeningEntityReviewCreate watchlist_screening/entity/review/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityReviewCreateResponse> WatchlistScreeningEntityReviewCreateAsync(WatchlistScreeningEntityReviewCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/review/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityReviewCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List reviews for entity watchlist screenings
		/// List all reviews for a particular entity watchlist screening. Reviews are compliance reports created by users in your organization regarding the relevance of potential hits found by Plaid.
		/// WatchlistScreeningEntityReviewList watchlist_screening/entity/review/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityReviewListResponse> WatchlistScreeningEntityReviewListAsync(WatchlistScreeningEntityReviewListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/review/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityReviewListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an entity screening
		/// Update an entity watchlist screening.
		/// WatchlistScreeningEntityUpdate watchlist_screening/entity/update
		/// </summary>
		/// <param name="requestBody">The entity screening was successfully updated.</param>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningEntityUpdateResponse> WatchlistScreeningEntityUpdateAsync(WatchlistScreeningEntityUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/entity/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningEntityUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a watchlist screening for a person
		/// Create a new Watchlist Screening to check your customer against watchlists defined in the associated Watchlist Program. If your associated program has ongoing screening enabled, this is the profile information that will be used to monitor your customer over time.
		/// WatchlistScreeningIndividualCreate watchlist_screening/individual/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualCreateResponse> WatchlistScreeningIndividualCreateAsync(WatchlistScreeningIndividualCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve an individual watchlist screening
		/// Retrieve a previously created individual watchlist screening
		/// WatchlistScreeningIndividualGet watchlist_screening/individual/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualGetResponse> WatchlistScreeningIndividualGetAsync(WatchlistScreeningIndividualGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List history for individual watchlist screenings
		/// List all changes to the individual watchlist screening in reverse-chronological order. If the watchlist screening has not been edited, no history will be returned.
		/// WatchlistScreeningIndividualHistoryList watchlist_screening/individual/history/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualHistoryListResponse> WatchlistScreeningIndividualHistoryListAsync(WatchlistScreeningIndividualHistoryListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/history/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualHistoryListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List hits for individual watchlist screening
		/// List all hits found by Plaid for a particular individual watchlist screening.
		/// WatchlistScreeningIndividualHitList watchlist_screening/individual/hit/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualHitListResponse> WatchlistScreeningIndividualHitListAsync(WatchlistScreeningIndividualHitListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/hit/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualHitListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List Individual Watchlist Screenings
		/// List previously created watchlist screenings for individuals
		/// WatchlistScreeningIndividualList watchlist_screening/individual/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualListResponse> WatchlistScreeningIndividualListAsync(WatchlistScreeningIndividualListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get individual watchlist screening program
		/// Get an individual watchlist screening program
		/// WatchlistScreeningIndividualProgramGet watchlist_screening/individual/program/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualProgramGetResponse> WatchlistScreeningIndividualProgramGetAsync(WatchlistScreeningIndividualProgramGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/program/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualProgramGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List individual watchlist screening programs
		/// List all individual watchlist screening programs
		/// WatchlistScreeningIndividualProgramList watchlist_screening/individual/program/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualProgramListResponse> WatchlistScreeningIndividualProgramListAsync(WatchlistScreeningIndividualProgramListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/program/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualProgramListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a review for an individual watchlist screening
		/// Create a review for the individual watchlist screening. Reviews are compliance reports created by users in your organization regarding the relevance of potential hits found by Plaid.
		/// WatchlistScreeningIndividualReviewCreate watchlist_screening/individual/review/create
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualReviewCreateResponse> WatchlistScreeningIndividualReviewCreateAsync(WatchlistScreeningIndividualReviewCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/review/create";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualReviewCreateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List reviews for individual watchlist screenings
		/// List all reviews for the individual watchlist screening.
		/// WatchlistScreeningIndividualReviewList watchlist_screening/individual/review/list
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualReviewListResponse> WatchlistScreeningIndividualReviewListAsync(WatchlistScreeningIndividualReviewListRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/review/list";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualReviewListResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update individual watchlist screening
		/// Update a specific individual watchlist screening. This endpoint can be used to add additional customer information, correct outdated information, add a reference id, assign the individual to a reviewer, and update which program it is associated with. Please note that you may not update `search_terms` and `status` at the same time since editing `search_terms` may trigger an automatic `status` change.
		/// WatchlistScreeningIndividualUpdate watchlist_screening/individual/update
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WatchlistScreeningIndividualUpdateResponse> WatchlistScreeningIndividualUpdateAsync(WatchlistScreeningIndividualUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "watchlist_screening/individual/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WatchlistScreeningIndividualUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get webhook verification key
		/// Plaid signs all outgoing webhooks and provides JSON Web Tokens (JWTs) so that you can verify the authenticity of any incoming webhooks to your application. A message signature is included in the `Plaid-Verification` header.
		/// 
		/// The `/webhook_verification_key/get` endpoint provides a JSON Web Key (JWK) that can be used to verify a JWT.
		/// WebhookVerificationKeyGet webhook_verification_key/get
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WebhookVerificationKeyGetResponse> WebhookVerificationKeyGetAsync(WebhookVerificationKeyGetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "webhook_verification_key/get";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<WebhookVerificationKeyGetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

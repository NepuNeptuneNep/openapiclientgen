//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnomalyMonitorResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnomalyMonitorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyMonitor AnomalyMonitor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTag[] ResourceTags { get; set; }
	}
	
	/// <summary>
	/// This object continuously inspects your account's cost data for anomalies. It's based on <code>MonitorType</code> and <code>MonitorSpecification</code>. The content consists of detailed metadata and the current status of the monitor object. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyMonitor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MonitorName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastUpdatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastEvaluatedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitorType MonitorType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitorDimension MonitorDimension { get; set; }
		
		/// <summary>
		/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Expression MonitorSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DimensionalValueCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MonitorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MonitorDimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE = 0,
	}
	
	/// <summary>
	/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Expression
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Expression[] Or { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression[] And { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Not { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionValues Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagValues Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryValues CostCategories { get; set; }
	}
	
	/// <summary>
	/// The metadata that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Dimension Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MatchOption[] MatchOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Dimension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_TYPE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINKED_ACCOUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINKED_ACCOUNT_NAME = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PURCHASE_TYPE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGION = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_CODE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USAGE_TYPE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USAGE_TYPE_GROUP = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECORD_TYPE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATING_SYSTEM = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TENANCY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCOPE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLATFORM = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION_ID = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEGAL_ENTITY_NAME = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYMENT_OPTION = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATABASE_ENGINE = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CACHE_ENGINE = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_TYPE_FAMILY = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BILLING_ENTITY = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESERVATION_ID = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_ID = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHTSIZING_TYPE = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVINGS_PLANS_TYPE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVINGS_PLAN_ARN = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENT_OPTION = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGREEMENT_END_DATE_TIME_AFTER = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGREEMENT_END_DATE_TIME_BEFORE = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVOICING_ENTITY = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANOMALY_TOTAL_IMPACT_ABSOLUTE = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANOMALY_TOTAL_IMPACT_PERCENTAGE = 33,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MatchOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABSENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTS_WITH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDS_WITH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASE_SENSITIVE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASE_INSENSITIVE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN_OR_EQUAL = 7,
	}
	
	/// <summary>
	/// <p>The values that are available for a tag.</p> <p>If <code>Values</code> and <code>Key</code> aren't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all tags. That is, it's filtered on resources with no tags.</p> <p>If <code>Key</code> is provided and <code>Values</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the tag <code>Key</code> only. That is, it's filtered on resources without the given tag key.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MatchOption[] MatchOptions { get; set; }
	}
	
	/// <summary>
	/// <p>The Cost Categories values used for filtering the costs.</p> <p>If <code>Values</code> and <code>Key</code> are not specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all Cost Categories. That is, it filters on resources that aren't mapped to any Cost Categories.</p> <p>If <code>Values</code> is provided and <code>Key</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the Cost Categories <code>Key</code> only. That is, it filters on resources without the given Cost Categories key.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategoryValues
	{
		
		/// <summary>
		/// The unique name of the Cost Category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MatchOption[] MatchOptions { get; set; }
	}
	
	/// <summary>
	/// <p>The tag structure that contains a tag key and value. </p> <note> <p>Tagging is supported only for the following Cost Explorer resource types: <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html"> <code>AnomalyMonitor</code> </a>, <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html"> <code>AnomalySubscription</code> </a>, <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategory.html"> <code>CostCategory</code> </a>.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceTag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnomalySubscriptionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnomalySubscriptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalySubscription AnomalySubscription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTag[] ResourceTags { get; set; }
	}
	
	/// <summary>
	/// <p>An <code>AnomalySubscription</code> resource (also referred to as an alert subscription) sends notifications about specific anomalies that meet an alerting criteria defined by you.</p> <p>You can specify the frequency of the alerts and the subscribers to notify.</p> <p>Anomaly subscriptions can be associated with one or more <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html"> <code>AnomalyMonitor</code> </a> resources, and they only send notifications about anomalies detected by those associated monitors. You can also configure a threshold to further control which anomalies are included in the notifications.</p> <p>Anomalies that don’t exceed the chosen threshold and therefore don’t trigger notifications from an anomaly subscription will still be available on the console and from the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetAnomalies.html"> <code>GetAnomalies</code> </a> API.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalySubscription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] MonitorArnList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber[] Subscribers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Threshold { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalySubscriptionFrequency Frequency { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression ThresholdExpression { get; set; }
	}
	
	/// <summary>
	/// The recipient of <code>AnomalySubscription</code> notifications. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Subscriber
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SubscriberType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SubscriberStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubscriberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubscriberStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFIRMED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECLINED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnomalySubscriptionFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMMEDIATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnknownMonitorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCostCategoryDefinitionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCostCategoryDefinitionRequest
	{
		
		/// <summary>
		/// The unique name of the Cost Category.
		/// Required
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveStart { get; set; }
		
		/// <summary>
		/// The rule schema version in this particular Cost Category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateCostCategoryDefinitionRequestRuleVersion RuleVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryRule[] Rules { get; set; }
		
		/// <summary>
		/// The default value for the cost category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategorySplitChargeRule[] SplitChargeRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTag[] ResourceTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreateCostCategoryDefinitionRequestRuleVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CostCategoryExpression.v1")]
		CostCategoryExpression_v1 = 0,
	}
	
	/// <summary>
	/// Rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategoryRule
	{
		
		/// <summary>
		/// The default value for the cost category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Rule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryInheritedValueDimension InheritedValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryRuleType Type { get; set; }
	}
	
	/// <summary>
	/// When you create or update a cost category, you can define the <code>CostCategoryRule</code> rule type as <code>INHERITED_VALUE</code>. This rule type adds the flexibility to define a rule that dynamically inherits the cost category value from the dimension value that's defined by <code>CostCategoryInheritedValueDimension</code>. For example, suppose that you want to dynamically group costs that are based on the value of a specific tag key. First, choose an inherited value rule type, and then choose the tag dimension and specify the tag key to use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategoryInheritedValueDimension
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryInheritedValueDimensionName DimensionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategoryInheritedValueDimensionName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINKED_ACCOUNT_NAME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAG = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategoryRuleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGULAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INHERITED_VALUE = 1,
	}
	
	/// <summary>
	/// Use the split charge rule to split the cost of one Cost Category value across several other target values. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategorySplitChargeRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Targets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostCategorySplitChargeMethod Method { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategorySplitChargeRuleParameter[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategorySplitChargeMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIXED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROPORTIONAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVEN = 2,
	}
	
	/// <summary>
	/// The parameters for a split charge method. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategorySplitChargeRuleParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostCategorySplitChargeRuleParameterType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategorySplitChargeRuleParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALLOCATION_PERCENTAGES = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnomalyMonitorResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnomalyMonitorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnomalySubscriptionResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnomalySubscriptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnknownSubscriptionException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCostCategoryDefinitionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveEnd { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCostCategoryDefinitionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeCostCategoryDefinitionResponse
	{
		
		/// <summary>
		/// The structure of Cost Categories. This includes detailed metadata and the set of rules for the <code>CostCategory</code> object.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CostCategory CostCategory { get; set; }
	}
	
	/// <summary>
	/// The structure of Cost Categories. This includes detailed metadata and the set of rules for the <code>CostCategory</code> object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategory
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveStart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveEnd { get; set; }
		
		/// <summary>
		/// The unique name of the Cost Category.
		/// Required
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string Name { get; set; }
		
		/// <summary>
		/// The rule schema version in this particular Cost Category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryRuleVersion RuleVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryRule[] Rules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategorySplitChargeRule[] SplitChargeRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryProcessingStatus[] ProcessingStatus { get; set; }
		
		/// <summary>
		/// The default value for the cost category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string DefaultValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategoryRuleVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CostCategoryExpression.v1")]
		CostCategoryExpression_v1 = 0,
	}
	
	/// <summary>
	/// The list of processing statuses for Cost Management products for a specific cost category. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategoryProcessingStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryStatusComponent Component { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategoryStatusComponent
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COST_EXPLORER = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostCategoryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLIED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeCostCategoryDefinitionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveOn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomaliesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Anomaly[] Anomalies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// An unusual cost pattern. This consists of the detailed metadata and the current status of the anomaly object. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Anomaly
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyStartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyEndDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootCause[] RootCauses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyScore AnomalyScore { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Impact Impact { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyFeedbackType Feedback { get; set; }
	}
	
	/// <summary>
	/// The combination of Amazon Web Service, linked account, linked account name, Region, and usage type where a cost anomaly is observed. The linked account name will only be available when the account name can be identified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RootCause
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LinkedAccount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UsageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LinkedAccountName { get; set; }
	}
	
	/// <summary>
	/// Quantifies the anomaly. The higher score means that it's more anomalous. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyScore
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double MaxScore { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double CurrentScore { get; set; }
	}
	
	/// <summary>
	/// The dollar value of the anomaly. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Impact
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double MaxImpact { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalImpact { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalActualSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalExpectedSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalImpactPercentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnomalyFeedbackType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLANNED_ACTIVITY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomaliesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDateInterval DateInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyFeedbackType Feedback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TotalImpactFilter TotalImpact { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// The time period for an anomaly. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyDateInterval
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndDate { get; set; }
	}
	
	/// <summary>
	/// Filters cost anomalies based on the total impact. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TotalImpactFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NumericOperator NumericOperator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double StartValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> EndValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NumericOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN_OR_EQUAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN_OR_EQUAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETWEEN = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidNextTokenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomalyMonitorsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyMonitor[] AnomalyMonitors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomalyMonitorsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MonitorArnList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomalySubscriptionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalySubscription[] AnomalySubscriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomalySubscriptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubscriptionArnList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostAndUsageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResultByTime[] ResultsByTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionValuesWithAttributes[] DimensionValueAttributes { get; set; }
	}
	
	/// <summary>
	/// Represents a group when you specify a group by criteria or in the response to a query with a specific grouping.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinitionType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GroupDefinitionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TAG = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COST_CATEGORY = 2,
	}
	
	/// <summary>
	/// The result that's associated with a time period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResultByTime
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Metrics Total { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Group[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Estimated { get; set; }
	}
	
	/// <summary>
	/// The time period of the request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateInterval
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Start { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string End { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Metrics
	{
	}
	
	/// <summary>
	/// One level of grouped data in the results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Group
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Keys { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Metrics Metrics { get; set; }
	}
	
	/// <summary>
	/// The metadata of a specific type that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionValuesWithAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attributes
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostAndUsageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Granularity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURLY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BillExpirationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequestChangedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostAndUsageWithResourcesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupDefinitions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResultByTime[] ResultsByTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionValuesWithAttributes[] DimensionValueAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostAndUsageWithResourcesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostCategoriesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CostCategoryNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CostCategoryValues { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ReturnSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TotalSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostCategoriesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SearchString { get; set; }
		
		/// <summary>
		/// The time period of the request. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// The unique name of the Cost Category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string CostCategoryName { get; set; }
		
		/// <summary>
		/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition[] SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The details for how to sort the data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SortDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASCENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCENDING = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostForecastResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MetricValue Total { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ForecastResult[] ForecastResultsByTime { get; set; }
	}
	
	/// <summary>
	/// The aggregated value for a metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// The forecast that's created for your query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForecastResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MeanValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PredictionIntervalLowerBound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PredictionIntervalUpperBound { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCostForecastRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Metric Metric { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PredictionIntervalLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Metric
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLENDED_COST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNBLENDED_COST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMORTIZED_COST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NET_UNBLENDED_COST = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NET_AMORTIZED_COST = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USAGE_QUANTITY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMALIZED_USAGE_AMOUNT = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDimensionValuesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionValuesWithAttributes[] DimensionValues { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ReturnSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TotalSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDimensionValuesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SearchString { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Dimension Dimension { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Context Context { get; set; }
		
		/// <summary>
		/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition[] SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Context
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COST_AND_USAGE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESERVATIONS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVINGS_PLANS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetReservationCoverageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CoverageByTime[] CoveragesByTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Coverage Total { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Reservation coverage for a specified period, in hours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CoverageByTime
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationCoverageGroup[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Coverage Total { get; set; }
	}
	
	/// <summary>
	/// A group of reservations that share a set of attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationCoverageGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Coverage Coverage { get; set; }
	}
	
	/// <summary>
	/// The amount of instance usage that a reservation covered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Coverage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CoverageHours CoverageHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CoverageNormalizedUnits CoverageNormalizedUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CoverageCost CoverageCost { get; set; }
	}
	
	/// <summary>
	/// How long a running instance either used a reservation or was On-Demand.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CoverageHours
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalRunningHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CoverageHoursPercentage { get; set; }
	}
	
	/// <summary>
	/// <p>The amount of instance usage, in normalized units. You can use normalized units to see your EC2 usage for multiple sizes of instances in a uniform way. For example, suppose that you run an xlarge instance and a 2xlarge instance. If you run both instances for the same amount of time, the 2xlarge instance uses twice as much of your reservation as the xlarge instance, even though both instances show only one instance-hour. When you use normalized units instead of instance-hours, the xlarge instance used 8 normalized units, and the 2xlarge instance used 16 normalized units.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide for Linux Instances</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CoverageNormalizedUnits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandNormalizedUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedNormalizedUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalRunningNormalizedUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CoverageNormalizedUnitsPercentage { get; set; }
	}
	
	/// <summary>
	/// How much it costs to run an instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CoverageCost
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandCost { get; set; }
	}
	
	/// <summary>
	/// You can use the following request parameters to query for how much of your instance usage a reservation covered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetReservationCoverageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetReservationPurchaseRecommendationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationPurchaseRecommendationMetadata Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationPurchaseRecommendation[] Recommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Information about this specific recommendation, such as the timestamp for when Amazon Web Services made a specific recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationPurchaseRecommendationMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GenerationTimestamp { get; set; }
	}
	
	/// <summary>
	/// A specific reservation that Amazon Web Services recommends for purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationPurchaseRecommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountScope AccountScope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LookbackPeriodInDays LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TermInYears TermInYears { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSpecification ServiceSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationPurchaseRecommendationDetail[] RecommendationDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationPurchaseRecommendationSummary RecommendationSummary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINKED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LookbackPeriodInDays
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVEN_DAYS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIRTY_DAYS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIXTY_DAYS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TermInYears
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_YEAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREE_YEARS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_UPFRONT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_UPFRONT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_UPFRONT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIGHT_UTILIZATION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM_UTILIZATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEAVY_UTILIZATION = 5,
	}
	
	/// <summary>
	/// Hardware specifications for the service that you want recommendations for.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceSpecification
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EC2Specification EC2Specification { get; set; }
	}
	
	/// <summary>
	/// The Amazon EC2 hardware specifications that you want Amazon Web Services to provide recommendations for.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2Specification
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OfferingClass OfferingClass { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OfferingClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONVERTIBLE = 1,
	}
	
	/// <summary>
	/// Details about your recommended reservation purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationPurchaseRecommendationDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceDetails InstanceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendedNumberOfInstancesToPurchase { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendedNormalizedUnitsToPurchase { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumNumberOfInstancesUsedPerHour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MinimumNormalizedUnitsUsedPerHour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MaximumNumberOfInstancesUsedPerHour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MaximumNormalizedUnitsUsedPerHour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AverageNumberOfInstancesUsedPerHour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AverageNormalizedUnitsUsedPerHour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AverageUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedBreakEvenInMonths { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavingsPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlyOnDemandCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedReservationCostForLookbackPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpfrontCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecurringStandardMonthlyCost { get; set; }
	}
	
	/// <summary>
	/// Details about the instances that Amazon Web Services recommends that you purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EC2InstanceDetails EC2InstanceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RDSInstanceDetails RDSInstanceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftInstanceDetails RedshiftInstanceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ElastiCacheInstanceDetails ElastiCacheInstanceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ESInstanceDetails ESInstanceDetails { get; set; }
	}
	
	/// <summary>
	/// Details about the Amazon EC2 instances that Amazon Web Services recommends that you purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2InstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Family { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Tenancy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CurrentGeneration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SizeFlexEligible { get; set; }
	}
	
	/// <summary>
	/// Details about the Amazon RDS instances that Amazon Web Services recommends that you purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RDSInstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Family { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseEdition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CurrentGeneration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SizeFlexEligible { get; set; }
	}
	
	/// <summary>
	/// Details about the Amazon Redshift instances that Amazon Web Services recommends that you purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RedshiftInstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Family { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NodeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CurrentGeneration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SizeFlexEligible { get; set; }
	}
	
	/// <summary>
	/// Details about the Amazon ElastiCache instances that Amazon Web Services recommends that you purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ElastiCacheInstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Family { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NodeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CurrentGeneration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SizeFlexEligible { get; set; }
	}
	
	/// <summary>
	/// Details about the Amazon OpenSearch Service instances that Amazon Web Services recommends that you purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ESInstanceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CurrentGeneration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SizeFlexEligible { get; set; }
	}
	
	/// <summary>
	/// A summary about this recommendation, such as the currency code, the amount that Amazon Web Services estimates that you could save, and the total amount of reservation to purchase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationPurchaseRecommendationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalEstimatedMonthlySavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalEstimatedMonthlySavingsPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetReservationPurchaseRecommendationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Service { get; set; }
		
		/// <summary>
		/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountScope AccountScope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LookbackPeriodInDays LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TermInYears TermInYears { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSpecification ServiceSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetReservationUtilizationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UtilizationByTime[] UtilizationsByTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationAggregates Total { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The amount of utilization, in hours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UtilizationByTime
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationUtilizationGroup[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationAggregates Total { get; set; }
	}
	
	/// <summary>
	/// A group of reservations that share a set of attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationUtilizationGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservationAggregates Utilization { get; set; }
	}
	
	/// <summary>
	/// The aggregated numbers for your reservation usage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservationAggregates
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UtilizationPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UtilizationPercentageInUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PurchasedHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PurchasedUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalActualHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalActualUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UnusedHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UnusedUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandCostOfRIHoursUsed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetRISavings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalPotentialRISavings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmortizedUpfrontFee { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmortizedRecurringFee { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalAmortizedFee { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RICostForUnusedHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RealizedSavings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UnrealizedSavings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetReservationUtilizationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRightsizingRecommendationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RightsizingRecommendationMetadata Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RightsizingRecommendationSummary Summary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RightsizingRecommendation[] RightsizingRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RightsizingRecommendationConfiguration Configuration { get; set; }
	}
	
	/// <summary>
	/// Metadata for this recommendation set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RightsizingRecommendationMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GenerationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LookbackPeriodInDays LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdditionalMetadata { get; set; }
	}
	
	/// <summary>
	/// The summary of rightsizing recommendations 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RightsizingRecommendationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalRecommendationCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedTotalMonthlySavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SavingsCurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SavingsPercentage { get; set; }
	}
	
	/// <summary>
	/// Recommendations to rightsize resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RightsizingRecommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrentInstance CurrentInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RightsizingType RightsizingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModifyRecommendationDetail ModifyRecommendationDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TerminateRecommendationDetail TerminateRecommendationDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FindingReasonCode[] FindingReasonCodes { get; set; }
	}
	
	/// <summary>
	/// Context about the current instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrentInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagValues[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceDetails ResourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceUtilization ResourceUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservationCoveredHoursInLookbackPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SavingsPlansCoveredHoursInLookbackPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandHoursInLookbackPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalRunningHoursInLookbackPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonthlyCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
	}
	
	/// <summary>
	/// Details for the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EC2ResourceDetails EC2ResourceDetails { get; set; }
	}
	
	/// <summary>
	/// Details on the Amazon EC2 Resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2ResourceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HourlyOnDemandRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sku { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkPerformance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Storage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Vcpu { get; set; }
	}
	
	/// <summary>
	/// Resource utilization of current resource. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceUtilization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EC2ResourceUtilization EC2ResourceUtilization { get; set; }
	}
	
	/// <summary>
	/// Utilization metrics for the instance. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2ResourceUtilization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MaxCpuUtilizationPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MaxMemoryUtilizationPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MaxStorageUtilizationPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSResourceUtilization EBSResourceUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DiskResourceUtilization DiskResourceUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NetworkResourceUtilization NetworkResourceUtilization { get; set; }
	}
	
	/// <summary>
	/// The EBS field that contains a list of EBS metrics that are associated with the current instance. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EBSResourceUtilization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EbsReadOpsPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EbsWriteOpsPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EbsReadBytesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EbsWriteBytesPerSecond { get; set; }
	}
	
	/// <summary>
	/// The field that contains a list of disk (local storage) metrics that are associated with the current instance. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiskResourceUtilization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DiskReadOpsPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DiskWriteOpsPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DiskReadBytesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DiskWriteBytesPerSecond { get; set; }
	}
	
	/// <summary>
	/// The network field that contains a list of network metrics that are associated with the current instance. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkResourceUtilization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkInBytesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkOutBytesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkPacketsInPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NetworkPacketsOutPerSecond { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RightsizingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFY = 1,
	}
	
	/// <summary>
	/// Details for the modification recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyRecommendationDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TargetInstance[] TargetInstances { get; set; }
	}
	
	/// <summary>
	/// Details on recommended instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlyCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DefaultTargetInstance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceDetails ResourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceUtilization ExpectedResourceUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlatformDifference[] PlatformDifferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PlatformDifference
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HYPERVISOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_INTERFACE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORAGE_INTERFACE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_STORE_AVAILABILITY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIRTUALIZATION_TYPE = 4,
	}
	
	/// <summary>
	/// Details on termination recommendation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerminateRecommendationDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FindingReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPU_OVER_PROVISIONED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPU_UNDER_PROVISIONED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMORY_OVER_PROVISIONED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMORY_UNDER_PROVISIONED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_THROUGHPUT_OVER_PROVISIONED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_THROUGHPUT_UNDER_PROVISIONED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_IOPS_OVER_PROVISIONED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_IOPS_UNDER_PROVISIONED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_BANDWIDTH_OVER_PROVISIONED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_BANDWIDTH_UNDER_PROVISIONED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_PPS_OVER_PROVISIONED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_PPS_UNDER_PROVISIONED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_IOPS_OVER_PROVISIONED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_IOPS_UNDER_PROVISIONED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_THROUGHPUT_OVER_PROVISIONED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_THROUGHPUT_UNDER_PROVISIONED = 15,
	}
	
	/// <summary>
	/// You can use <code>RightsizingRecommendationConfiguration</code> to customize recommendations across two attributes. You can choose to view recommendations for instances within the same instance families or across different instance families. You can also choose to view your estimated savings that are associated with recommendations with consideration of existing Savings Plans or Reserved Instance (RI) benefits, or neither. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RightsizingRecommendationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecommendationTarget RecommendationTarget { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool BenefitsConsidered { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecommendationTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAME_INSTANCE_FAMILY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CROSS_INSTANCE_FAMILY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRightsizingRecommendationRequest
	{
		
		/// <summary>
		/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RightsizingRecommendationConfiguration Configuration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlanPurchaseRecommendationDetailsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationDetailId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationDetailData RecommendationDetailData { get; set; }
	}
	
	/// <summary>
	/// The details and metrics for the given recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecommendationDetailData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountScope AccountScope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LookbackPeriodInDays LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SupportedSavingsPlansType SavingsPlansType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TermInYears TermInYears { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingId { get; set; }
		
		/// <summary>
		/// The period of time that you want the usage and costs for.
		/// Min length: 20
		/// Max length: 25
		/// Pattern: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(20, 25)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$")]
		public string GenerationTimestamp { get; set; }
		
		/// <summary>
		/// The period of time that you want the usage and costs for.
		/// Min length: 20
		/// Max length: 25
		/// Pattern: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(20, 25)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$")]
		public string LatestUsageTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentAverageHourlyOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentMaximumHourlyOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentMinimumHourlyOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedAverageUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedOnDemandCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedOnDemandCostWithCurrentCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedROI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSPCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSavingsPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExistingHourlyCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HourlyCommitmentToPurchase { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpfrontCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentAverageCoverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedAverageCoverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationDetailHourlyMetrics[] MetricsOverLookbackPeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SupportedSavingsPlansType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPUTE_SP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2_INSTANCE_SP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAGEMAKER_SP = 2,
	}
	
	/// <summary>
	/// Contains the hourly metrics for the given recommendation over the lookback period. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecommendationDetailHourlyMetrics
	{
		
		/// <summary>
		/// The period of time that you want the usage and costs for.
		/// Min length: 20
		/// Max length: 25
		/// Pattern: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(20, 25)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$")]
		public string StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedOnDemandCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentCoverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedCoverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedNewCommitmentUtilization { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlanPurchaseRecommendationDetailsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationDetailId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansCoverageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansCoverage[] SavingsPlansCoverages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The amount of Savings Plans eligible usage that's covered by Savings Plans. All calculations consider the On-Demand equivalent of your Savings Plans usage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansCoverage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansCoverageData Coverage { get; set; }
		
		/// <summary>
		/// The time period of the request. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
	}
	
	/// <summary>
	/// Specific coverage percentage, On-Demand costs, and spend covered by Savings Plans, and total Savings Plans costs for an account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansCoverageData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SpendCoveredBySavingsPlans { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CoveragePercentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansCoverageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GroupDefinition[] GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition SortBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansPurchaseRecommendationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansPurchaseRecommendationMetadata Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansPurchaseRecommendation SavingsPlansPurchaseRecommendation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Metadata about your Savings Plans Purchase Recommendations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansPurchaseRecommendationMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GenerationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdditionalMetadata { get; set; }
	}
	
	/// <summary>
	/// Contains your request parameters, Savings Plan Recommendations Summary, and Details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansPurchaseRecommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountScope AccountScope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SupportedSavingsPlansType SavingsPlansType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TermInYears TermInYears { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LookbackPeriodInDays LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansPurchaseRecommendationDetail[] SavingsPlansPurchaseRecommendationDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansPurchaseRecommendationSummary SavingsPlansPurchaseRecommendationSummary { get; set; }
	}
	
	/// <summary>
	/// Details for your recommended Savings Plans.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansPurchaseRecommendationDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansDetails SavingsPlansDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpfrontCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedROI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSPCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedOnDemandCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedOnDemandCostWithCurrentCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSavingsPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HourlyCommitmentToPurchase { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedAverageUtilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentMinimumHourlyOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentMaximumHourlyOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentAverageHourlyOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationDetailId { get; set; }
	}
	
	/// <summary>
	/// The attribute details on a specific Savings Plan.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFamily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OfferingId { get; set; }
	}
	
	/// <summary>
	/// Summary metrics for your Savings Plans Purchase Recommendations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansPurchaseRecommendationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedROI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedTotalCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentOnDemandSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalRecommendationCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DailyCommitmentToPurchase { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HourlyCommitmentToPurchase { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedSavingsPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedMonthlySavingsAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedOnDemandCostWithCurrentCommitment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansPurchaseRecommendationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SupportedSavingsPlansType SavingsPlansType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TermInYears TermInYears { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountScope AccountScope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LookbackPeriodInDays LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansUtilizationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilizationByTime[] SavingsPlansUtilizationsByTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilizationAggregates Total { get; set; }
	}
	
	/// <summary>
	/// The amount of Savings Plans utilization (in hours).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansUtilizationByTime
	{
		
		/// <summary>
		/// The time period of the request. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilization Utilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansSavings Savings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansAmortizedCommitment AmortizedCommitment { get; set; }
	}
	
	/// <summary>
	/// The measurement of how well you're using your existing Savings Plans.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansUtilization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UsedCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UnusedCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// The amount of savings that you're accumulating, against the public On-Demand rate of the usage accrued in an account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansSavings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NetSavings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OnDemandCostEquivalent { get; set; }
	}
	
	/// <summary>
	/// The amortized amount of Savings Plans purchased in a specific account during a specific time interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansAmortizedCommitment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AmortizedRecurringCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmortizedUpfrontCommitment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalAmortizedCommitment { get; set; }
	}
	
	/// <summary>
	/// The aggregated utilization metrics for your Savings Plans usage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansUtilizationAggregates
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilization Utilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansSavings Savings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansAmortizedCommitment AmortizedCommitment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansUtilizationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition SortBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansUtilizationDetailsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilizationDetail[] SavingsPlansUtilizationDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilizationAggregates Total { get; set; }
		
		/// <summary>
		/// The time period of the request. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A single daily or monthly Savings Plans utilization rate and details for your account. A management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> to determine the possible dimension values. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SavingsPlansUtilizationDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SavingsPlanArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansUtilization Utilization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansSavings Savings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansAmortizedCommitment AmortizedCommitment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSavingsPlansUtilizationDetailsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SavingsPlansDataType[] DataType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition SortBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SavingsPlansDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTRIBUTES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UTILIZATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMORTIZED_COMMITMENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVINGS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTagsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ReturnSize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TotalSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTagsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SearchString { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		/// <summary>
		/// <p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with "a".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortDefinition[] SortBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUsageForecastResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MetricValue Total { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ForecastResult[] ForecastResultsByTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUsageForecastRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DateInterval TimePeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Metric Metric { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Granularity Granularity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PredictionIntervalLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnresolvableUsageUnitException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCostAllocationTagsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTag[] CostAllocationTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The cost allocation tag structure. This includes detailed metadata for the <code>CostAllocationTag</code> object. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostAllocationTag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTagType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTagStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostAllocationTagType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWSGenerated = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserDefined = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CostAllocationTagStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCostAllocationTagsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTagStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTagType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCostCategoryDefinitionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryReference[] CostCategoryReferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>A reference to a Cost Category containing only enough information to identify the Cost Category.</p> <p>You can use this information to retrieve the full Cost Category information using <code>DescribeCostCategory</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostCategoryReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		/// <summary>
		/// The unique name of the Cost Category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveStart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveEnd { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryProcessingStatus[] ProcessingStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
		
		/// <summary>
		/// The default value for the cost category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string DefaultValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCostCategoryDefinitionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSavingsPlansPurchaseRecommendationGenerationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GenerationSummary[] GenerationSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The summary of the Savings Plans recommendation generation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GenerationStatus GenerationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GenerationStartedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GenerationCompletionTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedCompletionTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GenerationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSavingsPlansPurchaseRecommendationGenerationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GenerationStatus GenerationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RecommendationIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTag[] ResourceTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProvideAnomalyFeedbackResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProvideAnomalyFeedbackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyFeedbackType Feedback { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartSavingsPlansPurchaseRecommendationGenerationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GenerationStartedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimatedCompletionTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartSavingsPlansPurchaseRecommendationGenerationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenerationExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceTag[] ResourceTags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyTagsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnomalyMonitorResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnomalyMonitorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MonitorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitorName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnomalySubscriptionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnomalySubscriptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Threshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySubscriptionFrequency Frequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MonitorArnList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Subscriber[] Subscribers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubscriptionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Expression ThresholdExpression { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCostAllocationTagsStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCostAllocationTagsStatusError[] Errors { get; set; }
	}
	
	/// <summary>
	/// Gives a detailed description of the result of an action. It's on each cost allocation tag entry in the request. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCostAllocationTagsStatusError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCostAllocationTagsStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTagStatusEntry[] CostAllocationTagsStatus { get; set; }
	}
	
	/// <summary>
	/// The cost allocation tag status. The status of a key can either be active or inactive. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostAllocationTagStatusEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostAllocationTagStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCostCategoryDefinitionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCostCategoryDefinitionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CostCategoryArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveStart { get; set; }
		
		/// <summary>
		/// The rule schema version in this particular Cost Category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateCostCategoryDefinitionRequestRuleVersion RuleVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostCategoryRule[] Rules { get; set; }
		
		/// <summary>
		/// The default value for the cost category.
		/// Min length: 1
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 50)]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostCategorySplitChargeRule[] SplitChargeRules { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateCostCategoryDefinitionRequestRuleVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CostCategoryExpression.v1")]
		CostCategoryExpression_v1 = 0,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates a new cost anomaly detection monitor with the requested type and monitor specification.
		/// CreateAnomalyMonitor #X-Amz-Target=AWSInsightsIndexService.CreateAnomalyMonitor
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAnomalyMonitorResponse> CreateAnomalyMonitorAsync(CreateAnomalyMonitorRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.CreateAnomalyMonitor";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateAnomalyMonitorResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds an alert subscription to a cost anomaly detection monitor. You can use each subscription to define subscribers with email or SNS notifications. Email subscribers can set an absolute or percentage threshold and a time frequency for receiving notifications.
		/// CreateAnomalySubscription #X-Amz-Target=AWSInsightsIndexService.CreateAnomalySubscription
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAnomalySubscriptionResponse> CreateAnomalySubscriptionAsync(CreateAnomalySubscriptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.CreateAnomalySubscription";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateAnomalySubscriptionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Cost Category with the requested name and rules.
		/// CreateCostCategoryDefinition #X-Amz-Target=AWSInsightsIndexService.CreateCostCategoryDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCostCategoryDefinitionResponse> CreateCostCategoryDefinitionAsync(CreateCostCategoryDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.CreateCostCategoryDefinition";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateCostCategoryDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a cost anomaly monitor.
		/// DeleteAnomalyMonitor #X-Amz-Target=AWSInsightsIndexService.DeleteAnomalyMonitor
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteAnomalyMonitorResponse> DeleteAnomalyMonitorAsync(DeleteAnomalyMonitorRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.DeleteAnomalyMonitor";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAnomalyMonitorResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a cost anomaly subscription.
		/// DeleteAnomalySubscription #X-Amz-Target=AWSInsightsIndexService.DeleteAnomalySubscription
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteAnomalySubscriptionResponse> DeleteAnomalySubscriptionAsync(DeleteAnomalySubscriptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.DeleteAnomalySubscription";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAnomalySubscriptionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a Cost Category. Expenses from this month going forward will no longer be categorized with this Cost Category.
		/// DeleteCostCategoryDefinition #X-Amz-Target=AWSInsightsIndexService.DeleteCostCategoryDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteCostCategoryDefinitionResponse> DeleteCostCategoryDefinitionAsync(DeleteCostCategoryDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.DeleteCostCategoryDefinition";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteCostCategoryDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns the name, Amazon Resource Name (ARN), rules, definition, and effective dates of a Cost Category that's defined in the account.</p> <p>You have the option to use <code>EffectiveOn</code> to return a Cost Category that's active on a specific date. If there's no <code>EffectiveOn</code> specified, you see a Cost Category that's effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. </p>
		/// DescribeCostCategoryDefinition #X-Amz-Target=AWSInsightsIndexService.DescribeCostCategoryDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeCostCategoryDefinitionResponse> DescribeCostCategoryDefinitionAsync(DescribeCostCategoryDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.DescribeCostCategoryDefinition";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeCostCategoryDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves all of the cost anomalies detected on your account during the time period that's specified by the <code>DateInterval</code> object. Anomalies are available for up to 90 days.
		/// GetAnomalies #X-Amz-Target=AWSInsightsIndexService.GetAnomalies
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAnomaliesResponse> GetAnomaliesAsync(GetAnomaliesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetAnomalies";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAnomaliesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the cost anomaly monitor definitions for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs).
		/// GetAnomalyMonitors #X-Amz-Target=AWSInsightsIndexService.GetAnomalyMonitors
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAnomalyMonitorsResponse> GetAnomalyMonitorsAsync(GetAnomalyMonitorsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetAnomalyMonitors";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAnomalyMonitorsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the cost anomaly subscription objects for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs).
		/// GetAnomalySubscriptions #X-Amz-Target=AWSInsightsIndexService.GetAnomalySubscriptions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAnomalySubscriptionsResponse> GetAnomalySubscriptionsAsync(GetAnomalySubscriptionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetAnomalySubscriptions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAnomalySubscriptionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves cost and usage metrics for your account. You can specify which cost and usage-related metric that you want the request to return. For example, you can specify <code>BlendedCosts</code> or <code>UsageQuantity</code>. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a> operation. Management account in an organization in Organizations have access to all member accounts.</p> <p>For information about filter limitations, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-limits.html">Quotas and restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>
		/// GetCostAndUsage #X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetCostAndUsageResponse> GetCostAndUsageAsync(GetCostAndUsageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCostAndUsageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves cost and usage metrics with resources for your account. You can specify which cost and usage-related metric, such as <code>BlendedCosts</code> or <code>UsageQuantity</code>, that you want the request to return. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a> operation. Management account in an organization in Organizations have access to all member accounts. This API is currently available for the Amazon Elastic Compute Cloud – Compute service only.</p> <note> <p>This is an opt-in only feature. You can enable this feature from the Cost Explorer Settings page. For information about how to access the Settings page, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-access.html">Controlling Access for Cost Explorer</a> in the <i>Billing and Cost Management User Guide</i>.</p> </note>
		/// GetCostAndUsageWithResources #X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetCostAndUsageWithResourcesResponse> GetCostAndUsageWithResourcesAsync(GetCostAndUsageWithResourcesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCostAndUsageWithResourcesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves an array of Cost Category names and values incurred cost.</p> <note> <p>If some Cost Category names and values are not associated with any cost, they will not be returned by this API.</p> </note>
		/// GetCostCategories #X-Amz-Target=AWSInsightsIndexService.GetCostCategories
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetCostCategoriesResponse> GetCostCategoriesAsync(GetCostCategoriesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetCostCategories";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCostCategoriesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a forecast for how much Amazon Web Services predicts that you will spend over the forecast time period that you select, based on your past costs.
		/// GetCostForecast #X-Amz-Target=AWSInsightsIndexService.GetCostForecast
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetCostForecastResponse> GetCostForecastAsync(GetCostForecastRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetCostForecast";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCostForecastResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves all available filter values for a specified filter over a period of time. You can search the dimension values for an arbitrary string.
		/// GetDimensionValues #X-Amz-Target=AWSInsightsIndexService.GetDimensionValues
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetDimensionValuesResponse> GetDimensionValuesAsync(GetDimensionValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetDimensionValues";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetDimensionValuesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves the reservation coverage for your account, which you can use to see how much of your Amazon Elastic Compute Cloud, Amazon ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage is covered by a reservation. An organization's management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data about reservation usage by the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li> <p>TENANCY</p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation. </p>
		/// GetReservationCoverage #X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetReservationCoverageResponse> GetReservationCoverageAsync(GetReservationCoverageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetReservationCoverageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Gets recommendations for reservation purchases. These recommendations might help you to reduce your costs. Reservations provide a discounted hourly rate (up to 75%) compared to On-Demand pricing.</p> <p>Amazon Web Services generates your recommendations by identifying your On-Demand usage during a specific time period and collecting your usage into categories that are eligible for a reservation. After Amazon Web Services has these categories, it simulates every combination of reservations in each category of usage to identify the best number of each type of Reserved Instance (RI) to purchase to maximize your estimated savings. </p> <p>For example, Amazon Web Services automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4 family usage in the US West (Oregon) Region and recommends that you buy size-flexible regional reservations to apply to the c4 family usage. Amazon Web Services recommends the smallest size instance in an instance family. This makes it easier to purchase a size-flexible Reserved Instance (RI). Amazon Web Services also shows the equal number of normalized units. This way, you can purchase any instance size that you want. For this example, your RI recommendation is for <code>c4.large</code> because that is the smallest size instance in the c4 instance family.</p>
		/// GetReservationPurchaseRecommendation #X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetReservationPurchaseRecommendationResponse> GetReservationPurchaseRecommendationAsync(GetReservationPurchaseRecommendationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetReservationPurchaseRecommendationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the reservation utilization for your account. Management account in an organization have access to member accounts. You can filter data by dimensions in a time period. You can use <code>GetDimensionValues</code> to determine the possible dimension values. Currently, you can group only by <code>SUBSCRIPTION_ID</code>.
		/// GetReservationUtilization #X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetReservationUtilizationResponse> GetReservationUtilizationAsync(GetReservationUtilizationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetReservationUtilizationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates recommendations that help you save cost by identifying idle and underutilized Amazon EC2 instances.</p> <p>Recommendations are generated to either downsize or terminate instances, along with providing savings detail and metrics. For more information about calculation and function, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-rightsizing.html">Optimizing Your Cost with Rightsizing Recommendations</a> in the <i>Billing and Cost Management User Guide</i>.</p>
		/// GetRightsizingRecommendation #X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetRightsizingRecommendationResponse> GetRightsizingRecommendationAsync(GetRightsizingRecommendationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetRightsizingRecommendationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the details for a Savings Plan recommendation. These details include the hourly data-points that construct the new cost, coverage, and utilization charts.
		/// GetSavingsPlanPurchaseRecommendationDetails #X-Amz-Target=AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetSavingsPlanPurchaseRecommendationDetailsResponse> GetSavingsPlanPurchaseRecommendationDetailsAsync(GetSavingsPlanPurchaseRecommendationDetailsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSavingsPlanPurchaseRecommendationDetailsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves the Savings Plans covered for your account. This enables you to see how much of your cost is covered by a Savings Plan. An organization’s management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data for Savings Plans usage with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code> </p> </li> <li> <p> <code>INSTANCE_FAMILY</code> </p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation.</p>
		/// GetSavingsPlansCoverage #X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansCoverage
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetSavingsPlansCoverageResponse> GetSavingsPlansCoverageAsync(string MaxResults, string NextToken, GetSavingsPlansCoverageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansCoverage?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSavingsPlansCoverageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the Savings Plans recommendations for your account. First use <code>StartSavingsPlansPurchaseRecommendationGeneration</code> to generate a new set of recommendations, and then use <code>GetSavingsPlansPurchaseRecommendation</code> to retrieve them.
		/// GetSavingsPlansPurchaseRecommendation #X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetSavingsPlansPurchaseRecommendationResponse> GetSavingsPlansPurchaseRecommendationAsync(GetSavingsPlansPurchaseRecommendationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSavingsPlansPurchaseRecommendationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity. Management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p>You can't group by any dimension values for <code>GetSavingsPlansUtilization</code>.</p> </note>
		/// GetSavingsPlansUtilization #X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetSavingsPlansUtilizationResponse> GetSavingsPlansUtilizationAsync(GetSavingsPlansUtilizationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSavingsPlansUtilizationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Retrieves attribute data along with aggregate utilization and savings data for a given time period. This doesn't support granular or grouped data (daily/monthly) in response. You can't retrieve data by dates in a single response similar to <code>GetSavingsPlanUtilization</code>, but you have the option to make multiple calls to <code>GetSavingsPlanUtilizationDetails</code> by providing individual dates. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p> <code>GetSavingsPlanUtilizationDetails</code> internally groups data by <code>SavingsPlansArn</code>.</p> </note>
		/// GetSavingsPlansUtilizationDetails #X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilizationDetails
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetSavingsPlansUtilizationDetailsResponse> GetSavingsPlansUtilizationDetailsAsync(string MaxResults, string NextToken, GetSavingsPlansUtilizationDetailsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilizationDetails?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSavingsPlansUtilizationDetailsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Queries for available tag keys and tag values for a specified period. You can search the tag values for an arbitrary string.
		/// GetTags #X-Amz-Target=AWSInsightsIndexService.GetTags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetTagsResponse> GetTagsAsync(GetTagsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetTags";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetTagsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a forecast for how much Amazon Web Services predicts that you will use over the forecast time period that you select, based on your past usage.
		/// GetUsageForecast #X-Amz-Target=AWSInsightsIndexService.GetUsageForecast
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetUsageForecastResponse> GetUsageForecastAsync(GetUsageForecastRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.GetUsageForecast";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetUsageForecastResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a list of cost allocation tags. All inputs in the API are optional and serve as filters. By default, all cost allocation tags are returned.
		/// ListCostAllocationTags #X-Amz-Target=AWSInsightsIndexService.ListCostAllocationTags
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCostAllocationTagsResponse> ListCostAllocationTagsAsync(string MaxResults, string NextToken, ListCostAllocationTagsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.ListCostAllocationTags?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListCostAllocationTagsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the name, Amazon Resource Name (ARN), <code>NumberOfRules</code> and effective dates of all Cost Categories defined in the account. You have the option to use <code>EffectiveOn</code> to return a list of Cost Categories that were active on a specific date. If there is no <code>EffectiveOn</code> specified, you’ll see Cost Categories that are effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. <code>ListCostCategoryDefinitions</code> supports pagination. The request can have a <code>MaxResults</code> range up to 100.
		/// ListCostCategoryDefinitions #X-Amz-Target=AWSInsightsIndexService.ListCostCategoryDefinitions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCostCategoryDefinitionsResponse> ListCostCategoryDefinitionsAsync(string MaxResults, string NextToken, ListCostCategoryDefinitionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.ListCostCategoryDefinitions?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListCostCategoryDefinitionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a list of your historical recommendation generations within the past 30 days.
		/// ListSavingsPlansPurchaseRecommendationGeneration #X-Amz-Target=AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListSavingsPlansPurchaseRecommendationGenerationResponse> ListSavingsPlansPurchaseRecommendationGenerationAsync(ListSavingsPlansPurchaseRecommendationGenerationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListSavingsPlansPurchaseRecommendationGenerationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of resource tags associated with the resource specified by the Amazon Resource Name (ARN).
		/// ListTagsForResource #X-Amz-Target=AWSInsightsIndexService.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.ListTagsForResource";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Modifies the feedback property of a given cost anomaly.
		/// ProvideAnomalyFeedback #X-Amz-Target=AWSInsightsIndexService.ProvideAnomalyFeedback
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ProvideAnomalyFeedbackResponse> ProvideAnomalyFeedbackAsync(ProvideAnomalyFeedbackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.ProvideAnomalyFeedback";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ProvideAnomalyFeedbackResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Requests a Savings Plans recommendation generation. This enables you to calculate a fresh set of Savings Plans recommendations that takes your latest usage data and current Savings Plans inventory into account. You can refresh Savings Plans recommendations up to three times daily for a consolidated billing family.</p> <note> <p> <code>StartSavingsPlansPurchaseRecommendationGeneration</code> has no request syntax because no input parameters are needed to support this operation.</p> </note>
		/// StartSavingsPlansPurchaseRecommendationGeneration #X-Amz-Target=AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartSavingsPlansPurchaseRecommendationGenerationResponse> StartSavingsPlansPurchaseRecommendationGenerationAsync(StartSavingsPlansPurchaseRecommendationGenerationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartSavingsPlansPurchaseRecommendationGenerationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>An API operation for adding one or more tags (key-value pairs) to a resource.</p> <p>You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value you specify replaces the previous value for that tag.</p> <p>Although the maximum number of array members is 200, user-tag maximum is 50. The remaining are reserved for Amazon Web Services use.</p>
		/// TagResource #X-Amz-Target=AWSInsightsIndexService.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.TagResource";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes one or more tags from a resource. Specify only tag keys in your request. Don't specify the value.
		/// UntagResource #X-Amz-Target=AWSInsightsIndexService.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.UntagResource";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing cost anomaly monitor. The changes made are applied going forward, and doesn't change anomalies detected in the past.
		/// UpdateAnomalyMonitor #X-Amz-Target=AWSInsightsIndexService.UpdateAnomalyMonitor
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateAnomalyMonitorResponse> UpdateAnomalyMonitorAsync(UpdateAnomalyMonitorRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.UpdateAnomalyMonitor";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAnomalyMonitorResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates an existing cost anomaly subscription. Specify the fields that you want to update. Omitted fields are unchanged.</p> <note> <p>The JSON below describes the generic construct for each type. See <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_UpdateAnomalySubscription.html#API_UpdateAnomalySubscription_RequestParameters">Request Parameters</a> for possible values as they apply to <code>AnomalySubscription</code>.</p> </note>
		/// UpdateAnomalySubscription #X-Amz-Target=AWSInsightsIndexService.UpdateAnomalySubscription
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateAnomalySubscriptionResponse> UpdateAnomalySubscriptionAsync(UpdateAnomalySubscriptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.UpdateAnomalySubscription";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAnomalySubscriptionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates status for cost allocation tags in bulk, with maximum batch size of 20. If the tag status that's updated is the same as the existing tag status, the request doesn't fail. Instead, it doesn't have any effect on the tag status (for example, activating the active tag).
		/// UpdateCostAllocationTagsStatus #X-Amz-Target=AWSInsightsIndexService.UpdateCostAllocationTagsStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateCostAllocationTagsStatusResponse> UpdateCostAllocationTagsStatusAsync(UpdateCostAllocationTagsStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.UpdateCostAllocationTagsStatus";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateCostAllocationTagsStatusResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing Cost Category. Changes made to the Cost Category rules will be used to categorize the current month’s expenses and future expenses. This won’t change categorization for the previous months.
		/// UpdateCostCategoryDefinition #X-Amz-Target=AWSInsightsIndexService.UpdateCostCategoryDefinition
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateCostCategoryDefinitionResponse> UpdateCostCategoryDefinitionAsync(UpdateCostCategoryDefinitionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSInsightsIndexService.UpdateCostCategoryDefinition";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateCostCategoryDefinitionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum CreateAnomalyMonitorX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.CreateAnomalyMonitor")]
		AWSInsightsIndexService_CreateAnomalyMonitor = 0,
	}
	
	public enum CreateAnomalySubscriptionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.CreateAnomalySubscription")]
		AWSInsightsIndexService_CreateAnomalySubscription = 0,
	}
	
	public enum CreateCostCategoryDefinitionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.CreateCostCategoryDefinition")]
		AWSInsightsIndexService_CreateCostCategoryDefinition = 0,
	}
	
	public enum DeleteAnomalyMonitorX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.DeleteAnomalyMonitor")]
		AWSInsightsIndexService_DeleteAnomalyMonitor = 0,
	}
	
	public enum DeleteAnomalySubscriptionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.DeleteAnomalySubscription")]
		AWSInsightsIndexService_DeleteAnomalySubscription = 0,
	}
	
	public enum DeleteCostCategoryDefinitionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.DeleteCostCategoryDefinition")]
		AWSInsightsIndexService_DeleteCostCategoryDefinition = 0,
	}
	
	public enum DescribeCostCategoryDefinitionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.DescribeCostCategoryDefinition")]
		AWSInsightsIndexService_DescribeCostCategoryDefinition = 0,
	}
	
	public enum GetAnomaliesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetAnomalies")]
		AWSInsightsIndexService_GetAnomalies = 0,
	}
	
	public enum GetAnomalyMonitorsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetAnomalyMonitors")]
		AWSInsightsIndexService_GetAnomalyMonitors = 0,
	}
	
	public enum GetAnomalySubscriptionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetAnomalySubscriptions")]
		AWSInsightsIndexService_GetAnomalySubscriptions = 0,
	}
	
	public enum GetCostAndUsageX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetCostAndUsage")]
		AWSInsightsIndexService_GetCostAndUsage = 0,
	}
	
	public enum GetCostAndUsageWithResourcesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetCostAndUsageWithResources")]
		AWSInsightsIndexService_GetCostAndUsageWithResources = 0,
	}
	
	public enum GetCostCategoriesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetCostCategories")]
		AWSInsightsIndexService_GetCostCategories = 0,
	}
	
	public enum GetCostForecastX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetCostForecast")]
		AWSInsightsIndexService_GetCostForecast = 0,
	}
	
	public enum GetDimensionValuesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetDimensionValues")]
		AWSInsightsIndexService_GetDimensionValues = 0,
	}
	
	public enum GetReservationCoverageX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetReservationCoverage")]
		AWSInsightsIndexService_GetReservationCoverage = 0,
	}
	
	public enum GetReservationPurchaseRecommendationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetReservationPurchaseRecommendation")]
		AWSInsightsIndexService_GetReservationPurchaseRecommendation = 0,
	}
	
	public enum GetReservationUtilizationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetReservationUtilization")]
		AWSInsightsIndexService_GetReservationUtilization = 0,
	}
	
	public enum GetRightsizingRecommendationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetRightsizingRecommendation")]
		AWSInsightsIndexService_GetRightsizingRecommendation = 0,
	}
	
	public enum GetSavingsPlanPurchaseRecommendationDetailsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetSavingsPlanPurchaseRecommendationDetails")]
		AWSInsightsIndexService_GetSavingsPlanPurchaseRecommendationDetails = 0,
	}
	
	public enum GetSavingsPlansCoverageX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetSavingsPlansCoverage")]
		AWSInsightsIndexService_GetSavingsPlansCoverage = 0,
	}
	
	public enum GetSavingsPlansPurchaseRecommendationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation")]
		AWSInsightsIndexService_GetSavingsPlansPurchaseRecommendation = 0,
	}
	
	public enum GetSavingsPlansUtilizationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetSavingsPlansUtilization")]
		AWSInsightsIndexService_GetSavingsPlansUtilization = 0,
	}
	
	public enum GetSavingsPlansUtilizationDetailsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetSavingsPlansUtilizationDetails")]
		AWSInsightsIndexService_GetSavingsPlansUtilizationDetails = 0,
	}
	
	public enum GetTagsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetTags")]
		AWSInsightsIndexService_GetTags = 0,
	}
	
	public enum GetUsageForecastX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.GetUsageForecast")]
		AWSInsightsIndexService_GetUsageForecast = 0,
	}
	
	public enum ListCostAllocationTagsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.ListCostAllocationTags")]
		AWSInsightsIndexService_ListCostAllocationTags = 0,
	}
	
	public enum ListCostCategoryDefinitionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.ListCostCategoryDefinitions")]
		AWSInsightsIndexService_ListCostCategoryDefinitions = 0,
	}
	
	public enum ListSavingsPlansPurchaseRecommendationGenerationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.ListSavingsPlansPurchaseRecommendationGeneration")]
		AWSInsightsIndexService_ListSavingsPlansPurchaseRecommendationGeneration = 0,
	}
	
	public enum ListTagsForResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.ListTagsForResource")]
		AWSInsightsIndexService_ListTagsForResource = 0,
	}
	
	public enum ProvideAnomalyFeedbackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.ProvideAnomalyFeedback")]
		AWSInsightsIndexService_ProvideAnomalyFeedback = 0,
	}
	
	public enum StartSavingsPlansPurchaseRecommendationGenerationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.StartSavingsPlansPurchaseRecommendationGeneration")]
		AWSInsightsIndexService_StartSavingsPlansPurchaseRecommendationGeneration = 0,
	}
	
	public enum TagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.TagResource")]
		AWSInsightsIndexService_TagResource = 0,
	}
	
	public enum UntagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.UntagResource")]
		AWSInsightsIndexService_UntagResource = 0,
	}
	
	public enum UpdateAnomalyMonitorX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.UpdateAnomalyMonitor")]
		AWSInsightsIndexService_UpdateAnomalyMonitor = 0,
	}
	
	public enum UpdateAnomalySubscriptionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.UpdateAnomalySubscription")]
		AWSInsightsIndexService_UpdateAnomalySubscription = 0,
	}
	
	public enum UpdateCostAllocationTagsStatusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.UpdateCostAllocationTagsStatus")]
		AWSInsightsIndexService_UpdateCostAllocationTagsStatus = 0,
	}
	
	public enum UpdateCostCategoryDefinitionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSInsightsIndexService.UpdateCostCategoryDefinition")]
		AWSInsightsIndexService_UpdateCostCategoryDefinition = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A generic alert for abusive user activity occurring with a customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AbuseDetected
	{
		
		/// <summary>
		/// EntityList stores entities in a format that can be translated to a table in the Alert Center UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalDetails")]
		public EntityList AdditionalDetails { get; set; }
		
		/// <summary>
		/// Product that the abuse is originating from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product")]
		public string Product { get; set; }
		
		/// <summary>
		/// Unique identifier of each sub alert that is onboarded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subAlertId")]
		public string SubAlertId { get; set; }
		
		/// <summary>
		/// Variation of AbuseDetected alerts. The variation_type determines the texts displayed the alert details. This differs from sub_alert_id because each sub alert can have multiple variation_types, representing different stages of the alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variationType")]
		public System.Nullable<AbuseDetectedVariationType> VariationType { get; set; }
	}
	
	/// <summary>
	/// EntityList stores entities in a format that can be translated to a table in the Alert Center UI.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityList
	{
		
		/// <summary>
		/// List of entities affected by the alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public Entity[] Entities { get; set; }
		
		/// <summary>
		/// Headers of the values in entities. If no value is defined in Entity, this field should be empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public string[] Headers { get; set; }
		
		/// <summary>
		/// Name of the key detail used to display this entity list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Individual entity affected by, or related to, an alert.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Entity
	{
		
		/// <summary>
		/// Link to a Security Investigation Tool search based on this entity, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// Human-readable name of this entity, such as an email address, file ID, or device name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra values beyond name. The order of values should align with headers in EntityList.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AbuseDetectedVariationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABUSE_DETECTED_VARIATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIVE_ABUSIVE_CONTENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIMITED_DISABLE = 2,
	}
	
	/// <summary>
	/// Alert that is triggered when Google support requests to access customer data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessApproval
	{
		
		/// <summary>
		/// Justification for data access based on justification enums.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="justificationReason")]
		public string[] JustificationReason { get; set; }
		
		/// <summary>
		/// Office location of Google staff requesting access such as "US".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="officeLocation")]
		public string OfficeLocation { get; set; }
		
		/// <summary>
		/// Products within scope of the Access Approvals request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public string[] Products { get; set; }
		
		/// <summary>
		/// ID of the Access Approvals request. This is a helpful field when requesting support from Google.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// Scope of access, also known as a resource. This is further narrowed down by the product field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public string Scope { get; set; }
		
		/// <summary>
		/// Support tickets related to this Access Approvals request. Populated if there is an associated case number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tickets")]
		public SupportTicket[] Tickets { get; set; }
	}
	
	/// <summary>
	/// Support ticket related to Access Approvals request
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SupportTicket
	{
		
		/// <summary>
		/// Support ticket ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ticketId")]
		public string TicketId { get; set; }
		
		/// <summary>
		/// Link to support ticket
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ticketUrl")]
		public string TicketUrl { get; set; }
	}
	
	/// <summary>
	/// Details about why an account is receiving an account suspension warning.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountSuspensionDetails
	{
		
		/// <summary>
		/// The reason why this account is receiving an account suspension warning.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuseReason")]
		public System.Nullable<AccountSuspensionDetailsAbuseReason> AbuseReason { get; set; }
		
		/// <summary>
		/// The name of the product being abused. This is restricted to only the following values: "Gmail" "Google Workspace" "Payments" "Voice" "YouTube" "Other"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productName")]
		public string ProductName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountSuspensionDetailsAbuseReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOS_VIOLATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPAM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHISHING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAFFIC_PUMPING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRAUD = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER_HARVESTING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYMENTS_FRAUD = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNWANTED_CONTENT = 8,
	}
	
	/// <summary>
	/// A warning that the customer's account is about to be suspended.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountSuspensionWarning
	{
		
		/// <summary>
		/// The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appealWindow")]
		public string AppealWindow { get; set; }
		
		/// <summary>
		/// Account suspension warning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<AccountSuspensionWarningState> State { get; set; }
		
		/// <summary>
		/// Details about why an account is being suspended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspensionDetails")]
		public AccountSuspensionDetails[] SuspensionDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountSuspensionWarningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPEAL_APPROVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPEAL_SUBMITTED = 4,
	}
	
	/// <summary>
	/// Alerts for user account warning events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountWarning
	{
		
		/// <summary>
		/// Required. The email of the user that this event belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The details of the login action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loginDetails")]
		public LoginDetails LoginDetails { get; set; }
	}
	
	/// <summary>
	/// The details of the login action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoginDetails
	{
		
		/// <summary>
		/// Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddress")]
		public string IpAddress { get; set; }
		
		/// <summary>
		/// Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loginTime")]
		public string LoginTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActionInfo
	{
	}
	
	/// <summary>
	/// Alerts from Google Workspace Security Center rules service configured by an admin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivityRule
	{
		
		/// <summary>
		/// List of action names associated with the rule threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actionNames")]
		public string[] ActionNames { get; set; }
		
		/// <summary>
		/// Rule create timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Alert display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Rule name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Query that is used to get the data from the associated source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// List of alert IDs superseded by this alert. It is used to indicate that this alert is essentially extension of superseded alerts and we found the relationship after creating these alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supersededAlerts")]
		public string[] SupersededAlerts { get; set; }
		
		/// <summary>
		/// Alert ID superseding this alert. It is used to indicate that superseding alert is essentially extension of this alert and we found the relationship after creating both alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supersedingAlert")]
		public string SupersedingAlert { get; set; }
		
		/// <summary>
		/// Alert threshold is for example “COUNT > 5”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="threshold")]
		public string Threshold { get; set; }
		
		/// <summary>
		/// The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS * USER_EVENTS
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggerSource")]
		public string TriggerSource { get; set; }
		
		/// <summary>
		/// The timestamp of the last update to the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Rule window size. Possible values are 1 hour or 24 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowSize")]
		public string WindowSize { get; set; }
	}
	
	/// <summary>
	/// An alert affecting a customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Alert
	{
		
		/// <summary>
		/// Output only. The unique identifier for the alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertId")]
		public string AlertId { get; set; }
		
		/// <summary>
		/// Output only. The time this alert was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The unique identifier of the Google Workspace account of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public System.Collections.Generic.Dictionary<string, object> Data { get; set; }
		
		/// <summary>
		/// Output only. `True` if this alert is marked for deletion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// An alert metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public AlertMetadata Metadata { get; set; }
		
		/// <summary>
		/// Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityInvestigationToolLink")]
		public string SecurityInvestigationToolLink { get; set; }
		
		/// <summary>
		/// Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity * Apps outage
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Required. The time the event that caused this alert was started or detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Output only. The time this alert was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// An alert metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlertMetadata
	{
		
		/// <summary>
		/// Output only. The alert identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertId")]
		public string AlertId { get; set; }
		
		/// <summary>
		/// The email address of the user assigned to the alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// Output only. The unique identifier of the Google Workspace account of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metadata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public string Severity { get; set; }
		
		/// <summary>
		/// The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Output only. The time this metadata was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A customer feedback about an alert.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlertFeedback
	{
		
		/// <summary>
		/// Output only. The alert identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertId")]
		public string AlertId { get; set; }
		
		/// <summary>
		/// Output only. The time this feedback was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The unique identifier of the Google Workspace account of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// Output only. The email of the user that provided the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Output only. The unique identifier for the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedbackId")]
		public string FeedbackId { get; set; }
		
		/// <summary>
		/// Required. The type of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AlertFeedbackType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlertFeedbackType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALERT_FEEDBACK_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_USEFUL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOMEWHAT_USEFUL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERY_USEFUL = 3,
	}
	
	/// <summary>
	/// The explanation message associated with "APNS certificate is expiring soon" and "APNS certificate has expired" alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApnsCertificateExpirationInfo
	{
		
		/// <summary>
		/// The Apple ID used to create the certificate. It may be blank if admins didn't enter it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appleId")]
		public string AppleId { get; set; }
		
		/// <summary>
		/// The expiration date of the APNS certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationTime")]
		public string ExpirationTime { get; set; }
		
		/// <summary>
		/// The UID of the certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// Alerts from App Maker to notify admins to set up default SQL instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppMakerSqlSetupNotification
	{
		
		/// <summary>
		/// List of applications with requests for default SQL set up.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestInfo")]
		public RequestInfo[] RequestInfo { get; set; }
	}
	
	/// <summary>
	/// Requests for one application that needs default SQL setup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequestInfo
	{
		
		/// <summary>
		/// List of app developers who triggered notifications for above application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appDeveloperEmail")]
		public string[] AppDeveloperEmail { get; set; }
		
		/// <summary>
		/// Required. The application that requires the SQL setup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appKey")]
		public string AppKey { get; set; }
		
		/// <summary>
		/// Required. Number of requests sent for this application to set up default SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberOfRequests")]
		public string NumberOfRequests { get; set; }
	}
	
	/// <summary>
	/// Alerts from AppSettingsChanged bucket Rules configured by Admin which contain the below rules. Calendar settings changed Drive settings changed Email settings changed Mobile settings changed
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppSettingsChanged
	{
		
		/// <summary>
		/// Any other associated alert details, for example, AlertConfiguration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertDetails")]
		public string AlertDetails { get; set; }
		
		/// <summary>
		/// Rule name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An outage incident reported for a Google Workspace service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppsOutage
	{
		
		/// <summary>
		/// Link to the outage event in Google Workspace Status Dashboard
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dashboardUri")]
		public string DashboardUri { get; set; }
		
		/// <summary>
		/// Incident tracking ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="incidentTrackingId")]
		public string IncidentTrackingId { get; set; }
		
		/// <summary>
		/// New alert tracking numbers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mergeInfo")]
		public MergeInfo MergeInfo { get; set; }
		
		/// <summary>
		/// Timestamp by which the next update is expected to arrive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextUpdateTime")]
		public string NextUpdateTime { get; set; }
		
		/// <summary>
		/// List of products impacted by the outage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public string[] Products { get; set; }
		
		/// <summary>
		/// Timestamp when the outage is expected to be resolved, or has confirmed resolution. Provided only when known.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resolutionTime")]
		public string ResolutionTime { get; set; }
		
		/// <summary>
		/// Current outage status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<AppsOutageStatus> Status { get; set; }
	}
	
	/// <summary>
	/// New alert tracking numbers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MergeInfo
	{
		
		/// <summary>
		/// Optional. New alert ID. Reference the [google.apps.alertcenter.Alert] with this ID for the current state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newAlertId")]
		public string NewAlertId { get; set; }
		
		/// <summary>
		/// The new tracking ID from the parent incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newIncidentTrackingId")]
		public string NewIncidentTrackingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppsOutageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONGOING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FALSE_POSITIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIALLY_RESOLVED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MERGED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOWNGRADED = 7,
	}
	
	/// <summary>
	/// Attachment with application-specific information about an alert.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attachment
	{
		
		/// <summary>
		/// A representation of a CSV file attachment, as a list of column headers and a list of data rows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csv")]
		public Csv Csv { get; set; }
	}
	
	/// <summary>
	/// A representation of a CSV file attachment, as a list of column headers and a list of data rows.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Csv
	{
		
		/// <summary>
		/// The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataRows")]
		public CsvRow[] DataRows { get; set; }
		
		/// <summary>
		/// The list of headers for data columns in a CSV file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headers")]
		public string[] Headers { get; set; }
	}
	
	/// <summary>
	/// A representation of a single data row in a CSV file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CsvRow
	{
		
		/// <summary>
		/// The data entries in a CSV file row, as a string array rather than a single comma-separated string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entries")]
		public string[] Entries { get; set; }
	}
	
	/// <summary>
	/// Alert for setting the domain or IP that malicious email comes from as whitelisted domain or IP in Gmail advanced settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadWhitelist
	{
		
		/// <summary>
		/// Domain ID of Gmail phishing alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domainId")]
		public DomainId DomainId { get; set; }
		
		/// <summary>
		/// Entity whose actions triggered a Gmail phishing alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maliciousEntity")]
		public MaliciousEntity MaliciousEntity { get; set; }
		
		/// <summary>
		/// The list of messages contained by this alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public GmailMessageInfo[] Messages { get; set; }
		
		/// <summary>
		/// The source IP address of the malicious email, for example, `127.0.0.1`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceIp")]
		public string SourceIp { get; set; }
	}
	
	/// <summary>
	/// Domain ID of Gmail phishing alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainId
	{
		
		/// <summary>
		/// The primary domain for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerPrimaryDomain")]
		public string CustomerPrimaryDomain { get; set; }
	}
	
	/// <summary>
	/// Entity whose actions triggered a Gmail phishing alert.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MaliciousEntity
	{
		
		/// <summary>
		/// The header from display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity")]
		public User Entity { get; set; }
		
		/// <summary>
		/// The sender email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromHeader")]
		public string FromHeader { get; set; }
	}
	
	/// <summary>
	/// A user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		/// <summary>
		/// Display name of the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Email address of the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailAddress")]
		public string EmailAddress { get; set; }
	}
	
	/// <summary>
	/// Details of a message in phishing spike alert.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GmailMessageInfo
	{
		
		/// <summary>
		/// The `SHA256` hash of email's attachment and all MIME parts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachmentsSha256Hash")]
		public string[] AttachmentsSha256Hash { get; set; }
		
		/// <summary>
		/// The date of the event related to this email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// The hash of the message body text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="md5HashMessageBody")]
		public string Md5HashMessageBody { get; set; }
		
		/// <summary>
		/// The MD5 Hash of email's subject (only available for reported emails).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="md5HashSubject")]
		public string Md5HashSubject { get; set; }
		
		/// <summary>
		/// The snippet of the message body text (only available for reported emails).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageBodySnippet")]
		public string MessageBodySnippet { get; set; }
		
		/// <summary>
		/// The message ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageId")]
		public string MessageId { get; set; }
		
		/// <summary>
		/// The recipient of this email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient")]
		public string Recipient { get; set; }
		
		/// <summary>
		/// The sent time of the email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentTime")]
		public string SentTime { get; set; }
		
		/// <summary>
		/// The email subject text (only available for reported emails).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subjectText")]
		public string SubjectText { get; set; }
	}
	
	/// <summary>
	/// A request to perform batch delete on alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteAlertsRequest
	{
		
		/// <summary>
		/// Required. The list of alert IDs to delete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertId")]
		public string[] AlertId { get; set; }
		
		/// <summary>
		/// Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
	}
	
	/// <summary>
	/// Response to batch delete operation on alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDeleteAlertsResponse
	{
		
		/// <summary>
		/// The status details for each failed `alert_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedAlertStatus")]
		public System.Collections.Generic.Dictionary<string, Status> FailedAlertStatus { get; set; }
		
		/// <summary>
		/// The successful list of alert IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successAlertIds")]
		public string[] SuccessAlertIds { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// A request to perform batch undelete on alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchUndeleteAlertsRequest
	{
		
		/// <summary>
		/// Required. The list of alert IDs to undelete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertId")]
		public string[] AlertId { get; set; }
		
		/// <summary>
		/// Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
	}
	
	/// <summary>
	/// Response to batch undelete operation on alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchUndeleteAlertsResponse
	{
		
		/// <summary>
		/// The status details for each failed `alert_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedAlertStatus")]
		public System.Collections.Generic.Dictionary<string, Status> FailedAlertStatus { get; set; }
		
		/// <summary>
		/// The successful list of alert IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successAlertIds")]
		public string[] SuccessAlertIds { get; set; }
	}
	
	/// <summary>
	/// A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudPubsubTopic
	{
		
		/// <summary>
		/// Optional. The format of the payload that would be sent. If not specified the format will be JSON.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payloadFormat")]
		public System.Nullable<CloudPubsubTopicPayloadFormat> PayloadFormat { get; set; }
		
		/// <summary>
		/// The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topicName")]
		public string TopicName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CloudPubsubTopicPayloadFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAYLOAD_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 1,
	}
	
	/// <summary>
	/// A mobile device compromised alert. Derived from audit logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceCompromised
	{
		
		/// <summary>
		/// The email of the user this alert was created for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required. The list of security events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public DeviceCompromisedSecurityDetail[] Events { get; set; }
	}
	
	/// <summary>
	/// Detailed information of a single MDM device compromised event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceCompromisedSecurityDetail
	{
		
		/// <summary>
		/// The device compromised state. Possible values are "`Compromised`" or "`Not Compromised`".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceCompromisedState")]
		public string DeviceCompromisedState { get; set; }
		
		/// <summary>
		/// Required. The device ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceId")]
		public string DeviceId { get; set; }
		
		/// <summary>
		/// The model of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceModel")]
		public string DeviceModel { get; set; }
		
		/// <summary>
		/// The type of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public string DeviceType { get; set; }
		
		/// <summary>
		/// Required for iOS, empty for others.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iosVendorId")]
		public string IosVendorId { get; set; }
		
		/// <summary>
		/// The device resource ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceId")]
		public string ResourceId { get; set; }
		
		/// <summary>
		/// The serial number of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
	}
	
	/// <summary>
	/// Alerts that get triggered on violations of Data Loss Prevention (DLP) rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DlpRuleViolation
	{
		
		/// <summary>
		/// Common alert information about violated rules that are configured by Google Workspace administrators.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleViolationInfo")]
		public RuleViolationInfo RuleViolationInfo { get; set; }
	}
	
	/// <summary>
	/// Common alert information about violated rules that are configured by Google Workspace administrators.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuleViolationInfo
	{
		
		/// <summary>
		/// Source of the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSource")]
		public System.Nullable<RuleViolationInfoDataSource> DataSource { get; set; }
		
		/// <summary>
		/// List of matches that were found in the resource content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchInfo")]
		public MatchInfo[] MatchInfo { get; set; }
		
		/// <summary>
		/// Resource recipients. For Drive, they are grantees that the Drive file was shared with at the time of rule triggering. Valid values include user emails, group emails, domains, or 'anyone' if the file was publicly accessible. If the file was private the recipients list will be empty. For Gmail, they are emails of the users or groups that the Gmail message was sent to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public string[] Recipients { get; set; }
		
		/// <summary>
		/// Proto that contains resource information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceInfo")]
		public ResourceInfo ResourceInfo { get; set; }
		
		/// <summary>
		/// Proto that contains rule information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleInfo")]
		public RuleInfo RuleInfo { get; set; }
		
		/// <summary>
		/// Actions suppressed due to other actions with higher priority.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suppressedActionTypes")]
		public string[] SuppressedActionTypes { get; set; }
		
		/// <summary>
		/// Trigger of the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger")]
		public System.Nullable<RuleViolationInfoTrigger> Trigger { get; set; }
		
		/// <summary>
		/// Metadata related to the triggered actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggeredActionInfo")]
		public ActionInfo[] TriggeredActionInfo { get; set; }
		
		/// <summary>
		/// Actions applied as a consequence of the rule being triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggeredActionTypes")]
		public string[] TriggeredActionTypes { get; set; }
		
		/// <summary>
		/// Email of the user who caused the violation. Value could be empty if not applicable, for example, a violation found by drive continuous scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggeringUserEmail")]
		public string TriggeringUserEmail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RuleViolationInfoDataSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_SOURCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIVE = 1,
	}
	
	/// <summary>
	/// Proto that contains match information from the condition part of the rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MatchInfo
	{
		
		/// <summary>
		/// Detector provided by Google.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predefinedDetector")]
		public PredefinedDetectorInfo PredefinedDetector { get; set; }
		
		/// <summary>
		/// Detector defined by administrators.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userDefinedDetector")]
		public UserDefinedDetectorInfo UserDefinedDetector { get; set; }
	}
	
	/// <summary>
	/// Detector provided by Google.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PredefinedDetectorInfo
	{
		
		/// <summary>
		/// Name that uniquely identifies the detector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectorName")]
		public string DetectorName { get; set; }
	}
	
	/// <summary>
	/// Detector defined by administrators.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserDefinedDetectorInfo
	{
		
		/// <summary>
		/// Display name of the detector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name that uniquely identifies the detector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
	}
	
	/// <summary>
	/// Proto that contains resource information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInfo
	{
		
		/// <summary>
		/// Drive file ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentId")]
		public string DocumentId { get; set; }
		
		/// <summary>
		/// Title of the resource, for example email subject, or document title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceTitle")]
		public string ResourceTitle { get; set; }
	}
	
	/// <summary>
	/// Proto that contains rule information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuleInfo
	{
		
		/// <summary>
		/// User provided name of the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name that uniquely identifies the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RuleViolationInfoTrigger
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIGGER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIVE_SHARE = 1,
	}
	
	/// <summary>
	/// A takeout operation for the entire domain was initiated by an admin. Derived from audit logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainWideTakeoutInitiated
	{
		
		/// <summary>
		/// The email of the admin who initiated the takeout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The takeout request ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="takeoutRequestId")]
		public string TakeoutRequestId { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// An incident reported by Google Operations for a Google Workspace application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleOperations
	{
		
		/// <summary>
		/// The list of emails which correspond to the users directly affected by the incident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="affectedUserEmails")]
		public string[] AffectedUserEmails { get; set; }
		
		/// <summary>
		/// Attachment with application-specific information about an alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachmentData")]
		public Attachment AttachmentData { get; set; }
		
		/// <summary>
		/// A detailed, freeform incident description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Customer domain for email template personalization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// A header to display above the incident message. Typically used to attach a localized notice on the timeline for followup comms translations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public string Header { get; set; }
		
		/// <summary>
		/// A one-line incident description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Response message for an alert feedback listing request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlertFeedbackResponse
	{
		
		/// <summary>
		/// The list of alert feedback. Feedback entries for each alert are ordered by creation time descending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedback")]
		public AlertFeedback[] Feedback { get; set; }
	}
	
	/// <summary>
	/// Response message for an alert listing request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlertsResponse
	{
		
		/// <summary>
		/// The list of alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alerts")]
		public Alert[] Alerts { get; set; }
		
		/// <summary>
		/// The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Proto for all phishing alerts with common payload. Supported types are any of the following: * User reported phishing * User reported spam spike * Suspicious message reported * Phishing reclassification * Malware reclassification * Gmail potential employee spoofing
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MailPhishing
	{
		
		/// <summary>
		/// Domain ID of Gmail phishing alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domainId")]
		public DomainId DomainId { get; set; }
		
		/// <summary>
		/// If `true`, the email originated from within the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isInternal")]
		public System.Nullable<System.Boolean> IsInternal { get; set; }
		
		/// <summary>
		/// Entity whose actions triggered a Gmail phishing alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maliciousEntity")]
		public MaliciousEntity MaliciousEntity { get; set; }
		
		/// <summary>
		/// The list of messages contained by this alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public GmailMessageInfo[] Messages { get; set; }
		
		/// <summary>
		/// System actions on the messages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="systemActionType")]
		public System.Nullable<MailPhishingSystemActionType> SystemActionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MailPhishingSystemActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM_ACTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_OPERATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED_FROM_INBOX = 2,
	}
	
	/// <summary>
	/// Alert Created by the MSA team for communications necessary for continued use of Google Workspace Products.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MandatoryServiceAnnouncement
	{
		
		/// <summary>
		/// Detailed, freeform text describing the announcement
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// One line summary of the announcement
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Settings for callback notifications. For more details see [Google Workspace Alert Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Notification
	{
		
		/// <summary>
		/// A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudPubsubTopic")]
		public CloudPubsubTopic CloudPubsubTopic { get; set; }
	}
	
	/// <summary>
	/// Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhishingSpike
	{
		
		/// <summary>
		/// Domain ID of Gmail phishing alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domainId")]
		public DomainId DomainId { get; set; }
		
		/// <summary>
		/// If `true`, the email originated from within the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isInternal")]
		public System.Nullable<System.Boolean> IsInternal { get; set; }
		
		/// <summary>
		/// Entity whose actions triggered a Gmail phishing alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maliciousEntity")]
		public MaliciousEntity MaliciousEntity { get; set; }
		
		/// <summary>
		/// The list of messages contained by this alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public GmailMessageInfo[] Messages { get; set; }
	}
	
	/// <summary>
	/// Event occurred when primary admin changed in customer's account. The event are being received from insight forwarder
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrimaryAdminChangedEvent
	{
		
		/// <summary>
		/// domain in which actioned occurred
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// Email of person who was the primary admin before the action
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousAdminEmail")]
		public string PreviousAdminEmail { get; set; }
		
		/// <summary>
		/// Email of person who is the primary admin after the action
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedAdminEmail")]
		public string UpdatedAdminEmail { get; set; }
	}
	
	/// <summary>
	/// Alerts from Reporting Rules configured by Admin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportingRule
	{
		
		/// <summary>
		/// Any other associated alert details, for example, AlertConfiguration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertDetails")]
		public string AlertDetails { get; set; }
		
		/// <summary>
		/// Rule name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Alert Rule query Sample Query query { condition { filter { expected_application_id: 777491262838 expected_event_name: "indexable_content_change" filter_op: IN } } conjunction_operator: OR }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
	}
	
	/// <summary>
	/// Event occurred when SSO Profile created in customer's account. The event are being received from insight forwarder
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SSOProfileCreatedEvent
	{
		
		/// <summary>
		/// sso profile name which got created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSsoProfileName")]
		public string InboundSsoProfileName { get; set; }
	}
	
	/// <summary>
	/// Event occurred when SSO Profile deleted in customer's account. The event are being received from insight forwarder
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SSOProfileDeletedEvent
	{
		
		/// <summary>
		/// sso profile name which got deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSsoProfileName")]
		public string InboundSsoProfileName { get; set; }
	}
	
	/// <summary>
	/// Event occurred when SSO Profile updated in customer's account. The event are being received from insight forwarder
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SSOProfileUpdatedEvent
	{
		
		/// <summary>
		/// changes made to sso profile
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSsoProfileChanges")]
		public string InboundSsoProfileChanges { get; set; }
		
		/// <summary>
		/// sso profile name which got updated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSsoProfileName")]
		public string InboundSsoProfileName { get; set; }
	}
	
	/// <summary>
	/// Alert that is triggered when Sensitive Admin Action occur in customer account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SensitiveAdminAction
	{
		
		/// <summary>
		/// Email of person who performed the action
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actorEmail")]
		public string ActorEmail { get; set; }
		
		/// <summary>
		/// The time at which event occurred
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// Event occurred when primary admin changed in customer's account. The event are being received from insight forwarder
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryAdminChangedEvent")]
		public PrimaryAdminChangedEvent PrimaryAdminChangedEvent { get; set; }
		
		/// <summary>
		/// Event occurred when SSO Profile created in customer's account. The event are being received from insight forwarder
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssoProfileCreatedEvent")]
		public SSOProfileCreatedEvent SsoProfileCreatedEvent { get; set; }
		
		/// <summary>
		/// Event occurred when SSO Profile deleted in customer's account. The event are being received from insight forwarder
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssoProfileDeletedEvent")]
		public SSOProfileDeletedEvent SsoProfileDeletedEvent { get; set; }
		
		/// <summary>
		/// Event occurred when SSO Profile updated in customer's account. The event are being received from insight forwarder
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssoProfileUpdatedEvent")]
		public SSOProfileUpdatedEvent SsoProfileUpdatedEvent { get; set; }
		
		/// <summary>
		/// Event occurred when password was reset for super admin in customer's account. The event are being received from insight forwarder
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="superAdminPasswordResetEvent")]
		public SuperAdminPasswordResetEvent SuperAdminPasswordResetEvent { get; set; }
	}
	
	/// <summary>
	/// Event occurred when password was reset for super admin in customer's account. The event are being received from insight forwarder
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuperAdminPasswordResetEvent
	{
		
		/// <summary>
		/// email of person whose password was reset
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEmail")]
		public string UserEmail { get; set; }
	}
	
	/// <summary>
	/// Customer-level settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Settings
	{
		
		/// <summary>
		/// The list of notifications.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notifications")]
		public Notification[] Notifications { get; set; }
	}
	
	/// <summary>
	/// A state-sponsored attack alert. Derived from audit logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StateSponsoredAttack
	{
		
		/// <summary>
		/// The email of the user this incident was created for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
	}
	
	/// <summary>
	/// A mobile suspicious activity alert. Derived from audit logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuspiciousActivity
	{
		
		/// <summary>
		/// The email of the user this alert was created for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required. The list of security events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public SuspiciousActivitySecurityDetail[] Events { get; set; }
	}
	
	/// <summary>
	/// Detailed information of a single MDM suspicious activity event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuspiciousActivitySecurityDetail
	{
		
		/// <summary>
		/// Required. The device ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceId")]
		public string DeviceId { get; set; }
		
		/// <summary>
		/// The model of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceModel")]
		public string DeviceModel { get; set; }
		
		/// <summary>
		/// The device property which was changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceProperty")]
		public string DeviceProperty { get; set; }
		
		/// <summary>
		/// The type of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public string DeviceType { get; set; }
		
		/// <summary>
		/// Required for iOS, empty for others.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iosVendorId")]
		public string IosVendorId { get; set; }
		
		/// <summary>
		/// The new value of the device property after the change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newValue")]
		public string NewValue { get; set; }
		
		/// <summary>
		/// The old value of the device property before the change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldValue")]
		public string OldValue { get; set; }
		
		/// <summary>
		/// The device resource ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceId")]
		public string ResourceId { get; set; }
		
		/// <summary>
		/// The serial number of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
	}
	
	/// <summary>
	/// Details for an invalid transfer or forward.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferError
	{
		
		/// <summary>
		/// User's email address. This may be unavailable if the entity was deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Type of entity being transferred to. For ring group members, this should always be USER.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityType")]
		public System.Nullable<TransferErrorEntityType> EntityType { get; set; }
		
		/// <summary>
		/// Ring group or auto attendant ID. Not set for users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Reason for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidReason")]
		public System.Nullable<TransferErrorInvalidReason> InvalidReason { get; set; }
		
		/// <summary>
		/// User's full name, or the ring group / auto attendant name. This may be unavailable if the entity was deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferErrorEntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_ENTITY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_AUTO_ATTENDANT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_RING_GROUP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_USER = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TransferErrorInvalidReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_INVALID_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER_TARGET_DELETED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNLICENSED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_PHONE_NUMBER = 4,
	}
	
	/// <summary>
	/// Error related to transferring or forwarding a phone call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferMisconfiguration
	{
		
		/// <summary>
		/// Details for each invalid transfer or forward.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public TransferError[] Errors { get; set; }
	}
	
	/// <summary>
	/// A request to undelete a specific alert that was marked for deletion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UndeleteAlertRequest
	{
		
		/// <summary>
		/// Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
	}
	
	/// <summary>
	/// Alerts from UserChanges bucket Rules for predefined rules which contain the below rules. Suspended user made active New user Added User suspended (by admin) User granted admin privileges User admin privileges revoked User deleted Users password changed
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserChanges
	{
		
		/// <summary>
		/// Rule name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An alert triggered when Google Voice configuration becomes invalid, generally due to an external entity being modified or deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceMisconfiguration
	{
		
		/// <summary>
		/// Name of the entity whose configuration is now invalid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityName")]
		public string EntityName { get; set; }
		
		/// <summary>
		/// Type of the entity whose configuration is now invalid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityType")]
		public System.Nullable<VoiceMisconfigurationEntityType> EntityType { get; set; }
		
		/// <summary>
		/// Link that the admin can follow to fix the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixUri")]
		public string FixUri { get; set; }
		
		/// <summary>
		/// Error related to transferring or forwarding a phone call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="membersMisconfiguration")]
		public TransferMisconfiguration MembersMisconfiguration { get; set; }
		
		/// <summary>
		/// Error related to transferring or forwarding a phone call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transferMisconfiguration")]
		public TransferMisconfiguration TransferMisconfiguration { get; set; }
		
		/// <summary>
		/// Issue(s) with sending to voicemail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voicemailMisconfiguration")]
		public VoicemailMisconfiguration VoicemailMisconfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VoiceMisconfigurationEntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTITY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO_ATTENDANT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RING_GROUP = 2,
	}
	
	/// <summary>
	/// Issue(s) with sending to voicemail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoicemailMisconfiguration
	{
		
		/// <summary>
		/// Issue(s) with voicemail recipients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public VoicemailRecipientError[] Errors { get; set; }
	}
	
	/// <summary>
	/// Issue(s) with a voicemail recipient.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoicemailRecipientError
	{
		
		/// <summary>
		/// Email address of the invalid recipient. This may be unavailable if the recipient was deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Reason for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidReason")]
		public System.Nullable<VoicemailRecipientErrorInvalidReason> InvalidReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VoicemailRecipientErrorInvalidReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_INVALID_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUT_OF_QUOTA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECIPIENT_DELETED = 2,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists the alerts.
		/// Alertcenter_alerts_list v1beta1/alerts
		/// </summary>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alerts are associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <param name="filter">Optional. A query string for filtering alert results. For more details, see [Query filters](https://developers.google.com/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](https://developers.google.com/admin-sdk/alertcenter/reference/filter-fields#alerts.list).</param>
		/// <param name="orderBy">Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using `order_by="create_time desc"`. Currently, supported sorting are `create_time asc`, `create_time desc`, `update_time desc`</param>
		/// <param name="pageSize">Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default.</param>
		/// <param name="pageToken">Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAlertsResponse> Alertcenter_alerts_listAsync(string customerId, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts?customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAlertsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.
		/// Alertcenter_alerts_delete v1beta1/alerts/{alertId}
		/// </summary>
		/// <param name="alertId">Required. The identifier of the alert to delete.</param>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Alertcenter_alerts_deleteAsync(string alertId, string customerId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts/"+ (alertId==null? "" : System.Uri.EscapeDataString(alertId))+"&customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Empty>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.
		/// Alertcenter_alerts_get v1beta1/alerts/{alertId}
		/// </summary>
		/// <param name="alertId">Required. The identifier of the alert to retrieve.</param>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <returns>Successful response</returns>
		public async Task<Alert> Alertcenter_alerts_getAsync(string alertId, string customerId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts/"+ (alertId==null? "" : System.Uri.EscapeDataString(alertId))+"&customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Alert>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.
		/// Alertcenter_alerts_feedback_list v1beta1/alerts/{alertId}/feedback
		/// </summary>
		/// <param name="alertId">Required. The alert identifier. The "-" wildcard could be used to represent all alerts.</param>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <param name="filter">Optional. A query string for filtering alert feedback results. For more details, see [Query filters](https://developers.google.com/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](https://developers.google.com/admin-sdk/alertcenter/reference/filter-fields#alerts.feedback.list).</param>
		/// <returns>Successful response</returns>
		public async Task<ListAlertFeedbackResponse> Alertcenter_alerts_feedback_listAsync(string alertId, string customerId, string filter, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts/"+ (alertId==null? "" : System.Uri.EscapeDataString(alertId))+"/feedback&customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAlertFeedbackResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.
		/// Alertcenter_alerts_feedback_create v1beta1/alerts/{alertId}/feedback
		/// </summary>
		/// <param name="alertId">Required. The identifier of the alert this feedback belongs to.</param>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert is associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <returns>Successful response</returns>
		public async Task<AlertFeedback> Alertcenter_alerts_feedback_createAsync(string alertId, string customerId, AlertFeedback requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts/"+ (alertId==null? "" : System.Uri.EscapeDataString(alertId))+"/feedback&customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AlertFeedback>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error.
		/// Alertcenter_alerts_getMetadata v1beta1/alerts/{alertId}/metadata
		/// </summary>
		/// <param name="alertId">Required. The identifier of the alert this metadata belongs to.</param>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert metadata is associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <returns>Successful response</returns>
		public async Task<AlertMetadata> Alertcenter_alerts_getMetadataAsync(string alertId, string customerId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts/"+ (alertId==null? "" : System.Uri.EscapeDataString(alertId))+"/metadata&customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AlertMetadata>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Restores, or "undeletes", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.
		/// Alertcenter_alerts_undelete v1beta1/alerts/{alertId}:undelete
		/// </summary>
		/// <param name="alertId">Required. The identifier of the alert to undelete.</param>
		/// <returns>Successful response</returns>
		public async Task<Alert> Alertcenter_alerts_undeleteAsync(string alertId, UndeleteAlertRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts/"+ (alertId==null? "" : System.Uri.EscapeDataString(alertId))+":undelete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Alert>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Performs batch delete operation on alerts.
		/// Alertcenter_alerts_batchDelete v1beta1/alerts:batchDelete
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<BatchDeleteAlertsResponse> Alertcenter_alerts_batchDeleteAsync(BatchDeleteAlertsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts:batchDelete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BatchDeleteAlertsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Performs batch undelete operation on alerts.
		/// Alertcenter_alerts_batchUndelete v1beta1/alerts:batchUndelete
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<BatchUndeleteAlertsResponse> Alertcenter_alerts_batchUndeleteAsync(BatchUndeleteAlertsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/alerts:batchUndelete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BatchUndeleteAlertsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns customer-level settings.
		/// Alertcenter_getSettings v1beta1/settings
		/// </summary>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The `customer_id` must/ have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <returns>Successful response</returns>
		public async Task<Settings> Alertcenter_getSettingsAsync(string customerId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/settings?customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Settings>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the customer-level settings.
		/// Alertcenter_updateSettings v1beta1/settings
		/// </summary>
		/// <param name="customerId">Optional. The unique identifier of the Google Workspace account of the customer the alert settings are associated with. The `customer_id` must have the initial "C" stripped (for example, `046psxkn`). Inferred from the caller identity if not provided. [Find your customer ID](https://support.google.com/cloudidentity/answer/10070793).</param>
		/// <returns>Successful response</returns>
		public async Task<Settings> Alertcenter_updateSettingsAsync(string customerId, Settings requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/settings?customerId=" + (customerId==null? "" : System.Uri.EscapeDataString(customerId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Settings>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

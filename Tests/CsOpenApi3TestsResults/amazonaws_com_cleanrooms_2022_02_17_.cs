//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetCollaborationAnalysisTemplateOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationAnalysisTemplates")]
		public CollaborationAnalysisTemplate[] CollaborationAnalysisTemplates { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public BatchGetCollaborationAnalysisTemplateError[] Errors { get; set; }
	}
	
	/// <summary>
	/// The analysis template within a collaboration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollaborationAnalysisTemplate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorAccountId")]
		public string CreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public AnalysisSchema Schema { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="format")]
		public AnalysisFormat Format { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public AnalysisSource Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisParameters")]
		public AnalysisParameter[] AnalysisParameters { get; set; }
	}
	
	/// <summary>
	/// A relation within an analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSchema
	{
		
		[System.Runtime.Serialization.DataMember(Name="referencedTables")]
		public string[] ReferencedTables { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL = 0,
	}
	
	/// <summary>
	/// The structure that defines the body of the analysis template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisSource
	{
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Optional. The member who can query can provide this placeholder for a literal data value in an analysis template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisParameter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public ParameterType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMALLINT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIGINT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECIMAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOUBLE_PRECISION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHAR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VARCHAR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMESTAMP = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMESTAMPTZ = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMETZ = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VARBYTE = 14,
	}
	
	/// <summary>
	/// Details of errors thrown by the call to retrieve multiple analysis templates within a collaboration by their identifiers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetCollaborationAnalysisTemplateError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetSchemaOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schemas")]
		public Schema[] Schemas { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public BatchGetSchemaError[] Errors { get; set; }
	}
	
	/// <summary>
	/// A schema is a relation within a collaboration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Schema
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="columns")]
		public Column[] Columns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="partitionKeys")]
		public Column[] PartitionKeys { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRuleTypes")]
		public AnalysisRuleType[] AnalysisRuleTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisMethod")]
		public AnalysisMethod AnalysisMethod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorAccountId")]
		public string CreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public SchemaType Type { get; set; }
	}
	
	/// <summary>
	/// A column within a schema relation, derived from the underlying Glue table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Column
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisRuleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGGREGATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_QUERY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SchemaType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TABLE = 0,
	}
	
	/// <summary>
	/// An error describing why a schema could not be fetched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetSchemaError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnalysisTemplateOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisTemplate")]
		public AnalysisTemplate AnalysisTemplate { get; set; }
	}
	
	/// <summary>
	/// The analysis template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisTemplate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public AnalysisSchema Schema { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="format")]
		public AnalysisFormat Format { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public AnalysisSource Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisParameters")]
		public AnalysisParameter[] AnalysisParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCollaborationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaboration")]
		public Collaboration Collaboration { get; set; }
	}
	
	/// <summary>
	/// The multi-party data share environment. The collaboration contains metadata about its purpose and participants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Collaboration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorAccountId")]
		public string CreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorDisplayName")]
		public string CreatorDisplayName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="memberStatus")]
		public MemberStatus MemberStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataEncryptionMetadata")]
		public DataEncryptionMetadata DataEncryptionMetadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MemberStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVITED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEFT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 3,
	}
	
	/// <summary>
	/// The settings for client-side encryption for cryptographic computing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataEncryptionMetadata
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowCleartext")]
		public bool AllowCleartext { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowDuplicates")]
		public bool AllowDuplicates { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowJoinsOnColumnsWithDifferentNames")]
		public bool AllowJoinsOnColumnsWithDifferentNames { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="preserveNulls")]
		public bool PreserveNulls { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CollaborationQueryLogStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Basic metadata used to construct a new member.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="memberAbilities")]
		public MemberAbility[] MemberAbilities { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MemberAbility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAN_QUERY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAN_RECEIVE_RESULTS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfiguredTableOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTable")]
		public ConfiguredTable ConfiguredTable { get; set; }
	}
	
	/// <summary>
	/// A table that has been configured for use in a collaboration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTable
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tableReference")]
		public TableReference TableReference { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRuleTypes")]
		public ConfiguredTableAnalysisRuleType[] AnalysisRuleTypes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisMethod")]
		public AnalysisMethod AnalysisMethod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowedColumns")]
		public string[] AllowedColumns { get; set; }
	}
	
	/// <summary>
	/// A pointer to the dataset that underlies this table. Currently, this can only be an Glue table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TableReference
	{
		
		[System.Runtime.Serialization.DataMember(Name="glue")]
		public GlueTableReference Glue { get; set; }
	}
	
	/// <summary>
	/// A reference to a table within an Glue data catalog.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlueTableReference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tableName")]
		public string TableName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="databaseName")]
		public string DatabaseName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfiguredTableAnalysisRuleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGGREGATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfiguredTableAnalysisRuleOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRule")]
		public ConfiguredTableAnalysisRule AnalysisRule { get; set; }
	}
	
	/// <summary>
	/// A configured table analysis rule, which limits how data for this table can be used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTableAnalysisRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableId")]
		public string ConfiguredTableId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableArn")]
		public string ConfiguredTableArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public ConfiguredTableAnalysisRulePolicy Policy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AnalysisRuleType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Controls on the query specifications that can be run on a configured table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTableAnalysisRulePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="v1")]
		public ConfiguredTableAnalysisRulePolicyV1 V1 { get; set; }
	}
	
	/// <summary>
	/// Controls on the query specifications that can be run on a configured table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTableAnalysisRulePolicyV1
	{
		
		[System.Runtime.Serialization.DataMember(Name="list")]
		public AnalysisRuleList List { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="aggregation")]
		public AnalysisRuleAggregation Aggregation { get; set; }
		
		/// <summary>
		/// A type of analysis rule that enables the table owner to approve custom SQL queries on their configured tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom")]
		public AnalysisRuleCustom Custom { get; set; }
	}
	
	/// <summary>
	/// A type of analysis rule that enables row-level analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisRuleList
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="joinColumns")]
		public string[] JoinColumns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allowedJoinOperators")]
		public JoinOperator[] AllowedJoinOperators { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="listColumns")]
		public string[] ListColumns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JoinOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AND = 1,
	}
	
	/// <summary>
	/// A type of analysis rule that enables query structure and specified queries that produce aggregate statistics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisRuleAggregation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="aggregateColumns")]
		public AggregateColumn[] AggregateColumns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="joinColumns")]
		public string[] JoinColumns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="joinRequired")]
		public JoinRequiredOption JoinRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allowedJoinOperators")]
		public JoinOperator[] AllowedJoinOperators { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dimensionColumns")]
		public string[] DimensionColumns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scalarFunctions")]
		public ScalarFunctions[] ScalarFunctions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputConstraints")]
		public AggregationConstraint[] OutputConstraints { get; set; }
	}
	
	/// <summary>
	/// Column in configured table that can be used in aggregate function in query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AggregateColumn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="columnNames")]
		public string[] ColumnNames { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="function")]
		public AggregateFunctionName Function { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AggregateFunctionName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM_DISTINCT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT_DISTINCT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVG = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JoinRequiredOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUERY_RUNNER = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScalarFunctions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRUNC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CEILING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLOOR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUND = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQRT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAST = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOWER = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RTRIM = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPPER = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COALESCE = 12,
	}
	
	/// <summary>
	/// Constraint on query output removing output rows that do not meet a minimum number of distinct values of a specified column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AggregationConstraint
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public int Minimum { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AggregationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AggregationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT_DISTINCT = 0,
	}
	
	/// <summary>
	/// A type of analysis rule that enables the table owner to approve custom SQL queries on their configured tables.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisRuleCustom
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowedAnalyses")]
		public string[] AllowedAnalyses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allowedAnalysisProviders")]
		public string[] AllowedAnalysisProviders { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfiguredTableAssociationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableAssociation")]
		public ConfiguredTableAssociation ConfiguredTableAssociation { get; set; }
	}
	
	/// <summary>
	/// A configured table association links a configured table to a collaboration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTableAssociation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableId")]
		public string ConfiguredTableId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableArn")]
		public string ConfiguredTableArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateMembershipOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public Membership Membership { get; set; }
	}
	
	/// <summary>
	/// The membership object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Membership
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationCreatorAccountId")]
		public string CollaborationCreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationCreatorDisplayName")]
		public string CollaborationCreatorDisplayName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationName")]
		public string CollaborationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public MembershipStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="memberAbilities")]
		public MemberAbility[] MemberAbilities { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MembershipStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLLABORATION_DELETED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnalysisTemplateOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCollaborationOutput
	{
	}
	
	/// <summary>
	/// The empty output for a successful deletion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfiguredTableOutput
	{
	}
	
	/// <summary>
	/// An empty response that indicates a successful delete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfiguredTableAnalysisRuleOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfiguredTableAssociationOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteMemberOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteMembershipOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnalysisTemplateOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisTemplate")]
		public AnalysisTemplate AnalysisTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollaborationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaboration")]
		public Collaboration Collaboration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollaborationAnalysisTemplateOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationAnalysisTemplate")]
		public CollaborationAnalysisTemplate CollaborationAnalysisTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfiguredTableOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTable")]
		public ConfiguredTable ConfiguredTable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfiguredTableAnalysisRuleOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRule")]
		public ConfiguredTableAnalysisRule AnalysisRule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfiguredTableAssociationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableAssociation")]
		public ConfiguredTableAssociation ConfiguredTableAssociation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMembershipOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public Membership Membership { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetProtectedQueryOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="protectedQuery")]
		public ProtectedQuery ProtectedQuery { get; set; }
	}
	
	/// <summary>
	/// The parameters for an Clean Rooms protected query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQuery
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sqlParameters")]
		public ProtectedQuerySQLParameters SqlParameters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ProtectedQueryStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resultConfiguration")]
		public ProtectedQueryResultConfiguration ResultConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistics")]
		public ProtectedQueryStatistics Statistics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public ProtectedQueryResult Result { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ProtectedQueryError Error { get; set; }
	}
	
	/// <summary>
	/// The parameters for the SQL type Protected Query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQuerySQLParameters
	{
		
		[System.Runtime.Serialization.DataMember(Name="queryString")]
		public string QueryString { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisTemplateArn")]
		public string AnalysisTemplateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ParameterMap Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProtectedQueryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMED_OUT = 6,
	}
	
	/// <summary>
	/// Contains configurations for protected query results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryResultConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="outputConfiguration")]
		public ProtectedQueryOutputConfiguration OutputConfiguration { get; set; }
	}
	
	/// <summary>
	/// Contains configuration details for protected query output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryOutputConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3")]
		public ProtectedQueryS3OutputConfiguration S3 { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration to write the query results to S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryS3OutputConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resultFormat")]
		public ResultFormat ResultFormat { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyPrefix")]
		public string KeyPrefix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResultFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARQUET = 1,
	}
	
	/// <summary>
	/// Contains statistics about the execution of the protected query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryStatistics
	{
		
		[System.Runtime.Serialization.DataMember(Name="totalDurationInMillis")]
		public System.Nullable<System.Int32> TotalDurationInMillis { get; set; }
	}
	
	/// <summary>
	/// Details about the query results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="output")]
		public ProtectedQueryOutput Output { get; set; }
	}
	
	/// <summary>
	/// Contains details about the protected query output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3")]
		public ProtectedQueryS3Output S3 { get; set; }
	}
	
	/// <summary>
	/// Contains output information for protected queries with an S3 output type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryS3Output
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
	}
	
	/// <summary>
	/// Details of errors thrown by the protected query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQueryError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSchemaOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public Schema Schema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSchemaAnalysisRuleOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRule")]
		public AnalysisRule AnalysisRule { get; set; }
	}
	
	/// <summary>
	/// A specification about how data from the configured table can be used in a query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AnalysisRuleType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public AnalysisRulePolicy Policy { get; set; }
	}
	
	/// <summary>
	/// Controls on the query specifications that can be run on configured table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisRulePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="v1")]
		public AnalysisRulePolicyV1 V1 { get; set; }
	}
	
	/// <summary>
	/// Controls on the query specifications that can be run on configured table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisRulePolicyV1
	{
		
		[System.Runtime.Serialization.DataMember(Name="list")]
		public AnalysisRuleList List { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="aggregation")]
		public AnalysisRuleAggregation Aggregation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom")]
		public AnalysisRuleCustom Custom { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnalysisTemplatesOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisTemplateSummaries")]
		public AnalysisTemplateSummary[] AnalysisTemplateSummaries { get; set; }
	}
	
	/// <summary>
	/// The metadata of the analysis template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisTemplateSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCollaborationAnalysisTemplatesOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationAnalysisTemplateSummaries")]
		public CollaborationAnalysisTemplateSummary[] CollaborationAnalysisTemplateSummaries { get; set; }
	}
	
	/// <summary>
	/// The metadata of the analysis template within a collaboration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollaborationAnalysisTemplateSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorAccountId")]
		public string CreatorAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCollaborationsOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationList")]
		public CollaborationSummary[] CollaborationList { get; set; }
	}
	
	/// <summary>
	/// The metadata of the collaboration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CollaborationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorAccountId")]
		public string CreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorDisplayName")]
		public string CreatorDisplayName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="memberStatus")]
		public MemberStatus MemberStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConfiguredTableAssociationsOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableAssociationSummaries")]
		public ConfiguredTableAssociationSummary[] ConfiguredTableAssociationSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The configured table association summary for the objects listed by the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTableAssociationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableId")]
		public string ConfiguredTableId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConfiguredTablesOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableSummaries")]
		public string[] ConfiguredTableSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMembersOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="memberSummaries")]
		public MemberSummary[] MemberSummaries { get; set; }
	}
	
	/// <summary>
	/// The member object listed by the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public MemberStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="abilities")]
		public MemberAbility[] Abilities { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMembershipsOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipSummaries")]
		public MembershipSummary[] MembershipSummaries { get; set; }
	}
	
	/// <summary>
	/// The membership object listed by the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MembershipSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationCreatorAccountId")]
		public string CollaborationCreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationCreatorDisplayName")]
		public string CollaborationCreatorDisplayName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationName")]
		public string CollaborationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public MembershipStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="memberAbilities")]
		public MemberAbility[] MemberAbilities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProtectedQueriesOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="protectedQueries")]
		public ProtectedQuerySummary[] ProtectedQueries { get; set; }
	}
	
	/// <summary>
	/// The protected query summary for the objects listed by the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProtectedQuerySummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipId")]
		public string MembershipId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membershipArn")]
		public string MembershipArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ProtectedQueryStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSchemasOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schemaSummaries")]
		public SchemaSummary[] SchemaSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The schema summary for the objects listed by the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SchemaSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public SchemaType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorAccountId")]
		public string CreatorAccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationId")]
		public string CollaborationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationArn")]
		public string CollaborationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRuleTypes")]
		public AnalysisRuleType[] AnalysisRuleTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisMethod")]
		public AnalysisMethod AnalysisMethod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Map of tags assigned to a resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartProtectedQueryOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="protectedQuery")]
		public ProtectedQuery ProtectedQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnalysisTemplateOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisTemplate")]
		public AnalysisTemplate AnalysisTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCollaborationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaboration")]
		public Collaboration Collaboration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfiguredTableOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTable")]
		public ConfiguredTable ConfiguredTable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfiguredTableAnalysisRuleOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRule")]
		public ConfiguredTableAnalysisRule AnalysisRule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfiguredTableAssociationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableAssociation")]
		public ConfiguredTableAssociation ConfiguredTableAssociation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateMembershipOutput
	{
		
		/// <summary>
		/// The membership object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public Membership Membership { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateProtectedQueryOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="protectedQuery")]
		public ProtectedQuery ProtectedQuery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetCollaborationAnalysisTemplateInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisTemplateArns")]
		public string[] AnalysisTemplateArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetSchemaInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="names")]
		public string[] Names { get; set; }
	}
	
	/// <summary>
	/// The configured table summary for the objects listed by the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfiguredTableSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public System.DateTimeOffset CreateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRuleTypes")]
		public ConfiguredTableAnalysisRuleType[] AnalysisRuleTypes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisMethod")]
		public AnalysisMethod AnalysisMethod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnalysisTemplateInput
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="format")]
		public AnalysisFormat Format { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public AnalysisSource Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisParameters")]
		public AnalysisParameter[] AnalysisParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCollaborationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="members")]
		public MemberSpecification[] Members { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorMemberAbilities")]
		public MemberAbility[] CreatorMemberAbilities { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorDisplayName")]
		public string CreatorDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dataEncryptionMetadata")]
		public DataEncryptionMetadata DataEncryptionMetadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfiguredTableAnalysisRuleInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRuleType")]
		public AnalysisRuleType AnalysisRuleType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRulePolicy")]
		public ConfiguredTableAnalysisRulePolicy AnalysisRulePolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfiguredTableAssociationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableIdentifier")]
		public string ConfiguredTableIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfiguredTableInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tableReference")]
		public TableReference TableReference { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowedColumns")]
		public string[] AllowedColumns { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisMethod")]
		public AnalysisMethod AnalysisMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MembershipQueryLogStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateMembershipInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationIdentifier")]
		public string CollaborationIdentifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnalysisTemplateInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCollaborationInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfiguredTableAnalysisRuleInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfiguredTableAssociationInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfiguredTableInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteMemberInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteMembershipInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterableMemberStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVITED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnalysisTemplateInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollaborationAnalysisTemplateInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCollaborationInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfiguredTableAnalysisRuleInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfiguredTableAssociationInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfiguredTableInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMembershipInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetProtectedQueryInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSchemaAnalysisRuleInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSchemaInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnalysisTemplatesInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCollaborationAnalysisTemplatesInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCollaborationsInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConfiguredTableAssociationsInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConfiguredTablesInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMembersInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMembershipsInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProtectedQueriesInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSchemasInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProtectedQueryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQL = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartProtectedQueryInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AnalysisFormat Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sqlParameters")]
		public ProtectedQuerySQLParameters SqlParameters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resultConfiguration")]
		public ProtectedQueryResultConfiguration ResultConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetProtectedQueryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnalysisTemplateInput
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCollaborationInput
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfiguredTableAnalysisRuleInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRulePolicy")]
		public ConfiguredTableAnalysisRulePolicy AnalysisRulePolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfiguredTableAssociationInput
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfiguredTableInput
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateMembershipInput
	{
		
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateProtectedQueryInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetStatus")]
		public TargetProtectedQueryStatus TargetStatus { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieves multiple analysis templates within a collaboration by their Amazon Resource Names (ARNs).
		/// BatchGetCollaborationAnalysisTemplate collaborations/{collaborationIdentifier}/batch-analysistemplates
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<BatchGetCollaborationAnalysisTemplateOutput> BatchGetCollaborationAnalysisTemplateAsync(string collaborationIdentifier, BatchGetCollaborationAnalysisTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/batch-analysistemplates";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BatchGetCollaborationAnalysisTemplateOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves multiple schemas by their identifiers.
		/// BatchGetSchema collaborations/{collaborationIdentifier}/batch-schema
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the schemas belong to. Currently accepts collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<BatchGetSchemaOutput> BatchGetSchemaAsync(string collaborationIdentifier, BatchGetSchemaPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/batch-schema";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<BatchGetSchemaOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new analysis template.
		/// CreateAnalysisTemplate memberships/{membershipIdentifier}/analysistemplates
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateAnalysisTemplateOutput> CreateAnalysisTemplateAsync(string membershipIdentifier, CreateAnalysisTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/analysistemplates";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateAnalysisTemplateOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists analysis templates that the caller owns.
		/// ListAnalysisTemplates memberships/{membershipIdentifier}/analysistemplates
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListAnalysisTemplatesOutput> ListAnalysisTemplatesAsync(string membershipIdentifier, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/analysistemplates&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAnalysisTemplatesOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new collaboration.
		/// CreateCollaboration collaborations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCollaborationOutput> CreateCollaborationAsync(CreateCollaborationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateCollaborationOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists collaborations the caller owns, is active in, or has been invited to.
		/// ListCollaborations collaborations
		/// </summary>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call. Service chooses a default if it has not been set. Service may return a nextToken even if the maximum results has not been met.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="memberStatus">The caller's status in a collaboration.</param>
		/// <returns>Success</returns>
		public async Task<ListCollaborationsOutput> ListCollaborationsAsync(string nextToken, int maxResults, FilterableMemberStatus memberStatus, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&memberStatus=" + memberStatus;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListCollaborationsOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new configured table resource.
		/// CreateConfiguredTable configuredTables
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateConfiguredTableOutput> CreateConfiguredTableAsync(CreateConfiguredTablePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateConfiguredTableOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists configured tables.
		/// ListConfiguredTables configuredTables
		/// </summary>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListConfiguredTablesOutput> ListConfiguredTablesAsync(string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListConfiguredTablesOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new analysis rule for a configured table. Currently, only one analysis rule can be created for a given configured table.
		/// CreateConfiguredTableAnalysisRule configuredTables/{configuredTableIdentifier}/analysisRule
		/// </summary>
		/// <param name="configuredTableIdentifier">The identifier for the configured table to create the analysis rule for. Currently accepts the configured table ID. 
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateConfiguredTableAnalysisRuleOutput> CreateConfiguredTableAnalysisRuleAsync(string configuredTableIdentifier, CreateConfiguredTableAnalysisRulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier))+"/analysisRule";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateConfiguredTableAnalysisRuleOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a configured table association. A configured table association links a configured table with a collaboration.
		/// CreateConfiguredTableAssociation memberships/{membershipIdentifier}/configuredTableAssociations
		/// </summary>
		/// <param name="membershipIdentifier">A unique identifier for one of your memberships for a collaboration. The configured table is associated to the collaboration that this membership belongs to. Currently accepts a membership ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateConfiguredTableAssociationOutput> CreateConfiguredTableAssociationAsync(string membershipIdentifier, CreateConfiguredTableAssociationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/configuredTableAssociations";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateConfiguredTableAssociationOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists configured table associations for a membership.
		/// ListConfiguredTableAssociations memberships/{membershipIdentifier}/configuredTableAssociations
		/// </summary>
		/// <param name="membershipIdentifier">A unique identifier for the membership to list configured table associations for. Currently accepts the membership ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListConfiguredTableAssociationsOutput> ListConfiguredTableAssociationsAsync(string membershipIdentifier, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/configuredTableAssociations&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListConfiguredTableAssociationsOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a membership for a specific collaboration identifier and joins the collaboration.
		/// CreateMembership memberships
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateMembershipOutput> CreateMembershipAsync(CreateMembershipPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateMembershipOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all memberships resources within the caller's account.
		/// ListMemberships memberships
		/// </summary>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="status">A filter which will return only memberships in the specified status.</param>
		/// <returns>Success</returns>
		public async Task<ListMembershipsOutput> ListMembershipsAsync(string nextToken, int maxResults, MembershipStatus status, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&status=" + status;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListMembershipsOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an analysis template.
		/// DeleteAnalysisTemplate memberships/{membershipIdentifier}/analysistemplates/{analysisTemplateIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisTemplateIdentifier">The identifier for the analysis template resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		public async Task DeleteAnalysisTemplateAsync(string membershipIdentifier, string analysisTemplateIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/analysistemplates/"+ (analysisTemplateIdentifier==null? "" : System.Uri.EscapeDataString(analysisTemplateIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves an analysis template.
		/// GetAnalysisTemplate memberships/{membershipIdentifier}/analysistemplates/{analysisTemplateIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisTemplateIdentifier">The identifier for the analysis template resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<GetAnalysisTemplateOutput> GetAnalysisTemplateAsync(string membershipIdentifier, string analysisTemplateIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/analysistemplates/"+ (analysisTemplateIdentifier==null? "" : System.Uri.EscapeDataString(analysisTemplateIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAnalysisTemplateOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the analysis template metadata.
		/// UpdateAnalysisTemplate memberships/{membershipIdentifier}/analysistemplates/{analysisTemplateIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisTemplateIdentifier">The identifier for the analysis template resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateAnalysisTemplateOutput> UpdateAnalysisTemplateAsync(string membershipIdentifier, string analysisTemplateIdentifier, UpdateAnalysisTemplatePatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/analysistemplates/"+ (analysisTemplateIdentifier==null? "" : System.Uri.EscapeDataString(analysisTemplateIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAnalysisTemplateOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a collaboration. It can only be called by the collaboration owner.
		/// DeleteCollaboration collaborations/{collaborationIdentifier}
		/// </summary>
		/// <param name="collaborationIdentifier">The identifier for the collaboration.
		/// Min length: 36
		/// Max length: 36
		// </param>
		public async Task DeleteCollaborationAsync(string collaborationIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns metadata about a collaboration.
		/// GetCollaboration collaborations/{collaborationIdentifier}
		/// </summary>
		/// <param name="collaborationIdentifier">The identifier for the collaboration.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<GetCollaborationOutput> GetCollaborationAsync(string collaborationIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollaborationOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates collaboration metadata and can only be called by the collaboration owner.
		/// UpdateCollaboration collaborations/{collaborationIdentifier}
		/// </summary>
		/// <param name="collaborationIdentifier">The identifier for the collaboration.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateCollaborationOutput> UpdateCollaborationAsync(string collaborationIdentifier, UpdateCollaborationPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateCollaborationOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a configured table.
		/// DeleteConfiguredTable configuredTables/{configuredTableIdentifier}
		/// </summary>
		/// <param name="configuredTableIdentifier">The unique ID for the configured table to delete.
		/// Min length: 36
		/// Max length: 36
		// </param>
		public async Task DeleteConfiguredTableAsync(string configuredTableIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a configured table.
		/// GetConfiguredTable configuredTables/{configuredTableIdentifier}
		/// </summary>
		/// <param name="configuredTableIdentifier">The unique ID for the configured table to retrieve.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<GetConfiguredTableOutput> GetConfiguredTableAsync(string configuredTableIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetConfiguredTableOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a configured table.
		/// UpdateConfiguredTable configuredTables/{configuredTableIdentifier}
		/// </summary>
		/// <param name="configuredTableIdentifier">The identifier for the configured table to update. Currently accepts the configured table ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateConfiguredTableOutput> UpdateConfiguredTableAsync(string configuredTableIdentifier, UpdateConfiguredTablePatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateConfiguredTableOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a configured table analysis rule.
		/// DeleteConfiguredTableAnalysisRule configuredTables/{configuredTableIdentifier}/analysisRule/{analysisRuleType}
		/// </summary>
		/// <param name="configuredTableIdentifier">The unique identifier for the configured table that the analysis rule applies to. Currently accepts the configured table ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisRuleType">The analysis rule type to be deleted. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</param>
		public async Task DeleteConfiguredTableAnalysisRuleAsync(string configuredTableIdentifier, AnalysisRuleType analysisRuleType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier))+"/analysisRule/"+analysisRuleType;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a configured table analysis rule.
		/// GetConfiguredTableAnalysisRule configuredTables/{configuredTableIdentifier}/analysisRule/{analysisRuleType}
		/// </summary>
		/// <param name="configuredTableIdentifier">The unique identifier for the configured table to retrieve. Currently accepts the configured table ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisRuleType">The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</param>
		/// <returns>Success</returns>
		public async Task<GetConfiguredTableAnalysisRuleOutput> GetConfiguredTableAnalysisRuleAsync(string configuredTableIdentifier, AnalysisRuleType analysisRuleType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier))+"/analysisRule/"+analysisRuleType;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetConfiguredTableAnalysisRuleOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a configured table analysis rule.
		/// UpdateConfiguredTableAnalysisRule configuredTables/{configuredTableIdentifier}/analysisRule/{analysisRuleType}
		/// </summary>
		/// <param name="configuredTableIdentifier">The unique identifier for the configured table that the analysis rule applies to. Currently accepts the configured table ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisRuleType">The analysis rule type to be updated. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</param>
		/// <returns>Success</returns>
		public async Task<UpdateConfiguredTableAnalysisRuleOutput> UpdateConfiguredTableAnalysisRuleAsync(string configuredTableIdentifier, AnalysisRuleType analysisRuleType, UpdateConfiguredTableAnalysisRulePatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "configuredTables/"+ (configuredTableIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableIdentifier))+"/analysisRule/"+analysisRuleType;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateConfiguredTableAnalysisRuleOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a configured table association.
		/// DeleteConfiguredTableAssociation memberships/{membershipIdentifier}/configuredTableAssociations/{configuredTableAssociationIdentifier}
		/// </summary>
		/// <param name="configuredTableAssociationIdentifier">The unique ID for the configured table association to be deleted. Currently accepts the configured table ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="membershipIdentifier">A unique identifier for the membership that the configured table association belongs to. Currently accepts the membership ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		public async Task DeleteConfiguredTableAssociationAsync(string configuredTableAssociationIdentifier, string membershipIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/configuredTableAssociations/"+ (configuredTableAssociationIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableAssociationIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a configured table association.
		/// GetConfiguredTableAssociation memberships/{membershipIdentifier}/configuredTableAssociations/{configuredTableAssociationIdentifier}
		/// </summary>
		/// <param name="configuredTableAssociationIdentifier">The unique ID for the configured table association to retrieve. Currently accepts the configured table ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="membershipIdentifier">A unique identifier for the membership that the configured table association belongs to. Currently accepts the membership ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<GetConfiguredTableAssociationOutput> GetConfiguredTableAssociationAsync(string configuredTableAssociationIdentifier, string membershipIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/configuredTableAssociations/"+ (configuredTableAssociationIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableAssociationIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetConfiguredTableAssociationOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a configured table association.
		/// UpdateConfiguredTableAssociation memberships/{membershipIdentifier}/configuredTableAssociations/{configuredTableAssociationIdentifier}
		/// </summary>
		/// <param name="configuredTableAssociationIdentifier">The unique identifier for the configured table association to update. Currently accepts the configured table association ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="membershipIdentifier">The unique ID for the membership that the configured table association belongs to.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateConfiguredTableAssociationOutput> UpdateConfiguredTableAssociationAsync(string configuredTableAssociationIdentifier, string membershipIdentifier, UpdateConfiguredTableAssociationPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/configuredTableAssociations/"+ (configuredTableAssociationIdentifier==null? "" : System.Uri.EscapeDataString(configuredTableAssociationIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateConfiguredTableAssociationOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes the specified member from a collaboration. The removed member is placed in the Removed status and can't interact with the collaboration. The removed member's data is inaccessible to active members of the collaboration.
		/// DeleteMember collaborations/{collaborationIdentifier}/member/{accountId}
		/// </summary>
		/// <param name="collaborationIdentifier">The unique identifier for the associated collaboration.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="accountId">The account ID of the member to remove.
		/// Min length: 12
		/// Max length: 12
		// </param>
		public async Task DeleteMemberAsync(string collaborationIdentifier, string accountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/member/"+ (accountId==null? "" : System.Uri.EscapeDataString(accountId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a specified membership. All resources under a membership must be deleted.
		/// DeleteMembership memberships/{membershipIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		public async Task DeleteMembershipAsync(string membershipIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a specified membership for an identifier.
		/// GetMembership memberships/{membershipIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership resource.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<GetMembershipOutput> GetMembershipAsync(string membershipIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetMembershipOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a membership.
		/// UpdateMembership memberships/{membershipIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The unique identifier of the membership.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateMembershipOutput> UpdateMembershipAsync(string membershipIdentifier, UpdateMembershipPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateMembershipOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves an analysis template within a collaboration.
		/// GetCollaborationAnalysisTemplate collaborations/{collaborationIdentifier}/analysistemplates/{analysisTemplateArn}
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="analysisTemplateArn">The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.
		/// Min length: 0
		/// Max length: 200
		// </param>
		/// <returns>Success</returns>
		public async Task<GetCollaborationAnalysisTemplateOutput> GetCollaborationAnalysisTemplateAsync(string collaborationIdentifier, string analysisTemplateArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/analysistemplates/"+ (analysisTemplateArn==null? "" : System.Uri.EscapeDataString(analysisTemplateArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCollaborationAnalysisTemplateOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns query processing metadata.
		/// GetProtectedQuery memberships/{membershipIdentifier}/protectedQueries/{protectedQueryIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a membership in a protected query instance.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="protectedQueryIdentifier">The identifier for a protected query instance.
		/// Min length: 1
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<GetProtectedQueryOutput> GetProtectedQueryAsync(string membershipIdentifier, string protectedQueryIdentifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/protectedQueries/"+ (protectedQueryIdentifier==null? "" : System.Uri.EscapeDataString(protectedQueryIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetProtectedQueryOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the processing of a currently running query.
		/// UpdateProtectedQuery memberships/{membershipIdentifier}/protectedQueries/{protectedQueryIdentifier}
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for a member of a protected query instance.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="protectedQueryIdentifier">The identifier for a protected query instance.
		/// Min length: 1
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateProtectedQueryOutput> UpdateProtectedQueryAsync(string membershipIdentifier, string protectedQueryIdentifier, UpdateProtectedQueryPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/protectedQueries/"+ (protectedQueryIdentifier==null? "" : System.Uri.EscapeDataString(protectedQueryIdentifier));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateProtectedQueryOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the schema for a relation within a collaboration.
		/// GetSchema collaborations/{collaborationIdentifier}/schemas/{name}
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the schema belongs to. Currently accepts a collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="name">The name of the relation to retrieve the schema for.
		/// Min length: 0
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<GetSchemaOutput> GetSchemaAsync(string collaborationIdentifier, string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/schemas/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSchemaOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a schema analysis rule.
		/// GetSchemaAnalysisRule collaborations/{collaborationIdentifier}/schemas/{name}/analysisRule/{type}
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the schema belongs to. Currently accepts a collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="name">The name of the schema to retrieve the analysis rule for.
		/// Min length: 0
		/// Max length: 128
		// </param>
		/// <param name="type">The type of the schema analysis rule to retrieve. Schema analysis rules are uniquely identified by a combination of the collaboration, the schema name, and their type.</param>
		/// <returns>Success</returns>
		public async Task<GetSchemaAnalysisRuleOutput> GetSchemaAnalysisRuleAsync(string collaborationIdentifier, string name, AnalysisRuleType type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/schemas/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/analysisRule/"+type;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSchemaAnalysisRuleOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists analysis templates within a collaboration.
		/// ListCollaborationAnalysisTemplates collaborations/{collaborationIdentifier}/analysistemplates
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListCollaborationAnalysisTemplatesOutput> ListCollaborationAnalysisTemplatesAsync(string collaborationIdentifier, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/analysistemplates&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListCollaborationAnalysisTemplatesOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all members within a collaboration.
		/// ListMembers collaborations/{collaborationIdentifier}/members
		/// </summary>
		/// <param name="collaborationIdentifier">The identifier of the collaboration in which the members are listed.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListMembersOutput> ListMembersAsync(string collaborationIdentifier, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/members&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListMembersOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists protected queries, sorted by the most recent query.
		/// ListProtectedQueries memberships/{membershipIdentifier}/protectedQueries
		/// </summary>
		/// <param name="membershipIdentifier">The identifier for the membership in the collaboration.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="status">A filter on the status of the protected query.</param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call. Service chooses a default if it has not been set. Service can return a nextToken even if the maximum results has not been met. 
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListProtectedQueriesOutput> ListProtectedQueriesAsync(string membershipIdentifier, ProtectedQueryStatus status, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/protectedQueries&status=" + status+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListProtectedQueriesOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a protected query that is started by Clean Rooms .
		/// StartProtectedQuery memberships/{membershipIdentifier}/protectedQueries
		/// </summary>
		/// <param name="membershipIdentifier">A unique identifier for the membership to run this query against. Currently accepts a membership ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<StartProtectedQueryOutput> StartProtectedQueryAsync(string membershipIdentifier, StartProtectedQueryPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "memberships/"+ (membershipIdentifier==null? "" : System.Uri.EscapeDataString(membershipIdentifier))+"/protectedQueries";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartProtectedQueryOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the schemas for relations within a collaboration.
		/// ListSchemas collaborations/{collaborationIdentifier}/schemas
		/// </summary>
		/// <param name="collaborationIdentifier">A unique identifier for the collaboration that the schema belongs to. Currently accepts a collaboration ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="schemaType">If present, filter schemas by schema type. The only valid schema type is currently `TABLE`.</param>
		/// <param name="nextToken">The token value retrieved from a previous call to access the next page of results.
		/// Min length: 0
		/// Max length: 10240
		// </param>
		/// <param name="maxResults">The maximum size of the results that is returned per call.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListSchemasOutput> ListSchemasAsync(string collaborationIdentifier, SchemaType schemaType, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "collaborations/"+ (collaborationIdentifier==null? "" : System.Uri.EscapeDataString(collaborationIdentifier))+"/schemas&schemaType=" + schemaType+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListSchemasOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all of the tags that have been added to a resource.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) associated with the resource you want to list tags on.
		/// Min length: 0
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceOutput> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tags a resource.
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) associated with the resource you want to tag.
		/// Min length: 0
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<TagResourceOutput> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TagResourceOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes a tag or list of tags from a resource.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) associated with the resource you want to remove the tag from.
		/// Min length: 0
		/// Max length: 100
		// </param>
		/// <param name="tagKeys">A list of key names of tags to be removed.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceOutput> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UntagResourceOutput>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class BatchGetCollaborationAnalysisTemplatePostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisTemplateArns")]
		[System.ComponentModel.DataAnnotations.Length(1, 10)]
		public string[] AnalysisTemplateArns { get; set; }
	}
	
	public class BatchGetSchemaPostBody
	{
		
		/// <summary>
		/// The names for the schema objects to retrieve.&gt;
		/// Required
		/// Minimum items: 1
		/// Maximum items: 25
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="names")]
		[System.ComponentModel.DataAnnotations.Length(1, 25)]
		public string[] Names { get; set; }
	}
	
	public class CreateAnalysisTemplatePostBody
	{
		
		/// <summary>
		/// The description of the analysis template.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(0, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
		
		/// <summary>
		/// The name of the analysis template.
		/// Required
		/// Min length: 0
		/// Max length: 128
		/// Pattern: [a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.Length(0, 128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?")]
		public string Name { get; set; }
		
		/// <summary>
		/// The format of the analysis template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="format")]
		public AnalysisFormat Format { get; set; }
		
		/// <summary>
		/// The structure that defines the body of the analysis template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public CreateAnalysisTemplatePostBodySource Source { get; set; }
		
		/// <summary>
		/// Map of tags assigned to a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The parameters of the analysis template.
		/// Minimum items: 0
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisParameters")]
		[System.ComponentModel.DataAnnotations.Length(0, 10)]
		public AnalysisParameter[] AnalysisParameters { get; set; }
	}
	
	public class CreateAnalysisTemplatePostBodySource
	{
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class CreateCollaborationPostBody
	{
		
		/// <summary>
		/// A list of initial members, not including the creator. This list is immutable.
		/// Required
		/// Minimum items: 0
		/// Maximum items: 9
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="members")]
		[System.ComponentModel.DataAnnotations.Length(0, 9)]
		public MemberSpecification[] Members { get; set; }
		
		/// <summary>
		/// The display name for a collaboration.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// A description of the collaboration provided by the collaboration owner.
		/// Required
		/// Min length: 1
		/// Max length: 255
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(1, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
		
		/// <summary>
		/// The abilities granted to the collaboration creator.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorMemberAbilities")]
		public MemberAbility[] CreatorMemberAbilities { get; set; }
		
		/// <summary>
		/// The display name of the collaboration creator.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creatorDisplayName")]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*")]
		public string CreatorDisplayName { get; set; }
		
		/// <summary>
		/// The settings for client-side encryption for cryptographic computing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataEncryptionMetadata")]
		public CreateCollaborationPostBodyDataEncryptionMetadata DataEncryptionMetadata { get; set; }
		
		/// <summary>
		/// An indicator as to whether query logging has been enabled or disabled for the collaboration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
		
		/// <summary>
		/// Map of tags assigned to a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateCollaborationPostBodyDataEncryptionMetadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="allowCleartext")]
		public System.Nullable<System.Boolean> AllowCleartext { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allowDuplicates")]
		public System.Nullable<System.Boolean> AllowDuplicates { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allowJoinsOnColumnsWithDifferentNames")]
		public System.Nullable<System.Boolean> AllowJoinsOnColumnsWithDifferentNames { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preserveNulls")]
		public System.Nullable<System.Boolean> PreserveNulls { get; set; }
	}
	
	public class CreateConfiguredTablePostBody
	{
		
		/// <summary>
		/// The name of the configured table.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// A description for the configured table.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(0, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
		
		/// <summary>
		/// A pointer to the dataset that underlies this table. Currently, this can only be an Glue table.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tableReference")]
		public CreateConfiguredTablePostBodyTableReference TableReference { get; set; }
		
		/// <summary>
		/// The columns of the underlying table that can be used by collaborations or analysis rules.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowedColumns")]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		public string[] AllowedColumns { get; set; }
		
		/// <summary>
		/// The analysis method for the configured tables. The only valid value is currently `DIRECT_QUERY`.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisMethod")]
		public AnalysisMethod AnalysisMethod { get; set; }
		
		/// <summary>
		/// Map of tags assigned to a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateConfiguredTablePostBodyTableReference
	{
		
		[System.Runtime.Serialization.DataMember(Name="glue")]
		public GlueTableReference Glue { get; set; }
	}
	
	public class CreateConfiguredTableAnalysisRulePostBody
	{
		
		/// <summary>
		/// The type of analysis rule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRuleType")]
		public AnalysisRuleType AnalysisRuleType { get; set; }
		
		/// <summary>
		/// Controls on the query specifications that can be run on a configured table.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRulePolicy")]
		public CreateConfiguredTableAnalysisRulePostBodyAnalysisRulePolicy AnalysisRulePolicy { get; set; }
	}
	
	public class CreateConfiguredTableAnalysisRulePostBodyAnalysisRulePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="v1")]
		public ConfiguredTableAnalysisRulePolicyV1 V1 { get; set; }
	}
	
	public class CreateConfiguredTableAssociationPostBody
	{
		
		/// <summary>
		/// The name of the configured table association. This name is used to query the underlying configured table.
		/// Required
		/// Min length: 0
		/// Max length: 128
		/// Pattern: [a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.Length(0, 128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?")]
		public string Name { get; set; }
		
		/// <summary>
		/// A description for the configured table association.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(0, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
		/// Required
		/// Min length: 36
		/// Max length: 36
		/// Pattern: .*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuredTableIdentifier")]
		[System.ComponentModel.DataAnnotations.Length(36, 36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.*")]
		public string ConfiguredTableIdentifier { get; set; }
		
		/// <summary>
		/// The service will assume this role to access catalog metadata and query the table.
		/// Required
		/// Min length: 32
		/// Max length: 512
		/// Pattern: arn:aws:iam::[\w]+:role/[\w+=,./@-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.Length(32, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws:iam::[\w]+:role/[\w+=,./@-]+")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Map of tags assigned to a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateMembershipPostBody
	{
		
		/// <summary>
		/// The unique ID for the associated collaboration.
		/// Required
		/// Min length: 36
		/// Max length: 36
		/// Pattern: .*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="collaborationIdentifier")]
		[System.ComponentModel.DataAnnotations.Length(36, 36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.*")]
		public string CollaborationIdentifier { get; set; }
		
		/// <summary>
		/// An indicator as to whether query logging has been enabled or disabled for the collaboration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
		
		/// <summary>
		/// Map of tags assigned to a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class UpdateAnalysisTemplatePatchBody
	{
		
		/// <summary>
		/// A new description for the analysis template.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(0, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
	}
	
	public class UpdateCollaborationPatchBody
	{
		
		/// <summary>
		/// A human-readable identifier provided by the collaboration owner. Display names are not unique.
		/// Min length: 1
		/// Max length: 100
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// A description of the collaboration.
		/// Min length: 1
		/// Max length: 255
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(1, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
	}
	
	public class UpdateConfiguredTablePatchBody
	{
		
		/// <summary>
		/// A new name for the configured table.
		/// Min length: 1
		/// Max length: 100
		/// Pattern: (?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*")]
		public string Name { get; set; }
		
		/// <summary>
		/// A new description for the configured table.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(0, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
	}
	
	public class UpdateConfiguredTableAnalysisRulePatchBody
	{
		
		/// <summary>
		/// Controls on the query specifications that can be run on a configured table.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="analysisRulePolicy")]
		public UpdateConfiguredTableAnalysisRulePatchBodyAnalysisRulePolicy AnalysisRulePolicy { get; set; }
	}
	
	public class UpdateConfiguredTableAnalysisRulePatchBodyAnalysisRulePolicy
	{
		
		[System.Runtime.Serialization.DataMember(Name="v1")]
		public ConfiguredTableAnalysisRulePolicyV1 V1 { get; set; }
	}
	
	public class UpdateConfiguredTableAssociationPatchBody
	{
		
		/// <summary>
		/// A new description for the configured table association.
		/// Min length: 0
		/// Max length: 255
		/// Pattern: [\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.Length(0, 255)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*")]
		public string Description { get; set; }
		
		/// <summary>
		/// The service will assume this role to access catalog metadata and query the table.
		/// Min length: 32
		/// Max length: 512
		/// Pattern: arn:aws:iam::[\w]+:role/[\w+=,./@-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.Length(32, 512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws:iam::[\w]+:role/[\w+=,./@-]+")]
		public string RoleArn { get; set; }
	}
	
	public class UpdateMembershipPatchBody
	{
		
		/// <summary>
		/// An indicator as to whether query logging has been enabled or disabled for the collaboration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryLogStatus")]
		public CollaborationQueryLogStatus QueryLogStatus { get; set; }
	}
	
	public class UpdateProtectedQueryPatchBody
	{
		
		/// <summary>
		/// The target status of a query. Used to update the execution status of a currently running query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetStatus")]
		public TargetProtectedQueryStatus TargetStatus { get; set; }
	}
	
	public class StartProtectedQueryPostBody
	{
		
		/// <summary>
		/// The type of the protected query to be started.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AnalysisFormat Type { get; set; }
		
		/// <summary>
		/// The parameters for the SQL type Protected Query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sqlParameters")]
		public StartProtectedQueryPostBodySqlParameters SqlParameters { get; set; }
		
		/// <summary>
		/// Contains configurations for protected query results.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resultConfiguration")]
		public StartProtectedQueryPostBodyResultConfiguration ResultConfiguration { get; set; }
	}
	
	public class StartProtectedQueryPostBodySqlParameters
	{
		
		[System.Runtime.Serialization.DataMember(Name="queryString")]
		public string QueryString { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="analysisTemplateArn")]
		public string AnalysisTemplateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ParameterMap Parameters { get; set; }
	}
	
	public class StartProtectedQueryPostBodyResultConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="outputConfiguration")]
		public ProtectedQueryOutputConfiguration OutputConfiguration { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// Map of tags assigned to a resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

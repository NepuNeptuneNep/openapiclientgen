//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Describes the binding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__Binding
	{
		
		/// <summary>
		/// A JSON object that contains data for platform resources associated with
		///the binding to be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bind_resource")]
		public System.Collections.Generic.Dictionary<string, object> Bind_resource { get; set; }
		
		/// <summary>
		/// The id of the binding. Must be unique within GCP project.
		///Maximum length is 64, GUID recommended.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binding_id")]
		public string Binding_id { get; set; }
		
		/// <summary>
		/// Output only. Timestamp for when the binding was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. String containing the Deployment Manager deployment name that was created
		///for this binding,
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentName")]
		public string DeploymentName { get; set; }
		
		/// <summary>
		/// Configuration options for the service binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, object> Parameters { get; set; }
		
		/// <summary>
		/// The ID of the plan. See `Service` and `Plan` resources for details.
		///Maximum length is 64, GUID recommended.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plan_id")]
		public string Plan_id { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the binding, e.g.
		///projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// The id of the service. Must be a valid identifier of a service
		///contained in the list from a `ListServices()` call.
		///Maximum length is 64, GUID recommended.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_id")]
		public string Service_id { get; set; }
	}
	
	/// <summary>
	/// Broker represents a consumable collection of Service Registry catalogs
	///exposed as an OSB Broker.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__Broker
	{
		
		/// <summary>
		/// Output only. Timestamp for when the broker was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Name of the broker in the format:
		///<projects>/<project-id>/brokers/<broker>.
		///This allows for multiple brokers per project which can be used to
		///enable having custom brokers per GKE cluster, for example.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// User friendly title of the broker.
		///Limited to 1024 characters. Requests with longer titles will be rejected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Output only. URL of the broker OSB-compliant endpoint, for example:
		///https://servicebroker.googleapis.com/projects/<project>/brokers/<broker>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Response for the `CreateBinding()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__CreateBindingResponse
	{
		
		/// <summary>
		/// Credentials to use the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public System.Collections.Generic.Dictionary<string, object> Credentials { get; set; }
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// If broker executes operation asynchronously, this is the operation ID that
		///can be polled to check the completion status of said operation.
		///This broker always executes all create/delete operations asynchronously.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// A URL to which the platform may proxy requests for the address sent with
		///bind_resource.route
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="route_service_url")]
		public string Route_service_url { get; set; }
		
		/// <summary>
		/// From where to read system logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syslog_drain_url")]
		public string Syslog_drain_url { get; set; }
		
		/// <summary>
		/// An array of configuration for mounting volumes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volume_mounts")]
		public string[] Volume_mounts { get; set; }
	}
	
	/// <summary>
	/// Response for the `CreateServiceInstance()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__CreateServiceInstanceResponse
	{
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// If broker executes operation asynchronously, this is the operation ID that
		///can be polled to check the completion status of said operation.
		///This broker always will return a non-empty operation on success.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
	}
	
	/// <summary>
	/// Message containing information required to activate Dashboard SSO feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__DashboardClient
	{
		
		/// <summary>
		/// The id of the Oauth client that the dashboard will use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A URI for the service dashboard.
		///Validated by the OAuth token server when the dashboard requests a token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirect_uri")]
		public string Redirect_uri { get; set; }
		
		/// <summary>
		/// A secret for the dashboard client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// Response for the `DeleteBinding()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__DeleteBindingResponse
	{
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// If broker executes operation asynchronously, this is the operation ID that
		///can be polled to check the completion status of said operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
	}
	
	/// <summary>
	/// Response for the `DeleteServiceInstance()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__DeleteServiceInstanceResponse
	{
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// If broker executes operation asynchronously, this is the operation ID that
		///can be polled to check the completion status of said operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
	}
	
	/// <summary>
	/// Response for the `GetBinding()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__GetBindingResponse
	{
		
		/// <summary>
		/// Credentials to use the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public System.Collections.Generic.Dictionary<string, object> Credentials { get; set; }
		
		/// <summary>
		/// String containing the Deployment Manager deployment name that was created
		///for this binding,
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentName")]
		public string DeploymentName { get; set; }
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the binding, e.g.
		///projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// A URL to which the platform may proxy requests for the address sent with
		///bind_resource.route
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="route_service_url")]
		public string Route_service_url { get; set; }
		
		/// <summary>
		/// From where to read system logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syslog_drain_url")]
		public string Syslog_drain_url { get; set; }
		
		/// <summary>
		/// An array of configurations for mounting volumes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volume_mounts")]
		public string[] Volume_mounts { get; set; }
	}
	
	/// <summary>
	/// The response for the `ListBindings()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__ListBindingsResponse
	{
		
		/// <summary>
		/// The list of bindings in the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleCloudServicebrokerV1beta1__Binding[] Bindings { get; set; }
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// This token allows you to get the next page of results for list requests.
		///If the number of results is larger than `pageSize`, use the `nextPageToken`
		///as a value for the query parameter `pageToken` in the next list request.
		///Subsequent list requests will have their own `nextPageToken` to continue
		///paging through the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response for the `ListBrokers()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__ListBrokersResponse
	{
		
		/// <summary>
		/// The list of brokers in the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brokers")]
		public GoogleCloudServicebrokerV1beta1__Broker[] Brokers { get; set; }
		
		/// <summary>
		/// This token allows you to get the next page of results for list requests.
		///If the number of results is larger than `pageSize`, use the `nextPageToken`
		///as a value for the query parameter `pageToken` in the next list request.
		///Subsequent list requests will have their own `nextPageToken` to continue
		///paging through the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for the `ListCatalog()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__ListCatalogResponse
	{
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// This token allows you to get the next page of results for list requests.
		///If the number of results is larger than `pageSize`, use the `nextPageToken`
		///as a value for the query parameter `pageToken` in the next list request.
		///Subsequent list requests will have their own `nextPageToken` to continue
		///paging through the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The services available for the requested GCP project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="services")]
		public GoogleCloudServicebrokerV1beta1__Service[] Services { get; set; }
	}
	
	/// <summary>
	/// The resource model mostly follows the Open Service Broker API, as
	///described here:
	///https://github.com/openservicebrokerapi/servicebroker/blob/master/_spec.md
	///Though due to Google Specifics it has additional optional fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__Service
	{
		
		/// <summary>
		/// Specifies whether instances of the service can be bound to applications.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindable")]
		public System.Nullable<System.Boolean> Bindable { get; set; }
		
		/// <summary>
		/// Whether the service provides an endpoint to get service bindings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binding_retrievable")]
		public System.Nullable<System.Boolean> Binding_retrievable { get; set; }
		
		/// <summary>
		/// Whether the service provides an endpoint to get service bindings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings_retrievable")]
		public System.Nullable<System.Boolean> Bindings_retrievable { get; set; }
		
		/// <summary>
		/// Message containing information required to activate Dashboard SSO feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dashboard_client")]
		public GoogleCloudServicebrokerV1beta1__DashboardClient Dashboard_client { get; set; }
		
		/// <summary>
		/// Textual description of the service. Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// ID is a globally unique identifier used to uniquely identify the service.
		///ID is an opaque string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether the service provides an endpoint to get service instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances_retrievable")]
		public System.Nullable<System.Boolean> Instances_retrievable { get; set; }
		
		/// <summary>
		/// A list of metadata for a service offering.
		///Metadata is an arbitrary JSON object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// User friendly service name.
		///Name must match [a-z0-9]+ regexp.
		///The name must be globally unique within GCP project.
		///Note, which is different from ("This must be globally unique within a
		///platform marketplace").
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Whether the service supports upgrade/downgrade for some plans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plan_updateable")]
		public System.Nullable<System.Boolean> Plan_updateable { get; set; }
		
		/// <summary>
		/// A list of plans for this service.
		///At least one plan is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plans")]
		public GoogleCloudServicebrokerV1beta1__Plan[] Plans { get; set; }
		
		/// <summary>
		/// Tags provide a flexible mechanism to expose a classification, attribute, or
		///base technology of a service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// Plan message describes a Service Plan.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__Plan
	{
		
		/// <summary>
		/// Specifies whether instances of the service can be bound to applications.
		///If not specified, `Service.bindable` will be presumed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindable")]
		public System.Nullable<System.Boolean> Bindable { get; set; }
		
		/// <summary>
		/// Textual description of the plan. Optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the service is free.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="free")]
		public System.Nullable<System.Boolean> Free { get; set; }
		
		/// <summary>
		/// ID is a globally unique identifier used to uniquely identify the plan.
		///User must make no presumption about the format of this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A list of metadata for a service offering.
		///Metadata is an arbitrary JSON object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// User friendly name of the plan.
		///The name must be globally unique within GCP project.
		///Note, which is different from ("This must be globally unique within a
		///platform marketplace").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Schema definitions for service instances and bindings for the plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemas")]
		public System.Collections.Generic.Dictionary<string, object> Schemas { get; set; }
	}
	
	/// <summary>
	/// The response for the `ListServiceInstances()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__ListServiceInstancesResponse
	{
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The list of instances in the broker.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public GoogleCloudServicebrokerV1beta1__ServiceInstance[] Instances { get; set; }
		
		/// <summary>
		/// This token allows you to get the next page of results for list requests.
		///If the number of results is larger than `pageSize`, use the `nextPageToken`
		///as a value for the query parameter `pageToken` in the next list request.
		///Subsequent list requests will have their own `nextPageToken` to continue
		///paging through the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Message describing inputs to Provision and Update Service instance requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__ServiceInstance
	{
		
		/// <summary>
		/// Platform specific contextual information under which the service instance
		///is to be provisioned. This replaces organization_guid and space_guid.
		///But can also contain anything.
		///Currently only used for logging context information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public System.Collections.Generic.Dictionary<string, object> Context { get; set; }
		
		/// <summary>
		/// Output only. Timestamp for when the instance was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. String containing the Deployment Manager deployment name that was created
		///for this instance,
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentName")]
		public string DeploymentName { get; set; }
		
		/// <summary>
		/// To return errors when GetInstance call is done via HTTP to be unified with
		///other methods.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The id of the service instance. Must be unique within GCP project.
		///Maximum length is 64, GUID recommended.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance_id")]
		public string Instance_id { get; set; }
		
		/// <summary>
		/// The platform GUID for the organization under which the service is to be
		///provisioned.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organization_guid")]
		public string Organization_guid { get; set; }
		
		/// <summary>
		/// Configuration options for the service instance.
		///Parameters is JSON object serialized to string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, object> Parameters { get; set; }
		
		/// <summary>
		/// The ID of the plan. See `Service` and `Plan` resources for details.
		///Maximum length is 64, GUID recommended.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plan_id")]
		public string Plan_id { get; set; }
		
		/// <summary>
		/// Used only in UpdateServiceInstance request to optionally specify previous
		///fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous_values")]
		public System.Collections.Generic.Dictionary<string, object> Previous_values { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the instance, e.g.
		///projects/project_id/brokers/broker_id/service_instances/instance_id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// The id of the service. Must be a valid identifier of a service
		///contained in the list from a `ListServices()` call.
		///Maximum length is 64, GUID recommended.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_id")]
		public string Service_id { get; set; }
		
		/// <summary>
		/// The identifier for the project space within the platform organization.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="space_guid")]
		public string Space_guid { get; set; }
	}
	
	/// <summary>
	/// Describes a long running operation, which conforms to OpenService API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__Operation
	{
		
		/// <summary>
		/// Optional description of the Operation state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The state of the operation.
		///Valid values are: "in progress", "succeeded", and "failed".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
	}
	
	/// <summary>
	/// Response for the `UpdateServiceInstance()` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudServicebrokerV1beta1__UpdateServiceInstanceResponse
	{
		
		/// <summary>
		/// Used to communicate description of the response. Usually for non-standard
		///error codes.
		///https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// If broker executes operation asynchronously, this is the operation ID that
		///can be polled to check the completion status of said operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
	}
	
	/// <summary>
	/// Associates `members` with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1__Binding
	{
		
		/// <summary>
		/// Represents an expression text. Example:
		///
		///    title: "User account presence"
		///    description: "Determines whether the request has a user account"
		///    expression: "size(request.user) > 0"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleType__Expr Condition { get; set; }
		
		/// <summary>
		/// Specifies the identities requesting access for a Cloud Platform resource.
		///`members` can have the following values:
		///
		///* `allUsers`: A special identifier that represents anyone who is
		///   on the internet; with or without a Google account.
		///
		///* `allAuthenticatedUsers`: A special identifier that represents anyone
		///   who is authenticated with a Google account or a service account.
		///
		///* `user:{emailid}`: An email address that represents a specific Google
		///   account. For example, `alice@example.com` .
		///
		///
		///* `serviceAccount:{emailid}`: An email address that represents a service
		///   account. For example, `my-other-app@appspot.gserviceaccount.com`.
		///
		///* `group:{emailid}`: An email address that represents a Google group.
		///   For example, `admins@example.com`.
		///
		///* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
		///   identifier) representing a user that has been recently deleted. For
		///   example, `alice@example.com?uid=123456789012345678901`. If the user is
		///   recovered, this value reverts to `user:{emailid}` and the recovered user
		///   retains the role in the binding.
		///
		///* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
		///   unique identifier) representing a service account that has been recently
		///   deleted. For example,
		///   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
		///   If the service account is undeleted, this value reverts to
		///   `serviceAccount:{emailid}` and the undeleted service account retains the
		///   role in the binding.
		///
		///* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
		///   identifier) representing a Google group that has been recently
		///   deleted. For example, `admins@example.com?uid=123456789012345678901`. If
		///   the group is recovered, this value reverts to `group:{emailid}` and the
		///   recovered group retains the role in the binding.
		///
		///
		///* `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.
		///
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to `members`.
		///For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents an expression text. Example:
	///
	///    title: "User account presence"
	///    description: "Determines whether the request has a user account"
	///    expression: "size(request.user) > 0"
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleType__Expr
	{
		
		/// <summary>
		/// An optional description of the expression. This is a longer text which
		///describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in
		///Common Expression Language syntax.
		///
		///The application context of the containing message determines which
		///well-known feature set of CEL is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// An optional string indicating the location of the expression for error
		///reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// An optional title for the expression, i.e. a short string describing
		///its purpose. This can be used e.g. in UIs which allow to enter the
		///expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access
	///controls for Google Cloud resources.
	///
	///
	///A `Policy` is a collection of `bindings`. A `binding` binds one or more
	///`members` to a single `role`. Members can be user accounts, service accounts,
	///Google groups, and domains (such as G Suite). A `role` is a named list of
	///permissions; each `role` can be an IAM predefined role or a user-created
	///custom role.
	///
	///Optionally, a `binding` can specify a `condition`, which is a logical
	///expression that allows access to a resource only if the expression evaluates
	///to `true`. A condition can add constraints based on attributes of the
	///request, the resource, or both.
	///
	///**JSON example:**
	///
	///    {
	///      "bindings": [
	///        {
	///          "role": "roles/resourcemanager.organizationAdmin",
	///          "members": [
	///            "user:mike@example.com",
	///            "group:admins@example.com",
	///            "domain:google.com",
	///            "serviceAccount:my-project-id@appspot.gserviceaccount.com"
	///          ]
	///        },
	///        {
	///          "role": "roles/resourcemanager.organizationViewer",
	///          "members": ["user:eve@example.com"],
	///          "condition": {
	///            "title": "expirable access",
	///            "description": "Does not grant access after Sep 2020",
	///            "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
	///          }
	///        }
	///      ],
	///      "etag": "BwWWja0YfJA=",
	///      "version": 3
	///    }
	///
	///**YAML example:**
	///
	///    bindings:
	///    - members:
	///      - user:mike@example.com
	///      - group:admins@example.com
	///      - domain:google.com
	///      - serviceAccount:my-project-id@appspot.gserviceaccount.com
	///      role: roles/resourcemanager.organizationAdmin
	///    - members:
	///      - user:eve@example.com
	///      role: roles/resourcemanager.organizationViewer
	///      condition:
	///        title: expirable access
	///        description: Does not grant access after Sep 2020
	///        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
	///    - etag: BwWWja0YfJA=
	///    - version: 3
	///
	///For a description of IAM and its features, see the
	///[IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1__Policy
	{
		
		/// <summary>
		/// Associates a list of `members` to a `role`. Optionally, may specify a
		///`condition` that determines how and when the `bindings` are applied. Each
		///of the `bindings` must contain at least one member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1__Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help
		///prevent simultaneous updates of a policy from overwriting each other.
		///It is strongly suggested that systems make use of the `etag` in the
		///read-modify-write cycle to perform policy updates in order to avoid race
		///conditions: An `etag` is returned in the response to `getIamPolicy`, and
		///systems are expected to put that etag in the request to `setIamPolicy` to
		///ensure that their change will be applied to the same version of the policy.
		///
		///**Important:** If you use IAM Conditions, you must include the `etag` field
		///whenever you call `setIamPolicy`. If you omit this field, then IAM allows
		///you to overwrite a version `3` policy with a version `1` policy, and all of
		///the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy.
		///
		///Valid values are `0`, `1`, and `3`. Requests that specify an invalid value
		///are rejected.
		///
		///Any operation that affects conditional role bindings must specify version
		///`3`. This requirement applies to the following operations:
		///
		///* Getting a policy that includes a conditional role binding
		///* Adding a conditional role binding to a policy
		///* Changing a conditional role binding in a policy
		///* Removing any role binding, with or without a condition, from a policy
		///  that includes conditions
		///
		///**Important:** If you use IAM Conditions, you must include the `etag` field
		///whenever you call `setIamPolicy`. If you omit this field, then IAM allows
		///you to overwrite a version `3` policy with a version `1` policy, and all of
		///the conditions in the version `3` policy are lost.
		///
		///If a policy does not include any conditions, operations on that policy may
		///specify any valid version or leave the field unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1__SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access
		///controls for Google Cloud resources.
		///
		///
		///A `Policy` is a collection of `bindings`. A `binding` binds one or more
		///`members` to a single `role`. Members can be user accounts, service accounts,
		///Google groups, and domains (such as G Suite). A `role` is a named list of
		///permissions; each `role` can be an IAM predefined role or a user-created
		///custom role.
		///
		///Optionally, a `binding` can specify a `condition`, which is a logical
		///expression that allows access to a resource only if the expression evaluates
		///to `true`. A condition can add constraints based on attributes of the
		///request, the resource, or both.
		///
		///**JSON example:**
		///
		///    {
		///      "bindings": [
		///        {
		///          "role": "roles/resourcemanager.organizationAdmin",
		///          "members": [
		///            "user:mike@example.com",
		///            "group:admins@example.com",
		///            "domain:google.com",
		///            "serviceAccount:my-project-id@appspot.gserviceaccount.com"
		///          ]
		///        },
		///        {
		///          "role": "roles/resourcemanager.organizationViewer",
		///          "members": ["user:eve@example.com"],
		///          "condition": {
		///            "title": "expirable access",
		///            "description": "Does not grant access after Sep 2020",
		///            "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
		///          }
		///        }
		///      ],
		///      "etag": "BwWWja0YfJA=",
		///      "version": 3
		///    }
		///
		///**YAML example:**
		///
		///    bindings:
		///    - members:
		///      - user:mike@example.com
		///      - group:admins@example.com
		///      - domain:google.com
		///      - serviceAccount:my-project-id@appspot.gserviceaccount.com
		///      role: roles/resourcemanager.organizationAdmin
		///    - members:
		///      - user:eve@example.com
		///      role: roles/resourcemanager.organizationViewer
		///      condition:
		///        title: expirable access
		///        description: Does not grant access after Sep 2020
		///        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
		///    - etag: BwWWja0YfJA=
		///    - version: 3
		///
		///For a description of IAM and its features, see the
		///[IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1__Policy Policy { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1__TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with
		///wildcards (such as '*' or 'storage.*') are not allowed. For more
		///information see
		///[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1__TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is
		///allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated
	///empty messages in your APIs. A typical example is to use it as the request
	///or the response type of an API method. For instance:
	///
	///    service Foo {
	///      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
	///    }
	///
	///The JSON representation for `Empty` is empty JSON object `{}`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobuf__Empty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Unbinds from a service instance.
		/// For synchronous/asynchronous request details see CreateServiceInstance
		/// method.
		/// If binding does not exist HTTP 410 status will be returned.
		/// Servicebroker_projects_brokers_v2_service_instances_service_bindings_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">Name must match
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/`
		///`v2/service_instances/[INSTANCE_ID]/service_bindings/[BINDING_ID]`
		///or
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/`
		///`/instances/[INSTANCE_ID]/bindings/[BINDING_ID]`.</param>
		/// <param name="acceptsIncomplete">See CreateServiceInstanceRequest for details.</param>
		/// <param name="planId">The plan id of the service instance.</param>
		/// <param name="serviceId">Additional query parameter hints.
		///The service id of the service instance.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_service_instances_service_bindings_deleteAsync(string name, bool acceptsIncomplete, string planId, string serviceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&acceptsIncomplete="+acceptsIncomplete+"&planId=" + (planId==null? "" : System.Uri.EscapeDataString(planId))+"&serviceId=" + (serviceId==null? "" : System.Uri.EscapeDataString(serviceId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// GetBinding returns the binding information.
		/// Servicebroker_projects_brokers_v2_service_instances_service_bindings_get v1beta1/{name}
		/// </summary>
		/// <param name="name">Name must match
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings`.</param>
		/// <param name="planId">Plan id.</param>
		/// <param name="serviceId">Service id.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_service_instances_service_bindings_getAsync(string name, string planId, string serviceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&planId=" + (planId==null? "" : System.Uri.EscapeDataString(planId))+"&serviceId=" + (serviceId==null? "" : System.Uri.EscapeDataString(serviceId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing service instance.
		/// See CreateServiceInstance for possible response codes.
		/// Servicebroker_projects_brokers_v2_service_instances_patch v1beta1/{name}
		/// </summary>
		/// <param name="name">Name must match
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]`.</param>
		/// <param name="acceptsIncomplete">See CreateServiceInstanceRequest for details.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_service_instances_patchAsync(string name, bool acceptsIncomplete, GoogleCloudServicebrokerV1beta1__ServiceInstance requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&acceptsIncomplete="+acceptsIncomplete;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the state of the last operation for the binding.
		/// Only last (or current) operation can be polled.
		/// Servicebroker_projects_brokers_v2_service_instances_service_bindings_getLast_operation v1beta1/{name}/last_operation
		/// </summary>
		/// <param name="name">Name must match
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_binding/[BINDING_ID]`.</param>
		/// <param name="operation">If `operation` was returned during mutation operation, this field must be
		///populated with the provided value.</param>
		/// <param name="planId">Plan id.</param>
		/// <param name="serviceId">Service id.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_service_instances_service_bindings_getLast_operationAsync(string name, string operation, string planId, string serviceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/last_operation&operation=" + (operation==null? "" : System.Uri.EscapeDataString(operation))+"&planId=" + (planId==null? "" : System.Uri.EscapeDataString(planId))+"&serviceId=" + (serviceId==null? "" : System.Uri.EscapeDataString(serviceId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the bindings in the instance.
		/// Servicebroker_projects_brokers_instances_bindings_list v1beta1/{parent}/bindings
		/// </summary>
		/// <param name="parent">Parent must match
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/` +
		///`v2/service_instances/[INSTANCE_ID]`
		///or
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]`.</param>
		/// <param name="pageSize">Specifies the number of results to return per page. If there are fewer
		///elements than the specified number, returns all elements.
		///Optional. Acceptable values are 0 to 200, inclusive. (Default: 100)</param>
		/// <param name="pageToken">Specifies a page token to use. Set `pageToken` to a `nextPageToken`
		///returned by a previous list request to get the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_instances_bindings_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/bindings&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// ListBrokers lists brokers.
		/// Servicebroker_projects_brokers_list v1beta1/{parent}/brokers
		/// </summary>
		/// <param name="parent">Parent must match `projects/[PROJECT_ID]/brokers`.</param>
		/// <param name="pageSize">Specifies the number of results to return per page. If there are fewer
		///elements than the specified number, returns all elements.
		///Optional. Acceptable values are 0 to 200, inclusive. (Default: 100)</param>
		/// <param name="pageToken">Specifies a page token to use. Set `pageToken` to a `nextPageToken`
		///returned by a previous list request to get the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/brokers&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// CreateBroker creates a Broker.
		/// Servicebroker_projects_brokers_create v1beta1/{parent}/brokers
		/// </summary>
		/// <param name="parent">The project in which to create broker.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_createAsync(string parent, GoogleCloudServicebrokerV1beta1__Broker requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/brokers";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the instances in the brokers
		/// This API is an extension and not part of the OSB spec.
		/// Hence the path is a standard Google API URL.
		/// Servicebroker_projects_brokers_instances_list v1beta1/{parent}/instances
		/// </summary>
		/// <param name="parent">Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.</param>
		/// <param name="pageSize">Specifies the number of results to return per page. If there are fewer
		///elements than the specified number, returns all elements.
		///Optional. Acceptable values are 0 to 200, inclusive. (Default: 100)</param>
		/// <param name="pageToken">Specifies a page token to use. Set `pageToken` to a `nextPageToken`
		///returned by a previous list request to get the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_instances_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/instances&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// CreateBinding generates a service binding to an existing service instance.
		/// See ProviServiceInstance for async operation details.
		/// Servicebroker_projects_brokers_v2_service_instances_service_bindings_create v1beta1/{parent}/service_bindings/{binding_id}
		/// </summary>
		/// <param name="parent">The GCP container.
		///Must match
		///`projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]`.</param>
		/// <param name="binding_id">The id of the binding. Must be unique within GCP project.
		///Maximum length is 64, GUID recommended.
		///Required.</param>
		/// <param name="acceptsIncomplete">See CreateServiceInstanceRequest for details.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_service_instances_service_bindings_createAsync(string parent, string binding_id, bool acceptsIncomplete, GoogleCloudServicebrokerV1beta1__Binding requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/service_bindings/"+ (binding_id==null? "" : System.Uri.EscapeDataString(binding_id))+"&acceptsIncomplete="+acceptsIncomplete;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the Services registered with this broker for consumption for
		/// given service registry broker, which contains an set of services.
		/// Note, that Service producer API is separate from Broker API.
		/// Servicebroker_projects_brokers_v2_catalog_list v1beta1/{parent}/v2/catalog
		/// </summary>
		/// <param name="parent">Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.</param>
		/// <param name="pageSize">Specifies the number of results to return per page. If there are fewer
		///elements than the specified number, returns all elements.
		///Optional. If unset or 0, all the results will be returned.</param>
		/// <param name="pageToken">Specifies a page token to use. Set `pageToken` to a `nextPageToken`
		///returned by a previous list request to get the next page of results.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_catalog_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/v2/catalog&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provisions a service instance.
		/// If `request.accepts_incomplete` is false and Broker cannot execute request
		/// synchronously HTTP 422 error will be returned along with
		/// FAILED_PRECONDITION status.
		/// If `request.accepts_incomplete` is true and the Broker decides to execute
		/// resource asynchronously then HTTP 202 response code will be returned and a
		/// valid polling operation in the response will be included.
		/// If Broker executes the request synchronously and it succeeds HTTP 201
		/// response will be furnished.
		/// If identical instance exists, then HTTP 200 response will be returned.
		/// If an instance with identical ID but mismatching parameters exists, then
		/// HTTP 409 status code will be returned.
		/// Servicebroker_projects_brokers_v2_service_instances_create v1beta1/{parent}/v2/service_instances/{instance_id}
		/// </summary>
		/// <param name="parent">Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.</param>
		/// <param name="instance_id">The id of the service instance. Must be unique within GCP project.
		///Maximum length is 64, GUID recommended.
		///Required.</param>
		/// <param name="acceptsIncomplete">Value indicating that API client supports asynchronous operations. If
		///Broker cannot execute the request synchronously HTTP 422 code will be
		///returned to HTTP clients along with FAILED_PRECONDITION error.
		///If true and broker will execute request asynchronously 202 HTTP code will
		///be returned.
		///This broker always requires this to be true as all mutator operations are
		///asynchronous.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_projects_brokers_v2_service_instances_createAsync(string parent, string instance_id, bool acceptsIncomplete, GoogleCloudServicebrokerV1beta1__ServiceInstance requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/v2/service_instances/"+ (instance_id==null? "" : System.Uri.EscapeDataString(instance_id))+"&acceptsIncomplete="+acceptsIncomplete;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets the access control policy for a resource.
		/// Returns an empty policy if the resource exists and does not have a policy
		/// set.
		/// Servicebroker_getIamPolicy v1beta1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested.
		///See the operation documentation for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The policy format version to be returned.
		///
		///Valid values are 0, 1, and 3. Requests specifying an invalid value will be
		///rejected.
		///
		///Requests for policies with any conditional bindings must specify version 3.
		///Policies without any conditional bindings may specify any valid value or
		///leave the field unset.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Sets the access control policy on the specified resource. Replaces any
		/// existing policy.
		/// 
		/// Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED
		/// Servicebroker_setIamPolicy v1beta1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified.
		///See the operation documentation for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_setIamPolicyAsync(string resource, GoogleIamV1__SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns permissions that a caller has on the specified resource.
		/// If the resource does not exist, this will return an empty set of
		/// permissions, not a NOT_FOUND error.
		/// 
		/// Note: This operation is designed to be used for building permission-aware
		/// UIs and command-line tools, not for authorization checking. This operation
		/// may "fail open" without warning.
		/// Servicebroker_testIamPermissions v1beta1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested.
		///See the operation documentation for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task Servicebroker_testIamPermissionsAsync(string resource, GoogleIamV1__TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

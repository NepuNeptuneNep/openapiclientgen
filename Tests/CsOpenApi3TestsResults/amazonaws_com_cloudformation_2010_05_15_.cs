//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateOrganizationsAccessOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidOperationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateTypeOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CFNRegistryException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDescribeTypeConfigurationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BatchDescribeTypeConfigurationsError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeConfigurationIdentifier[] UnprocessedTypeConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeConfigurationDetails[] TypeConfigurations { get; set; }
	}
	
	/// <summary>
	/// Detailed information concerning an error generated during the setting of configuration data for a CloudFormation extension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDescribeTypeConfigurationsError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeConfigurationIdentifier TypeConfigurationIdentifier { get; set; }
	}
	
	/// <summary>
	/// Identifying information for the configuration of a CloudFormation extension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeConfigurationIdentifier
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeConfigurationAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeConfigurationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ThirdPartyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODULE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOOK = 2,
	}
	
	/// <summary>
	/// <p>Detailed information concerning the specification of a CloudFormation extension in a given account and Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeConfigurationDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Alias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefaultConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeConfigurationNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TokenAlreadyExistsException
	{
	}
	
	/// <summary>
	/// The output for a <a>ContinueUpdateRollback</a> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContinueUpdateRollbackOutput
	{
	}
	
	/// <summary>
	/// The output for the <a>CreateChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateChangeSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// The Parameter data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResolvedValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Capability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_IAM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_NAMED_IAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAPABILITY_AUTO_EXPAND = 2,
	}
	
	/// <summary>
	/// A rollback trigger CloudFormation monitors during creation and updating of stacks. If any of the alarms you specify goes to ALARM state during the stack operation or within the specified monitoring period afterwards, CloudFormation rolls back the entire stack operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackTrigger
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The Tag type enables you to specify a key-value pair that can be used to store information about an CloudFormation stack.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Describes the target resource of an import operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceToImport
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdentifierProperties ResourceIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceIdentifierProperties
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlreadyExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InsufficientCapabilitiesException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	/// <summary>
	/// The output for a <a>CreateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackInstancesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountFilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERSECTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIFFERENCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNION = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RegionConcurrencyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEQUENTIAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARALLEL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationInProgressException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationIdAlreadyExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StaleRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NameAlreadyExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatedButModifiedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateOrganizationsAccessOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateTypeOutput
	{
	}
	
	/// <summary>
	/// The output for the <a>DeleteChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteChangeSetOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidChangeSetStatusException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStackInstancesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStackSetOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetNotEmptyException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterTypeOutput
	{
	}
	
	/// <summary>
	/// The output for the <a>DescribeAccountLimits</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountLimitsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountLimit[] AccountLimits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>The AccountLimit data type.</p> <p>CloudFormation has the following limits per account:</p> <ul> <li> <p>Number of concurrent resources</p> </li> <li> <p>Number of stacks</p> </li> <li> <p>Number of stack outputs</p> </li> </ul> <p>For more information about these account limits, and other CloudFormation limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">CloudFormation quotas</a> in the <i>CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>DescribeChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeChangeSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExecutionStatus ExecutionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] NotificationARNs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Change[] Changes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeNestedStacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnStackFailure OnStackFailure { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSOLETE = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeSetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_PENDING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 7,
	}
	
	/// <summary>
	/// <p>Structure containing the rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p> <p>Rollback triggers enable you to have CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you've specified. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html">Monitor and Roll Back Stack Operations</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackTrigger[] RollbackTriggers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringTimeInMinutes { get; set; }
	}
	
	/// <summary>
	/// The <code>Change</code> structure describes the changes CloudFormation will perform if you execute the change set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Change
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HookInvocationCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChange ResourceChange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resource = 0,
	}
	
	/// <summary>
	/// The <code>ResourceChange</code> structure describes the resource and the action that CloudFormation will perform on it if you execute this change set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceChange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Replacement Replacement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceAttribute[] Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceChangeDetail[] Details { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleInfo ModuleInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Add = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Modify = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Remove = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Import = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dynamic = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Replacement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		True = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		False = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conditional = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResourceAttribute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Properties = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Metadata = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreationPolicy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdatePolicy = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeletionPolicy = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 5,
	}
	
	/// <summary>
	/// For a resource with <code>Modify</code> as the action, the <code>ResourceChange</code> structure describes the changes CloudFormation will make to that resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceChangeDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTargetDefinition Target { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationType Evaluation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSource ChangeSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CausingEntity { get; set; }
	}
	
	/// <summary>
	/// The field that CloudFormation will change, such as the name of a resource's property, and whether the resource will be recreated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceTargetDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceAttribute Attribute { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RequiresRecreation RequiresRecreation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RequiresRecreation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Never = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Conditionally = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Always = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Static = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dynamic = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceReference = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterReference = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceAttribute = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DirectModification = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Automatic = 4,
	}
	
	/// <summary>
	/// <p>Contains information about the module from which the resource was created, if the resource was created from a module included in the stack template.</p> <p>For more information about modules, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/modules.html">Using modules to encapsulate and reuse resource configurations</a> in the <i>CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModuleInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeHierarchy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalIdHierarchy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OnStackFailure
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOTHING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeSetNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeChangeSetHooksOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetHook[] Hooks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetHooksStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
	}
	
	/// <summary>
	/// Specifies the resource, the hook, and the hook version to be invoked.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeSetHook
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HookInvocationPoint InvocationPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookFailureMode FailureMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeConfigurationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetHookTargetDetails TargetDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HookInvocationPoint
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRE_PROVISION = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HookFailureMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAIL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
	}
	
	/// <summary>
	/// Specifies target details for an activated hook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeSetHookTargetDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HookTargetType TargetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetHookResourceTargetDetails ResourceTargetDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HookTargetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
	}
	
	/// <summary>
	/// Specifies <code>RESOURCE</code> type target details for activated hooks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeSetHookResourceTargetDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeAction ResourceAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeSetHooksStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLANNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLANNED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAVAILABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOrganizationsAccessOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OrganizationStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OrganizationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_PERMANENTLY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePublisherOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PublisherStatus PublisherStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityProvider IdentityProvider { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherProfile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PublisherStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNVERIFIED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityProvider
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_Marketplace = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GitHub = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bitbucket = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackDriftDetectionStatusOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackDriftDetectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackDriftStatus StackDriftStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackDriftDetectionStatus DetectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DetectionStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DriftedStackResourceCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackDriftDetectionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECTION_COMPLETE = 2,
	}
	
	/// <summary>
	/// The output for a <a>DescribeStackEvents</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackEventsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackEvent[] StackEvents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The StackEvent data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackEvent
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EventId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HookType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookStatus HookStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HookStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookInvocationPoint HookInvocationPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HookFailureMode HookFailureMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResourceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_SKIPPED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_IN_PROGRESS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_FAILED = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_IN_PROGRESS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_COMPLETE = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_FAILED = 21,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HookStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOOK_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOOK_COMPLETE_SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOOK_COMPLETE_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOOK_FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackInstanceOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstance StackInstance { get; set; }
	}
	
	/// <summary>
	/// An CloudFormation stack, in a specific account and Region, that's part of a stack set operation. A stack instance is a reference to an attempted or actual stack in a given account within a given Region. A stack instance can exist without a stack—for example, if the stack couldn't be created for some reason. A stack instance is associated with only one stack set. Each stack instance contains the ID of its associated stack set, in addition to the ID of the actual stack and the stack status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] ParameterOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceComprehensiveStatus StackInstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastDriftCheckTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastOperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTDATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INOPERABLE = 2,
	}
	
	/// <summary>
	/// The detailed status of the stack instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackInstanceComprehensiveStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceDetailedStatus DetailedStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackInstanceDetailedStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INOPERABLE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED_SUSPENDED_ACCOUNT = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackInstanceNotFoundException
	{
	}
	
	/// <summary>
	/// The output for a <a>DescribeStackResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackResourceOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDetail StackResourceDetail { get; set; }
	}
	
	/// <summary>
	/// Contains detailed information about the specified stack resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackResourceDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformation DriftInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleInfo ModuleInfo { get; set; }
	}
	
	/// <summary>
	/// Contains information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackResourceDriftInformation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackResourceDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackResourceDriftsOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDrift[] StackResourceDrifts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the drift information for a resource that has been checked for drift. This includes actual and expected property values for resources in which CloudFormation has detected drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Resources that don't currently support drift detection can't be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackResourceDrift
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhysicalResourceIdContextKeyValuePair[] PhysicalResourceIdContext { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExpectedProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActualProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyDifference[] PropertyDifferences { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleInfo ModuleInfo { get; set; }
	}
	
	/// <summary>
	/// Context information that enables CloudFormation to uniquely identify a resource. CloudFormation uses context key-value pairs in cases where a resource's logical and physical IDs aren't enough to uniquely identify that resource. Each context key-value pair specifies a resource that contains the targeted resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhysicalResourceIdContextKeyValuePair
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about a resource property whose actual value differs from its expected value, as defined in the stack template and any values specified as template parameters. These will be present only for resources whose <code>StackResourceDriftStatus</code> is <code>MODIFIED</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PropertyDifference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PropertyPath { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExpectedValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActualValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DifferenceType DifferenceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DifferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUAL = 2,
	}
	
	/// <summary>
	/// The output for a <a>DescribeStackResources</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackResourcesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackResource[] StackResources { get; set; }
	}
	
	/// <summary>
	/// The StackResource data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformation DriftInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleInfo ModuleInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSet StackSet { get; set; }
	}
	
	/// <summary>
	/// A structure that contains information about a stack set. A stack set enables you to provision stacks into Amazon Web Services accounts and across Regions by using a single CloudFormation template. In the stack set, you specify the template to use, in addition to any parameters and capabilities that the template requires.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdministrationRoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionDetails StackSetDriftDetectionDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PermissionModels PermissionModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ManagedExecution ManagedExecution { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackSetStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 1,
	}
	
	/// <summary>
	/// <p>Detailed information about the drift status of the stack set.</p> <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations in-progress isn't included.</p> <p>For stack set operations, includes information about drift operations currently being performed on the stack set.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting unmanaged changes in stack sets</a> in the <i>CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetDriftDetectionDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionStatus DriftDetectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastDriftCheckTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalStackInstancesCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DriftedStackInstancesCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InSyncStackInstancesCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InProgressStackInstancesCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedStackInstancesCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackSetDriftStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_SYNC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CHECKED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackSetDriftDetectionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
	}
	
	/// <summary>
	/// [Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoDeployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainStacksOnAccountRemoval { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PermissionModels
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_MANAGED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF_MANAGED = 1,
	}
	
	/// <summary>
	/// Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ManagedExecution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Active { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackSetOperationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperation StackSetOperation { get; set; }
	}
	
	/// <summary>
	/// The structure that contains information about a stack set operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainStacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdministrationRoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetDriftDetectionDetails StackSetDriftDetectionDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationStatusDetails StatusDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackSetOperationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETECT_DRIFT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackSetOperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED = 5,
	}
	
	/// <summary>
	/// <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	/// <summary>
	/// <p>[Service-managed permissions] The Organizations accounts to which StackSets deploys. StackSets doesn't deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization.</p> <p>For update operations, you can specify either <code>Accounts</code> or <code>OrganizationalUnitIds</code>. For create and delete operations, specify <code>OrganizationalUnitIds</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentTargets
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountsUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountFilterType AccountFilterType { get; set; }
	}
	
	/// <summary>
	/// Detailed information about the StackSet operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetOperationStatusDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedStackInstancesCount { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>DescribeStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStacksOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Stack[] Stacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The Stack data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Stack
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DeletionTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackStatus StackStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableRollback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] NotificationARNs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeoutInMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Output[] Outputs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableTerminationProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackDriftInformation DriftInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainExceptOnCreate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK_COMPLETE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_COMPLETE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE_CLEANUP_IN_PROGRESS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_COMPLETE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_IN_PROGRESS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_FAILED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ROLLBACK_COMPLETE = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVIEW_IN_PROGRESS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_IN_PROGRESS = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_COMPLETE = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_IN_PROGRESS = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_FAILED = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT_ROLLBACK_COMPLETE = 22,
	}
	
	/// <summary>
	/// The Output data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Output
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OutputKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutputValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportName { get; set; }
	}
	
	/// <summary>
	/// Contains information about whether the stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackDriftInformation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackDriftStatus StackDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTypeOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefaultVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeTestsStatus TypeTestsStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeTestsStatusDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Schema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProvisioningType ProvisioningType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeprecatedStatus DeprecatedStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RequiredActivatedType[] RequiredActivatedTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DocumentationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset TimeCreated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalTypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicVersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LatestPublicVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsActivated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TypeTestsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_TESTED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProvisioningType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_PROVISIONABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMMUTABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULLY_MUTABLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeprecatedStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 1,
	}
	
	/// <summary>
	/// Contains logging configuration information for an extension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoggingConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
	}
	
	/// <summary>
	/// <p>For extensions that are modules, a public third-party extension that must be activated in your account in order for the module itself to be activated.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/modules.html#module-enabling">Activating public modules for use in your account</a> in the <i>CloudFormation User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequiredActivatedType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeNameAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SupportedMajorVersions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Visibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTypeRegistrationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegistrationStatus ProgressStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeVersionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RegistrationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectStackDriftOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackDriftDetectionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectStackResourceDriftOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDrift StackResourceDrift { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectStackSetDriftOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	/// <summary>
	/// The output for a <a>EstimateTemplateCost</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EstimateTemplateCostOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The output for the <a>ExecuteChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecuteChangeSetOutput
	{
	}
	
	/// <summary>
	/// The output for the <a>GetStackPolicy</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetStackPolicyOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyBody { get; set; }
	}
	
	/// <summary>
	/// The output for <a>GetTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTemplateOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateStage[] StagesAvailable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TemplateStage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Original = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processed = 1,
	}
	
	/// <summary>
	/// The output for the <a>GetTemplateSummary</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTemplateSummaryOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterDeclaration[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapabilitiesReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DeclaredTransforms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceIdentifierSummary[] ResourceIdentifierSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Warnings Warnings { get; set; }
	}
	
	/// <summary>
	/// The ParameterDeclaration data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterDeclaration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NoEcho { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParameterConstraints ParameterConstraints { get; set; }
	}
	
	/// <summary>
	/// A set of criteria that CloudFormation uses to validate parameter values. Although other constraints might be defined in the stack template, CloudFormation returns only the <code>AllowedValues</code> property.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParameterConstraints
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowedValues { get; set; }
	}
	
	/// <summary>
	/// Describes the target resources of a specific type in your import template (for example, all <code>AWS::S3::Bucket</code> resources) and the properties you can provide during the import to identify resources of that type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceIdentifierSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LogicalResourceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceIdentifiers { get; set; }
	}
	
	/// <summary>
	/// Contains any warnings returned by the <code>GetTemplateSummary</code> API action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Warnings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] UnrecognizedResourceTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportStacksToStackSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackNotFoundException
	{
	}
	
	/// <summary>
	/// The output for the <a>ListChangeSets</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListChangeSetsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetSummary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The <code>ChangeSetSummary</code> structure describes a change set, its status, and the stack with which it's associated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExecutionStatus ExecutionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeNestedStacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentChangeSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootChangeSetId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExportsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Export[] Exports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The <code>Export</code> structure describes the exported output values for a stack.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Export
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ExportingStackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListImportsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Imports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackInstanceResourceDriftsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceResourceDriftsSummary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The structure containing summary information about resource drifts for a stack instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackInstanceResourceDriftsSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhysicalResourceIdContextKeyValuePair[] PhysicalResourceIdContext { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyDifference[] PropertyDifferences { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackInstancesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceSummary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The structure that contains summary information about a stack instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackInstanceSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceComprehensiveStatus StackInstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastDriftCheckTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastOperationId { get; set; }
	}
	
	/// <summary>
	/// The filter to apply to stack instances
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackInstanceFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackInstanceFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETAILED_STATUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_OPERATION_ID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIFT_STATUS = 2,
	}
	
	/// <summary>
	/// The output for a <a>ListStackResources</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackResourcesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceSummary[] StackResourceSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains high-level information about the specified stack resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackResourceSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceStatus ResourceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftInformationSummary DriftInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ModuleInfo ModuleInfo { get; set; }
	}
	
	/// <summary>
	/// Summarizes information about whether the resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackResourceDriftInformationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStatus StackResourceDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackSetOperationResultsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationResultSummary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The structure that contains information about a specified operation's results for a given account in a given Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetOperationResultSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationResultStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountGateResult AccountGateResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackSetOperationResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
	}
	
	/// <summary>
	/// <p>Structure that contains the results of the account gate function which CloudFormation invokes, if present, before proceeding with a stack set operation in an account and Region.</p> <p>For each account and Region, CloudFormation lets you specify a Lambda function that encapsulates any requirements that must be met before CloudFormation can proceed with a stack set operation in that account and Region. CloudFormation invokes the function each time a stack set operation is requested for that account and Region; if the function returns <code>FAILED</code>, CloudFormation cancels the operation in that account and Region, and sets the stack set operation result status for that account and Region to <code>FAILED</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-account-gating.html">Configuring a target account gate</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountGateResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountGateStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AccountGateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 2,
	}
	
	/// <summary>
	/// The status that operation results are filtered by.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationResultFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OperationResultFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OperationResultFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION_RESULT_STATUS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackSetOperationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationSummary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The structures that contain summary information about the specified operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetOperationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationAction Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationStatusDetails StatusDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackSetsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetSummary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The structures that contain summary information about the specified stack set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PermissionModels PermissionModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackDriftStatus DriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastDriftCheckTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ManagedExecution ManagedExecution { get; set; }
	}
	
	/// <summary>
	/// The output for <a>ListStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStacksOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSummary[] StackSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The StackSummary Data Type
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DeletionTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackStatus StackStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackDriftInformationSummary DriftInformation { get; set; }
	}
	
	/// <summary>
	/// Contains information about whether the stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackDriftInformationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StackDriftStatus StackDriftStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastCheckTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTypeRegistrationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegistrationTokenList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTypeVersionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TypeVersionSummary[] TypeVersionSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a specific version of a CloudFormation extension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDefaultVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset TimeCreated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTypesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TypeSummary[] TypeSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about the specified CloudFormation extension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicVersionNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LatestPublicVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityProvider PublisherIdentity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsActivated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Category
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTERED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIRD_PARTY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_TYPES = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishTypeOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicTypeArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecordHandlerProgressOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidStateTransitionException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationStatusCheckFailedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterPublisherOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterTypeOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RegistrationToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackStackOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTypeConfigurationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTypeDefaultVersionOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopStackSetOperationOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestTypeOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeVersionArn { get; set; }
	}
	
	/// <summary>
	/// The output for an <a>UpdateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackInstancesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackSetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTerminationProtectionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// The output for <a>ValidateTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidateTemplateOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateParameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapabilitiesReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DeclaredTransforms { get; set; }
	}
	
	/// <summary>
	/// The TemplateParameter data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateParameter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParameterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NoEcho { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateOrganizationsAccessInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VersionBump
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAJOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINOR = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicTypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeNameAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VersionBump VersionBump { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MajorVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchDescribeTypeConfigurationsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TypeConfigurationIdentifier[] TypeConfigurationIdentifiers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CallAs
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SELF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELEGATED_ADMIN = 1,
	}
	
	/// <summary>
	/// The input for the <a>CancelUpdateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelUpdateStackInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeSetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT = 2,
	}
	
	/// <summary>
	/// The input for the <a>ContinueUpdateRollback</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContinueUpdateRollbackInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourcesToSkip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>CreateChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateChangeSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] NotificationARNs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeSetType ChangeSetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceToImport[] ResourcesToImport { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeNestedStacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnStackFailure OnStackFailure { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OnFailure
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO_NOTHING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLBACK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 2,
	}
	
	/// <summary>
	/// The input for <a>CreateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableRollback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeoutInMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] NotificationARNs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnStackFailure OnFailure { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableTerminationProtection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainExceptOnCreate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackInstancesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] ParameterOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdministrationRoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PermissionModels PermissionModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ManagedExecution ManagedExecution { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateOrganizationsAccessInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>DeleteChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteChangeSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DeleteStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStackInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RetainResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStackInstancesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool RetainStacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStackSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RegistryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODULE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOOK = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>DescribeAccountLimits</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAccountLimitsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeChangeSetHooksInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>DescribeChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeChangeSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOrganizationsAccessInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePublisherInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackDriftDetectionStatusInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackDriftDetectionId { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DescribeStackEvents</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackEventsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackInstanceInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceAccount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackResourceDriftsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStatus[] StackResourceDriftStatusFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DescribeStackResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackResourceInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DescribeStackResources</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackResourcesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhysicalResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackSetOperationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	/// <summary>
	/// The input for <a>DescribeStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStacksInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTypeRegistrationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RegistrationToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectStackDriftInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LogicalResourceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectStackResourceDriftInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectStackSetDriftInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	/// <summary>
	/// The input for an <a>EstimateTemplateCost</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EstimateTemplateCostInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>ExecuteChangeSet</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecuteChangeSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableRollback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainExceptOnCreate { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>GetStackPolicy</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetStackPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
	}
	
	/// <summary>
	/// The input for a <a>GetTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTemplateInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateStage TemplateStage { get; set; }
	}
	
	/// <summary>
	/// Options for the <code>GetTemplateSummary</code> API action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateSummaryConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TreatUnrecognizedResourceTypesAsWarnings { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>GetTemplateSummary</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTemplateSummaryInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateSummaryConfig TemplateSummaryConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HandlerErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotUpdatable = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessDenied = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidCredentials = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AlreadyExists = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotFound = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceConflict = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Throttling = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceLimitExceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStabilized = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GeneralServiceException = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceInternalError = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkFailure = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalFailure = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidTypeConfiguration = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HandlerInternalFailure = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NonCompliant = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnsupportedTarget = 18,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportStacksToStackSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StackIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackIdsUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>ListChangeSets</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListChangeSetsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListExportsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListImportsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExportName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackInstanceResourceDriftsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackResourceDriftStatus[] StackInstanceResourceDriftStatuses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceAccount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceRegion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackInstancesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackInstanceFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceAccount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackInstanceRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>ListStackResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackResourcesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackSetOperationResultsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OperationResultFilter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackSetOperationsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStackSetsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	/// <summary>
	/// The input for <a>ListStacks</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStacksInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackStatus[] StackStatusFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTypeRegistrationsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RegistrationStatus RegistrationStatusFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTypeVersionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeprecatedStatus DeprecatedStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
	}
	
	/// <summary>
	/// Filter criteria to use in determining which extensions to return.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TypeFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Category Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeNamePrefix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTypesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Visibility Visibility { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProvisioningType ProvisioningType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeprecatedStatus DeprecatedStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TypeFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicVersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecordHandlerProgressInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BearerToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OperationStatus OperationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OperationStatus CurrentOperationStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HandlerErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterPublisherInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AcceptTermsAndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SchemaHandlerPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LoggingConfig LoggingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResourceSignalStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackStackInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainExceptOnCreate { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>SetStackPolicy</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetStackPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyURL { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTypeConfigurationInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTypeDefaultVersionInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
	}
	
	/// <summary>
	/// The input for the <a>SignalResource</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignalResourceInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogicalResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UniqueId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceSignalStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopStackSetOperationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestTypeInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThirdPartyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogDeliveryBucket { get; set; }
	}
	
	/// <summary>
	/// The input for an <a>UpdateStack</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyDuringUpdateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyDuringUpdateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackConfiguration RollbackConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackPolicyURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] NotificationARNs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DisableRollback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientRequestToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainExceptOnCreate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackInstancesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] ParameterOverrides { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackSetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UsePreviousTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameter[] Parameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Capability[] Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackSetOperationPreferences OperationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdministrationRoleARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentTargets DeploymentTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PermissionModels PermissionModel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoDeployment AutoDeployment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CallAs CallAs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ManagedExecution ManagedExecution { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTerminationProtectionInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool EnableTerminationProtection { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
	}
	
	/// <summary>
	/// The input for <a>ValidateTemplate</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidateTemplateInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateURL { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Activate trusted access with Organizations. With trusted access between StackSets and Organizations activated, the management account has permissions to create and manage StackSets for your organization.
		/// GET_ActivateOrganizationsAccess #Action=ActivateOrganizationsAccess
		/// </summary>
		/// <returns>Success</returns>
		public async Task GET_ActivateOrganizationsAccessAsync(GET_ActivateOrganizationsAccessAction Action, GET_ActivateOrganizationsAccessVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ActivateOrganizationsAccess?Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Activates a public third-party extension, making it available for use in stack templates. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-public.html">Using public extensions</a> in the <i>CloudFormation User Guide</i>.</p> <p>Once you have activated a public third-party extension in your account and Region, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html">SetTypeConfiguration</a> to specify configuration properties for the extension. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p>
		/// GET_ActivateType #Action=ActivateType
		/// </summary>
		/// <param name="Type"><p>The extension type.</p> <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p></param>
		/// <param name="PublicTypeArn"><p>The Amazon Resource Name (ARN) of the public extension.</p> <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="PublisherId"><p>The ID of the extension publisher.</p> <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
		/// Min length: 1
		/// Max length: 40
		// </param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="TypeNameAlias"><p>An alias to assign to the public extension, in this account and Region. If you specify an alias for the extension, CloudFormation treats the alias as the extension type name within this account and Region. You must use the alias to refer to the extension in your templates, API calls, and CloudFormation console.</p> <p>An extension alias must be unique within a given account and Region. You can activate the same public resource multiple times in the same account and Region, using different type name aliases.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="AutoUpdate"><p>Whether to automatically update the extension in this account and Region when a new <i>minor</i> version is published by the extension publisher. Major versions released by the publisher must be manually updated.</p> <p>The default is <code>true</code>.</p></param>
		/// <param name="LoggingConfig">Contains logging configuration information for an extension.</param>
		/// <param name="ExecutionRoleArn">The name of the IAM execution role to use to activate the extension.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="VersionBump"><p>Manually updates a previously-activated type to a new major or minor version, if available. You can also use this parameter to update the value of <code>AutoUpdate</code>.</p> <ul> <li> <p> <code>MAJOR</code>: CloudFormation updates the extension to the newest major version, if one is available.</p> </li> <li> <p> <code>MINOR</code>: CloudFormation updates the extension to the newest minor version, if one is available.</p> </li> </ul></param>
		/// <param name="MajorVersion"><p>The major version of this extension you want to activate, if multiple major versions are available. The default is the latest major version. CloudFormation uses the latest available <i>minor</i> version of the major version selected.</p> <p>You can specify <code>MajorVersion</code> or <code>VersionBump</code>, but not both.</p>
		/// Minimum: 1
		/// Maximum: 100000
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ActivateTypeAsync(ThirdPartyType Type, string PublicTypeArn, string PublisherId, string TypeName, string TypeNameAlias, bool AutoUpdate, GET_ActivateTypeLoggingConfig LoggingConfig, string ExecutionRoleArn, VersionBump VersionBump, int MajorVersion, GET_ActivateTypeAction Action, GET_ActivateTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ActivateType?Type=" + Type+"&PublicTypeArn=" + (PublicTypeArn==null? "" : System.Uri.EscapeDataString(PublicTypeArn))+"&PublisherId=" + (PublisherId==null? "" : System.Uri.EscapeDataString(PublisherId))+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&TypeNameAlias=" + (TypeNameAlias==null? "" : System.Uri.EscapeDataString(TypeNameAlias))+"&AutoUpdate="+AutoUpdate+"&LoggingConfig=" + LoggingConfig+"&ExecutionRoleArn=" + (ExecutionRoleArn==null? "" : System.Uri.EscapeDataString(ExecutionRoleArn))+"&VersionBump=" + VersionBump+"&MajorVersion="+MajorVersion+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns configuration data for the specified CloudFormation extensions, from the CloudFormation registry for the account and Region.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p>
		/// GET_BatchDescribeTypeConfigurations #Action=BatchDescribeTypeConfigurations
		/// </summary>
		/// <param name="TypeConfigurationIdentifiers">The list of identifiers for the desired extension configurations.
		/// Minimum items: 1
		// </param>
		/// <returns>Success</returns>
		public async Task GET_BatchDescribeTypeConfigurationsAsync(TypeConfigurationIdentifier[] TypeConfigurationIdentifiers, GET_BatchDescribeTypeConfigurationsAction Action, GET_BatchDescribeTypeConfigurationsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=BatchDescribeTypeConfigurations?"+string.Join("&", TypeConfigurationIdentifiers.Select(z => $"TypeConfigurationIdentifiers={z}"))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.</p> <note> <p>You can cancel only stacks that are in the <code>UPDATE_IN_PROGRESS</code> state.</p> </note>
		/// GET_CancelUpdateStack #Action=CancelUpdateStack
		/// </summary>
		/// <param name="StackName"><note> <p>If you don't pass a parameter to <code>StackName</code>, the API returns a response that describes all resources in the account.</p> <p>The IAM policy below can be added to IAM policies when you want to limit resource-level permissions and avoid returning a response when no parameter is sent in the request:</p> <p> <code>{ "Version": "2012-10-17", "Statement": [{ "Effect": "Deny", "Action": "cloudformation:DescribeStacks", "NotResource": "arn:aws:cloudformation:*:*:stack/*/*" }] }</code> </p> </note> <p>The name or the unique stack ID that's associated with the stack.</p></param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that CloudFormation successfully received them.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_CancelUpdateStackAsync(string StackName, string ClientRequestToken, GET_CancelUpdateStackAction Action, GET_CancelUpdateStackVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CancelUpdateStack?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>For a specified stack that's in the <code>UPDATE_ROLLBACK_FAILED</code> state, continues rolling it back to the <code>UPDATE_ROLLBACK_COMPLETE</code> state. Depending on the cause of the failure, you can manually <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> fix the error</a> and continue the rollback. By continuing the rollback, you can return your stack to a working state (the <code>UPDATE_ROLLBACK_COMPLETE</code> state), and then try to update the stack again.</p> <p>A stack goes into the <code>UPDATE_ROLLBACK_FAILED</code> state when CloudFormation can't roll back all changes after a failed stack update. For example, you might have a stack that's rolling back to an old database instance that was deleted outside of CloudFormation. Because CloudFormation doesn't know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.</p>
		/// GET_ContinueUpdateRollback #Action=ContinueUpdateRollback
		/// </summary>
		/// <param name="StackName"><p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note> <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p> </note>
		/// Min length: 1
		// </param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to roll back the stack. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation always uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least permission.</p> <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that's generated from your user credentials.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="ResourcesToSkip"><p>A list of the logical IDs of the resources that CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was canceled. To check why a resource update failed, use the <a>DescribeStackResources</a> action, and view the resource status reason.</p> <important> <p>Specify this property to skip rolling back resources that CloudFormation can't successfully roll back. We recommend that you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable.</p> </important> <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources.</p> <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>.</p> <note> <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>.</p> </note></param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that CloudFormation successfully received them.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ContinueUpdateRollbackAsync(string StackName, string RoleARN, string[] ResourcesToSkip, string ClientRequestToken, GET_ContinueUpdateRollbackAction Action, GET_ContinueUpdateRollbackVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ContinueUpdateRollback?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&RoleARN=" + (RoleARN==null? "" : System.Uri.EscapeDataString(RoleARN))+"&"+string.Join("&", ResourcesToSkip.Select(z => $"ResourcesToSkip={System.Uri.EscapeDataString(z.ToString())}"))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn't exist or an existing stack. If you create a change set for a stack that doesn't exist, the change set shows all of the resources that CloudFormation will create. If you create a change set for an existing stack, CloudFormation compares the stack's information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.</p> <p>To create a change set for a stack that doesn't exist, for the <code>ChangeSetType</code> parameter, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code> for the <code>ChangeSetType</code> parameter. To create a change set for an import operation, specify <code>IMPORT</code> for the <code>ChangeSetType</code> parameter. After the <code>CreateChangeSet</code> call successfully completes, CloudFormation starts creating the change set. To check the status of the change set or to review it, use the <a>DescribeChangeSet</a> action.</p> <p>When you are satisfied with the changes the change set will make, execute the change set by using the <a>ExecuteChangeSet</a> action. CloudFormation doesn't make changes until you execute the change set.</p> <p>To create a change set for the entire stack hierarchy, set <code>IncludeNestedStacks</code> to <code>True</code>.</p>
		/// GET_CreateChangeSet #Action=CreateChangeSet
		/// </summary>
		/// <param name="StackName">The name or the unique ID of the stack for which you are creating a change set. CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.
		/// Min length: 1
		// </param>
		/// <param name="TemplateBody"><p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. CloudFormation generates the change set by comparing this template with the stack that you specified.</p> <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="UsePreviousTemplate">Whether to reuse the template that's associated with the stack to create the change set.</param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <a>Parameter</a> data type.</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability.</p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li> <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we suggest that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM resources in CloudFormation templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.</p> <note> <p>This capacity doesn't apply to creating change sets, and specifying it when creating change sets has no effect.</p> <p>If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <a>CreateStack</a> or <a>UpdateStack</a> action, and specifying this capability.</p> </note> <p>For more information about macros, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation macros to perform custom processing on templates</a>.</p> </li> </ul></param>
		/// <param name="ResourceTypes"><p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for CloudFormation. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling access with Identity and Access Management</a> in the CloudFormation User Guide.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes when executing the change set. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least permission.</p> <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that is generated from your user credentials.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="RollbackConfiguration">The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</param>
		/// <param name="NotificationARNs">The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.
		/// Maximum items: 5
		// </param>
		/// <param name="Tags">Key-value pairs to associate with this stack. CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.
		/// Maximum items: 50
		// </param>
		/// <param name="ChangeSetName"><p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p> <p>A change set name can contain only alphanumeric, case sensitive characters, and hyphens. It must start with an alphabetical character and can't exceed 128 characters.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="ClientToken">A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that CloudFormation successfully received them.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="Description">A description to help you identify this change set.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="ChangeSetType"><p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p> <p>If you create a change set for a new stack, CloudFormation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995">REVIEW_IN_PROGRESS</a> state until you execute the change set.</p> <p>By default, CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p></param>
		/// <param name="ResourcesToImport">The resources to import into your stack.
		/// Maximum items: 200
		// </param>
		/// <param name="IncludeNestedStacks">Creates a change set for the all nested stacks specified in the template. The default behavior of this action is set to <code>False</code>. To include nested sets in a change set, specify <code>True</code>.</param>
		/// <param name="OnStackFailure"><p>Determines what action will be taken if stack creation fails. If this parameter is specified, the <code>DisableRollback</code> parameter to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ExecuteChangeSet.html">ExecuteChangeSet</a> API operation must not be specified. This must be one of these values:</p> <ul> <li> <p> <code>DELETE</code> - Deletes the change set if the stack creation fails. This is only valid when the <code>ChangeSetType</code> parameter is set to <code>CREATE</code>. If the deletion of the stack fails, the status of the stack is <code>DELETE_FAILED</code>.</p> </li> <li> <p> <code>DO_NOTHING</code> - if the stack creation fails, do nothing. This is equivalent to specifying <code>true</code> for the <code>DisableRollback</code> parameter to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ExecuteChangeSet.html">ExecuteChangeSet</a> API operation.</p> </li> <li> <p> <code>ROLLBACK</code> - if the stack creation fails, roll back the stack. This is equivalent to specifying <code>false</code> for the <code>DisableRollback</code> parameter to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ExecuteChangeSet.html">ExecuteChangeSet</a> API operation.</p> </li> </ul> <p>For nested stacks, when the <code>OnStackFailure</code> parameter is set to <code>DELETE</code> for the change set for the parent stack, any failure in a child stack will cause the parent stack creation to fail and all stacks to be deleted.</p></param>
		/// <returns>Success</returns>
		public async Task GET_CreateChangeSetAsync(
					string StackName, 
					string TemplateBody, 
					string TemplateURL, 
					bool UsePreviousTemplate, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					string[] ResourceTypes, 
					string RoleARN, 
					GET_CreateChangeSetRollbackConfiguration RollbackConfiguration, 
					string[] NotificationARNs, 
					Tag[] Tags, 
					string ChangeSetName, 
					string ClientToken, 
					string Description, 
					ChangeSetType ChangeSetType, 
					ResourceToImport[] ResourcesToImport, 
					bool IncludeNestedStacks, 
					OnStackFailure OnStackFailure, 
					GET_CreateChangeSetAction Action, 
					GET_CreateChangeSetVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateChangeSet?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&UsePreviousTemplate="+UsePreviousTemplate+"&"+string.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+string.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+string.Join("&", ResourceTypes.Select(z => $"ResourceTypes={System.Uri.EscapeDataString(z.ToString())}"))+"&RoleARN=" + (RoleARN==null? "" : System.Uri.EscapeDataString(RoleARN))+"&RollbackConfiguration=" + RollbackConfiguration+"&"+string.Join("&", NotificationARNs.Select(z => $"NotificationARNs={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={z}"))+"&ChangeSetName=" + (ChangeSetName==null? "" : System.Uri.EscapeDataString(ChangeSetName))+"&ClientToken=" + (ClientToken==null? "" : System.Uri.EscapeDataString(ClientToken))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&ChangeSetType=" + ChangeSetType+"&"+string.Join("&", ResourcesToImport.Select(z => $"ResourcesToImport={z}"))+"&IncludeNestedStacks="+IncludeNestedStacks+"&OnStackFailure=" + OnStackFailure+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack through the <a>DescribeStacks</a> operation.
		/// GET_CreateStack #Action=CreateStack
		/// </summary>
		/// <param name="StackName"><p>The name that's associated with the stack. The name must be unique in the Region in which you are creating the stack.</p> <note> <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetical character and can't be longer than 128 characters.</p> </note></param>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. For more information, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</param>
		/// <param name="DisableRollback"><p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p> <p>Default: <code>false</code> </p></param>
		/// <param name="RollbackConfiguration">The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</param>
		/// <param name="TimeoutInMinutes">The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.
		/// Minimum: 1
		// </param>
		/// <param name="NotificationARNs">The Amazon Simple Notification Service (Amazon SNS) topic ARNs to publish stack related events. You can find your Amazon SNS topic ARNs using the Amazon SNS console or your Command Line Interface (CLI).
		/// Maximum items: 5
		// </param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to create the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability.</p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li> <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.</p> <p>If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important> <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without CloudFormation being notified.</p> </important> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation macros to perform custom processing on templates</a>.</p> </li> </ul></param>
		/// <param name="ResourceTypes"><p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all Amazon Web Services resources), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular Amazon Web Services service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific Amazon Web Services resource).</p> <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for CloudFormation-specific condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with Identity and Access Management</a>.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to create the stack. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation always uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that's generated from your user credentials.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="OnFailure"><p>Determines what action will be taken if stack creation fails. This must be one of: <code>DO_NOTHING</code>, <code>ROLLBACK</code>, or <code>DELETE</code>. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p> <p>Default: <code>ROLLBACK</code> </p></param>
		/// <param name="StackPolicyBody">Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
		/// Min length: 1
		/// Max length: 16384
		// </param>
		/// <param name="StackPolicyURL">Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
		/// Min length: 1
		/// Max length: 1350
		// </param>
		/// <param name="Tags">Key-value pairs to associate with this stack. CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.
		/// Maximum items: 50
		// </param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that CloudFormation successfully received them.</p> <p>All events initiated by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="EnableTerminationProtection"><p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>CloudFormation User Guide</i>. Termination protection is deactivated on stacks by default.</p> <p>For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and can't be changed directly on the nested stack.</p></param>
		/// <param name="RetainExceptOnCreate">This deletion policy deletes newly created resources, but retains existing resources, when a stack operation is rolled back. This ensures new, empty, and unused resources are deleted, while critical resources and their data are retained. <code>RetainExceptOnCreate</code> can be specified for any resource that supports the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html"> DeletionPolicy</a> attribute.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateStackAsync(
					string StackName, 
					string TemplateBody, 
					string TemplateURL, 
					Parameter[] Parameters, 
					bool DisableRollback, 
					GET_CreateStackRollbackConfiguration RollbackConfiguration, 
					int TimeoutInMinutes, 
					string[] NotificationARNs, 
					Capability[] Capabilities, 
					string[] ResourceTypes, 
					string RoleARN, 
					OnStackFailure OnFailure, 
					string StackPolicyBody, 
					string StackPolicyURL, 
					Tag[] Tags, 
					string ClientRequestToken, 
					bool EnableTerminationProtection, 
					bool RetainExceptOnCreate, 
					GET_CreateStackAction Action, 
					GET_CreateStackVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateStack?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&"+string.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&DisableRollback="+DisableRollback+"&RollbackConfiguration=" + RollbackConfiguration+"&TimeoutInMinutes="+TimeoutInMinutes+"&"+string.Join("&", NotificationARNs.Select(z => $"NotificationARNs={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+string.Join("&", ResourceTypes.Select(z => $"ResourceTypes={System.Uri.EscapeDataString(z.ToString())}"))+"&RoleARN=" + (RoleARN==null? "" : System.Uri.EscapeDataString(RoleARN))+"&OnFailure=" + OnFailure+"&StackPolicyBody=" + (StackPolicyBody==null? "" : System.Uri.EscapeDataString(StackPolicyBody))+"&StackPolicyURL=" + (StackPolicyURL==null? "" : System.Uri.EscapeDataString(StackPolicyURL))+"&"+string.Join("&", Tags.Select(z => $"Tags={z}"))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&EnableTerminationProtection="+EnableTerminationProtection+"&RetainExceptOnCreate="+RetainExceptOnCreate+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates stack instances for the specified accounts, within the specified Amazon Web Services Regions. A stack instance refers to a stack in a specific account and Region. You must specify at least one value for either <code>Accounts</code> or <code>DeploymentTargets</code>, and you must specify at least one value for <code>Regions</code>.
		/// GET_CreateStackInstances #Action=CreateStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to create stack instances from.</param>
		/// <param name="Accounts"><p>[Self-managed permissions] The names of one or more Amazon Web Services accounts that you want to create stack instances in the specified Region(s) for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="DeploymentTargets"><p>[Service-managed permissions] The Organizations accounts for which to create stack instances in the specified Amazon Web Services Regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="Regions">The names of one or more Amazon Web Services Regions where you want to create stack instances using the specified Amazon Web Services accounts.</param>
		/// <param name="ParameterOverrides"><p>A list of stack set parameters whose values you want to override in the selected stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions. When specifying parameters and their values, be aware of how CloudFormation sets parameter values during stack instance operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave an overridden parameter set to its present value, include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You can't specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> <li> <p>To set an overridden parameter back to the value specified in the stack set, specify a parameter list but don't include the parameter in the list.</p> </li> <li> <p>To leave all parameters set to their present values, don't specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance aren't updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p></param>
		/// <param name="OperationPreferences">Preferences for how CloudFormation performs this stack set operation.</param>
		/// <param name="OperationId"><p>The unique identifier for this stack set operation.</p> <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_CreateStackInstancesAsync(string StackSetName, string[] Accounts, GET_CreateStackInstancesDeploymentTargets DeploymentTargets, string[] Regions, Parameter[] ParameterOverrides, GET_CreateStackInstancesOperationPreferences OperationPreferences, string OperationId, CallAs CallAs, GET_CreateStackInstancesAction Action, GET_CreateStackInstancesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateStackInstances?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&"+string.Join("&", Accounts.Select(z => $"Accounts={System.Uri.EscapeDataString(z.ToString())}"))+"&DeploymentTargets=" + DeploymentTargets+"&"+string.Join("&", Regions.Select(z => $"Regions={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ParameterOverrides.Select(z => $"ParameterOverrides={z}"))+"&OperationPreferences=" + OperationPreferences+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a stack set.
		/// GET_CreateStackSet #Action=CreateStackSet
		/// </summary>
		/// <param name="StackSetName"><p>The name to associate with the stack set. The name must be unique in the Region where you create your stack set.</p> <note> <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p> </note></param>
		/// <param name="Description">A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="TemplateBody"><p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="StackId">The stack ID you are importing into a new stack set. Specify the Amazon Resource Name (ARN) of the stack.</param>
		/// <param name="Parameters">The input parameters for the stack set template.</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for CloudFormation to create the stack set and related stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability.</p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li> <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates reference macros. If your stack set template references one or more macros, you must create the stack set directly from the processed template, without first reviewing the resulting changes in a change set. To create the stack set directly, you must acknowledge this capability. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/template-macros.html">Using CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets with service-managed permissions don't currently support the use of macros in templates. (This includes the <a href="https://docs.aws.amazon.com/AWSCloudFormation/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="https://docs.aws.amazon.com/AWSCloudFormation/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.) Even if you specify this capability for a stack set with service-managed permissions, if you reference a macro in your template the stack set operation will fail.</p> </important> </li> </ul></param>
		/// <param name="Tags"><p>The key-value pairs to associate with this stack set and the stacks created from it. CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p> <p>If you specify tags as part of a <code>CreateStackSet</code> action, CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
		/// Maximum items: 50
		// </param>
		/// <param name="AdministrationRoleARN"><p>The Amazon Resource Name (ARN) of the IAM role to use to create this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="ExecutionRoleName"><p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets.</p>
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="PermissionModel"><p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul></param>
		/// <param name="AutoDeployment">Describes whether StackSets automatically deploys to Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if <code>PermissionModel</code> is <code>SERVICE_MANAGED</code>.</param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>To create a stack set with service-managed permissions while signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>To create a stack set with service-managed permissions while signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated admin in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul> <p>Stack sets with service-managed permissions are created in the management account, including stack sets that are created by delegated administrators.</p></param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="ManagedExecution">Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</param>
		/// <returns>Success</returns>
		public async Task GET_CreateStackSetAsync(
					string StackSetName, 
					string Description, 
					string TemplateBody, 
					string TemplateURL, 
					string StackId, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					Tag[] Tags, 
					string AdministrationRoleARN, 
					string ExecutionRoleName, 
					PermissionModels PermissionModel, 
					GET_CreateStackSetAutoDeployment AutoDeployment, 
					CallAs CallAs, 
					string ClientRequestToken, 
					GET_CreateStackSetManagedExecution ManagedExecution, 
					GET_CreateStackSetAction Action, 
					GET_CreateStackSetVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=CreateStackSet?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&StackId=" + (StackId==null? "" : System.Uri.EscapeDataString(StackId))+"&"+string.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+string.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={z}"))+"&AdministrationRoleARN=" + (AdministrationRoleARN==null? "" : System.Uri.EscapeDataString(AdministrationRoleARN))+"&ExecutionRoleName=" + (ExecutionRoleName==null? "" : System.Uri.EscapeDataString(ExecutionRoleName))+"&PermissionModel=" + PermissionModel+"&AutoDeployment=" + AutoDeployment+"&CallAs=" + CallAs+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&ManagedExecution=" + ManagedExecution+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deactivates trusted access with Organizations. If trusted access is deactivated, the management account does not have permissions to create and manage service-managed StackSets for your organization.
		/// GET_DeactivateOrganizationsAccess #Action=DeactivateOrganizationsAccess
		/// </summary>
		/// <returns>Success</returns>
		public async Task GET_DeactivateOrganizationsAccessAsync(GET_DeactivateOrganizationsAccessAction Action, GET_DeactivateOrganizationsAccessVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeactivateOrganizationsAccess?Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Deactivates a public extension that was previously activated in this account and Region.</p> <p>Once deactivated, an extension can't be used in any CloudFormation operation. This includes stack update operations where the stack template includes the extension, even if no updates are being made to the extension. In addition, deactivated extensions aren't automatically updated if a new version of the extension is released.</p>
		/// GET_DeactivateType #Action=DeactivateType
		/// </summary>
		/// <param name="TypeName"><p>The type name of the extension, in this account and Region. If you specified a type name alias when enabling the extension, use the type name alias.</p> <p>Conditional: You must specify either <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="Type"><p>The extension type.</p> <p>Conditional: You must specify either <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p></param>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) for the extension, in this account and Region.</p> <p>Conditional: You must specify either <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeactivateTypeAsync(string TypeName, ThirdPartyType Type, string Arn, GET_DeactivateTypeAction Action, GET_DeactivateTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeactivateType?TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&Type=" + Type+"&Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.</p> <p>If the call successfully completes, CloudFormation successfully deleted the change set.</p> <p>If <code>IncludeNestedStacks</code> specifies <code>True</code> during the creation of the nested change set, then <code>DeleteChangeSet</code> will delete all change sets that belong to the stacks hierarchy and will also delete all change sets for nested stacks with the status of <code>REVIEW_IN_PROGRESS</code>.</p>
		/// GET_DeleteChangeSet #Action=DeleteChangeSet
		/// </summary>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of the change set that you want to delete.
		/// Min length: 1
		/// Max length: 1600
		// </param>
		/// <param name="StackName">If you specified the name of a change set to delete, specify the stack name or Amazon Resource Name (ARN) that's associated with it.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteChangeSetAsync(string ChangeSetName, string StackName, GET_DeleteChangeSetAction Action, GET_DeleteChangeSetVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteChangeSet?ChangeSetName=" + (ChangeSetName==null? "" : System.Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks don't show up in the <a>DescribeStacks</a> operation if the deletion has been completed successfully.
		/// GET_DeleteStack #Action=DeleteStack
		/// </summary>
		/// <param name="StackName">The name or the unique stack ID that's associated with the stack.</param>
		/// <param name="RetainResources"><p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, CloudFormation deletes the stack but doesn't delete the retained resources.</p> <p>Retaining resources is useful when you can't delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to delete the stack. CloudFormation uses the role's credentials to make calls on your behalf.</p> <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that's generated from your user credentials.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that CloudFormation successfully received them.</p> <p>All events initiated by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeleteStackAsync(string StackName, string[] RetainResources, string RoleARN, string ClientRequestToken, GET_DeleteStackAction Action, GET_DeleteStackVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteStack?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&"+string.Join("&", RetainResources.Select(z => $"RetainResources={System.Uri.EscapeDataString(z.ToString())}"))+"&RoleARN=" + (RoleARN==null? "" : System.Uri.EscapeDataString(RoleARN))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes stack instances for the specified accounts, in the specified Amazon Web Services Regions.
		/// GET_DeleteStackInstances #Action=DeleteStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to delete stack instances for.</param>
		/// <param name="Accounts"><p>[Self-managed permissions] The names of the Amazon Web Services accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="DeploymentTargets"><p>[Service-managed permissions] The Organizations accounts from which to delete stack instances.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="Regions">The Amazon Web Services Regions where you want to delete stack set instances.</param>
		/// <param name="OperationPreferences">Preferences for how CloudFormation performs this stack set operation.</param>
		/// <param name="RetainStacks"><p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p></param>
		/// <param name="OperationId"><p>The unique identifier for this stack set operation.</p> <p>If you don't specify an operation ID, the SDK generates one automatically.</p> <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteStackInstancesAsync(string StackSetName, string[] Accounts, GET_DeleteStackInstancesDeploymentTargets DeploymentTargets, string[] Regions, GET_DeleteStackInstancesOperationPreferences OperationPreferences, bool RetainStacks, string OperationId, CallAs CallAs, GET_DeleteStackInstancesAction Action, GET_DeleteStackInstancesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteStackInstances?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&"+string.Join("&", Accounts.Select(z => $"Accounts={System.Uri.EscapeDataString(z.ToString())}"))+"&DeploymentTargets=" + DeploymentTargets+"&"+string.Join("&", Regions.Select(z => $"Regions={System.Uri.EscapeDataString(z.ToString())}"))+"&OperationPreferences=" + OperationPreferences+"&RetainStacks="+RetainStacks+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a stack set. Before you can delete a stack set, all its member stack instances must be deleted. For more information about how to complete this, see <a>DeleteStackInstances</a>.
		/// GET_DeleteStackSet #Action=DeleteStackSet
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you're deleting. You can obtain this value by running <a>ListStackSets</a>.</param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DeleteStackSetAsync(string StackSetName, CallAs CallAs, GET_DeleteStackSetAction Action, GET_DeleteStackSetVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeleteStackSet?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Marks an extension or extension version as <code>DEPRECATED</code> in the CloudFormation registry, removing it from active use. Deprecated extensions or extension versions cannot be used in CloudFormation operations.</p> <p>To deregister an entire extension, you must individually deregister all active versions of that extension. If an extension has only a single active version, deregistering that version results in the extension itself being deregistered and marked as deprecated in the registry.</p> <p>You can't deregister the default version of an extension if there are other active version of that extension. If you do deregister the default version of an extension, the extension type itself is deregistered as well and marked as deprecated.</p> <p>To view the deprecation status of an extension or extension version, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html">DescribeType</a>.</p>
		/// GET_DeregisterType #Action=DeregisterType
		/// </summary>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="Type"><p>The kind of extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="VersionId">The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DeregisterTypeAsync(string Arn, ThirdPartyType Type, string TypeName, string VersionId, GET_DeregisterTypeAction Action, GET_DeregisterTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DeregisterType?Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&VersionId=" + (VersionId==null? "" : System.Uri.EscapeDataString(VersionId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves your account's CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html">CloudFormation Quotas</a> in the <i>CloudFormation User Guide</i>.
		/// GET_DescribeAccountLimits #Action=DescribeAccountLimits
		/// </summary>
		/// <param name="NextToken">A string that identifies the next page of limits that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeAccountLimitsAsync(string NextToken, GET_DescribeAccountLimitsAction Action, GET_DescribeAccountLimitsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeAccountLimits?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the inputs for the change set and a list of changes that CloudFormation will make if you execute the change set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html">Updating Stacks Using Change Sets</a> in the CloudFormation User Guide.
		/// GET_DescribeChangeSet #Action=DescribeChangeSet
		/// </summary>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of the change set that you want to describe.
		/// Min length: 1
		/// Max length: 1600
		// </param>
		/// <param name="StackName">If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.
		/// Min length: 1
		// </param>
		/// <param name="NextToken">A string (provided by the <a>DescribeChangeSet</a> response output) that identifies the next page of information that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeChangeSetAsync(string ChangeSetName, string StackName, string NextToken, GET_DescribeChangeSetAction Action, GET_DescribeChangeSetVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeChangeSet?ChangeSetName=" + (ChangeSetName==null? "" : System.Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns hook-related information for the change set and a list of changes that CloudFormation makes when you run the change set.
		/// GET_DescribeChangeSetHooks #Action=DescribeChangeSetHooks
		/// </summary>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of the change set that you want to describe.
		/// Min length: 1
		/// Max length: 1600
		// </param>
		/// <param name="StackName">If you specified the name of a change set, specify the stack name or stack ID (ARN) of the change set you want to describe.
		/// Min length: 1
		// </param>
		/// <param name="NextToken">A string, provided by the <code>DescribeChangeSetHooks</code> response output, that identifies the next page of information that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="LogicalResourceId">If specified, lists only the hooks related to the specified <code>LogicalResourceId</code>.</param>
		/// <returns>Success</returns>
		public async Task GET_DescribeChangeSetHooksAsync(string ChangeSetName, string StackName, string NextToken, string LogicalResourceId, GET_DescribeChangeSetHooksAction Action, GET_DescribeChangeSetHooksVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeChangeSetHooks?ChangeSetName=" + (ChangeSetName==null? "" : System.Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : System.Uri.EscapeDataString(LogicalResourceId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the account's <code>OrganizationAccess</code> status. This API can be called either by the management account or the delegated administrator by using the <code>CallAs</code> parameter. This API can also be called without the <code>CallAs</code> parameter by the management account.
		/// GET_DescribeOrganizationsAccess #Action=DescribeOrganizationsAccess
		/// </summary>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeOrganizationsAccessAsync(CallAs CallAs, GET_DescribeOrganizationsAccessAction Action, GET_DescribeOrganizationsAccessVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeOrganizationsAccess?CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns information about a CloudFormation extension publisher.</p> <p>If you don't supply a <code>PublisherId</code>, and you have registered as an extension publisher, <code>DescribePublisher</code> returns information about your own publisher account.</p> <p>For more information about registering as a publisher, see:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterPublisher.html">RegisterPublisher</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html">Publishing extensions to make them available for public use</a> in the <i>CloudFormation CLI User Guide</i> </p> </li> </ul>
		/// GET_DescribePublisher #Action=DescribePublisher
		/// </summary>
		/// <param name="PublisherId"><p>The ID of the extension publisher.</p> <p>If you don't supply a <code>PublisherId</code>, and you have registered as an extension publisher, <code>DescribePublisher</code> returns information about your own publisher account.</p>
		/// Min length: 1
		/// Max length: 40
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribePublisherAsync(string PublisherId, GET_DescribePublisherAction Action, GET_DescribePublisherVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribePublisher?PublisherId=" + (PublisherId==null? "" : System.Uri.EscapeDataString(PublisherId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <a>DetectStackDrift</a> to initiate a stack drift detection operation. <code>DetectStackDrift</code> returns a <code>StackDriftDetectionId</code> you can use to monitor the progress of the operation using <code>DescribeStackDriftDetectionStatus</code>. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p>
		/// GET_DescribeStackDriftDetectionStatus #Action=DescribeStackDriftDetectionStatus
		/// </summary>
		/// <param name="StackDriftDetectionId"><p>The ID of the drift detection results of this operation.</p> <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
		/// Min length: 1
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackDriftDetectionStatusAsync(string StackDriftDetectionId, GET_DescribeStackDriftDetectionStatusAction Action, GET_DescribeStackDriftDetectionStatusVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackDriftDetectionStatus?StackDriftDetectionId=" + (StackDriftDetectionId==null? "" : System.Uri.EscapeDataString(StackDriftDetectionId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack's event history, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html">Stacks</a> in the CloudFormation User Guide.</p> <note> <p>You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).</p> </note>
		/// GET_DescribeStackEvents #Action=DescribeStackEvents
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="NextToken">A string that identifies the next page of events that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackEventsAsync(string StackName, string NextToken, GET_DescribeStackEventsAction Action, GET_DescribeStackEventsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackEvents?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns the stack instance that's associated with the specified StackSet, Amazon Web Services account, and Amazon Web Services Region.</p> <p>For a list of stack instances that are associated with a specific StackSet, use <a>ListStackInstances</a>.</p>
		/// GET_DescribeStackInstance #Action=DescribeStackInstance
		/// </summary>
		/// <param name="StackSetName">The name or the unique stack ID of the stack set that you want to get stack instance information for.</param>
		/// <param name="StackInstanceAccount">The ID of an Amazon Web Services account that's associated with this stack instance.</param>
		/// <param name="StackInstanceRegion">The name of a Region that's associated with this stack instance.</param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackInstanceAsync(string StackSetName, string StackInstanceAccount, string StackInstanceRegion, CallAs CallAs, GET_DescribeStackInstanceAction Action, GET_DescribeStackInstanceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackInstance?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&StackInstanceAccount=" + (StackInstanceAccount==null? "" : System.Uri.EscapeDataString(StackInstanceAccount))+"&StackInstanceRegion=" + (StackInstanceRegion==null? "" : System.Uri.EscapeDataString(StackInstanceRegion))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns a description of the specified resource in the specified stack.</p> <p>For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.</p>
		/// GET_DescribeStackResource #Action=DescribeStackResource
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="LogicalResourceId"><p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackResourceAsync(string StackName, string LogicalResourceId, GET_DescribeStackResourceAction Action, GET_DescribeStackResourceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackResource?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : System.Uri.EscapeDataString(LogicalResourceId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where CloudFormation detects configuration drift.</p> <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that haven't yet been checked for drift aren't included. Resources that don't currently support drift detection aren't checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p>Use <a>DetectStackResourceDrift</a> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all supported resources for a given stack.</p>
		/// GET_DescribeStackResourceDrifts #Action=DescribeStackResourceDrifts
		/// </summary>
		/// <param name="StackName">The name of the stack for which you want drift information.
		/// Min length: 1
		// </param>
		/// <param name="StackResourceDriftStatusFilters"><p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resource's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: CloudFormation doesn't currently return this value.</p> </li> </ul>
		/// Minimum items: 1
		/// Maximum items: 4
		// </param>
		/// <param name="NextToken">A string that identifies the next page of stack resource drift results.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackResourceDriftsAsync(string StackName, StackResourceDriftStatus[] StackResourceDriftStatusFilters, string NextToken, int MaxResults, GET_DescribeStackResourceDriftsAction Action, GET_DescribeStackResourceDriftsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackResourceDrifts?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&"+string.Join("&", StackResourceDriftStatusFilters.Select(z => $"StackResourceDriftStatusFilters={z}"))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns Amazon Web Services resource descriptions for running and deleted stacks. If <code>StackName</code> is specified, all the associated resources that are part of the stack are returned. If <code>PhysicalResourceId</code> is specified, the associated resources of the stack that the resource belongs to are returned.</p> <note> <p>Only the first 100 resources will be returned. If your stack has more resources than this, you should use <code>ListStackResources</code> instead.</p> </note> <p>For deleted stacks, <code>DescribeStackResources</code> returns resource information for up to 90 days after the stack has been deleted.</p> <p>You must specify either <code>StackName</code> or <code>PhysicalResourceId</code>, but not both. In addition, you can specify <code>LogicalResourceId</code> to filter the returned result. For more information about resources, the <code>LogicalResourceId</code> and <code>PhysicalResourceId</code>, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/">CloudFormation User Guide</a>.</p> <note> <p>A <code>ValidationError</code> is returned if you specify both <code>StackName</code> and <code>PhysicalResourceId</code> in the same request.</p> </note>
		/// GET_DescribeStackResources #Action=DescribeStackResources
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p> <p>Required: Conditional. If you don't specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p></param>
		/// <param name="LogicalResourceId"><p>The logical name of the resource as specified in the template.</p> <p>Default: There is no default value.</p></param>
		/// <param name="PhysicalResourceId"><p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by CloudFormation.</p> <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p> <p>Required: Conditional. If you don't specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p> <p>Default: There is no default value.</p></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackResourcesAsync(string StackName, string LogicalResourceId, string PhysicalResourceId, GET_DescribeStackResourcesAction Action, GET_DescribeStackResourcesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackResources?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : System.Uri.EscapeDataString(LogicalResourceId))+"&PhysicalResourceId=" + (PhysicalResourceId==null? "" : System.Uri.EscapeDataString(PhysicalResourceId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the description of the specified StackSet.
		/// GET_DescribeStackSet #Action=DescribeStackSet
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set whose description you want.</param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackSetAsync(string StackSetName, CallAs CallAs, GET_DescribeStackSetAction Action, GET_DescribeStackSetVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackSet?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the description of the specified StackSet operation.
		/// GET_DescribeStackSetOperation #Action=DescribeStackSetOperation
		/// </summary>
		/// <param name="StackSetName">The name or the unique stack ID of the stack set for the stack operation.</param>
		/// <param name="OperationId">The unique ID of the stack set operation.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStackSetOperationAsync(string StackSetName, string OperationId, CallAs CallAs, GET_DescribeStackSetOperationAction Action, GET_DescribeStackSetOperationVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStackSetOperation?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.</p> <note> <p>If the stack doesn't exist, an <code>ValidationError</code> is returned.</p> </note>
		/// GET_DescribeStacks #Action=DescribeStacks
		/// </summary>
		/// <param name="StackName"><note> <p>If you don't pass a parameter to <code>StackName</code>, the API returns a response that describes all resources in the account. This requires <code>ListStacks</code> and <code>DescribeStacks</code> permissions.</p> <p>The IAM policy below can be added to IAM policies when you want to limit resource-level permissions and avoid returning a response when no parameter is sent in the request:</p> <p>{ "Version": "2012-10-17", "Statement": [{ "Effect": "Deny", "Action": "cloudformation:DescribeStacks", "NotResource": "arn:aws:cloudformation:*:*:stack/*/*" }] }</p> </note> <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="NextToken">A string that identifies the next page of stacks that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeStacksAsync(string StackName, string NextToken, GET_DescribeStacksAction Action, GET_DescribeStacksVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeStacks?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns detailed information about an extension that has been registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific extension version. Otherwise, it returns information about the default extension version.</p>
		/// GET_DescribeType #Action=DescribeType
		/// </summary>
		/// <param name="Type"><p>The kind of extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="VersionId"><p>The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.</p> <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific extension version. Otherwise, it returns information about the default extension version.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="PublisherId"><p>The publisher ID of the extension publisher.</p> <p>Extensions provided by Amazon Web Services are not assigned a publisher ID.</p>
		/// Min length: 1
		/// Max length: 40
		// </param>
		/// <param name="PublicVersionNumber">The version number of a public third-party extension.
		/// Min length: 5
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeTypeAsync(ThirdPartyType Type, string TypeName, string Arn, string VersionId, string PublisherId, string PublicVersionNumber, GET_DescribeTypeAction Action, GET_DescribeTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeType?Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&VersionId=" + (VersionId==null? "" : System.Uri.EscapeDataString(VersionId))+"&PublisherId=" + (PublisherId==null? "" : System.Uri.EscapeDataString(PublisherId))+"&PublicVersionNumber=" + (PublicVersionNumber==null? "" : System.Uri.EscapeDataString(PublicVersionNumber))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns information about an extension's registration, including its current status and type and version identifiers.</p> <p>When you initiate a registration request using <a>RegisterType</a>, you can then use <a>DescribeTypeRegistration</a> to monitor the progress of that registration request.</p> <p>Once the registration request has completed, use <a>DescribeType</a> to return detailed information about an extension.</p>
		/// GET_DescribeTypeRegistration #Action=DescribeTypeRegistration
		/// </summary>
		/// <param name="RegistrationToken"><p>The identifier for this registration request.</p> <p>This registration token is generated by CloudFormation when you initiate a registration request using <a>RegisterType</a>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DescribeTypeRegistrationAsync(string RegistrationToken, GET_DescribeTypeRegistrationAction Action, GET_DescribeTypeRegistrationVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DescribeTypeRegistration?RegistrationToken=" + (RegistrationToken==null? "" : System.Uri.EscapeDataString(RegistrationToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Detects whether a stack's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackDrift</code> to detect drift on all supported resources for a given stack, or <a>DetectStackResourceDrift</a> to detect drift on individual resources.</p> <p>For a list of stack resources that currently support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p> <p> <code>DetectStackDrift</code> can take up to several minutes, depending on the number of resources contained within the stack. Use <a>DescribeStackDriftDetectionStatus</a> to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use <a>DescribeStackResourceDrifts</a> to return drift information about the stack and its resources.</p> <p>When detecting drift on a stack, CloudFormation doesn't detect drift on any nested stacks belonging to that stack. Perform <code>DetectStackDrift</code> directly on the nested stack itself.</p>
		/// GET_DetectStackDrift #Action=DetectStackDrift
		/// </summary>
		/// <param name="StackName">The name of the stack for which you want to detect drift.
		/// Min length: 1
		// </param>
		/// <param name="LogicalResourceIds">The logical names of any resources you want to use as filters.
		/// Minimum items: 1
		/// Maximum items: 200
		// </param>
		/// <returns>Success</returns>
		public async Task GET_DetectStackDriftAsync(string StackName, string[] LogicalResourceIds, GET_DetectStackDriftAction Action, GET_DetectStackDriftVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DetectStackDrift?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&"+string.Join("&", LogicalResourceIds.Select(z => $"LogicalResourceIds={System.Uri.EscapeDataString(z.ToString())}"))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns information about whether a resource's actual configuration differs, or has <i>drifted</i>, from its expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html">Detecting Unregulated Configuration Changes to Stacks and Resources</a>.</p> <p>Use <code>DetectStackResourceDrift</code> to detect drift on individual resources, or <a>DetectStackDrift</a> to detect drift on all resources in a given stack that support drift detection.</p> <p>Resources that don't currently support drift detection can't be checked. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
		/// GET_DetectStackResourceDrift #Action=DetectStackResourceDrift
		/// </summary>
		/// <param name="StackName">The name of the stack to which the resource belongs.
		/// Min length: 1
		// </param>
		/// <param name="LogicalResourceId">The logical name of the resource for which to return drift information.</param>
		/// <returns>Success</returns>
		public async Task GET_DetectStackResourceDriftAsync(string StackName, string LogicalResourceId, GET_DetectStackResourceDriftAction Action, GET_DetectStackResourceDriftVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DetectStackResourceDrift?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : System.Uri.EscapeDataString(LogicalResourceId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">How CloudFormation performs drift detection on a stack set</a>.</p> <p> <code>DetectStackSetDrift</code> returns the <code>OperationId</code> of the stack set drift detection operation. Use this operation id with <a>DescribeStackSetOperation</a> to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, in addition to the number of resources included in each stack.</p> <p>Once the operation has completed, use the following actions to return drift information:</p> <ul> <li> <p>Use <a>DescribeStackSet</a> to return detailed information about the stack set, including detailed information about the last <i>completed</i> drift operation performed on the stack set. (Information about drift operations that are in progress isn't included.)</p> </li> <li> <p>Use <a>ListStackInstances</a> to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.</p> </li> <li> <p>Use <a>DescribeStackInstance</a> to return detailed information about a specific stack instance, including its drift status and last drift time checked.</p> </li> </ul> <p>For more information about performing a drift detection operation on a stack set, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting unmanaged changes in stack sets</a>.</p> <p>You can only run a single drift detection operation on a given stack set at one time.</p> <p>To stop a drift detection stack set operation, use <a>StopStackSetOperation</a>.</p>
		/// GET_DetectStackSetDrift #Action=DetectStackSetDrift
		/// </summary>
		/// <param name="StackSetName">The name of the stack set on which to perform the drift detection operation.</param>
		/// <param name="OperationPreferences"><p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p></param>
		/// <param name="OperationId"> <i>The ID of the stack set operation.</i> 
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_DetectStackSetDriftAsync(string StackSetName, GET_DetectStackSetDriftOperationPreferences OperationPreferences, string OperationId, CallAs CallAs, GET_DetectStackSetDriftAction Action, GET_DetectStackSetDriftVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=DetectStackSetDrift?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&OperationPreferences=" + OperationPreferences+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the estimated monthly cost of a template. The return value is an Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
		/// GET_EstimateTemplateCost #Action=EstimateTemplateCost
		/// </summary>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.)</p> <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template that's located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters.</param>
		/// <returns>Success</returns>
		public async Task GET_EstimateTemplateCostAsync(string TemplateBody, string TemplateURL, Parameter[] Parameters, GET_EstimateTemplateCostAction Action, GET_EstimateTemplateCostVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=EstimateTemplateCost?TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&"+string.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, CloudFormation starts updating the stack. Use the <a>DescribeStacks</a> action to view the status of the update.</p> <p>When you execute a change set, CloudFormation deletes all other change sets associated with the stack because they aren't valid for the updated stack.</p> <p>If a stack policy is associated with the stack, CloudFormation enforces the policy during the update. You can't specify a temporary stack policy that overrides the current policy.</p> <p>To create a change set for the entire stack hierarchy, <code>IncludeNestedStacks</code> must have been set to <code>True</code>.</p>
		/// GET_ExecuteChangeSet #Action=ExecuteChangeSet
		/// </summary>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of the change set that you want use to update the specified stack.
		/// Min length: 1
		/// Max length: 1600
		// </param>
		/// <param name="StackName">If you specified the name of a change set, specify the stack name or Amazon Resource Name (ARN) that's associated with the change set you want to execute.
		/// Min length: 1
		// </param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that CloudFormation successfully received them.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="DisableRollback"><p>Preserves the state of previously provisioned resources when an operation fails. This parameter can't be specified when the <code>OnStackFailure</code> parameter to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateChangeSet.html">CreateChangeSet</a> API operation was specified.</p> <ul> <li> <p> <code>True</code> - if the stack creation fails, do nothing. This is equivalent to specifying <code>DO_NOTHING</code> for the <code>OnStackFailure</code> parameter to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateChangeSet.html">CreateChangeSet</a> API operation.</p> </li> <li> <p> <code>False</code> - if the stack creation fails, roll back the stack. This is equivalent to specifying <code>ROLLBACK</code> for the <code>OnStackFailure</code> parameter to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateChangeSet.html">CreateChangeSet</a> API operation.</p> </li> </ul> <p>Default: <code>True</code> </p></param>
		/// <param name="RetainExceptOnCreate">This deletion policy deletes newly created resources, but retains existing resources, when a stack operation is rolled back. This ensures new, empty, and unused resources are deleted, while critical resources and their data are retained. <code>RetainExceptOnCreate</code> can be specified for any resource that supports the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html"> DeletionPolicy</a> attribute.</param>
		/// <returns>Success</returns>
		public async Task GET_ExecuteChangeSetAsync(string ChangeSetName, string StackName, string ClientRequestToken, bool DisableRollback, bool RetainExceptOnCreate, GET_ExecuteChangeSetAction Action, GET_ExecuteChangeSetVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ExecuteChangeSet?ChangeSetName=" + (ChangeSetName==null? "" : System.Uri.EscapeDataString(ChangeSetName))+"&StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&DisableRollback="+DisableRollback+"&RetainExceptOnCreate="+RetainExceptOnCreate+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the stack policy for a specified stack. If a stack doesn't have a policy, a null value is returned.
		/// GET_GetStackPolicy #Action=GetStackPolicy
		/// </summary>
		/// <param name="StackName">The name or unique stack ID that's associated with the stack whose policy you want to get.</param>
		/// <returns>Success</returns>
		public async Task GET_GetStackPolicyAsync(string StackName, GET_GetStackPolicyAction Action, GET_GetStackPolicyVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=GetStackPolicy?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns the template body for a specified stack. You can get the template for running or deleted stacks.</p> <p>For deleted stacks, <code>GetTemplate</code> returns the template for up to 90 days after the stack has been deleted.</p> <note> <p>If the template doesn't exist, a <code>ValidationError</code> is returned.</p> </note>
		/// GET_GetTemplate #Action=GetTemplate
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="ChangeSetName">The name or Amazon Resource Name (ARN) of a change set for which CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.
		/// Min length: 1
		/// Max length: 1600
		// </param>
		/// <param name="TemplateStage"><p>For templates that include transforms, the stage of the template that CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after CloudFormation has processed all transforms, specify <code>Processed</code>.</p> <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, CloudFormation specifies <code>Processed</code>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_GetTemplateAsync(string StackName, string ChangeSetName, TemplateStage TemplateStage, GET_GetTemplateAction Action, GET_GetTemplateVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=GetTemplate?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&ChangeSetName=" + (ChangeSetName==null? "" : System.Uri.EscapeDataString(ChangeSetName))+"&TemplateStage=" + TemplateStage+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns information about a new or existing template. The <code>GetTemplateSummary</code> action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.</p> <p>You can use the <code>GetTemplateSummary</code> action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.</p> <p>For deleted stacks, <code>GetTemplateSummary</code> returns the template information for up to 90 days after the stack has been deleted. If the template doesn't exist, a <code>ValidationError</code> is returned.</p>
		/// GET_GetTemplateSummary #Action=GetTemplateSummary
		/// </summary>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="StackName"><p>The name or the stack ID that's associated with the stack, which aren't always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
		/// Min length: 1
		// </param>
		/// <param name="StackSetName"><p>The name or unique ID of the stack set from which the stack was created.</p> <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p></param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <param name="TemplateSummaryConfig">Specifies options for the <code>GetTemplateSummary</code> API action.</param>
		/// <returns>Success</returns>
		public async Task GET_GetTemplateSummaryAsync(string TemplateBody, string TemplateURL, string StackName, string StackSetName, CallAs CallAs, GET_GetTemplateSummaryTemplateSummaryConfig TemplateSummaryConfig, GET_GetTemplateSummaryAction Action, GET_GetTemplateSummaryVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=GetTemplateSummary?TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&CallAs=" + CallAs+"&TemplateSummaryConfig=" + TemplateSummaryConfig+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Import existing stacks into a new stack sets. Use the stack import operation to import up to 10 stacks into a new stack set in the same account as the source stack or in a different administrator account and Region, by specifying the stack ID of the stack you intend to import.
		/// GET_ImportStacksToStackSet #Action=ImportStacksToStackSet
		/// </summary>
		/// <param name="StackSetName">The name of the stack set. The name must be unique in the Region where you create your stack set.</param>
		/// <param name="StackIds"><p>The IDs of the stacks you are importing into a stack set. You import up to 10 stacks per stack set at a time.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p></param>
		/// <param name="StackIdsUrl"><p>The Amazon S3 URL which contains list of stack ids to be inputted.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
		/// Min length: 1
		/// Max length: 5120
		// </param>
		/// <param name="OrganizationalUnitIds">The list of OU ID's to which the stacks being imported has to be mapped as deployment target.</param>
		/// <param name="OperationPreferences"><p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p></param>
		/// <param name="OperationId">A unique, user defined, identifier for the stack set operation.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ImportStacksToStackSetAsync(string StackSetName, string[] StackIds, string StackIdsUrl, string[] OrganizationalUnitIds, GET_ImportStacksToStackSetOperationPreferences OperationPreferences, string OperationId, CallAs CallAs, GET_ImportStacksToStackSetAction Action, GET_ImportStacksToStackSetVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ImportStacksToStackSet?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&"+string.Join("&", StackIds.Select(z => $"StackIds={System.Uri.EscapeDataString(z.ToString())}"))+"&StackIdsUrl=" + (StackIdsUrl==null? "" : System.Uri.EscapeDataString(StackIdsUrl))+"&"+string.Join("&", OrganizationalUnitIds.Select(z => $"OrganizationalUnitIds={System.Uri.EscapeDataString(z.ToString())}"))+"&OperationPreferences=" + OperationPreferences+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the ID and status of each active change set for a stack. For example, CloudFormation lists change sets that are in the <code>CREATE_IN_PROGRESS</code> or <code>CREATE_PENDING</code> state.
		/// GET_ListChangeSets #Action=ListChangeSets
		/// </summary>
		/// <param name="StackName">The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.
		/// Min length: 1
		// </param>
		/// <param name="NextToken">A string (provided by the <a>ListChangeSets</a> response output) that identifies the next page of change sets that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListChangeSetsAsync(string StackName, string NextToken, GET_ListChangeSetsAction Action, GET_ListChangeSetsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListChangeSets?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Lists all exported output values in the account and Region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html"> Fn::ImportValue</a> function.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html"> CloudFormation export stack output values</a>.</p>
		/// GET_ListExports #Action=ListExports
		/// </summary>
		/// <param name="NextToken">A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListExportsAsync(string NextToken, GET_ListExportsAction Action, GET_ListExportsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListExports?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see <a>ListExports</a>.</p> <p>For more information about importing an exported output value, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html">Fn::ImportValue</a> function.</p>
		/// GET_ListImports #Action=ListImports
		/// </summary>
		/// <param name="ExportName">The name of the exported output value. CloudFormation returns the stack names that are importing this value.</param>
		/// <param name="NextToken">A string (provided by the <a>ListImports</a> response output) that identifies the next page of stacks that are importing the specified exported output value.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListImportsAsync(string ExportName, string NextToken, GET_ListImportsAction Action, GET_ListImportsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListImports?ExportName=" + (ExportName==null? "" : System.Uri.EscapeDataString(ExportName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns drift information for resources in a stack instance.</p> <note> <p> <code>ListStackInstanceResourceDrifts</code> returns drift information for the most recent drift detection operation. If an operation is in progress, it may only return partial results.</p> </note>
		/// GET_ListStackInstanceResourceDrifts #Action=ListStackInstanceResourceDrifts
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to list drifted resources for.</param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="StackInstanceResourceDriftStatuses"><p>The resource drift status of the stack instance. </p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resource's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: CloudFormation doesn't currently return this value.</p> </li> </ul>
		/// Minimum items: 1
		/// Maximum items: 4
		// </param>
		/// <param name="StackInstanceAccount">The name of the Amazon Web Services account that you want to list resource drifts for.</param>
		/// <param name="StackInstanceRegion">The name of the Region where you want to list resource drifts.</param>
		/// <param name="OperationId">The unique ID of the drift operation.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ListStackInstanceResourceDriftsAsync(string StackSetName, string NextToken, int MaxResults, StackResourceDriftStatus[] StackInstanceResourceDriftStatuses, string StackInstanceAccount, string StackInstanceRegion, string OperationId, CallAs CallAs, GET_ListStackInstanceResourceDriftsAction Action, GET_ListStackInstanceResourceDriftsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStackInstanceResourceDrifts?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&"+string.Join("&", StackInstanceResourceDriftStatuses.Select(z => $"StackInstanceResourceDriftStatuses={z}"))+"&StackInstanceAccount=" + (StackInstanceAccount==null? "" : System.Uri.EscapeDataString(StackInstanceAccount))+"&StackInstanceRegion=" + (StackInstanceRegion==null? "" : System.Uri.EscapeDataString(StackInstanceRegion))+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific Amazon Web Services account name or Region, or that have a specific status.
		/// GET_ListStackInstances #Action=ListStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to list stack instances for.</param>
		/// <param name="NextToken">If the previous request didn't return all the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="Filters">The filter to apply to stack instances
		/// Maximum items: 3
		// </param>
		/// <param name="StackInstanceAccount">The name of the Amazon Web Services account that you want to list stack instances for.</param>
		/// <param name="StackInstanceRegion">The name of the Region where you want to list stack instances.</param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ListStackInstancesAsync(string StackSetName, string NextToken, int MaxResults, StackInstanceFilter[] Filters, string StackInstanceAccount, string StackInstanceRegion, CallAs CallAs, GET_ListStackInstancesAction Action, GET_ListStackInstancesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStackInstances?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&"+string.Join("&", Filters.Select(z => $"Filters={z}"))+"&StackInstanceAccount=" + (StackInstanceAccount==null? "" : System.Uri.EscapeDataString(StackInstanceAccount))+"&StackInstanceRegion=" + (StackInstanceRegion==null? "" : System.Uri.EscapeDataString(StackInstanceRegion))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns descriptions of all resources of the specified stack.</p> <p>For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.</p>
		/// GET_ListStackResources #Action=ListStackResources
		/// </summary>
		/// <param name="StackName"><p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p> <ul> <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li> <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li> </ul> <p>Default: There is no default value.</p></param>
		/// <param name="NextToken">A string that identifies the next page of stack resources that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListStackResourcesAsync(string StackName, string NextToken, GET_ListStackResourcesAction Action, GET_ListStackResourcesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStackResources?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns summary information about the results of a stack set operation.
		/// GET_ListStackSetOperationResults #Action=ListStackSetOperationResults
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to get operation results for.</param>
		/// <param name="OperationId">The ID of the stack set operation.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="NextToken">If the previous request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <param name="Filters">The filter to apply to operation results.
		/// Maximum items: 1
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListStackSetOperationResultsAsync(string StackSetName, string OperationId, string NextToken, int MaxResults, CallAs CallAs, OperationResultFilter[] Filters, GET_ListStackSetOperationResultsAction Action, GET_ListStackSetOperationResultsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStackSetOperationResults?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&CallAs=" + CallAs+"&"+string.Join("&", Filters.Select(z => $"Filters={z}"))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns summary information about operations performed on a stack set.
		/// GET_ListStackSetOperations #Action=ListStackSetOperations
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to get operation summaries for.</param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ListStackSetOperationsAsync(string StackSetName, string NextToken, int MaxResults, CallAs CallAs, GET_ListStackSetOperationsAction Action, GET_ListStackSetOperationsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStackSetOperations?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Returns summary information about stack sets that are associated with the user.</p> <ul> <li> <p>[Self-managed permissions] If you set the <code>CallAs</code> parameter to <code>SELF</code> while signed in to your Amazon Web Services account, <code>ListStackSets</code> returns all self-managed stack sets in your Amazon Web Services account.</p> </li> <li> <p>[Service-managed permissions] If you set the <code>CallAs</code> parameter to <code>SELF</code> while signed in to the organization's management account, <code>ListStackSets</code> returns all stack sets in the management account.</p> </li> <li> <p>[Service-managed permissions] If you set the <code>CallAs</code> parameter to <code>DELEGATED_ADMIN</code> while signed in to your member account, <code>ListStackSets</code> returns all stack sets with service-managed permissions in the management account.</p> </li> </ul>
		/// GET_ListStackSets #Action=ListStackSets
		/// </summary>
		/// <param name="NextToken">If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="Status">The status of the stack sets that you want to get summary information about.</param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_ListStackSetsAsync(string NextToken, int MaxResults, StackSetStatus Status, CallAs CallAs, GET_ListStackSetsAction Action, GET_ListStackSetsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStackSets?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&MaxResults="+MaxResults+"&Status=" + Status+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
		/// GET_ListStacks #Action=ListStacks
		/// </summary>
		/// <param name="NextToken">A string that identifies the next page of stacks that you want to retrieve.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="StackStatusFilter">Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.</param>
		/// <returns>Success</returns>
		public async Task GET_ListStacksAsync(string NextToken, StackStatus[] StackStatusFilter, GET_ListStacksAction Action, GET_ListStacksVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListStacks?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&"+string.Join("&", StackStatusFilter.Select(z => $"StackStatusFilter={z}"))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of registration tokens for the specified extension(s).
		/// GET_ListTypeRegistrations #Action=ListTypeRegistrations
		/// </summary>
		/// <param name="Type"><p>The kind of extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="TypeArn"><p>The Amazon Resource Name (ARN) of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="RegistrationStatusFilter"><p>The current status of the extension registration request.</p> <p>The default is <code>IN_PROGRESS</code>.</p></param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="NextToken">If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListTypeRegistrationsAsync(ThirdPartyType Type, string TypeName, string TypeArn, RegistrationStatus RegistrationStatusFilter, int MaxResults, string NextToken, GET_ListTypeRegistrationsAction Action, GET_ListTypeRegistrationsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListTypeRegistrations?Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&TypeArn=" + (TypeArn==null? "" : System.Uri.EscapeDataString(TypeArn))+"&RegistrationStatusFilter=" + RegistrationStatusFilter+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns summary information about the versions of an extension.
		/// GET_ListTypeVersions #Action=ListTypeVersions
		/// </summary>
		/// <param name="Type"><p>The kind of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the extension for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the extension for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="NextToken">If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="DeprecatedStatus"><p>The deprecation status of the extension versions that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The extension version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li> <li> <p> <code>DEPRECATED</code>: The extension version has been deregistered and can no longer be used in CloudFormation operations.</p> </li> </ul> <p>The default is <code>LIVE</code>.</p></param>
		/// <param name="PublisherId"><p>The publisher ID of the extension publisher.</p> <p>Extensions published by Amazon aren't assigned a publisher ID.</p>
		/// Min length: 1
		/// Max length: 40
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListTypeVersionsAsync(ThirdPartyType Type, string TypeName, string Arn, int MaxResults, string NextToken, DeprecatedStatus DeprecatedStatus, string PublisherId, GET_ListTypeVersionsAction Action, GET_ListTypeVersionsVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListTypeVersions?Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&DeprecatedStatus=" + DeprecatedStatus+"&PublisherId=" + (PublisherId==null? "" : System.Uri.EscapeDataString(PublisherId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns summary information about extension that have been registered with CloudFormation.
		/// GET_ListTypes #Action=ListTypes
		/// </summary>
		/// <param name="Visibility"><p>The scope at which the extensions are visible and usable in CloudFormation operations.</p> <p>Valid values include:</p> <ul> <li> <p> <code>PRIVATE</code>: Extensions that are visible and usable within this account and Region. This includes:</p> <ul> <li> <p>Private extensions you have registered in this account and Region.</p> </li> <li> <p>Public extensions that you have activated in this account and Region.</p> </li> </ul> </li> <li> <p> <code>PUBLIC</code>: Extensions that are publicly visible and available to be activated within any Amazon Web Services account. This includes extensions from Amazon Web Services, in addition to third-party publishers.</p> </li> </ul> <p>The default is <code>PRIVATE</code>.</p></param>
		/// <param name="ProvisioningType"><p>For resource types, the provisioning behavior of the resource type. CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p> <p>Valid values include:</p> <ul> <li> <p> <code>FULLY_MUTABLE</code>: The resource type includes an update handler to process updates to the type during stack update operations.</p> </li> <li> <p> <code>IMMUTABLE</code>: The resource type doesn't include an update handler, so the type can't be updated and must instead be replaced during stack update operations.</p> </li> <li> <p> <code>NON_PROVISIONABLE</code>: The resource type doesn't include create, read, and delete handlers, and therefore can't actually be provisioned.</p> </li> </ul> <p>The default is <code>FULLY_MUTABLE</code>.</p></param>
		/// <param name="DeprecatedStatus"><p>The deprecation status of the extension that you want to get summary information about.</p> <p>Valid values include:</p> <ul> <li> <p> <code>LIVE</code>: The extension is registered for use in CloudFormation operations.</p> </li> <li> <p> <code>DEPRECATED</code>: The extension has been deregistered and can no longer be used in CloudFormation operations.</p> </li> </ul></param>
		/// <param name="Type">The type of extension.</param>
		/// <param name="Filters"><p>Filter criteria to use in determining which extensions to return.</p> <p>Filters must be compatible with <code>Visibility</code> to return valid results. For example, specifying <code>AWS_TYPES</code> for <code>Category</code> and <code>PRIVATE</code> for <code>Visibility</code> returns an empty list of types, but specifying <code>PUBLIC</code> for <code>Visibility</code> returns the desired list.</p></param>
		/// <param name="MaxResults">The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="NextToken">If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ListTypesAsync(Visibility Visibility, ProvisioningType ProvisioningType, DeprecatedStatus DeprecatedStatus, ThirdPartyType Type, GET_ListTypesFilters Filters, int MaxResults, string NextToken, GET_ListTypesAction Action, GET_ListTypesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ListTypes?Visibility=" + Visibility+"&ProvisioningType=" + ProvisioningType+"&DeprecatedStatus=" + DeprecatedStatus+"&Type=" + Type+"&Filters=" + Filters+"&MaxResults="+MaxResults+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Publishes the specified extension to the CloudFormation registry as a public extension in this Region. Public extensions are available for use by all CloudFormation users. For more information about publishing extensions, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html">Publishing extensions to make them available for public use</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>To publish an extension, you must be registered as a publisher with CloudFormation. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterPublisher.html">RegisterPublisher</a>.</p>
		/// GET_PublishType #Action=PublishType
		/// </summary>
		/// <param name="Type"><p>The type of the extension.</p> <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p></param>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the extension.</p> <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="PublicVersionNumber"><p>The version number to assign to this version of the extension.</p> <p>Use the following format, and adhere to semantic versioning when assigning a version number to your extension:</p> <p> <code>MAJOR.MINOR.PATCH</code> </p> <p>For more information, see <a href="https://semver.org/">Semantic Versioning 2.0.0</a>.</p> <p>If you don't specify a version number, CloudFormation increments the version number by one minor version release.</p> <p>You cannot specify a version number the first time you publish a type. CloudFormation automatically sets the first version number to be <code>1.0.0</code>.</p>
		/// Min length: 5
		// </param>
		/// <returns>Success</returns>
		public async Task GET_PublishTypeAsync(ThirdPartyType Type, string Arn, string TypeName, string PublicVersionNumber, GET_PublishTypeAction Action, GET_PublishTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=PublishType?Type=" + Type+"&Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&PublicVersionNumber=" + (PublicVersionNumber==null? "" : System.Uri.EscapeDataString(PublicVersionNumber))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Reports progress of a resource handler to CloudFormation.</p> <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>. Don't use this API in your code.</p>
		/// GET_RecordHandlerProgress #Action=RecordHandlerProgress
		/// </summary>
		/// <param name="BearerToken">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="OperationStatus">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="CurrentOperationStatus">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="StatusMessage">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
		/// Max length: 1024
		// </param>
		/// <param name="ErrorCode">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</param>
		/// <param name="ResourceModel">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
		/// Min length: 1
		/// Max length: 16384
		// </param>
		/// <param name="ClientRequestToken">Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_RecordHandlerProgressAsync(string BearerToken, OperationStatus OperationStatus, OperationStatus CurrentOperationStatus, string StatusMessage, HandlerErrorCode ErrorCode, string ResourceModel, string ClientRequestToken, GET_RecordHandlerProgressAction Action, GET_RecordHandlerProgressVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RecordHandlerProgress?BearerToken=" + (BearerToken==null? "" : System.Uri.EscapeDataString(BearerToken))+"&OperationStatus=" + OperationStatus+"&CurrentOperationStatus=" + CurrentOperationStatus+"&StatusMessage=" + (StatusMessage==null? "" : System.Uri.EscapeDataString(StatusMessage))+"&ErrorCode=" + ErrorCode+"&ResourceModel=" + (ResourceModel==null? "" : System.Uri.EscapeDataString(ResourceModel))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Registers your account as a publisher of public extensions in the CloudFormation registry. Public extensions are available for use by all CloudFormation users. This publisher ID applies to your account in all Amazon Web Services Regions.</p> <p>For information about requirements for registering as a public extension publisher, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs">Registering your account to publish CloudFormation extensions</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p/>
		/// GET_RegisterPublisher #Action=RegisterPublisher
		/// </summary>
		/// <param name="AcceptTermsAndConditions"><p>Whether you accept the <a href="https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf">Terms and Conditions</a> for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to register to publish public extensions to the CloudFormation registry.</p> <p>The default is <code>false</code>.</p></param>
		/// <param name="ConnectionArn"><p>If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs">Registering your account to publish CloudFormation extensions</a> in the <i>CloudFormation CLI User Guide</i>.</p>
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task GET_RegisterPublisherAsync(bool AcceptTermsAndConditions, string ConnectionArn, GET_RegisterPublisherAction Action, GET_RegisterPublisherVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RegisterPublisher?AcceptTermsAndConditions="+AcceptTermsAndConditions+"&ConnectionArn=" + (ConnectionArn==null? "" : System.Uri.EscapeDataString(ConnectionArn))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Registers an extension with the CloudFormation service. Registering an extension makes it available for use in CloudFormation templates in your Amazon Web Services account, and includes:</p> <ul> <li> <p>Validating the extension schema.</p> </li> <li> <p>Determining which handlers, if any, have been specified for the extension.</p> </li> <li> <p>Making the extension available for use in your account.</p> </li> </ul> <p>For more information about how to develop extensions and ready them for registration, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html">Creating Resource Providers</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>You can have a maximum of 50 resource extension versions registered at a time. This maximum is per account and per Region. Use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeregisterType.html">DeregisterType</a> to deregister specific extension versions if necessary.</p> <p>Once you have initiated a registration request using <a>RegisterType</a>, you can use <a>DescribeTypeRegistration</a> to monitor the progress of the registration request.</p> <p>Once you have registered a private extension in your account and Region, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html">SetTypeConfiguration</a> to specify configuration properties for the extension. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p>
		/// GET_RegisterType #Action=RegisterType
		/// </summary>
		/// <param name="Type">The kind of extension.</param>
		/// <param name="TypeName"><p>The name of the extension being registered.</p> <p>We suggest that extension names adhere to the following patterns:</p> <ul> <li> <p>For resource types, <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> </li> <li> <p>For modules, <i>company_or_organization</i>::<i>service</i>::<i>type</i>::MODULE.</p> </li> <li> <p>For hooks, <i>MyCompany</i>::<i>Testing</i>::<i>MyTestHook</i>.</p> </li> </ul> <note> <p>The following organization namespaces are reserved and can't be used in your extension names:</p> <ul> <li> <p> <code>Alexa</code> </p> </li> <li> <p> <code>AMZN</code> </p> </li> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>AWS</code> </p> </li> <li> <p> <code>Custom</code> </p> </li> <li> <p> <code>Dev</code> </p> </li> </ul> </note>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="SchemaHandlerPackage"><p>A URL to the S3 bucket containing the extension project package that contains the necessary files for the extension you want to register.</p> <p>For information about generating a schema handler package for the extension you want to register, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note> <p>The user registering the extension must be able to access the package in the S3 bucket. That's, the user needs to have <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> permissions for the schema handler package. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html">Actions, Resources, and Condition Keys for Amazon S3</a> in the <i>Identity and Access Management User Guide</i>.</p> </note>
		/// Min length: 1
		/// Max length: 4096
		// </param>
		/// <param name="LoggingConfig">Specifies logging configuration information for an extension.</param>
		/// <param name="ExecutionRoleArn"><p>The Amazon Resource Name (ARN) of the IAM role for CloudFormation to assume when invoking the extension.</p> <p>For CloudFormation to assume the specified execution role, the role must contain a trust relationship with the CloudFormation service principle (<code>resources.cloudformation.amazonaws.com</code>). For more information about adding trust relationships, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-managingrole-editing-console.html#roles-managingrole_edit-trust-policy">Modifying a role trust policy</a> in the <i>Identity and Access Management User Guide</i>.</p> <p>If your extension calls Amazon Web Services APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those Amazon Web Services APIs, and provision that execution role in your account. When CloudFormation needs to invoke the resource type handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the resource type handler, thereby supplying your resource type with the appropriate credentials.</p>
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="ClientRequestToken">A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of an extension from the same registration request, even if the request is submitted multiple times.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_RegisterTypeAsync(ThirdPartyType Type, string TypeName, string SchemaHandlerPackage, GET_RegisterTypeLoggingConfig LoggingConfig, string ExecutionRoleArn, string ClientRequestToken, GET_RegisterTypeAction Action, GET_RegisterTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RegisterType?Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&SchemaHandlerPackage=" + (SchemaHandlerPackage==null? "" : System.Uri.EscapeDataString(SchemaHandlerPackage))+"&LoggingConfig=" + LoggingConfig+"&ExecutionRoleArn=" + (ExecutionRoleArn==null? "" : System.Uri.EscapeDataString(ExecutionRoleArn))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>When specifying <code>RollbackStack</code>, you preserve the state of previously provisioned resources when an operation fails. You can check the status of the stack through the <a>DescribeStacks</a> operation.</p> <p>Rolls back the specified stack to the last known stable state from <code>CREATE_FAILED</code> or <code>UPDATE_FAILED</code> stack statuses.</p> <p>This operation will delete a stack if it doesn't contain a last known stable state. A last known stable state includes any status in a <code>*_COMPLETE</code>. This includes the following stack statuses.</p> <ul> <li> <p> <code>CREATE_COMPLETE</code> </p> </li> <li> <p> <code>UPDATE_COMPLETE</code> </p> </li> <li> <p> <code>UPDATE_ROLLBACK_COMPLETE</code> </p> </li> <li> <p> <code>IMPORT_COMPLETE</code> </p> </li> <li> <p> <code>IMPORT_ROLLBACK_COMPLETE</code> </p> </li> </ul>
		/// GET_RollbackStack #Action=RollbackStack
		/// </summary>
		/// <param name="StackName">The name that's associated with the stack.
		/// Min length: 1
		// </param>
		/// <param name="RoleARN">The Amazon Resource Name (ARN) of an Identity and Access Management role that CloudFormation assumes to rollback the stack.
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="ClientRequestToken">A unique identifier for this <code>RollbackStack</code> request.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="RetainExceptOnCreate">This deletion policy deletes newly created resources, but retains existing resources, when a stack operation is rolled back. This ensures new, empty, and unused resources are deleted, while critical resources and their data are retained. <code>RetainExceptOnCreate</code> can be specified for any resource that supports the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html"> DeletionPolicy</a> attribute.</param>
		/// <returns>Success</returns>
		public async Task GET_RollbackStackAsync(string StackName, string RoleARN, string ClientRequestToken, bool RetainExceptOnCreate, GET_RollbackStackAction Action, GET_RollbackStackVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=RollbackStack?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&RoleARN=" + (RoleARN==null? "" : System.Uri.EscapeDataString(RoleARN))+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&RetainExceptOnCreate="+RetainExceptOnCreate+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Sets a stack policy for a specified stack.
		/// GET_SetStackPolicy #Action=SetStackPolicy
		/// </summary>
		/// <param name="StackName">The name or unique stack ID that you want to associate a policy with.</param>
		/// <param name="StackPolicyBody">Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent updates to stack resources</a> in the CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
		/// Min length: 1
		/// Max length: 16384
		// </param>
		/// <param name="StackPolicyURL">Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an Amazon S3 bucket in the same Amazon Web Services Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.
		/// Min length: 1
		/// Max length: 1350
		// </param>
		/// <returns>Success</returns>
		public async Task GET_SetStackPolicyAsync(string StackName, string StackPolicyBody, string StackPolicyURL, GET_SetStackPolicyAction Action, GET_SetStackPolicyVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=SetStackPolicy?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&StackPolicyBody=" + (StackPolicyBody==null? "" : System.Uri.EscapeDataString(StackPolicyBody))+"&StackPolicyURL=" + (StackPolicyURL==null? "" : System.Uri.EscapeDataString(StackPolicyURL))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Specifies the configuration data for a registered CloudFormation extension, in the given account and Region.</p> <p>To view the current configuration data for an extension, refer to the <code>ConfigurationSchema</code> element of <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html">DescribeType</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p> <important> <p>It's strongly recommended that you use dynamic references to restrict sensitive configuration definitions, such as third-party credentials. For more details on dynamic references, see <a href="https://docs.aws.amazon.com/">Using dynamic references to specify template values</a> in the <i>CloudFormation User Guide</i>.</p> </important>
		/// GET_SetTypeConfiguration #Action=SetTypeConfiguration
		/// </summary>
		/// <param name="TypeArn"><p>The Amazon Resource Name (ARN) for the extension, in this account and Region.</p> <p>For public extensions, this will be the ARN assigned when you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ActivateType.html">activate the type</a> in this account and Region. For private extensions, this will be the ARN assigned when you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">register the type</a> in this account and Region.</p> <p>Do not include the extension versions suffix at the end of the ARN. You can set the configuration for an extension, but not for a specific extension version.</p>
		/// Max length: 1024
		// </param>
		/// <param name="Configuration"><p>The configuration data for the extension, in this account and Region.</p> <p>The configuration data must be formatted as JSON, and validate against the schema returned in the <code>ConfigurationSchema</code> response element of <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html">DescribeType</a>. For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-model.html#resource-type-howto-configuration">Defining account-level configuration data for an extension</a> in the <i>CloudFormation CLI User Guide</i>.</p>
		/// Min length: 1
		/// Max length: 204800
		// </param>
		/// <param name="ConfigurationAlias"><p>An alias by which to refer to this extension configuration data.</p> <p>Conditional: Specifying a configuration alias is required when setting a configuration for a resource type extension.</p>
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="Type"><p>The type of extension.</p> <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p></param>
		/// <returns>Success</returns>
		public async Task GET_SetTypeConfigurationAsync(string TypeArn, string Configuration, string ConfigurationAlias, string TypeName, ThirdPartyType Type, GET_SetTypeConfigurationAction Action, GET_SetTypeConfigurationVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=SetTypeConfiguration?TypeArn=" + (TypeArn==null? "" : System.Uri.EscapeDataString(TypeArn))+"&Configuration=" + (Configuration==null? "" : System.Uri.EscapeDataString(Configuration))+"&ConfigurationAlias=" + (ConfigurationAlias==null? "" : System.Uri.EscapeDataString(ConfigurationAlias))+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&Type=" + Type+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Specify the default version of an extension. The default version of an extension will be used in CloudFormation operations.
		/// GET_SetTypeDefaultVersion #Action=SetTypeDefaultVersion
		/// </summary>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the extension for which you want version summary information.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="Type"><p>The kind of extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p></param>
		/// <param name="TypeName"><p>The name of the extension.</p> <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="VersionId">The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task GET_SetTypeDefaultVersionAsync(string Arn, ThirdPartyType Type, string TypeName, string VersionId, GET_SetTypeDefaultVersionAction Action, GET_SetTypeDefaultVersionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=SetTypeDefaultVersion?Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&VersionId=" + (VersionId==null? "" : System.Uri.EscapeDataString(VersionId))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Sends a signal to the specified resource with a success or failure status. You can use the <code>SignalResource</code> operation in conjunction with a creation policy or update policy. CloudFormation doesn't proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The <code>SignalResource</code> operation is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
		/// GET_SignalResource #Action=SignalResource
		/// </summary>
		/// <param name="StackName">The stack name or unique stack ID that includes the resource that you want to signal.
		/// Min length: 1
		// </param>
		/// <param name="LogicalResourceId">The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.</param>
		/// <param name="UniqueId">A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="Status">The status of the signal, which is either success or failure. A failure signal causes CloudFormation to immediately fail the stack creation or update.</param>
		/// <returns>Success</returns>
		public async Task GET_SignalResourceAsync(string StackName, string LogicalResourceId, string UniqueId, ResourceSignalStatus Status, GET_SignalResourceAction Action, GET_SignalResourceVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=SignalResource?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&LogicalResourceId=" + (LogicalResourceId==null? "" : System.Uri.EscapeDataString(LogicalResourceId))+"&UniqueId=" + (UniqueId==null? "" : System.Uri.EscapeDataString(UniqueId))+"&Status=" + Status+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Stops an in-progress operation on a stack set and its associated stack instances. StackSets will cancel all the unstarted stack instance deployments and wait for those are in-progress to complete.
		/// GET_StopStackSetOperation #Action=StopStackSetOperation
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to stop the operation for.</param>
		/// <param name="OperationId">The ID of the stack operation.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_StopStackSetOperationAsync(string StackSetName, string OperationId, CallAs CallAs, GET_StopStackSetOperationAction Action, GET_StopStackSetOperationVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=StopStackSetOperation?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Tests a registered extension to make sure it meets all necessary requirements for being published in the CloudFormation registry.</p> <ul> <li> <p>For resource types, this includes passing all contracts tests defined for the type.</p> </li> <li> <p>For modules, this includes determining if the module's model meets all necessary requirements.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-testing">Testing your public extension prior to publishing</a> in the <i>CloudFormation CLI User Guide</i>.</p> <p>If you don't specify a version, CloudFormation uses the default version of the extension in your account and Region for testing.</p> <p>To perform testing, CloudFormation assumes the execution role specified when the type was registered. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">RegisterType</a>.</p> <p>Once you've initiated testing on an extension using <code>TestType</code>, you can pass the returned <code>TypeVersionArn</code> into <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html">DescribeType</a> to monitor the current test status and test status description for the extension.</p> <p>An extension must have a test status of <code>PASSED</code> before it can be published. For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-publish.html">Publishing extensions to make them available for public use</a> in the <i>CloudFormation CLI User Guide</i>.</p>
		/// GET_TestType #Action=TestType
		/// </summary>
		/// <param name="Arn"><p>The Amazon Resource Name (ARN) of the extension.</p> <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
		/// Max length: 1024
		// </param>
		/// <param name="Type"><p>The type of the extension to test.</p> <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p></param>
		/// <param name="TypeName"><p>The name of the extension to test.</p> <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
		/// Min length: 10
		/// Max length: 204
		// </param>
		/// <param name="VersionId"><p>The version of the extension to test.</p> <p>You can specify the version id with either <code>Arn</code>, or with <code>TypeName</code> and <code>Type</code>.</p> <p>If you don't specify a version, CloudFormation uses the default version of the extension in this account and Region for testing.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="LogDeliveryBucket"><p>The S3 bucket to which CloudFormation delivers the contract test execution logs.</p> <p>CloudFormation delivers the logs by the time contract testing has completed and the extension has been assigned a test type status of <code>PASSED</code> or <code>FAILED</code>.</p> <p>The user calling <code>TestType</code> must be able to access items in the specified S3 bucket. Specifically, the user needs the following permissions:</p> <ul> <li> <p> <code>GetObject</code> </p> </li> <li> <p> <code>PutObject</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html">Actions, Resources, and Condition Keys for Amazon S3</a> in the <i>Amazon Web Services Identity and Access Management User Guide</i>.</p>
		/// Min length: 3
		/// Max length: 63
		// </param>
		/// <returns>Success</returns>
		public async Task GET_TestTypeAsync(string Arn, ThirdPartyType Type, string TypeName, string VersionId, string LogDeliveryBucket, GET_TestTypeAction Action, GET_TestTypeVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=TestType?Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&Type=" + Type+"&TypeName=" + (TypeName==null? "" : System.Uri.EscapeDataString(TypeName))+"&VersionId=" + (VersionId==null? "" : System.Uri.EscapeDataString(VersionId))+"&LogDeliveryBucket=" + (LogDeliveryBucket==null? "" : System.Uri.EscapeDataString(LogDeliveryBucket))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack through the <a>DescribeStacks</a> action.</p> <p>To get a copy of the template for an existing stack, you can use the <a>GetTemplate</a> action.</p> <p>For more information about creating an update template, updating a stack, and monitoring the progress of the update, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html">Updating a Stack</a>.</p>
		/// GET_UpdateStack #Action=UpdateStack
		/// </summary>
		/// <param name="StackName">The name or unique stack ID of the stack to update.</param>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.)</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template that's located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="UsePreviousTemplate"><p>Reuse the existing template that is associated with the stack that you are updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p></param>
		/// <param name="StackPolicyDuringUpdateBody"><p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you don't specify a stack policy, the current policy that is associated with the stack will be used.</p>
		/// Min length: 1
		/// Max length: 16384
		// </param>
		/// <param name="StackPolicyDuringUpdateURL"><p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p> <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you don't specify a stack policy, the current policy that is associated with the stack will be used.</p>
		/// Min length: 1
		/// Max length: 1350
		// </param>
		/// <param name="Parameters">A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to update the stack.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability.</p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li> <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we suggest that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.</p> <p>If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important> <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p> <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without CloudFormation being notified.</p> </important> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li> </ul></param>
		/// <param name="ResourceTypes"><p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p> <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for CloudFormation-specific condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with Identity and Access Management</a>.</p></param>
		/// <param name="RoleARN"><p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to update the stack. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation always uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p> <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that is generated from your user credentials.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="RollbackConfiguration">The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</param>
		/// <param name="StackPolicyBody"><p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you don't specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
		/// Min length: 1
		/// Max length: 16384
		// </param>
		/// <param name="StackPolicyURL"><p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p> <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you don't specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
		/// Min length: 1
		/// Max length: 1350
		// </param>
		/// <param name="NotificationARNs">Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that CloudFormation associates with the stack. Specify an empty list to remove all notification topics.
		/// Maximum items: 5
		// </param>
		/// <param name="Tags"><p>Key-value pairs to associate with this stack. CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p> <p>If you don't specify this parameter, CloudFormation doesn't modify the stack's tags. If you specify an empty value, CloudFormation removes all associated tags.</p>
		/// Maximum items: 50
		// </param>
		/// <param name="DisableRollback"><p>Preserve the state of previously provisioned resources when an operation fails.</p> <p>Default: <code>False</code> </p></param>
		/// <param name="ClientRequestToken"><p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that CloudFormation successfully received them.</p> <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p> <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="RetainExceptOnCreate">This deletion policy deletes newly created resources, but retains existing resources, when a stack operation is rolled back. This ensures new, empty, and unused resources are deleted, while critical resources and their data are retained. <code>RetainExceptOnCreate</code> can be specified for any resource that supports the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html"> DeletionPolicy</a> attribute.</param>
		/// <returns>Success</returns>
		public async Task GET_UpdateStackAsync(
					string StackName, 
					string TemplateBody, 
					string TemplateURL, 
					bool UsePreviousTemplate, 
					string StackPolicyDuringUpdateBody, 
					string StackPolicyDuringUpdateURL, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					string[] ResourceTypes, 
					string RoleARN, 
					GET_UpdateStackRollbackConfiguration RollbackConfiguration, 
					string StackPolicyBody, 
					string StackPolicyURL, 
					string[] NotificationARNs, 
					Tag[] Tags, 
					bool DisableRollback, 
					string ClientRequestToken, 
					bool RetainExceptOnCreate, 
					GET_UpdateStackAction Action, 
					GET_UpdateStackVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateStack?StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&UsePreviousTemplate="+UsePreviousTemplate+"&StackPolicyDuringUpdateBody=" + (StackPolicyDuringUpdateBody==null? "" : System.Uri.EscapeDataString(StackPolicyDuringUpdateBody))+"&StackPolicyDuringUpdateURL=" + (StackPolicyDuringUpdateURL==null? "" : System.Uri.EscapeDataString(StackPolicyDuringUpdateURL))+"&"+string.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+string.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+string.Join("&", ResourceTypes.Select(z => $"ResourceTypes={System.Uri.EscapeDataString(z.ToString())}"))+"&RoleARN=" + (RoleARN==null? "" : System.Uri.EscapeDataString(RoleARN))+"&RollbackConfiguration=" + RollbackConfiguration+"&StackPolicyBody=" + (StackPolicyBody==null? "" : System.Uri.EscapeDataString(StackPolicyBody))+"&StackPolicyURL=" + (StackPolicyURL==null? "" : System.Uri.EscapeDataString(StackPolicyURL))+"&"+string.Join("&", NotificationARNs.Select(z => $"NotificationARNs={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={z}"))+"&DisableRollback="+DisableRollback+"&ClientRequestToken=" + (ClientRequestToken==null? "" : System.Uri.EscapeDataString(ClientRequestToken))+"&RetainExceptOnCreate="+RetainExceptOnCreate+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates the parameter values for stack instances for the specified accounts, within the specified Amazon Web Services Regions. A stack instance refers to a stack in a specific account and Region.</p> <p>You can only update stack instances in Amazon Web Services Regions and accounts where they already exist; to create additional stack instances, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html">CreateStackInstances</a>.</p> <p>During stack set updates, any parameters overridden for a stack instance aren't updated, but retain their overridden value.</p> <p>You can only update the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
		/// GET_UpdateStackInstances #Action=UpdateStackInstances
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set associated with the stack instances.</param>
		/// <param name="Accounts"><p>[Self-managed permissions] The names of one or more Amazon Web Services accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="DeploymentTargets"><p>[Service-managed permissions] The Organizations accounts for which you want to update parameter values for stack instances. If your update targets OUs, the overridden parameter values only apply to the accounts that are currently in the target OUs and their child OUs. Accounts added to the target OUs and their child OUs in the future won't use the overridden values.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p></param>
		/// <param name="Regions">The names of one or more Amazon Web Services Regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions.</param>
		/// <param name="ParameterOverrides"><p>A list of input parameters whose values you want to update for the specified stack instances.</p> <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions. When specifying parameters and their values, be aware of how CloudFormation sets parameter values during stack instance update operations:</p> <ul> <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li> <li> <p>To leave an overridden parameter set to its present value, include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You can't specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li> <li> <p>To set an overridden parameter back to the value specified in the stack set, specify a parameter list but don't include the parameter in the list.</p> </li> <li> <p>To leave all parameters set to their present values, don't specify this property at all.</p> </li> </ul> <p>During stack set updates, any parameter values overridden for a stack instance aren't updated, but retain their overridden value.</p> <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p></param>
		/// <param name="OperationPreferences">Preferences for how CloudFormation performs this stack set operation.</param>
		/// <param name="OperationId"><p>The unique identifier for this stack set operation.</p> <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, the SDK generates one automatically.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <returns>Success</returns>
		public async Task GET_UpdateStackInstancesAsync(string StackSetName, string[] Accounts, GET_UpdateStackInstancesDeploymentTargets DeploymentTargets, string[] Regions, Parameter[] ParameterOverrides, GET_UpdateStackInstancesOperationPreferences OperationPreferences, string OperationId, CallAs CallAs, GET_UpdateStackInstancesAction Action, GET_UpdateStackInstancesVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateStackInstances?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&"+string.Join("&", Accounts.Select(z => $"Accounts={System.Uri.EscapeDataString(z.ToString())}"))+"&DeploymentTargets=" + DeploymentTargets+"&"+string.Join("&", Regions.Select(z => $"Regions={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ParameterOverrides.Select(z => $"ParameterOverrides={z}"))+"&OperationPreferences=" + OperationPreferences+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&CallAs=" + CallAs+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates the stack set, and associated stack instances in the specified accounts and Amazon Web Services Regions.</p> <p>Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent <a>CreateStackInstances</a> calls on the specified stack set use the updated stack set.</p>
		/// GET_UpdateStackSet #Action=UpdateStackSet
		/// </summary>
		/// <param name="StackSetName">The name or unique ID of the stack set that you want to update.</param>
		/// <param name="Description">A brief description of updates that you are making.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="TemplateBody"><p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="UsePreviousTemplate"><p>Use the existing template that's associated with the stack set that you're updating.</p> <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p></param>
		/// <param name="Parameters">A list of input parameters for the stack set template.</param>
		/// <param name="Capabilities"><p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to update the stack set and its associated stack instances.</p> <ul> <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p> <ul> <li> <p>If you have IAM resources, you can specify either capability.</p> </li> <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li> <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li> </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li> <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates reference macros. If your stack set template references one or more macros, you must update the stack set directly from the processed template, without first reviewing the resulting changes in a change set. To update the stack set directly, you must acknowledge this capability. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/template-macros.html">Using CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important> <p>Stack sets with service-managed permissions do not currently support the use of macros in templates. (This includes the <a href="https://docs.aws.amazon.com/AWSCloudFormation/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="https://docs.aws.amazon.com/AWSCloudFormation/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.) Even if you specify this capability for a stack set with service-managed permissions, if you reference a macro in your template the stack set operation will fail.</p> </important> </li> </ul></param>
		/// <param name="Tags"><p>The key-value pairs to associate with this stack set and the stacks created from it. CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p> <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p> <ul> <li> <p>If you don't specify this parameter, CloudFormation doesn't modify the stack's tags.</p> </li> <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specified before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well.</p> </li> <li> <p>If you specify an empty value, CloudFormation removes all currently associated tags.</p> </li> </ul> <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
		/// Maximum items: 50
		// </param>
		/// <param name="OperationPreferences">Preferences for how CloudFormation performs this stack set operation.</param>
		/// <param name="AdministrationRoleARN"><p>The Amazon Resource Name (ARN) of the IAM role to use to update this stack set.</p> <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p> <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <param name="ExecutionRoleName"><p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p> <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets.</p> <p>If you specify a customized execution role, CloudFormation uses that role to update the stack. If you do not specify a customized execution role, CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <param name="DeploymentTargets"><p>[Service-managed permissions] The Organizations accounts in which to update associated stack instances.</p> <p>To update all the stack instances associated with this stack set, do not specify <code>DeploymentTargets</code> or <code>Regions</code>.</p> <p>If the stack set update includes changes to the template (that is, if <code>TemplateBody</code> or <code>TemplateURL</code> is specified), or the <code>Parameters</code>, CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Amazon Web Services Regions. If the stack set update doesn't include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.</p></param>
		/// <param name="PermissionModel"><p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p> <ul> <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li> <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li> </ul></param>
		/// <param name="AutoDeployment"><p>[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).</p> <p>If you specify <code>AutoDeployment</code>, don't specify <code>DeploymentTargets</code> or <code>Regions</code>.</p></param>
		/// <param name="OperationId"><p>The unique ID for this stack set operation.</p> <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.</p> <p>If you don't specify an operation ID, CloudFormation generates one automatically.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="Accounts"><p>[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the Amazon Web Services Regions in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, don't specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Amazon Web Services Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Amazon Web Services Regions, while leaving all other stack instances with their existing stack instance status.</p></param>
		/// <param name="Regions"><p>The Amazon Web Services Regions in which to update associated stack instances. If you specify Regions, you must also specify accounts in which to update stack set instances.</p> <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p> <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.</p></param>
		/// <param name="CallAs"><p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul></param>
		/// <param name="ManagedExecution">Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</param>
		/// <returns>Success</returns>
		public async Task GET_UpdateStackSetAsync(
					string StackSetName, 
					string Description, 
					string TemplateBody, 
					string TemplateURL, 
					bool UsePreviousTemplate, 
					Parameter[] Parameters, 
					Capability[] Capabilities, 
					Tag[] Tags, 
					GET_UpdateStackSetOperationPreferences OperationPreferences, 
					string AdministrationRoleARN, 
					string ExecutionRoleName, 
					GET_UpdateStackSetDeploymentTargets DeploymentTargets, 
					PermissionModels PermissionModel, 
					GET_UpdateStackSetAutoDeployment AutoDeployment, 
					string OperationId, 
					string[] Accounts, 
					string[] Regions, 
					CallAs CallAs, 
					GET_UpdateStackSetManagedExecution ManagedExecution, 
					GET_UpdateStackSetAction Action, 
					GET_UpdateStackSetVersion Version, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateStackSet?StackSetName=" + (StackSetName==null? "" : System.Uri.EscapeDataString(StackSetName))+"&Description=" + (Description==null? "" : System.Uri.EscapeDataString(Description))+"&TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&UsePreviousTemplate="+UsePreviousTemplate+"&"+string.Join("&", Parameters.Select(z => $"Parameters={z}"))+"&"+string.Join("&", Capabilities.Select(z => $"Capabilities={z}"))+"&"+string.Join("&", Tags.Select(z => $"Tags={z}"))+"&OperationPreferences=" + OperationPreferences+"&AdministrationRoleARN=" + (AdministrationRoleARN==null? "" : System.Uri.EscapeDataString(AdministrationRoleARN))+"&ExecutionRoleName=" + (ExecutionRoleName==null? "" : System.Uri.EscapeDataString(ExecutionRoleName))+"&DeploymentTargets=" + DeploymentTargets+"&PermissionModel=" + PermissionModel+"&AutoDeployment=" + AutoDeployment+"&OperationId=" + (OperationId==null? "" : System.Uri.EscapeDataString(OperationId))+"&"+string.Join("&", Accounts.Select(z => $"Accounts={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", Regions.Select(z => $"Regions={System.Uri.EscapeDataString(z.ToString())}"))+"&CallAs=" + CallAs+"&ManagedExecution=" + ManagedExecution+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>CloudFormation User Guide</i>.</p> <p>For <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and can't be changed directly on the nested stack.</p>
		/// GET_UpdateTerminationProtection #Action=UpdateTerminationProtection
		/// </summary>
		/// <param name="EnableTerminationProtection">Whether to enable termination protection on the specified stack.</param>
		/// <param name="StackName">The name or unique ID of the stack for which you want to set termination protection.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task GET_UpdateTerminationProtectionAsync(bool EnableTerminationProtection, string StackName, GET_UpdateTerminationProtectionAction Action, GET_UpdateTerminationProtectionVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=UpdateTerminationProtection?EnableTerminationProtection="+EnableTerminationProtection+"&StackName=" + (StackName==null? "" : System.Uri.EscapeDataString(StackName))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Validates a specified template. CloudFormation first checks if the template is valid JSON. If it isn't, CloudFormation checks if the template is valid YAML. If both these checks fail, CloudFormation returns a template validation error.
		/// GET_ValidateTemplate #Action=ValidateTemplate
		/// </summary>
		/// <param name="TemplateBody"><p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
		/// Min length: 1
		// </param>
		/// <param name="TemplateURL"><p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <returns>Success</returns>
		public async Task GET_ValidateTemplateAsync(string TemplateBody, string TemplateURL, GET_ValidateTemplateAction Action, GET_ValidateTemplateVersion Version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#Action=ValidateTemplate?TemplateBody=" + (TemplateBody==null? "" : System.Uri.EscapeDataString(TemplateBody))+"&TemplateURL=" + (TemplateURL==null? "" : System.Uri.EscapeDataString(TemplateURL))+"&Action=" + Action+"&Version=" + Version;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum GET_ActivateOrganizationsAccessAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ActivateOrganizationsAccess = 0,
	}
	
	public enum GET_ActivateOrganizationsAccessVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ActivateOrganizationsAccessVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_ActivateTypeLoggingConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
	}
	
	public enum GET_ActivateTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ActivateType = 0,
	}
	
	public enum GET_ActivateTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ActivateTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_BatchDescribeTypeConfigurationsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BatchDescribeTypeConfigurations = 0,
	}
	
	public enum GET_BatchDescribeTypeConfigurationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_BatchDescribeTypeConfigurationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_CancelUpdateStackAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CancelUpdateStack = 0,
	}
	
	public enum GET_CancelUpdateStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_CancelUpdateStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ContinueUpdateRollbackAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ContinueUpdateRollback = 0,
	}
	
	public enum GET_ContinueUpdateRollbackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ContinueUpdateRollbackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_CreateChangeSetRollbackConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackTrigger[] RollbackTriggers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringTimeInMinutes { get; set; }
	}
	
	public enum GET_CreateChangeSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateChangeSet = 0,
	}
	
	public enum GET_CreateChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_CreateChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_CreateStackRollbackConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackTrigger[] RollbackTriggers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringTimeInMinutes { get; set; }
	}
	
	public enum GET_CreateStackAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateStack = 0,
	}
	
	public enum GET_CreateStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_CreateStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_CreateStackInstancesDeploymentTargets
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountsUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountFilterType AccountFilterType { get; set; }
	}
	
	public class GET_CreateStackInstancesOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	public enum GET_CreateStackInstancesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateStackInstances = 0,
	}
	
	public enum GET_CreateStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_CreateStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_CreateStackSetAutoDeployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainStacksOnAccountRemoval { get; set; }
	}
	
	public class GET_CreateStackSetManagedExecution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Active { get; set; }
	}
	
	public enum GET_CreateStackSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CreateStackSet = 0,
	}
	
	public enum GET_CreateStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_CreateStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DeactivateOrganizationsAccessAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeactivateOrganizationsAccess = 0,
	}
	
	public enum GET_DeactivateOrganizationsAccessVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeactivateOrganizationsAccessVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DeactivateTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeactivateType = 0,
	}
	
	public enum GET_DeactivateTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeactivateTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DeleteChangeSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteChangeSet = 0,
	}
	
	public enum GET_DeleteChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeleteChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DeleteStackAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteStack = 0,
	}
	
	public enum GET_DeleteStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeleteStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_DeleteStackInstancesDeploymentTargets
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountsUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountFilterType AccountFilterType { get; set; }
	}
	
	public class GET_DeleteStackInstancesOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	public enum GET_DeleteStackInstancesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteStackInstances = 0,
	}
	
	public enum GET_DeleteStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeleteStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DeleteStackSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeleteStackSet = 0,
	}
	
	public enum GET_DeleteStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeleteStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DeregisterTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeregisterType = 0,
	}
	
	public enum GET_DeregisterTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DeregisterTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeAccountLimitsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeAccountLimits = 0,
	}
	
	public enum GET_DescribeAccountLimitsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeAccountLimitsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeChangeSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeChangeSet = 0,
	}
	
	public enum GET_DescribeChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeChangeSetHooksAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeChangeSetHooks = 0,
	}
	
	public enum GET_DescribeChangeSetHooksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeChangeSetHooksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeOrganizationsAccessAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeOrganizationsAccess = 0,
	}
	
	public enum GET_DescribeOrganizationsAccessVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeOrganizationsAccessVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribePublisherAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribePublisher = 0,
	}
	
	public enum GET_DescribePublisherVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribePublisherVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackDriftDetectionStatusAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackDriftDetectionStatus = 0,
	}
	
	public enum GET_DescribeStackDriftDetectionStatusVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackDriftDetectionStatusVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackEventsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackEvents = 0,
	}
	
	public enum GET_DescribeStackEventsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackEventsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackInstanceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackInstance = 0,
	}
	
	public enum GET_DescribeStackInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackInstanceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackResourceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackResource = 0,
	}
	
	public enum GET_DescribeStackResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackResourceDriftsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackResourceDrifts = 0,
	}
	
	public enum GET_DescribeStackResourceDriftsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackResourceDriftsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackResourcesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackResources = 0,
	}
	
	public enum GET_DescribeStackResourcesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackResourcesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackSet = 0,
	}
	
	public enum GET_DescribeStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStackSetOperationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStackSetOperation = 0,
	}
	
	public enum GET_DescribeStackSetOperationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStackSetOperationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeStacksAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeStacks = 0,
	}
	
	public enum GET_DescribeStacksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeStacksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeType = 0,
	}
	
	public enum GET_DescribeTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DescribeTypeRegistrationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DescribeTypeRegistration = 0,
	}
	
	public enum GET_DescribeTypeRegistrationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DescribeTypeRegistrationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DetectStackDriftAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DetectStackDrift = 0,
	}
	
	public enum GET_DetectStackDriftVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DetectStackDriftVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_DetectStackResourceDriftAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DetectStackResourceDrift = 0,
	}
	
	public enum GET_DetectStackResourceDriftVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DetectStackResourceDriftVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_DetectStackSetDriftOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	public enum GET_DetectStackSetDriftAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DetectStackSetDrift = 0,
	}
	
	public enum GET_DetectStackSetDriftVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_DetectStackSetDriftVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_EstimateTemplateCostAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EstimateTemplateCost = 0,
	}
	
	public enum GET_EstimateTemplateCostVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_EstimateTemplateCostVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ExecuteChangeSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExecuteChangeSet = 0,
	}
	
	public enum GET_ExecuteChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ExecuteChangeSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_GetStackPolicyAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GetStackPolicy = 0,
	}
	
	public enum GET_GetStackPolicyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_GetStackPolicyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_GetTemplateAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GetTemplate = 0,
	}
	
	public enum GET_GetTemplateVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_GetTemplateVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_GetTemplateSummaryTemplateSummaryConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TreatUnrecognizedResourceTypesAsWarnings { get; set; }
	}
	
	public enum GET_GetTemplateSummaryAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GetTemplateSummary = 0,
	}
	
	public enum GET_GetTemplateSummaryVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_GetTemplateSummaryVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_ImportStacksToStackSetOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	public enum GET_ImportStacksToStackSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImportStacksToStackSet = 0,
	}
	
	public enum GET_ImportStacksToStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ImportStacksToStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListChangeSetsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListChangeSets = 0,
	}
	
	public enum GET_ListChangeSetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListChangeSetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListExportsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListExports = 0,
	}
	
	public enum GET_ListExportsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListExportsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListImportsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListImports = 0,
	}
	
	public enum GET_ListImportsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListImportsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStackInstanceResourceDriftsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStackInstanceResourceDrifts = 0,
	}
	
	public enum GET_ListStackInstanceResourceDriftsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStackInstanceResourceDriftsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStackInstancesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStackInstances = 0,
	}
	
	public enum GET_ListStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStackResourcesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStackResources = 0,
	}
	
	public enum GET_ListStackResourcesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStackResourcesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStackSetOperationResultsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStackSetOperationResults = 0,
	}
	
	public enum GET_ListStackSetOperationResultsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStackSetOperationResultsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStackSetOperationsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStackSetOperations = 0,
	}
	
	public enum GET_ListStackSetOperationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStackSetOperationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStackSetsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStackSets = 0,
	}
	
	public enum GET_ListStackSetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStackSetsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListStacksAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListStacks = 0,
	}
	
	public enum GET_ListStacksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListStacksVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListTypeRegistrationsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListTypeRegistrations = 0,
	}
	
	public enum GET_ListTypeRegistrationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListTypeRegistrationsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ListTypeVersionsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListTypeVersions = 0,
	}
	
	public enum GET_ListTypeVersionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListTypeVersionsVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_ListTypesFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Category Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublisherId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TypeNamePrefix { get; set; }
	}
	
	public enum GET_ListTypesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListTypes = 0,
	}
	
	public enum GET_ListTypesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ListTypesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_PublishTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PublishType = 0,
	}
	
	public enum GET_PublishTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_PublishTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_RecordHandlerProgressAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecordHandlerProgress = 0,
	}
	
	public enum GET_RecordHandlerProgressVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_RecordHandlerProgressVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_RegisterPublisherAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RegisterPublisher = 0,
	}
	
	public enum GET_RegisterPublisherVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_RegisterPublisherVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_RegisterTypeLoggingConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
	}
	
	public enum GET_RegisterTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RegisterType = 0,
	}
	
	public enum GET_RegisterTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_RegisterTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_RollbackStackAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RollbackStack = 0,
	}
	
	public enum GET_RollbackStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_RollbackStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_SetStackPolicyAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SetStackPolicy = 0,
	}
	
	public enum GET_SetStackPolicyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_SetStackPolicyVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_SetTypeConfigurationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SetTypeConfiguration = 0,
	}
	
	public enum GET_SetTypeConfigurationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_SetTypeConfigurationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_SetTypeDefaultVersionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SetTypeDefaultVersion = 0,
	}
	
	public enum GET_SetTypeDefaultVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_SetTypeDefaultVersionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_SignalResourceAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SignalResource = 0,
	}
	
	public enum GET_SignalResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_SignalResourceVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_StopStackSetOperationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StopStackSetOperation = 0,
	}
	
	public enum GET_StopStackSetOperationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_StopStackSetOperationVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_TestTypeAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TestType = 0,
	}
	
	public enum GET_TestTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_TestTypeVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_UpdateStackRollbackConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackTrigger[] RollbackTriggers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MonitoringTimeInMinutes { get; set; }
	}
	
	public enum GET_UpdateStackAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateStack = 0,
	}
	
	public enum GET_UpdateStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_UpdateStackVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_UpdateStackInstancesDeploymentTargets
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountsUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountFilterType AccountFilterType { get; set; }
	}
	
	public class GET_UpdateStackInstancesOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	public enum GET_UpdateStackInstancesAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateStackInstances = 0,
	}
	
	public enum GET_UpdateStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_UpdateStackInstancesVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public class GET_UpdateStackSetOperationPreferences
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RegionConcurrencyType RegionConcurrencyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RegionOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureToleranceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailureTolerancePercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxConcurrentPercentage { get; set; }
	}
	
	public class GET_UpdateStackSetDeploymentTargets
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Accounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountsUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountFilterType AccountFilterType { get; set; }
	}
	
	public class GET_UpdateStackSetAutoDeployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RetainStacksOnAccountRemoval { get; set; }
	}
	
	public class GET_UpdateStackSetManagedExecution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Active { get; set; }
	}
	
	public enum GET_UpdateStackSetAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateStackSet = 0,
	}
	
	public enum GET_UpdateStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_UpdateStackSetVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_UpdateTerminationProtectionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateTerminationProtection = 0,
	}
	
	public enum GET_UpdateTerminationProtectionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_UpdateTerminationProtectionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum GET_ValidateTemplateAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidateTemplate = 0,
	}
	
	public enum GET_ValidateTemplateVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
	
	public enum POST_ValidateTemplateVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2010-05-15")]
		_2010Minus05Minus15 = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

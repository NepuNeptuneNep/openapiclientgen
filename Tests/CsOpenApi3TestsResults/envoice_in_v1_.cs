//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Activity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EstimationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EstimationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InvoiceNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OrderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrderNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<ActivityType> Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ActivityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Created")]
		Created = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Draft")]
		Draft = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Cloned")]
		Cloned = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SentViaEmail")]
		SentViaEmail = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SentViaSms")]
		SentViaSms = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SentReminderViaEmail")]
		SentReminderViaEmail = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SentReminderViaSms")]
		SentReminderViaSms = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Opened")]
		Opened = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Viewed")]
		Viewed = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Rejected")]
		Rejected = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Updated")]
		Updated = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Paid")]
		Paid = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Unpaid")]
		Unpaid = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Overdue")]
		Overdue = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewManualPayment")]
		NewManualPayment = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithPaypal")]
		NewPaymentWithPaypal = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithStripe")]
		NewPaymentWithStripe = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithPayoneer")]
		NewPaymentWithPayoneer = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SentToAccountant")]
		SentToAccountant = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DownloadedAsPdf")]
		DownloadedAsPdf = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MarkAsPaidByTheClient")]
		MarkAsPaidByTheClient = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpenedAttachment")]
		OpenedAttachment = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithSquare")]
		NewPaymentWithSquare = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithKlikAndPay")]
		NewPaymentWithKlikAndPay = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithRazorpay")]
		NewPaymentWithRazorpay = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithWepay")]
		NewPaymentWithWepay = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithHalkbank")]
		NewPaymentWithHalkbank = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ChangeStatus")]
		ChangeStatus = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OrderUpdated")]
		OrderUpdated = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OrderCreated")]
		OrderCreated = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithTwoCheckout")]
		NewPaymentWithTwoCheckout = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithPaymentWall")]
		NewPaymentWithPaymentWall = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithBamboraEU")]
		NewPaymentWithBamboraEU = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithBamboraNA")]
		NewPaymentWithBamboraNA = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Void")]
		Void = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithNlb")]
		NewPaymentWithNlb = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithAuthorizeNet")]
		NewPaymentWithAuthorizeNet = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NewPaymentWithBraintree")]
		NewPaymentWithBraintree = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationCreated")]
		EstimationCreated = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationDraft")]
		EstimationDraft = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationCloned")]
		EstimationCloned = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationSentViaEmail")]
		EstimationSentViaEmail = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationOpened")]
		EstimationOpened = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationViewed")]
		EstimationViewed = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationAccepted")]
		EstimationAccepted = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationRejected")]
		EstimationRejected = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationUpdated")]
		EstimationUpdated = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EstimationDownloadedAsPdf")]
		EstimationDownloadedAsPdf = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="InvoiceDigitallySigned")]
		InvoiceDigitallySigned = 48,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdditionalClientEmail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Client Client { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Client
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCountryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCurrencyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CompanyRegistrationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultDueDateInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UiLanguageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Vat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AdditionalClientEmailApiModel
	{
		
		/// <summary>
		/// CC
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ChangeOrderStatusApiModel
	{
		
		/// <summary>
		/// Order Id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Reason for status change
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Reason { get; set; }
		
		/// <summary>
		/// New status of the order
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<ChangeOrderStatusApiModelStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ChangeOrderStatusApiModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PendingPayment")]
		PendingPayment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Processing")]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Shipped")]
		Shipped = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Completed")]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OnHold")]
		OnHold = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Cancelled")]
		Cancelled = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Refunded")]
		Refunded = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Failed")]
		Failed = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ChangeStatusApiModel
	{
		
		/// <summary>
		/// Invoice Id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// New status of the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<ChangeStatusApiModelStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ChangeStatusApiModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Draft")]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Paid")]
		Paid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Unpaid")]
		Unpaid = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Overdue")]
		Overdue = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Void")]
		Void = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ClientCreateApiModel
	{
		
		/// <summary>
		/// Client additional emails contact for CC
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdditionalClientEmailApiModel[] AdditionalEmails { get; set; }
		
		/// <summary>
		/// Client business address
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		/// <summary>
		/// Indicates the country where the clients is from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCountryId { get; set; }
		
		/// <summary>
		/// Indicates the default system currency used by the user for the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCurrencyId { get; set; }
		
		/// <summary>
		/// Client's Company Registration Number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CompanyRegistrationNumber { get; set; }
		
		/// <summary>
		/// Client custom payment terms
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultDueDateInDays { get; set; }
		
		/// <summary>
		/// Client email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Name of the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Client phone numer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// Hold a value of the language in which the invoice will be sent
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UiLanguageId { get; set; }
		
		/// <summary>
		/// Client's VAT number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Vat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ClientDeleteApiModel
	{
		
		/// <summary>
		/// Id of client to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ClientDetailsApiModel
	{
		
		/// <summary>
		/// Client additional emails contact for CC
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdditionalClientEmailApiModel[] AdditionalEmails { get; set; }
		
		/// <summary>
		/// Client business address
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		/// <summary>
		/// Indicates the country where the clients is from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCountryId { get; set; }
		
		/// <summary>
		/// Indicates the default system currency used by the user for the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCurrencyId { get; set; }
		
		/// <summary>
		/// Client's Company Registration Number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CompanyRegistrationNumber { get; set; }
		
		/// <summary>
		/// Date of creation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedOn { get; set; }
		
		/// <summary>
		/// Client custom payment terms
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultDueDateInDays { get; set; }
		
		/// <summary>
		/// Client email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Client phone numer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// Hold a value of the language in which the invoice will be sent
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UiLanguageId { get; set; }
		
		/// <summary>
		/// Client's VAT number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Vat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ClientUpdateApiModel
	{
		
		/// <summary>
		/// Client additional emails contact for CC
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AdditionalClientEmailApiModel[] AdditionalEmails { get; set; }
		
		/// <summary>
		/// Client business address
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		/// <summary>
		/// Indicates the country where the clients is from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCountryId { get; set; }
		
		/// <summary>
		/// Indicates the default system currency used by the user for the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientCurrencyId { get; set; }
		
		/// <summary>
		/// Client's Company Registration Number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CompanyRegistrationNumber { get; set; }
		
		/// <summary>
		/// Client custom payment terms
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultDueDateInDays { get; set; }
		
		/// <summary>
		/// Client email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Client phone numer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// Hold a value of the language in which the invoice will be sent
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UiLanguageId { get; set; }
		
		/// <summary>
		/// Client's VAT number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Vat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Country
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CountryDetailsApiModel
	{
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the country
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Country short code
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Currency
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Symbol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CurrencyApiModel
	{
		
		/// <summary>
		/// Name of the currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Currency short code
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CurrencyDetailsApiModel
	{
		
		/// <summary>
		/// Currency short numeric code
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the country
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Currency symbol
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Symbol { get; set; }
		
		/// <summary>
		/// Currency short alpha code
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationActivityApiModel
	{
		
		/// <summary>
		/// Indicates to which estimation this activity refers to
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string EstimationNumber { get; set; }
		
		/// <summary>
		/// Id of estimation activity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Url which point out to a certain activity action. Ex: Click to view the payment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Message associated with the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		/// <summary>
		/// Type of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActivityType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationAttachmentApiModel
	{
		
		/// <summary>
		/// Id of estimation attachment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<EstimationAttachmentApiModelType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EstimationAttachmentApiModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External")]
		External = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Uploaded")]
		Uploaded = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationChangeStatusApiModel
	{
		
		/// <summary>
		/// Estimation Id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// New status of the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<EstimationChangeStatusApiModelStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EstimationChangeStatusApiModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Draft")]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Accepted")]
		Accepted = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Rejected")]
		Rejected = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationCreateApiModel
	{
		
		/// <summary>
		/// List of estimation attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationCreateAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// The client to whom this estimation is assigned
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		/// <summary>
		/// Indicate from which estimation this estimation has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		/// <summary>
		/// Id of the currency for the estimation amounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Indicates when the estimation will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ExpiresOn { get; set; }
		
		/// <summary>
		/// Indicates when the estimation was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// List of estimation items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationCreateItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Internal note regarding the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique estimation number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Indicate the status of the estimation (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationCreateAttachmentApiModel
	{
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationCreateItemApiModel
	{
		
		/// <summary>
		/// Amount per unit
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// Additional description attached to the estimation item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount percentage for the overall amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Quantity in total used for the work type
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Tax applied on the item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Work type (Name of the service)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationGatewayApiModel
	{
		
		/// <summary>
		/// Name of the payment gateway
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationDeleteApiModel
	{
		
		/// <summary>
		/// Id of estimation to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationDetailsApiModel
	{
		
		/// <summary>
		/// Security access token used for accessing the estimation anonymously
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClientDetailsApiModel Client { get; set; }
		
		/// <summary>
		/// Indicate from which estimation this estimation has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Amount that goes as a discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Indicates when the estimation will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ExpiresOn { get; set; }
		
		/// <summary>
		/// Estimation id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicates when the estimation was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// Internal note regarding the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique estimation number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Indicate the status of the estimation (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Total amount of the estimation without tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Amount that goes to the tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
		
		/// <summary>
		/// Total amount of the estimation with tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationFullDetailsApiModel
	{
		
		/// <summary>
		/// Security access token used for accessing the estimation anonymously
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		/// <summary>
		/// List of estimation activities. estimation audit log
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationActivityApiModel[] Activities { get; set; }
		
		/// <summary>
		/// List of estimation attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModel[] Attachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClientDetailsApiModel Client { get; set; }
		
		/// <summary>
		/// Indicate from which estimation this estimation has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Amount that goes as a discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Indicates when the estimation will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ExpiresOn { get; set; }
		
		/// <summary>
		/// Estimation id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicates when the estimation was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// List of estimation items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Internal note regarding the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique estimation number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Indicate the status of the estimation (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Total amount of the estimation without tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Amount that goes to the tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
		
		/// <summary>
		/// Total amount of the estimation with tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationItemApiModel
	{
		
		/// <summary>
		/// Amount per unit
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// Additional description attached to the estimation item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Amount that goes as a discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Discount percentage for the overall amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Id of estimation item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Quantity in total used for the work type
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Sub-Total amount of the estimation item (Amount without tax)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Amount that goes to the tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Tax applied on the item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Total amount of the estimation item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Work type (Name of the service)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationUpdateApiModel
	{
		
		/// <summary>
		/// List of estimation attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationUpdateAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// The client to whom this estimation is assigned
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		/// <summary>
		/// Indicate from which estimation this estimation has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		/// <summary>
		/// Id of the currency for the estimation amounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Indicates when the estimation will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ExpiresOn { get; set; }
		
		/// <summary>
		/// estimation id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicates when the estimation was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// List of estimation items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationUpdateItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Internal note regarding the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique estimation number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Indicate the status of the estimation (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationUpdateAttachmentApiModel
	{
		
		/// <summary>
		/// Id of estimation attachment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationUpdateItemApiModel
	{
		
		/// <summary>
		/// Amount per unit
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// Additional description attached to the estimation item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount percentage for the overall amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Id of estimation item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Quantity in total used for the work type
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Tax applied on the item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Work type (Name of the service)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimationUriApiModel
	{
		
		/// <summary>
		/// Unique link to the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExternalConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessTokenSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ExpiresOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalUserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Provider { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IErrorInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FaultMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Group { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserVisibleMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Invoice
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Activity[] Activities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceAttachment[] Attachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Duedate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePartialPayments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EstimationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceCategoryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsDigitallySigned { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OrderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentGatewayForInvoice[] PaymentGateways { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PaymentLinkId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Payment[] Payments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurringProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ShouldSendReminders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeStatusApiModelStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceAttachment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentGatewayForInvoice
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Payment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Invoice Invoice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsAutomatic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Note { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> PaidOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<PaymentType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PaymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Other")]
		Other = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Paypal")]
		Paypal = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Stripe")]
		Stripe = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Payoneer")]
		Payoneer = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Bank")]
		Bank = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Cash")]
		Cash = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Cheque")]
		Cheque = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Ach")]
		Ach = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Sepa")]
		Sepa = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Square")]
		Square = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KlikAndPay")]
		KlikAndPay = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Razorpay")]
		Razorpay = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Wepay")]
		Wepay = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Halkbank")]
		Halkbank = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TwoCheckout")]
		TwoCheckout = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PaymentWall")]
		PaymentWall = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BamboraEU")]
		BamboraEU = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BamboraNA")]
		BamboraNA = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Nlb")]
		Nlb = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AuthorizeNet")]
		AuthorizeNet = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Braintree")]
		Braintree = 20,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceActivityApiModel
	{
		
		/// <summary>
		/// Id of invoice activity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicates to which invoice this activity refers to
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string InvoiceNumber { get; set; }
		
		/// <summary>
		/// Url which point out to a certain activity action. Ex: Click to view the payment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Message associated with the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		/// <summary>
		/// Type of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActivityType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceAttachmentApiModel
	{
		
		/// <summary>
		/// Id of invoice attachment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCategoryApiModel
	{
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Category name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCategoryCreateApiModel
	{
		
		/// <summary>
		/// Category name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCategoryDeleteApiModel
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCategoryUpdateApiModel
	{
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Category name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCreateApiModel
	{
		
		/// <summary>
		/// List of invoice attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceCreateAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// The client to whom this invoice is assigned
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		/// <summary>
		/// Indicate from which invoice this invoice has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		/// <summary>
		/// Id of the currency for the invoice amounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Indicates when the invoice will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Duedate { get; set; }
		
		/// <summary>
		/// Hold the id of the invoice category
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceCategoryId { get; set; }
		
		/// <summary>
		/// Indicates when the invoice was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// List of invoice items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceCreateItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Internal note regarding the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique invoice number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Definition of invoice recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModel RecurringProfile { get; set; }
		
		/// <summary>
		/// Hold the id of the recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurringProfileId { get; set; }
		
		/// <summary>
		/// Should send email reminders to client?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ShouldSendReminders { get; set; }
		
		/// <summary>
		/// Indicate the status of the invoice (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCreateAttachmentApiModel
	{
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceCreateItemApiModel
	{
		
		/// <summary>
		/// Amount per unit
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// Additional description attached to the invoice item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount percentage for the overall amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Quantity in total used for the work type
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Tax applied on the item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Work type (Name of the service)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceGatewayApiModel
	{
		
		/// <summary>
		/// Name of the payment gateway
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Definition of invoice recurring profile
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceRecurringApiModel
	{
		
		/// <summary>
		/// Day of month when the recurrance should happen
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DayOfMonth { get; set; }
		
		/// <summary>
		/// Day when the recurrance should happen
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<InvoiceRecurringApiModelDayOfWeek> DayOfWeek { get; set; }
		
		/// <summary>
		/// Total number of days for the client to pay the invoice after issuing it
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DueDateInDays { get; set; }
		
		/// <summary>
		/// Indcate the date when the recurrance should stop
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndOfRecurrance { get; set; }
		
		/// <summary>
		/// Month when the recurrance should happen
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// How often the recurrance occurs
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<InvoiceRecurringApiModelRecurrancePattern> RecurrancePattern { get; set; }
		
		/// <summary>
		/// Recurring every [value] RecurrancePattern
		///Ex: Recur every 1 week
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurranceValue { get; set; }
		
		/// <summary>
		/// Indcate the date when the recurrance has started
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartOfRecurrance { get; set; }
		
		/// <summary>
		/// The status of the recurrance
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<InvoiceRecurringApiModelStatus> Status { get; set; }
		
		/// <summary>
		/// Title of the recurring profile. 
		///Ex: BRAND PACKAGE - 2017-08-16 - 2018-08-16
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InvoiceRecurringApiModelDayOfWeek
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Sunday")]
		Sunday = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Monday")]
		Monday = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Tuesday")]
		Tuesday = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Wednesday")]
		Wednesday = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Thursday")]
		Thursday = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Friday")]
		Friday = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Saturday")]
		Saturday = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InvoiceRecurringApiModelRecurrancePattern
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Daily")]
		Daily = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Weekly")]
		Weekly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Monthly")]
		Monthly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Yearly")]
		Yearly = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InvoiceRecurringApiModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Pending")]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Active")]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Cancelled")]
		Cancelled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Finished")]
		Finished = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceDeleteApiModel
	{
		
		/// <summary>
		/// Id of invoice to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceDetailsApiModel
	{
		
		/// <summary>
		/// Security access token used for accessing the invoice anonymously
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClientDetailsApiModel Client { get; set; }
		
		/// <summary>
		/// Indicate from which invoice this invoice has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Amount that goes as a discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Indicates when the invoice will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Duedate { get; set; }
		
		/// <summary>
		/// Indicate that the invoice allows the user to pay the invoice partially
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePartialPayments { get; set; }
		
		/// <summary>
		/// Invoice id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Hold the id of the invoice category
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceCategoryId { get; set; }
		
		/// <summary>
		/// Indicates when the invoice was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// Internal note regarding the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique invoice number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Definition of invoice recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModel RecurringProfile { get; set; }
		
		/// <summary>
		/// Hold the id of the recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurringProfileId { get; set; }
		
		/// <summary>
		/// Should send email reminders to client?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ShouldSendReminders { get; set; }
		
		/// <summary>
		/// Indicate the status of the invoice (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Total amount of the invoice without tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Amount that goes to the tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
		
		/// <summary>
		/// Total amount of the invoice with tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceFullDetailsApiModel
	{
		
		/// <summary>
		/// Security access token used for accessing the invoice anonymously
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		/// <summary>
		/// List of invoice activities. Invoice audit log
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceActivityApiModel[] Activities { get; set; }
		
		/// <summary>
		/// List of invoice attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceAttachmentApiModel[] Attachments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClientDetailsApiModel Client { get; set; }
		
		/// <summary>
		/// Indicate from which invoice this invoice has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Amount that goes as a discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Indicates when the invoice will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Duedate { get; set; }
		
		/// <summary>
		/// Indicate that the invoice allows the user to pay the invoice partially
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePartialPayments { get; set; }
		
		/// <summary>
		/// Invoice id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Hold the id of the invoice category
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceCategoryId { get; set; }
		
		/// <summary>
		/// Indicates when the invoice was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// List of invoice items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Internal note regarding the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique invoice number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// List of invoice payments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoicePaymentApiModel[] Payments { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Definition of invoice recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModel RecurringProfile { get; set; }
		
		/// <summary>
		/// Hold the id of the recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurringProfileId { get; set; }
		
		/// <summary>
		/// Should send email reminders to client?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ShouldSendReminders { get; set; }
		
		/// <summary>
		/// Indicate the status of the invoice (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Total amount of the invoice without tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Amount that goes to the tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
		
		/// <summary>
		/// Total amount of the invoice with tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceItemApiModel
	{
		
		/// <summary>
		/// Amount per unit
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// Additional description attached to the invoice item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Amount that goes as a discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Discount percentage for the overall amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Id of invoice item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Quantity in total used for the work type
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Sub-Total amount of the invoice item (Amount without tax)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Amount that goes to the tax
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Tax applied on the item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Total amount of the invoice item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Work type (Name of the service)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoicePaymentApiModel
	{
		
		/// <summary>
		/// Total amount of the payment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// Id of invoice payment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicate if the payment is automatic or manual
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsAutomatic { get; set; }
		
		/// <summary>
		/// Internal payment note
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Note { get; set; }
		
		/// <summary>
		/// When the payment was done by the client
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> PaidOn { get; set; }
		
		/// <summary>
		/// Id of the payment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		/// <summary>
		/// Type of payment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PaymentType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AttachPdf { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendToSelf { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<InvoiceMessageType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InvoiceMessageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SendInvoice")]
		SendInvoice = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SendInvoiceReminder")]
		SendInvoiceReminder = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceUpdateApiModel
	{
		
		/// <summary>
		/// List of invoice attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceUpdateAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// The client to whom this invoice is assigned
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		/// <summary>
		/// Indicate from which invoice this invoice has been cloned from
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		/// <summary>
		/// Id of the currency for the invoice amounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Indicates when the invoice will be proclamed as due
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> Duedate { get; set; }
		
		/// <summary>
		/// Invoice id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Hold the id of the invoice category
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceCategoryId { get; set; }
		
		/// <summary>
		/// Indicates when the invoice was issued
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> IssuedOn { get; set; }
		
		/// <summary>
		/// List of invoice items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceUpdateItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Internal note regarding the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Notes { get; set; }
		
		/// <summary>
		/// Unique invoice number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Unique number generated by the buyer
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PoNumber { get; set; }
		
		/// <summary>
		/// Definition of invoice recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModel RecurringProfile { get; set; }
		
		/// <summary>
		/// Hold the id of the recurring profile
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurringProfileId { get; set; }
		
		/// <summary>
		/// Should send email reminders to client?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ShouldSendReminders { get; set; }
		
		/// <summary>
		/// Indicate the status of the invoice (paid/unpaid/overdue)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Terms of agreement
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceUpdateAttachmentApiModel
	{
		
		/// <summary>
		/// Id of invoice attachment
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceUpdateItemApiModel
	{
		
		/// <summary>
		/// Amount per unit
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// Additional description attached to the invoice item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount percentage for the overall amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Id of invoice item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Quantity in total used for the work type
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Tax applied on the item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Work type (Name of the service)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvoiceUriApiModel
	{
		
		/// <summary>
		/// Unique link to the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResult_EstimationDetailsApiModel_
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IErrorInfo[] ErrorMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFaulted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EstimationDetailsApiModel[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResult_InvoiceCategoryApiModel_
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IErrorInfo[] ErrorMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFaulted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceCategoryApiModel[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResult_InvoiceDetailsApiModel_
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IErrorInfo[] ErrorMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFaulted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceDetailsApiModel[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResult_OrderDetailsApiModel_
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IErrorInfo[] ErrorMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFaulted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderDetailsApiModel[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderDetailsApiModel
	{
		
		/// <summary>
		/// Product short link
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// Coupon to apply in order to get the discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CouponCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Order id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Customer note to seller
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Note { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderBillingDetailsApiModel OrderBillingDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderShippingDetailsApiModel OrderShippingDetails { get; set; }
		
		/// <summary>
		/// Product id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProductId { get; set; }
		
		/// <summary>
		/// Represent the referral for this order
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Referral { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Order status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeOrderStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Sub total amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Total amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Total amount with shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalWithShipping { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderBillingDetailsApiModel
	{
		
		/// <summary>
		/// Client street and number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		/// <summary>
		/// Client country id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CountryId { get; set; }
		
		/// <summary>
		/// Client email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Client name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Client phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderShippingDetailsApiModel
	{
		
		/// <summary>
		/// Client street and number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		/// <summary>
		/// Client country id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CountryId { get; set; }
		
		/// <summary>
		/// Client email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		/// <summary>
		/// Client name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Client phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResult_PaymentLink_
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IErrorInfo[] ErrorMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFaulted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentLink[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentLink
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Client Client { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Currency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Invoice Invoice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentLinkItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Number { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public User User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentLinkItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PaymentLinkId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tax Tax { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WorkType WorkType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Tax
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Percentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ActionNotificationsLastReadOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExternalConnection[] ExternalConnections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasBeenOnboarded { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsLocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsVerified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> KnowledgeNotificationsLastReadOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastSeenOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PasswordSalt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferralPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReferredUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferrerKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserSettings Settings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SubscriptionPlan SubscriptionPlan { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserType> Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> VerifiedOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserYearsOfExperience> YearsOfExperience { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UserSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountantEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BackgroundImage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Bank { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BankAccount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Cname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CompanyRegistrationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Country Country { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CountryId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Currency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencySymbol { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultDateFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefaultDueDateInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DoNotTrack { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableClientPortal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnablePredictiveInvoicing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableRecurringInvoicing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasInvoiceLogo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Iban { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserSettingsInvoiceTemplate> InvoiceTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InvoiceTemplateColorHex { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserSettingsProfession> Profession { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReceiveSmsNotifications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserSettingsReferralProgram> ReferralProgram { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UserSettingsStoreCheckoutFields> StoreCheckoutFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreColorHex { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Currency StoreCurrency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StoreCurrencyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreCustomJavaScript { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UiLanguage StoreLanguage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StoreLanguageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorePurchaseEmailMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorePurchaseThankYouMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreTextColorHex { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StoreUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SubscribeToProductEmails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Swift { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Terms { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserSignature { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VatNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> YearsOfExperience { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserSettingsInvoiceTemplate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Default")]
		Default = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Template1")]
		Template1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Template2")]
		Template2 = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserSettingsProfession
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Other")]
		Other = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DesignAndCreative")]
		DesignAndCreative = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SoftwareDevelopment")]
		SoftwareDevelopment = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ContentWritingAndMarketing")]
		ContentWritingAndMarketing = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Freelancers")]
		Freelancers = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Consultants")]
		Consultants = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Smes")]
		Smes = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Enterprise")]
		Enterprise = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ECommerce")]
		ECommerce = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Individual")]
		Individual = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserSettingsReferralProgram
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Enabled")]
		Enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Disabled")]
		Disabled = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserSettingsStoreCheckoutFields
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ShowMinimumRequiredFields")]
		ShowMinimumRequiredFields = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ShowAllFields")]
		ShowAllFields = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UiLanguage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UiCulture { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Normal")]
		Normal = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Fraudlent")]
		Fraudlent = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Locked")]
		Locked = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SubscriptionPlan
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CancellatedOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CouponCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Features { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasDuePayment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> HasDuePaymentSince { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsActive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsLifetime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> LastPaymentOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxClients { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OnHold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrderIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Price { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<SubscriptionPlanRecurrence> Recurrence { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> SaleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<SubscriptionPlanStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<SubscriptionPlanSystemCancelationReason> SystemCancelationReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrialEndsOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TrialNumberOfDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> TrialStartsOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum SubscriptionPlanRecurrence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Monthly")]
		Monthly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Yearly")]
		Yearly = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum SubscriptionPlanStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ActiveTrial")]
		ActiveTrial = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ExpiredTrial")]
		ExpiredTrial = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Active")]
		Active = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Canceled")]
		Canceled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Fraudlent")]
		Fraudlent = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum SubscriptionPlanSystemCancelationReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FailToCaptureFee")]
		FailToCaptureFee = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Fraud")]
		Fraud = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Anonymous")]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Customer")]
		Customer = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SystemAdministrator")]
		SystemAdministrator = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Collaborator")]
		Collaborator = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UserYearsOfExperience
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="One")]
		One = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OneToThree")]
		OneToThree = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ThreeToFive")]
		ThreeToFive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SixPlus")]
		SixPlus = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResult_ProductDetailsApiModel_
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IErrorInfo[] ErrorMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFaulted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProductDetailsApiModel[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductDetailsApiModel
	{
		
		/// <summary>
		/// Product short link
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// Default button call to action
		///Ex: Buy now, subscribe, ...
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ButtonCallToAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Product id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicate that the product is set as featured
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFeatured { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Product availability status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<ProductDetailsApiModelStatus> Status { get; set; }
		
		/// <summary>
		/// Subtotal amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Total amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Total amount of product with shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalWithShipping { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ProductDetailsApiModelStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Active")]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NotAvailable")]
		NotAvailable = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Inactive")]
		Inactive = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderAttachmentApiModel
	{
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderCreateApiModel
	{
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// List of Order attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OrderAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// Coupon to apply in order to get the discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CouponCode { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// List of Order items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OrderItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Customer note to seller
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Note { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderBillingDetailsApiModel OrderBillingDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderShippingDetailsApiModel OrderShippingDetails { get; set; }
		
		/// <summary>
		/// Product id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProductId { get; set; }
		
		/// <summary>
		/// Represent the referral for this order
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Referral { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Order status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeOrderStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Sub total amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Total amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderItemApiModel
	{
		
		/// <summary>
		/// Work item cost
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// General description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Foreign key product item id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProductItemId { get; set; }
		
		/// <summary>
		/// Work item quantity
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Quantity { get; set; }
		
		/// <summary>
		/// Order SKU
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		/// <summary>
		/// Subtotal amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Foreign key Tax id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Tax percentage
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Total amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Foreign key work type id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderDeleteApiModel
	{
		
		/// <summary>
		/// Id of order to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OrderFullDetailsApiModel
	{
		
		/// <summary>
		/// Product short link
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// List of Order attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OrderAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// Coupon to apply in order to get the discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CouponCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Discount amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Order id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// List of Order items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OrderItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Customer note to seller
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Note { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderBillingDetailsApiModel OrderBillingDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OrderShippingDetailsApiModel OrderShippingDetails { get; set; }
		
		/// <summary>
		/// Product id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProductId { get; set; }
		
		/// <summary>
		/// Represent the referral for this order
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Referral { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Order status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ChangeOrderStatusApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Sub total amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Total amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Total amount with shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalWithShipping { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentGateway
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CanDisconnect { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientImportUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<PaymentGatewayConnectionType> ConnectionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ExternalConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PaymentGatewayInputField[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsConnected { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaximumAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinimumAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OAuthUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefundUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Currency[] SupportedCurrencies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsClientsImport { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsInstantCheckout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SupportsRefund { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PaymentGatewayConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OAuth")]
		OAuth = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="InputFields")]
		InputFields = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Dropdown")]
		Dropdown = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentGatewayInputField
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsConfigurable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<PaymentGatewayInputFieldType> Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PaymentGatewayInputFieldType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Input")]
		Input = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Dropdown")]
		Dropdown = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentGatewayDetailsApiModel
	{
		
		/// <summary>
		/// Name of the payment gateway
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// List of supported currencies.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CurrencyApiModel[] SupportedCurrencies { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentLinkUriApiModel
	{
		
		/// <summary>
		/// Unique link to the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductAttachmentApiModel
	{
		
		/// <summary>
		/// Product attachment id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Link to the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Hashed file name to avoid url wildguessing
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ObfuscatedFileName { get; set; }
		
		/// <summary>
		/// Name of the file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string OriginalFileName { get; set; }
		
		/// <summary>
		/// File size number in bytes
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int64> Size { get; set; }
		
		/// <summary>
		/// Type of the link (Attached or external)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EstimationAttachmentApiModelType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductCouponApiModel
	{
		
		/// <summary>
		/// Coupon to apply in order to get the discount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		/// <summary>
		/// Discount amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Discount percentage
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Product coupon id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Coupon expiration date
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ValidUntil { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductCreateApiModel
	{
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// List of product attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// Default button call to action
		///Ex: Buy now, subscribe, ...
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ButtonCallToAction { get; set; }
		
		/// <summary>
		/// List of product coupons
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductCouponApiModel[] Coupons { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// List of product discounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductDiscountApiModel[] Discounts { get; set; }
		
		/// <summary>
		/// Indicate that the product is set as featured
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFeatured { get; set; }
		
		/// <summary>
		/// List of product items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Product availability status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductDetailsApiModelStatus Status { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductDiscountApiModel
	{
		
		/// <summary>
		/// Discount amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountAmount { get; set; }
		
		/// <summary>
		/// Discount percentage
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DiscountPercentage { get; set; }
		
		/// <summary>
		/// Product discount id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Discount start date
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ValidFrom { get; set; }
		
		/// <summary>
		/// Discount expiration date
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ValidTo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductItemApiModel
	{
		
		/// <summary>
		/// Work item cost
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
		
		/// <summary>
		/// General description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Product item id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Minimum required quantity in order to buy a work item
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MinimumQuantity { get; set; }
		
		/// <summary>
		/// Product SKU
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		/// <summary>
		/// Subtotal amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Tax amount
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxAmount { get; set; }
		
		/// <summary>
		/// Foreign key Tax id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TaxId { get; set; }
		
		/// <summary>
		/// Tax percentage
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TaxPercentage { get; set; }
		
		/// <summary>
		/// Total amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Foreign key work type id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WorkTypeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductGatewayApiModel
	{
		
		/// <summary>
		/// Payment gateway name
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductDeleteApiModel
	{
		
		/// <summary>
		/// Id of product to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductFullDetailsApiModel
	{
		
		/// <summary>
		/// Product short link
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// List of product attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// Default button call to action
		///Ex: Buy now, subscribe, ...
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ButtonCallToAction { get; set; }
		
		/// <summary>
		/// List of product coupons
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductCouponApiModel[] Coupons { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyDetailsApiModel Currency { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// List of product discounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductDiscountApiModel[] Discounts { get; set; }
		
		/// <summary>
		/// Product id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicate that the product is set as featured
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFeatured { get; set; }
		
		/// <summary>
		/// List of product items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Product availability status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductDetailsApiModelStatus Status { get; set; }
		
		/// <summary>
		/// Subtotal amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SubTotalAmount { get; set; }
		
		/// <summary>
		/// Total amount of product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalAmount { get; set; }
		
		/// <summary>
		/// Total amount of product with shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalWithShipping { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProductUpdateApiModel
	{
		
		/// <summary>
		/// After payment description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AfterPaymentDescription { get; set; }
		
		/// <summary>
		/// List of product attachments
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductAttachmentApiModel[] Attachments { get; set; }
		
		/// <summary>
		/// Default button call to action
		///Ex: Buy now, subscribe, ...
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ButtonCallToAction { get; set; }
		
		/// <summary>
		/// List of product coupons
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductCouponApiModel[] Coupons { get; set; }
		
		/// <summary>
		/// Foreign key Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrencyId { get; set; }
		
		/// <summary>
		/// Product description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// List of product discounts
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductDiscountApiModel[] Discounts { get; set; }
		
		/// <summary>
		/// Product id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicate that the product is set as featured
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsFeatured { get; set; }
		
		/// <summary>
		/// List of product items
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductItemApiModel[] Items { get; set; }
		
		/// <summary>
		/// Product alias
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// List of enabled payment gateways for this product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductGatewayApiModel[] PaymentGateways { get; set; }
		
		/// <summary>
		/// Cost for shipping the product
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ShippingAmount { get; set; }
		
		/// <summary>
		/// Client instructions for shipping
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ShippingDescription { get; set; }
		
		/// <summary>
		/// Product availability status
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ProductDetailsApiModelStatus Status { get; set; }
		
		/// <summary>
		/// What happens next description
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string WhatHappensNextDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueryOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueuedInvoice
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ClonedFromId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Invoice Invoice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurringProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ScheduledFor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<QueuedInvoiceStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum QueuedInvoiceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Pending")]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Cancelled")]
		Cancelled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Failed")]
		Failed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Processed")]
		Processed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecurringProfile
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DayOfMonth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModelDayOfWeek DayOfWeek { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DueDateInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> EndOfRecurrance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Month { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModelRecurrancePattern RecurrancePattern { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecurranceValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartOfRecurrance { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvoiceRecurringApiModelStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<SearchRequestOrder> Order { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrderBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Query { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum SearchRequestOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="None")]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Asc")]
		Asc = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Desc")]
		Desc = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SendEstimationToClientApiModel
	{
		
		/// <summary>
		/// Should attach pdf file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AttachPdf { get; set; }
		
		/// <summary>
		/// Id of the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EstimationId { get; set; }
		
		/// <summary>
		/// Id of the estimation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Message to be embedded in the email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		/// <summary>
		/// Should email copy be send to self
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendToSelf { get; set; }
		
		/// <summary>
		/// Subject for the email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SendInvoiceToAccountantApiModel
	{
		
		/// <summary>
		/// Id of the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SendInvoiceToClientApiModel
	{
		
		/// <summary>
		/// Should attach pdf file
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AttachPdf { get; set; }
		
		/// <summary>
		/// Id of the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Id of the invoice
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InvoiceId { get; set; }
		
		/// <summary>
		/// Message to be embedded in the email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		/// <summary>
		/// Should email copy be send to self
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendToSelf { get; set; }
		
		/// <summary>
		/// Subject for the email
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TaxCreateApiModel
	{
		
		/// <summary>
		/// Name of the task
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Percentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TaxDeleteApiModel
	{
		
		/// <summary>
		/// Id of tax to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TaxDetailsApiModel
	{
		
		/// <summary>
		/// Date of creation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedOn { get; set; }
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the task
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Percentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TaxUpdateApiModel
	{
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the task
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Task percentage. Ex: 18%
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Percentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UILanguageDetailsApiModel
	{
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Name of the country
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Ui culture options
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string UiCulture { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkTypeCreateApiModel
	{
		
		/// <summary>
		/// Indicates the title of of the work type (Logo design, development...)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkTypeDeleteApiModel
	{
		
		/// <summary>
		/// Id of work type to be deleted
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkTypeDetailsApiModel
	{
		
		/// <summary>
		/// Date of creation
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> CreatedOn { get; set; }
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicates the title of of the work type (Logo design, development...)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkTypeUpdateApiModel
	{
		
		/// <summary>
		/// Entity id
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Indicates the title of of the work type (Logo design, development...)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Return all clients for the account
		/// ApiClientAllGet api/client/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ClientDetailsApiModel[]> ApiClientAllGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/client/all";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ClientDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Check if the provided client can be deleted
		/// ApiClientCandeleteGetById api/client/candelete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<bool> ApiClientCandeleteGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/client/candelete?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<bool>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing client
		/// ApiClientDeletePost api/client/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiClientDeletePostAsync(ClientDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/client/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return client details. Activities and invoices included.
		/// ApiClientDetailsGetById api/client/details
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ClientDetailsApiModel> ApiClientDetailsGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/client/details?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ClientDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a client
		/// ApiClientNewPost api/client/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiClientNewPostAsync(ClientCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/client/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing client
		/// ApiClientUpdatePost api/client/update
		/// </summary>
		public async Task ApiClientUpdatePostAsync(ClientUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/client/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all estimation for the account
		/// ApiEstimationAllGetByQueryOptions_pageAndQueryOptions_pageSize api/estimation/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ListResult_EstimationDetailsApiModel_> ApiEstimationAllGetByQueryOptions_pageAndQueryOptions_pageSizeAsync(int queryOptions_page, int queryOptions_pageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/all?queryOptions.page="+queryOptions_page+"&queryOptions.pageSize="+queryOptions_pageSize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResult_EstimationDetailsApiModel_>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change estimation status
		/// ApiEstimationChangestatusPost api/estimation/changestatus
		/// </summary>
		/// <returns>OK</returns>
		public async Task<bool> ApiEstimationChangestatusPostAsync(EstimationChangeStatusApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/changestatus";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<bool>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Convert the estimation to an invoice
		/// ApiEstimationConvertPost api/estimation/convert
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceFullDetailsApiModel> ApiEstimationConvertPostAsync(int requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/convert";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing estimation
		/// ApiEstimationDeletePost api/estimation/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiEstimationDeletePostAsync(EstimationDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return estimation data
		/// ApiEstimationDetailsGetById api/estimation/details
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EstimationFullDetailsApiModel> ApiEstimationDetailsGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/details?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EstimationFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an estimation
		/// ApiEstimationNewPost api/estimation/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EstimationFullDetailsApiModel> ApiEstimationNewPostAsync(EstimationCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EstimationFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Send the provided estimation to the client
		/// ApiEstimationSendtoclientPost api/estimation/sendtoclient
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiEstimationSendtoclientPostAsync(SendEstimationToClientApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/sendtoclient";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve the status of the estimation
		/// ApiEstimationStatusGetById api/estimation/status
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EstimationChangeStatusApiModelStatus> ApiEstimationStatusGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/status?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EstimationChangeStatusApiModelStatus>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing estimation
		/// ApiEstimationUpdatePost api/estimation/update
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EstimationFullDetailsApiModel> ApiEstimationUpdatePostAsync(EstimationUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EstimationFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return the unique url to the client's invoice
		/// ApiEstimationUriGetById api/estimation/uri
		/// </summary>
		/// <returns>OK</returns>
		public async Task<EstimationUriApiModel> ApiEstimationUriGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/estimation/uri?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EstimationUriApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all of the platform supported countries
		/// ApiGeneralCountriesGet api/general/countries
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CountryDetailsApiModel[]> ApiGeneralCountriesGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/general/countries";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CountryDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all of the platform supported currencies
		/// ApiGeneralCurrenciesGet api/general/currencies
		/// </summary>
		/// <returns>OK</returns>
		public async Task<CurrencyDetailsApiModel[]> ApiGeneralCurrenciesGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/general/currencies";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CurrencyDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all of the platform supported Date Formats
		/// ApiGeneralDateformatsGet api/general/dateformats
		/// </summary>
		/// <returns>OK</returns>
		public async Task<string[]> ApiGeneralDateformatsGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/general/dateformats";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<string[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all of the platform supported UI languages
		/// ApiGeneralUilanguagesGet api/general/uilanguages
		/// </summary>
		/// <returns>OK</returns>
		public async Task<UILanguageDetailsApiModel[]> ApiGeneralUilanguagesGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/general/uilanguages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UILanguageDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all invoices for the account
		/// ApiInvoiceAllGetByQueryOptions_pageAndQueryOptions_pageSize api/invoice/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ListResult_InvoiceDetailsApiModel_> ApiInvoiceAllGetByQueryOptions_pageAndQueryOptions_pageSizeAsync(int queryOptions_page, int queryOptions_pageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/all?queryOptions.page="+queryOptions_page+"&queryOptions.pageSize="+queryOptions_pageSize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResult_InvoiceDetailsApiModel_>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all invoice categories for the account
		/// ApiInvoiceAllcategoriesGetByQuery api/invoice/allcategories
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ListResult_InvoiceCategoryApiModel_> ApiInvoiceAllcategoriesGetByQueryAsync(string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/allcategories?query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResult_InvoiceCategoryApiModel_>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change invoice status
		/// ApiInvoiceChangestatusPost api/invoice/changestatus
		/// </summary>
		/// <returns>OK</returns>
		public async Task<bool> ApiInvoiceChangestatusPostAsync(ChangeStatusApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/changestatus";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<bool>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing invoice
		/// ApiInvoiceDeletePost api/invoice/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiInvoiceDeletePostAsync(InvoiceDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing invoice category
		/// ApiInvoiceDeletecategoryPost api/invoice/deletecategory
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiInvoiceDeletecategoryPostAsync(InvoiceCategoryDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/deletecategory";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return invoice data
		/// ApiInvoiceDetailsGetById api/invoice/details
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceFullDetailsApiModel> ApiInvoiceDetailsGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/details?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an invoice
		/// ApiInvoiceNewPost api/invoice/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceFullDetailsApiModel> ApiInvoiceNewPostAsync(InvoiceCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an invoice category
		/// ApiInvoiceNewcategoryPost api/invoice/newcategory
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceCategoryApiModel> ApiInvoiceNewcategoryPostAsync(InvoiceCategoryCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/newcategory";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceCategoryApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return the PDF for the invoice
		/// ApiInvoicePdfGetByIdAndSignedVersion api/invoice/pdf
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceUriApiModel> ApiInvoicePdfGetByIdAndSignedVersionAsync(int id, bool signedVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/pdf?id="+id+"&signedVersion="+signedVersion;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceUriApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Send the provided invoice to the accountant
		/// ApiInvoiceSendtoaccountantPost api/invoice/sendtoaccountant
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiInvoiceSendtoaccountantPostAsync(SendInvoiceToAccountantApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/sendtoaccountant";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Send the provided invoice to the client
		/// ApiInvoiceSendtoclientPost api/invoice/sendtoclient
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiInvoiceSendtoclientPostAsync(SendInvoiceToClientApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/sendtoclient";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve the status of the invoice
		/// ApiInvoiceStatusGetById api/invoice/status
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ChangeStatusApiModelStatus> ApiInvoiceStatusGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/status?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ChangeStatusApiModelStatus>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing invoice
		/// ApiInvoiceUpdatePost api/invoice/update
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceFullDetailsApiModel> ApiInvoiceUpdatePostAsync(InvoiceUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing invoice category
		/// ApiInvoiceUpdatecategoryPost api/invoice/updatecategory
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceCategoryApiModel> ApiInvoiceUpdatecategoryPostAsync(InvoiceCategoryUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/updatecategory";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceCategoryApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return the unique url to the client's invoice
		/// ApiInvoiceUriGetById api/invoice/uri
		/// </summary>
		/// <returns>OK</returns>
		public async Task<InvoiceUriApiModel> ApiInvoiceUriGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/invoice/uri?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InvoiceUriApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all orders for the account
		/// ApiOrderAllGetByQueryOptions_pageAndQueryOptions_pageSize api/order/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ListResult_OrderDetailsApiModel_> ApiOrderAllGetByQueryOptions_pageAndQueryOptions_pageSizeAsync(int queryOptions_page, int queryOptions_pageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/order/all?queryOptions.page="+queryOptions_page+"&queryOptions.pageSize="+queryOptions_pageSize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResult_OrderDetailsApiModel_>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change order shipping details
		/// ApiOrderChangeshippingdetailsPostByOrderId api/order/changeshippingdetails
		/// </summary>
		public async Task ApiOrderChangeshippingdetailsPostByOrderIdAsync(int orderId, OrderShippingDetailsApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/order/changeshippingdetails?orderId="+orderId;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change order status
		/// ApiOrderChangestatusPost api/order/changestatus
		/// </summary>
		public async Task ApiOrderChangestatusPostAsync(ChangeOrderStatusApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/order/changestatus";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing order
		/// ApiOrderDeletePost api/order/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiOrderDeletePostAsync(OrderDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/order/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return order details
		/// ApiOrderDetailsGetById api/order/details
		/// </summary>
		/// <returns>OK</returns>
		public async Task<OrderFullDetailsApiModel> ApiOrderDetailsGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/order/details?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<OrderFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create an order
		/// ApiOrderNewPost api/order/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiOrderNewPostAsync(OrderCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/order/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all supported payment gateways (no currencies means all are supported)
		/// ApiPaymentSupportedGet api/payment/supported
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentGatewayDetailsApiModel[]> ApiPaymentSupportedGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/payment/supported";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentGatewayDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a payment link
		/// ApiPaymentlinkAllGetByQueryOptions_pageAndQueryOptions_pageSize api/paymentlink/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ListResult_PaymentLink_> ApiPaymentlinkAllGetByQueryOptions_pageAndQueryOptions_pageSizeAsync(int queryOptions_page, int queryOptions_pageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/paymentlink/all?queryOptions.page="+queryOptions_page+"&queryOptions.pageSize="+queryOptions_pageSize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResult_PaymentLink_>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing payment link
		/// ApiPaymentlinkDeletePost api/paymentlink/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiPaymentlinkDeletePostAsync(PaymentLink requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/paymentlink/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a payment link
		/// ApiPaymentlinkNewPost api/paymentlink/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiPaymentlinkNewPostAsync(PaymentLink requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/paymentlink/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return the unique url to the client's payment link
		/// ApiPaymentlinkUriGetById api/paymentlink/uri
		/// </summary>
		/// <returns>OK</returns>
		public async Task<PaymentLinkUriApiModel> ApiPaymentlinkUriGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/paymentlink/uri?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PaymentLinkUriApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all products for the account
		/// ApiProductAllGetByQueryOptions_pageAndQueryOptions_pageSize api/product/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ListResult_ProductDetailsApiModel_> ApiProductAllGetByQueryOptions_pageAndQueryOptions_pageSizeAsync(int queryOptions_page, int queryOptions_pageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/product/all?queryOptions.page="+queryOptions_page+"&queryOptions.pageSize="+queryOptions_pageSize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResult_ProductDetailsApiModel_>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing product
		/// ApiProductDeletePost api/product/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiProductDeletePostAsync(ProductDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/product/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return product details
		/// ApiProductDetailsGetById api/product/details
		/// </summary>
		/// <returns>OK</returns>
		public async Task<ProductFullDetailsApiModel> ApiProductDetailsGetByIdAsync(int id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/product/details?id="+id;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ProductFullDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a product
		/// ApiProductNewPost api/product/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiProductNewPostAsync(ProductCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/product/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing product
		/// ApiProductUpdatePost api/product/update
		/// </summary>
		public async Task ApiProductUpdatePostAsync(ProductUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/product/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all taxes for the account
		/// ApiTaxAllGet api/tax/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<TaxDetailsApiModel[]> ApiTaxAllGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/tax/all";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TaxDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing tax
		/// ApiTaxDeletePost api/tax/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiTaxDeletePostAsync(TaxDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/tax/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a tax
		/// ApiTaxNewPost api/tax/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiTaxNewPostAsync(TaxCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/tax/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing tax
		/// ApiTaxUpdatePost api/tax/update
		/// </summary>
		public async Task ApiTaxUpdatePostAsync(TaxUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/tax/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all work types for the account
		/// ApiWorktypeAllGet api/worktype/all
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WorkTypeDetailsApiModel[]> ApiWorktypeAllGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/worktype/all";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkTypeDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an existing work type
		/// ApiWorktypeDeletePost api/worktype/delete
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiWorktypeDeletePostAsync(WorkTypeDeleteApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/worktype/delete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return work type details
		/// ApiWorktypeDetailsGetByWorkTypeId api/worktype/details
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WorkTypeDetailsApiModel> ApiWorktypeDetailsGetByWorkTypeIdAsync(int workTypeId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/worktype/details?workTypeId="+workTypeId;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkTypeDetailsApiModel>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a work type
		/// ApiWorktypeNewPost api/worktype/new
		/// </summary>
		/// <returns>OK</returns>
		public async Task<int> ApiWorktypeNewPostAsync(WorkTypeCreateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/worktype/new";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<int>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return all work types for the account that match the query param
		/// ApiWorktypeSearchGetByQueryOptions_queryAndQueryOptions_orderByAndQueryOptions_orderAndQueryOptions_pageAndQueryOptions_pageSize api/worktype/search
		/// </summary>
		/// <returns>OK</returns>
		public async Task<WorkTypeDetailsApiModel[]> ApiWorktypeSearchGetByQueryOptions_queryAndQueryOptions_orderByAndQueryOptions_orderAndQueryOptions_pageAndQueryOptions_pageSizeAsync(string queryOptions_query, string queryOptions_orderBy, SearchRequestOrder queryOptions_order, int queryOptions_page, int queryOptions_pageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/worktype/search?queryOptions.query=" + (queryOptions_query==null? "" : System.Uri.EscapeDataString(queryOptions_query))+"&queryOptions.orderBy=" + (queryOptions_orderBy==null? "" : System.Uri.EscapeDataString(queryOptions_orderBy))+"&queryOptions.order=" + queryOptions_order+"&queryOptions.page="+queryOptions_page+"&queryOptions.pageSize="+queryOptions_pageSize;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				using JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(streamContent));
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<WorkTypeDetailsApiModel[]>(jsonReader);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update an existing work type
		/// ApiWorktypeUpdatePost api/worktype/update
		/// </summary>
		public async Task ApiWorktypeUpdatePostAsync(WorkTypeUpdateApiModel requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/worktype/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	///  Response of CreateBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBudgetResponse
	{
	}
	
	/// <summary>
	///  Request of CreateBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBudgetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Budget Budget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationWithSubscribers[] NotificationsWithSubscribers { get; set; }
	}
	
	/// <summary>
	/// <p>Represents the output of the <code>CreateBudget</code> operation. The content consists of the detailed metadata and data file information, and the current status of the <code>budget</code> object.</p> <p>This is the Amazon Resource Name (ARN) pattern for a budget: </p> <p> <code>arn:aws:budgets::AccountId:budget/budgetName</code> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Budget
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Spend BudgetLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlannedBudgetLimits PlannedBudgetLimits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostFilters CostFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostTypes CostTypes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimeUnit TimeUnit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimePeriod TimePeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CalculatedSpend CalculatedSpend { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BudgetType BudgetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoAdjustData AutoAdjustData { get; set; }
	}
	
	/// <summary>
	/// <p>The amount of cost or usage that's measured for a budget.</p> <p>For example, a <code>Spend</code> for <code>3 GB</code> of S3 usage has the following parameters:</p> <ul> <li> <p>An <code>Amount</code> of <code>3</code> </p> </li> <li> <p>A <code>unit</code> of <code>GB</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Spend
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Amount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlannedBudgetLimits
	{
	}
	
	/// <summary>
	///  A map that represents the cost filters that are applied to the budget.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostFilters
	{
	}
	
	/// <summary>
	/// <p>The types of cost that are included in a <code>COST</code> budget, such as tax and subscriptions.</p> <p> <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, and <code>SAVINGS_PLANS_COVERAGE</code> budgets don't have <code>CostTypes</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CostTypes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeTax { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeSubscription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseBlended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeRefund { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeCredit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeUpfront { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeRecurring { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeOtherSubscription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeSupport { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeDiscount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseAmortized { get; set; }
	}
	
	/// <summary>
	///  The time unit of the budget, such as MONTHLY or QUARTERLY.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TimeUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUARTERLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANNUALLY = 3,
	}
	
	/// <summary>
	/// The period of time that's covered by a budget. The period has a start date and an end date. The start date must come before the end date. There are no restrictions on the end date. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimePeriod
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Start { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset End { get; set; }
	}
	
	/// <summary>
	/// <p>The spend objects that are associated with this budget. The <code>actualSpend</code> tracks how much you've used, cost, usage, RI units, or Savings Plans units and the <code>forecastedSpend</code> tracks how much that you're predicted to spend based on your historical usage profile.</p> <p>For example, if it's the 20th of the month and you have spent <code>50</code> dollars on Amazon EC2, your <code>actualSpend</code> is <code>50 USD</code>, and your <code>forecastedSpend</code> is <code>75 USD</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CalculatedSpend
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Spend ActualSpend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Spend ForecastedSpend { get; set; }
	}
	
	/// <summary>
	/// <p> The type of a budget. It must be one of the following types: </p> <p> <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, or <code>SAVINGS_PLANS_COVERAGE</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BudgetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USAGE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RI_UTILIZATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RI_COVERAGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVINGS_PLANS_UTILIZATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVINGS_PLANS_COVERAGE = 5,
	}
	
	/// <summary>
	/// The parameters that determine the budget amount for an auto-adjusting budget.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoAdjustData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoAdjustType AutoAdjustType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HistoricalOptions HistoricalOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastAutoAdjustTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoAdjustType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HISTORICAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORECAST = 1,
	}
	
	/// <summary>
	/// The parameters that define or describe the historical data that your auto-adjusting budget is based on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistoricalOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int BudgetAdjustmentPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LookBackAvailablePeriods { get; set; }
	}
	
	/// <summary>
	/// A notification with subscribers. A notification can have one SNS subscriber and up to 10 email subscribers, for a total of 11 subscribers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotificationWithSubscribers
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber[] Subscribers { get; set; }
	}
	
	/// <summary>
	/// <p>A notification that's associated with a budget. A budget can have up to ten notifications. </p> <p>Each notification must have at least one subscriber. A notification can have one SNS subscriber and up to 10 email subscribers, for a total of 11 subscribers.</p> <p>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160 dollars, create a notification with the following parameters:</p> <ul> <li> <p>A notificationType of <code>ACTUAL</code> </p> </li> <li> <p>A <code>thresholdType</code> of <code>PERCENTAGE</code> </p> </li> <li> <p>A <code>comparisonOperator</code> of <code>GREATER_THAN</code> </p> </li> <li> <p>A notification <code>threshold</code> of <code>80</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Notification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationType NotificationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ComparisonOperator ComparisonOperator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Threshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThresholdType ThresholdType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationState NotificationState { get; set; }
	}
	
	/// <summary>
	///  The type of a notification. It must be ACTUAL or FORECASTED.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NotificationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTUAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORECASTED = 1,
	}
	
	/// <summary>
	/// <p> The comparison operator of a notification. Currently, the service supports the following operators:</p> <p> <code>GREATER_THAN</code>, <code>LESS_THAN</code>, <code>EQUAL_TO</code> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL_TO = 2,
	}
	
	/// <summary>
	///  The type of threshold for a notification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ThresholdType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENTAGE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABSOLUTE_VALUE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NotificationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALARM = 1,
	}
	
	/// <summary>
	/// <p>The subscriber to a budget notification. The subscriber consists of a subscription type and either an Amazon SNS topic or an email address.</p> <p>For example, an email subscriber has the following parameters:</p> <ul> <li> <p>A <code>subscriptionType</code> of <code>EMAIL</code> </p> </li> <li> <p>An <code>address</code> of <code>example@example.com</code> </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Subscriber
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SubscriptionType SubscriptionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
	}
	
	/// <summary>
	///  The subscription type of the subscriber. It can be SMS or EMAIL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubscriptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidParameterException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalErrorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreationLimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DuplicateRecordException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBudgetActionResponse
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateBudgetActionRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		///  The type of a notification. It must be ACTUAL or FORECASTED.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationType NotificationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
		
		/// <summary>
		/// The trigger threshold of the action. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionThreshold ActionThreshold { get; set; }
		
		/// <summary>
		/// Specifies all of the type-specific parameters. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Definition Definition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApprovalModel ApprovalModel { get; set; }
		
		/// <summary>
		///  A list of subscribers.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 11
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 11)]
		public Subscriber[] Subscribers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLY_IAM_POLICY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLY_SCP_POLICY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUN_SSM_DOCUMENTS = 2,
	}
	
	/// <summary>
	/// The trigger threshold of the action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActionThreshold
	{
		
		/// <summary>
		///  The threshold of a notification.
		/// Required
		/// Minimum: 0
		/// Maximum: 15000000000000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 15000000000000)]
		public double ActionThresholdValue { get; set; }
		
		/// <summary>
		///  The type of threshold for a notification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ThresholdType ActionThresholdType { get; set; }
	}
	
	/// <summary>
	/// Specifies all of the type-specific parameters. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Definition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IamActionDefinition IamActionDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScpActionDefinition ScpActionDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SsmActionDefinition SsmActionDefinition { get; set; }
	}
	
	/// <summary>
	/// The Identity and Access Management (IAM) action definition details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IamActionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Roles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Users { get; set; }
	}
	
	/// <summary>
	/// The service control policies (SCP) action definition details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScpActionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PolicyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetIds { get; set; }
	}
	
	/// <summary>
	/// The Amazon Web Services Systems Manager (SSM) action definition details. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SsmActionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionSubType ActionSubType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionSubType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_EC2_INSTANCES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_RDS_INSTANCES = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApprovalModel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANUAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
	}
	
	/// <summary>
	///  Response of CreateNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNotificationResponse
	{
	}
	
	/// <summary>
	///  Request of CreateNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNotificationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber[] Subscribers { get; set; }
	}
	
	/// <summary>
	///  Response of CreateSubscriber 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSubscriberResponse
	{
	}
	
	/// <summary>
	///  Request of CreateSubscriber 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSubscriberRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber Subscriber { get; set; }
	}
	
	/// <summary>
	///  Response of DeleteBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBudgetResponse
	{
	}
	
	/// <summary>
	///  Request of DeleteBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBudgetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBudgetActionResponse
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// A budget action resource. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
	}
	
	/// <summary>
	/// A budget action resource. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Action
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		///  The type of a notification. It must be ACTUAL or FORECASTED.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationType NotificationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionThreshold ActionThreshold { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Definition Definition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApprovalModel ApprovalModel { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionStatus Status { get; set; }
		
		/// <summary>
		///  A list of subscribers.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 11
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 11)]
		public Subscriber[] Subscribers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDBY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_SUCCESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_FAILURE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVERSE_IN_PROGRESS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVERSE_SUCCESS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVERSE_FAILURE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESET_IN_PROGRESS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESET_FAILURE = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBudgetActionRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceLockedException
	{
	}
	
	/// <summary>
	///  Response of DeleteNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNotificationResponse
	{
	}
	
	/// <summary>
	///  Request of DeleteNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNotificationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
	}
	
	/// <summary>
	///  Response of DeleteSubscriber 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSubscriberResponse
	{
	}
	
	/// <summary>
	///  Request of DeleteSubscriber 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSubscriberRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber Subscriber { get; set; }
	}
	
	/// <summary>
	///  Response of DescribeBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Budget Budget { get; set; }
	}
	
	/// <summary>
	///  Request of DescribeBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionResponse
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionHistoriesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionHistory[] ActionHistories { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The historical records for a budget action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActionHistory
	{
		
		/// <summary>
		///  A generic time stamp. In Java, it's transformed to a <code>Date</code> object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventType EventType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionHistoryDetails ActionHistoryDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_ACTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_ACTION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_ACTION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTE_ACTION = 4,
	}
	
	/// <summary>
	/// The description of the details for the event. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActionHistoryDetails
	{
		
		/// <summary>
		///  A generic string.
		/// Required
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string Message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionHistoriesRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
		
		/// <summary>
		/// The period of time that's covered by a budget. The period has a start date and an end date. The start date must come before the end date. There are no restrictions on the end date. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TimePeriod TimePeriod { get; set; }
		
		/// <summary>
		///  An integer that represents how many entries a paginated response contains. The maximum is 100.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidNextTokenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionsForAccountResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action[] Actions { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionsForAccountRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  An integer that represents how many entries a paginated response contains. The maximum is 100.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionsForBudgetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action[] Actions { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetActionsForBudgetRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		///  An integer that represents how many entries a paginated response contains. The maximum is 100.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetNotificationsForAccountResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BudgetNotificationsForAccount[] BudgetNotificationsForAccount { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  The budget name and associated notifications for an account. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BudgetNotificationsForAccount
	{
		
		/// <summary>
		///  A list of notifications.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Notification[] Notifications { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetNotificationsForAccountRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExpiredNextTokenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetPerformanceHistoryResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BudgetPerformanceHistory BudgetPerformanceHistory { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A history of the state of a budget at the end of the budget's specified time period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BudgetPerformanceHistory
	{
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// <p> The type of a budget. It must be one of the following types: </p> <p> <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, or <code>SAVINGS_PLANS_COVERAGE</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BudgetType BudgetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostFilters CostFilters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostTypes CostTypes { get; set; }
		
		/// <summary>
		///  The time unit of the budget, such as MONTHLY or QUARTERLY.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TimeUnit TimeUnit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BudgetedAndActualAmounts[] BudgetedAndActualAmountsList { get; set; }
	}
	
	/// <summary>
	/// The amount of cost or usage that you created the budget for, compared to your actual costs or usage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BudgetedAndActualAmounts
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Spend BudgetedAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Spend ActualAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimePeriod TimePeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetPerformanceHistoryRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimePeriod TimePeriod { get; set; }
		
		/// <summary>
		///  An integer that represents how many entries a paginated response contains. The maximum is 100.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  A generic string.
		/// Min length: 0
		/// Max length: 2147483647
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(0, 2147483647)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Response of DescribeBudgets 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Budget[] Budgets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Request of DescribeBudgets 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeBudgetsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Response of GetNotificationsForBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNotificationsForBudgetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Notification[] Notifications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Request of DescribeNotificationsForBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNotificationsForBudgetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Response of DescribeSubscribersForNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSubscribersForNotificationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Subscriber[] Subscribers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Request of DescribeSubscribersForNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSubscribersForNotificationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecuteBudgetActionResponse
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExecutionType ExecutionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExecutionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVE_BUDGET_ACTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETRY_BUDGET_ACTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVERSE_BUDGET_ACTION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESET_BUDGET_ACTION = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecuteBudgetActionRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExecutionType ExecutionType { get; set; }
	}
	
	/// <summary>
	///  Response of UpdateBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBudgetResponse
	{
	}
	
	/// <summary>
	///  Request of UpdateBudget 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBudgetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Budget NewBudget { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBudgetActionResponse
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action OldAction { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action NewAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBudgetActionRequest
	{
		
		/// <summary>
		/// The account ID of the user. It's a 12-digit number.
		/// Required
		/// Min length: 12
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(12, 12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^(?![^:\\]*/action/)[^:\\]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?![^:\\]*/action/)[^:\\]+$")]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionId { get; set; }
		
		/// <summary>
		///  The type of a notification. It must be ACTUAL or FORECASTED.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public NotificationType NotificationType { get; set; }
		
		/// <summary>
		/// The trigger threshold of the action. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ActionThreshold ActionThreshold { get; set; }
		
		/// <summary>
		/// Specifies all of the type-specific parameters. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Definition Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApprovalModel ApprovalModel { get; set; }
		
		/// <summary>
		///  A list of subscribers.
		/// Minimum items: 1
		/// Maximum items: 11
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Length(1, 11)]
		public Subscriber[] Subscribers { get; set; }
	}
	
	/// <summary>
	///  Response of UpdateNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNotificationResponse
	{
	}
	
	/// <summary>
	///  Request of UpdateNotification 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNotificationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification OldNotification { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification NewNotification { get; set; }
	}
	
	/// <summary>
	///  Response of UpdateSubscriber 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSubscriberResponse
	{
	}
	
	/// <summary>
	///  Request of UpdateSubscriber 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSubscriberRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BudgetName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Notification Notification { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber OldSubscriber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Subscriber NewSubscriber { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Creates a budget and, if included, notifications and subscribers. </p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code> can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples">Examples</a> section. </p> </important>
		/// CreateBudget #X-Amz-Target=AWSBudgetServiceGateway.CreateBudget
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateBudgetResponse> CreateBudgetAsync(CreateBudgetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.CreateBudget";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateBudgetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a budget action.
		/// CreateBudgetAction #X-Amz-Target=AWSBudgetServiceGateway.CreateBudgetAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateBudgetActionResponse> CreateBudgetActionAsync(CreateBudgetActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.CreateBudgetAction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateBudgetActionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a notification. You must create the budget before you create the associated notification.
		/// CreateNotification #X-Amz-Target=AWSBudgetServiceGateway.CreateNotification
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateNotificationResponse> CreateNotificationAsync(CreateNotificationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.CreateNotification";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateNotificationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a subscriber. You must create the associated budget and notification before you create the subscriber.
		/// CreateSubscriber #X-Amz-Target=AWSBudgetServiceGateway.CreateSubscriber
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSubscriberResponse> CreateSubscriberAsync(CreateSubscriberRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.CreateSubscriber";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateSubscriberResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Deletes a budget. You can delete your budget at any time.</p> <important> <p>Deleting a budget also deletes the notifications and subscribers that are associated with that budget.</p> </important>
		/// DeleteBudget #X-Amz-Target=AWSBudgetServiceGateway.DeleteBudget
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteBudgetResponse> DeleteBudgetAsync(DeleteBudgetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudget";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteBudgetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a budget action.
		/// DeleteBudgetAction #X-Amz-Target=AWSBudgetServiceGateway.DeleteBudgetAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteBudgetActionResponse> DeleteBudgetActionAsync(DeleteBudgetActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudgetAction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteBudgetActionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Deletes a notification.</p> <important> <p>Deleting a notification also deletes the subscribers that are associated with the notification.</p> </important>
		/// DeleteNotification #X-Amz-Target=AWSBudgetServiceGateway.DeleteNotification
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteNotificationResponse> DeleteNotificationAsync(DeleteNotificationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DeleteNotification";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteNotificationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Deletes a subscriber.</p> <important> <p>Deleting the last subscriber to a notification also deletes the notification.</p> </important>
		/// DeleteSubscriber #X-Amz-Target=AWSBudgetServiceGateway.DeleteSubscriber
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteSubscriberResponse> DeleteSubscriberAsync(DeleteSubscriberRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DeleteSubscriber";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteSubscriberResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Describes a budget.</p> <important> <p>The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples">Examples</a> section. </p> </important>
		/// DescribeBudget #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudget
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetResponse> DescribeBudgetAsync(DescribeBudgetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudget";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a budget action detail.
		/// DescribeBudgetAction #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetActionResponse> DescribeBudgetActionAsync(DescribeBudgetActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetAction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetActionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes a budget action history detail.
		/// DescribeBudgetActionHistories #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionHistories
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetActionHistoriesResponse> DescribeBudgetActionHistoriesAsync(string MaxResults, string NextToken, DescribeBudgetActionHistoriesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionHistories?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetActionHistoriesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes all of the budget actions for an account.
		/// DescribeBudgetActionsForAccount #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForAccount
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetActionsForAccountResponse> DescribeBudgetActionsForAccountAsync(string MaxResults, string NextToken, DescribeBudgetActionsForAccountRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForAccount?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetActionsForAccountResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes all of the budget actions for a budget.
		/// DescribeBudgetActionsForBudget #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForBudget
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetActionsForBudgetResponse> DescribeBudgetActionsForBudgetAsync(string MaxResults, string NextToken, DescribeBudgetActionsForBudgetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForBudget?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetActionsForBudgetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the budget names and notifications that are associated with an account.
		/// DescribeBudgetNotificationsForAccount #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetNotificationsForAccount
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetNotificationsForAccountResponse> DescribeBudgetNotificationsForAccountAsync(string MaxResults, string NextToken, DescribeBudgetNotificationsForAccountRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetNotificationsForAccount?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetNotificationsForAccountResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the history for <code>DAILY</code>, <code>MONTHLY</code>, and <code>QUARTERLY</code> budgets. Budget history isn't available for <code>ANNUAL</code> budgets.
		/// DescribeBudgetPerformanceHistory #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetPerformanceHistoryResponse> DescribeBudgetPerformanceHistoryAsync(string MaxResults, string NextToken, DescribeBudgetPerformanceHistoryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetPerformanceHistoryResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Lists the budgets that are associated with an account.</p> <important> <p>The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples">Examples</a> section. </p> </important>
		/// DescribeBudgets #X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgets
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeBudgetsResponse> DescribeBudgetsAsync(string MaxResults, string NextToken, DescribeBudgetsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgets?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeBudgetsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the notifications that are associated with a budget.
		/// DescribeNotificationsForBudget #X-Amz-Target=AWSBudgetServiceGateway.DescribeNotificationsForBudget
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeNotificationsForBudgetResponse> DescribeNotificationsForBudgetAsync(string MaxResults, string NextToken, DescribeNotificationsForBudgetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeNotificationsForBudget?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeNotificationsForBudgetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists the subscribers that are associated with a notification.
		/// DescribeSubscribersForNotification #X-Amz-Target=AWSBudgetServiceGateway.DescribeSubscribersForNotification
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeSubscribersForNotificationResponse> DescribeSubscribersForNotificationAsync(string MaxResults, string NextToken, DescribeSubscribersForNotificationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.DescribeSubscribersForNotification?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeSubscribersForNotificationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Executes a budget action.
		/// ExecuteBudgetAction #X-Amz-Target=AWSBudgetServiceGateway.ExecuteBudgetAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExecuteBudgetActionResponse> ExecuteBudgetActionAsync(ExecuteBudgetActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.ExecuteBudgetAction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ExecuteBudgetActionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// <p>Updates a budget. You can change every part of a budget except for the <code>budgetName</code> and the <code>calculatedSpend</code>. When you modify a budget, the <code>calculatedSpend</code> drops to zero until Amazon Web Services has new usage data to use for forecasting.</p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code> can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples">Examples</a> section. </p> </important>
		/// UpdateBudget #X-Amz-Target=AWSBudgetServiceGateway.UpdateBudget
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateBudgetResponse> UpdateBudgetAsync(UpdateBudgetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudget";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateBudgetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a budget action.
		/// UpdateBudgetAction #X-Amz-Target=AWSBudgetServiceGateway.UpdateBudgetAction
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateBudgetActionResponse> UpdateBudgetActionAsync(UpdateBudgetActionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudgetAction";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateBudgetActionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a notification.
		/// UpdateNotification #X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateNotificationResponse> UpdateNotificationAsync(UpdateNotificationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateNotificationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a subscriber.
		/// UpdateSubscriber #X-Amz-Target=AWSBudgetServiceGateway.UpdateSubscriber
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateSubscriberResponse> UpdateSubscriberAsync(UpdateSubscriberRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSBudgetServiceGateway.UpdateSubscriber";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateSubscriberResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum CreateBudgetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.CreateBudget")]
		AWSBudgetServiceGateway_CreateBudget = 0,
	}
	
	public enum CreateBudgetActionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.CreateBudgetAction")]
		AWSBudgetServiceGateway_CreateBudgetAction = 0,
	}
	
	public enum CreateNotificationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.CreateNotification")]
		AWSBudgetServiceGateway_CreateNotification = 0,
	}
	
	public enum CreateSubscriberX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.CreateSubscriber")]
		AWSBudgetServiceGateway_CreateSubscriber = 0,
	}
	
	public enum DeleteBudgetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DeleteBudget")]
		AWSBudgetServiceGateway_DeleteBudget = 0,
	}
	
	public enum DeleteBudgetActionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DeleteBudgetAction")]
		AWSBudgetServiceGateway_DeleteBudgetAction = 0,
	}
	
	public enum DeleteNotificationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DeleteNotification")]
		AWSBudgetServiceGateway_DeleteNotification = 0,
	}
	
	public enum DeleteSubscriberX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DeleteSubscriber")]
		AWSBudgetServiceGateway_DeleteSubscriber = 0,
	}
	
	public enum DescribeBudgetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudget")]
		AWSBudgetServiceGateway_DescribeBudget = 0,
	}
	
	public enum DescribeBudgetActionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgetAction")]
		AWSBudgetServiceGateway_DescribeBudgetAction = 0,
	}
	
	public enum DescribeBudgetActionHistoriesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgetActionHistories")]
		AWSBudgetServiceGateway_DescribeBudgetActionHistories = 0,
	}
	
	public enum DescribeBudgetActionsForAccountX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgetActionsForAccount")]
		AWSBudgetServiceGateway_DescribeBudgetActionsForAccount = 0,
	}
	
	public enum DescribeBudgetActionsForBudgetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgetActionsForBudget")]
		AWSBudgetServiceGateway_DescribeBudgetActionsForBudget = 0,
	}
	
	public enum DescribeBudgetNotificationsForAccountX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgetNotificationsForAccount")]
		AWSBudgetServiceGateway_DescribeBudgetNotificationsForAccount = 0,
	}
	
	public enum DescribeBudgetPerformanceHistoryX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory")]
		AWSBudgetServiceGateway_DescribeBudgetPerformanceHistory = 0,
	}
	
	public enum DescribeBudgetsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeBudgets")]
		AWSBudgetServiceGateway_DescribeBudgets = 0,
	}
	
	public enum DescribeNotificationsForBudgetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeNotificationsForBudget")]
		AWSBudgetServiceGateway_DescribeNotificationsForBudget = 0,
	}
	
	public enum DescribeSubscribersForNotificationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.DescribeSubscribersForNotification")]
		AWSBudgetServiceGateway_DescribeSubscribersForNotification = 0,
	}
	
	public enum ExecuteBudgetActionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.ExecuteBudgetAction")]
		AWSBudgetServiceGateway_ExecuteBudgetAction = 0,
	}
	
	public enum UpdateBudgetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.UpdateBudget")]
		AWSBudgetServiceGateway_UpdateBudget = 0,
	}
	
	public enum UpdateBudgetActionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.UpdateBudgetAction")]
		AWSBudgetServiceGateway_UpdateBudgetAction = 0,
	}
	
	public enum UpdateNotificationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.UpdateNotification")]
		AWSBudgetServiceGateway_UpdateNotification = 0,
	}
	
	public enum UpdateSubscriberX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSBudgetServiceGateway.UpdateSubscriber")]
		AWSBudgetServiceGateway_UpdateSubscriber = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

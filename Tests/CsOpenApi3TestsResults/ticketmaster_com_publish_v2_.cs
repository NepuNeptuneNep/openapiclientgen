//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Event's Access Date
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDates
	{
		
		/// <summary>
		/// Boolean flag to indicate whether or not the access end date is approximated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endApproximate")]
		public System.Nullable<System.Boolean> EndApproximate { get; set; }
		
		/// <summary>
		/// Event's end access time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endDateTime")]
		public System.Nullable<System.DateTimeOffset> EndDateTime { get; set; }
		
		/// <summary>
		/// Boolean flag to indicate whether or not the access start date is approximated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startApproximate")]
		public System.Nullable<System.Boolean> StartApproximate { get; set; }
		
		/// <summary>
		/// Event's start access time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startDateTime")]
		public System.Nullable<System.DateTimeOffset> StartDateTime { get; set; }
	}
	
	/// <summary>
	/// Address
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
		
		/// <summary>
		/// Aaddress first line - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line1s")]
		public System.Collections.Generic.Dictionary<string, string> Line1s { get; set; }
		
		/// <summary>
		/// Address second line - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line2s")]
		public System.Collections.Generic.Dictionary<string, string> Line2s { get; set; }
		
		/// <summary>
		/// Address third line - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line3s")]
		public System.Collections.Generic.Dictionary<string, string> Line3s { get; set; }
	}
	
	/// <summary>
	/// Area
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Area
	{
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
	}
	
	/// <summary>
	/// Attraction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attraction
	{
		
		/// <summary>
		/// Indicate if the entity is active, inactive entity won't appear in Discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// Additional informations of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalInfos")]
		public System.Collections.Generic.Dictionary<string, string> AdditionalInfos { get; set; }
		
		/// <summary>
		/// Attraction's classifications
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="classifications")]
		public Classification[] Classifications { get; set; }
		
		/// <summary>
		/// Descriptions of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="descriptions")]
		public System.Collections.Generic.Dictionary<string, string> Descriptions { get; set; }
		
		/// <summary>
		/// True if the entity is dicoverable in discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoverable")]
		public System.Nullable<System.Boolean> Discoverable { get; set; }
		
		/// <summary>
		/// Images of the entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public Image[] Images { get; set; }
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// References of this entity in an other system. Reference is the exact same entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public System.Collections.Generic.Dictionary<string, string> References { get; set; }
		
		/// <summary>
		/// Relationships on the entity, like if the entity is a duplicate of another one
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public Relationship[] Relationships { get; set; }
		
		/// <summary>
		/// Source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public Source Source { get; set; }
		
		/// <summary>
		/// Indicate if this is a test entity, by default test entities won't appear in discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
		
		/// <summary>
		/// Type of the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AttractionType Type { get; set; }
		
		/// <summary>
		/// URL of a web site detail page of the entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Version of the entity. Version is to avoid updated an entity with an older version
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int64> Version { get; set; }
	}
	
	/// <summary>
	/// Classification
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Classification
	{
		
		[System.Runtime.Serialization.DataMember(Name="genre")]
		public Level Genre { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public System.Nullable<System.Boolean> Primary { get; set; }
		
		/// <summary>
		/// Segment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment")]
		public Segment Segment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subGenre")]
		public Level SubGenre { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subType")]
		public Level SubType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public Level Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Level
	{
		
		/// <summary>
		/// The ID of the classification's level
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The Name of the classification's level - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
	}
	
	/// <summary>
	/// Segment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Segment
	{
		
		/// <summary>
		/// The ID of the classification's level
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The Name of the classification's level - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
	}
	
	/// <summary>
	/// Image
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Image
	{
		
		/// <summary>
		/// Attribution of the image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attribution")]
		public string Attribution { get; set; }
		
		/// <summary>
		/// Domains on which this image should be displayed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domains")]
		public string[] Domains { get; set; }
		
		/// <summary>
		/// true if the image is not the event's image but a fallbak image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fallback")]
		public System.Nullable<System.Boolean> Fallback { get; set; }
		
		/// <summary>
		/// Height of the image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Aspect ratio of the image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ratio")]
		public System.Nullable<ImageRatio> Ratio { get; set; }
		
		/// <summary>
		/// Public URL of the image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Width of the image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ImageRatio
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="16_9")]
		_16_9 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="3_2")]
		_3_2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="4_3")]
		_4_3 = 2,
	}
	
	/// <summary>
	/// Relationship
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Relationship
	{
	}
	
	/// <summary>
	/// Source
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Source
	{
		
		/// <summary>
		/// ID of the entity in the source's system
		/// Pattern: ^[a-zA-Z0-9_-]*$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9_-]*$")]
		public string Id { get; set; }
		
		/// <summary>
		/// Source's name
		/// Pattern: ^[a-zA-Z0-9_-]*$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9_-]*$")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AttractionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		venue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		attraction = 2,
	}
	
	/// <summary>
	/// All Attraction's extensions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttractionExtensions
	{
	}
	
	/// <summary>
	/// This class defines the Augmentation Data on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AugmentationData
	{
		
		/// <summary>
		/// List of changes to apply to the related entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="changes")]
		public Change[] Changes { get; set; }
		
		/// <summary>
		/// Id of the entity to apply the augmentation data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relatedEntityId")]
		public string RelatedEntityId { get; set; }
		
		/// <summary>
		/// The type of the entity to apply the augmentation data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relatedEntityType")]
		public AugmentationDataRelatedEntityType RelatedEntityType { get; set; }
		
		/// <summary>
		/// The confidence (%) level of the accuracy of this augmention data. 100 is the better
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
		
		/// <summary>
		/// The source where the augementation data came from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Vesion of this augmentation data. This field is to avoid updating entity with old data. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="versionNumber")]
		public long VersionNumber { get; set; }
	}
	
	/// <summary>
	/// This class defines the Changes on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Change
	{
		
		/// <summary>
		/// Json path of the source entity when using the move operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		/// <summary>
		/// Operation to apply on the entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="op")]
		public ChangeOp Op { get; set; }
		
		/// <summary>
		/// Json path from the root of the document to the place where the change should be applied.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Data to change. MUST be a valid json object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChangeOp
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		add = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		remove = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		replace = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		move = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		copy = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		test = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AugmentationDataRelatedEntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		attraction = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		venue = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Chronology
	{
		
		[System.Runtime.Serialization.DataMember(Name="zone")]
		public DateTimeZone Zone { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeZone
	{
		
		[System.Runtime.Serialization.DataMember(Name="fixed")]
		public System.Nullable<System.Boolean> Fixed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// City
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class City
	{
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
	}
	
	/// <summary>
	/// Country
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Country
	{
		
		/// <summary>
		/// Country code (ISO 3166)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="countryCode")]
		public string CountryCode { get; set; }
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeField
	{
		
		[System.Runtime.Serialization.DataMember(Name="durationField")]
		public DurationField DurationField { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="leapDurationField")]
		public DurationField LeapDurationField { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lenient")]
		public System.Nullable<System.Boolean> Lenient { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maximumValue")]
		public System.Nullable<System.Int32> MaximumValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimumValue")]
		public System.Nullable<System.Int32> MinimumValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rangeDurationField")]
		public DurationField RangeDurationField { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="supported")]
		public System.Nullable<System.Boolean> Supported { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DateTimeFieldType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DurationField
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="precise")]
		public System.Nullable<System.Boolean> Precise { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="supported")]
		public System.Nullable<System.Boolean> Supported { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DurationFieldType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unitMillis")]
		public System.Nullable<System.Int64> UnitMillis { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DurationFieldType
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateTimeFieldType
	{
		
		[System.Runtime.Serialization.DataMember(Name="durationType")]
		public DurationFieldType DurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rangeDurationType")]
		public DurationFieldType RangeDurationType { get; set; }
	}
	
	/// <summary>
	/// Event's display settings extension
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisplaySettingExtension
	{
	}
	
	/// <summary>
	/// DMA (Designated Market Area)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dma
	{
		
		/// <summary>
		/// DMS's id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
	}
	
	/// <summary>
	/// Event's End Dates
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndDates
	{
		
		/// <summary>
		/// Boolean flag to indicate whether or not the end date is approximated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approximate")]
		public System.Nullable<System.Boolean> Approximate { get; set; }
		
		/// <summary>
		/// The event end date time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateTime")]
		public System.Nullable<System.DateTimeOffset> DateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="localTime")]
		public LocalTime LocalTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LocalTime
	{
		
		[System.Runtime.Serialization.DataMember(Name="chronology")]
		public Chronology Chronology { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldTypes")]
		public DateTimeFieldType[] FieldTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public DateTimeField[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hourOfDay")]
		public System.Nullable<System.Int32> HourOfDay { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="millisOfDay")]
		public System.Nullable<System.Int32> MillisOfDay { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="millisOfSecond")]
		public System.Nullable<System.Int32> MillisOfSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minuteOfHour")]
		public System.Nullable<System.Int32> MinuteOfHour { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondOfMinute")]
		public System.Nullable<System.Int32> SecondOfMinute { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public int[] Values { get; set; }
	}
	
	/// <summary>
	/// This class defines an entitlement data on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Entitlement
	{
		
		/// <summary>
		/// The actual entitlements information to add to the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedEntityId")]
		public string RelatedEntityId { get; set; }
		
		/// <summary>
		/// Source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedEntitySource")]
		public Source RelatedEntitySource { get; set; }
		
		/// <summary>
		/// The type of the entity to add this entitlement to
		/// Required
		/// Pattern: ^event|venue|attraction$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relatedEntityType")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^event|venue|attraction$")]
		public EntitlementRelatedEntityType RelatedEntityType { get; set; }
		
		/// <summary>
		/// Source of the extension, where it came from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public EntitlementSource Source { get; set; }
		
		/// <summary>
		/// Version of the entitlements. Version is to prevent to override an entitlements with an older one
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionNumber")]
		public System.Nullable<System.Int64> VersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntitlementRelatedEntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		venue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		attraction = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EntitlementSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ticketmaster = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityChanges
	{
		
		[System.Runtime.Serialization.DataMember(Name="changes")]
		public string[] Changes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="newlyCreated")]
		public System.Nullable<System.Boolean> NewlyCreated { get; set; }
	}
	
	/// <summary>
	/// Event
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Event
	{
		
		/// <summary>
		/// Indicate if the entity is active, inactive entity won't appear in Discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// Additional informations of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalInfos")]
		public System.Collections.Generic.Dictionary<string, string> AdditionalInfos { get; set; }
		
		/// <summary>
		/// Ordered Attraction related to the event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attractions")]
		public Attraction[] Attractions { get; set; }
		
		/// <summary>
		/// Event's classifications
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="classifications")]
		public Classification[] Classifications { get; set; }
		
		/// <summary>
		/// Event's Dates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dates")]
		public EventDates Dates { get; set; }
		
		/// <summary>
		/// Descriptions of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="descriptions")]
		public System.Collections.Generic.Dictionary<string, string> Descriptions { get; set; }
		
		/// <summary>
		/// True if the entity is dicoverable in discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoverable")]
		public System.Nullable<System.Boolean> Discoverable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Double> Distance { get; set; }
		
		/// <summary>
		/// Images of the entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public Image[] Images { get; set; }
		
		/// <summary>
		/// Any information related to the event - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infos")]
		public System.Collections.Generic.Dictionary<string, string> Infos { get; set; }
		
		/// <summary>
		/// Location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// Place
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="place")]
		public Place Place { get; set; }
		
		/// <summary>
		/// Any notes related to the event - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pleaseNotes")]
		public System.Collections.Generic.Dictionary<string, string> PleaseNotes { get; set; }
		
		/// <summary>
		/// Price ranges of this event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceRanges")]
		public PriceRange[] PriceRanges { get; set; }
		
		/// <summary>
		/// Promoter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoter")]
		public Promoter Promoter { get; set; }
		
		/// <summary>
		/// The class defines the public visibility period on the Discovery/Publish API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicVisibility")]
		public PublicVisibility PublicVisibility { get; set; }
		
		/// <summary>
		/// References of this entity in an other system. Reference is the exact same entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public System.Collections.Generic.Dictionary<string, string> References { get; set; }
		
		/// <summary>
		/// Relationships on the entity, like if the entity is a duplicate of another one
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public Relationship[] Relationships { get; set; }
		
		/// <summary>
		/// Event's Sales Dates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sales")]
		public EventSalesDates Sales { get; set; }
		
		/// <summary>
		/// Source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public Source Source { get; set; }
		
		/// <summary>
		/// Indicate if this is a test entity, by default test entities won't appear in discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
		
		/// <summary>
		/// Type of the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public EventType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
		
		/// <summary>
		/// URL of a web site detail page of the entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Venue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="venue")]
		public Venue Venue { get; set; }
		
		/// <summary>
		/// Version of the entity. Version is to avoid updated an entity with an older version
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int64> Version { get; set; }
	}
	
	/// <summary>
	/// Event's Dates
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventDates
	{
		
		/// <summary>
		/// Event's Access Date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access")]
		public AccessDates Access { get; set; }
		
		/// <summary>
		/// Event's End Dates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public EndDates End { get; set; }
		
		/// <summary>
		/// Event's Start Dates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public StartDates Start { get; set; }
		
		/// <summary>
		/// Event's Status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EventStatus Status { get; set; }
		
		/// <summary>
		/// Event's timezone
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	/// <summary>
	/// Event's Start Dates
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDates
	{
		
		/// <summary>
		/// Boolean flag to indicate whether or not the start date is TBA
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateTBA")]
		public System.Nullable<System.Boolean> DateTBA { get; set; }
		
		/// <summary>
		/// Boolean flag to indicate whether or not the start date is TBD
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateTBD")]
		public System.Nullable<System.Boolean> DateTBD { get; set; }
		
		/// <summary>
		/// The event start datetime
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateTime")]
		public System.Nullable<System.DateTimeOffset> DateTime { get; set; }
		
		/// <summary>
		/// The event start date in local date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localDate")]
		public System.Nullable<System.DateOnly> LocalDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="localTime")]
		public LocalTime LocalTime { get; set; }
		
		/// <summary>
		/// Boolean flag to indicate whether or not the event has no specific time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noSpecificTime")]
		public System.Nullable<System.Boolean> NoSpecificTime { get; set; }
		
		/// <summary>
		/// Boolean flag to indicate whether or not the start time is TBA
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeTBA")]
		public System.Nullable<System.Boolean> TimeTBA { get; set; }
	}
	
	/// <summary>
	/// Event's Status
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventStatus
	{
		
		/// <summary>
		/// The event's status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<EventStatusCode> Code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		onsale = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		offsale = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		postponed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rescheduled = 4,
	}
	
	/// <summary>
	/// Location
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Location
	{
		
		/// <summary>
		/// Latitude
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// Longitude
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
	}
	
	/// <summary>
	/// Place
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Place
	{
		
		/// <summary>
		/// Address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Address Address { get; set; }
		
		/// <summary>
		/// Area
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="area")]
		public Area Area { get; set; }
		
		/// <summary>
		/// City
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public City City { get; set; }
		
		/// <summary>
		/// Country
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public Country Country { get; set; }
		
		/// <summary>
		/// Location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// Postal code / zipcode of the place
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// State
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public State State { get; set; }
	}
	
	/// <summary>
	/// State
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class State
	{
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// State code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateCode")]
		public string StateCode { get; set; }
	}
	
	/// <summary>
	/// PriceRange
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PriceRange
	{
		
		/// <summary>
		/// Currency
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// Maximum price
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max")]
		public System.Nullable<System.Double> Max { get; set; }
		
		/// <summary>
		/// Minimum price
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="min")]
		public System.Nullable<System.Double> Min { get; set; }
		
		/// <summary>
		/// Type of price
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PriceRangeType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PriceRangeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
	}
	
	/// <summary>
	/// Promoter
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Promoter
	{
		
		/// <summary>
		/// Description of the promoter - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="descriptions")]
		public System.Collections.Generic.Dictionary<string, string> Descriptions { get; set; }
		
		/// <summary>
		/// Id of the promoter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the promoter - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
	}
	
	/// <summary>
	/// The class defines the public visibility period on the Discovery/Publish API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublicVisibility
	{
		
		/// <summary>
		/// The end of the public visibility. The date and time when the event will be public visible
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endDateTime")]
		public System.Nullable<System.DateTimeOffset> EndDateTime { get; set; }
		
		/// <summary>
		/// The start of the public visibility. The date and time when the event will be public visible
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startDateTime")]
		public System.Nullable<System.DateTimeOffset> StartDateTime { get; set; }
		
		/// <summary>
		/// True if you want to have the event visible in the discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visible")]
		public System.Nullable<System.Boolean> Visible { get; set; }
	}
	
	/// <summary>
	/// Event's Sales Dates
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventSalesDates
	{
		
		/// <summary>
		/// Presale information on this event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="presales")]
		public Presale[] Presales { get; set; }
		
		/// <summary>
		/// Event's Public Onsales Dates
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public PublicSaleDates Public { get; set; }
	}
	
	/// <summary>
	/// Event's Presale Info
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Presale
	{
		
		/// <summary>
		/// Description of the presale - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="descriptions")]
		public System.Collections.Generic.Dictionary<string, string> Descriptions { get; set; }
		
		/// <summary>
		/// Presale's end dates. The date and time when the presale will end
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endDateTime")]
		public System.Nullable<System.DateTimeOffset> EndDateTime { get; set; }
		
		/// <summary>
		/// Name of the presale - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// Presale's start dates. The date and time when the presale will start
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startDateTime")]
		public System.Nullable<System.DateTimeOffset> StartDateTime { get; set; }
		
		/// <summary>
		/// Presale link URL
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Event's Public Onsales Dates
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublicSaleDates
	{
		
		/// <summary>
		/// Public sale's end dates. The date and time when the public sale will end
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endDateTime")]
		public System.Nullable<System.DateTimeOffset> EndDateTime { get; set; }
		
		/// <summary>
		/// Public sale's start dates. The date and time when the public sale will start
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startDateTime")]
		public System.Nullable<System.DateTimeOffset> StartDateTime { get; set; }
		
		/// <summary>
		/// True if the public sale's date is to be determined
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTBD")]
		public System.Nullable<System.Boolean> StartTBD { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		venue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		attraction = 2,
	}
	
	/// <summary>
	/// Venue
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Venue
	{
		
		/// <summary>
		/// Venue accessible seating details - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessibleSeatingDetails")]
		public System.Collections.Generic.Dictionary<string, string> AccessibleSeatingDetails { get; set; }
		
		/// <summary>
		/// Indicate if the entity is active, inactive entity won't appear in Discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// Additional informations of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalInfos")]
		public System.Collections.Generic.Dictionary<string, string> AdditionalInfos { get; set; }
		
		/// <summary>
		/// Address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Address Address { get; set; }
		
		/// <summary>
		/// Venue box office information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boxOfficeInfo")]
		public VenueBoxOfficeInfo BoxOfficeInfo { get; set; }
		
		/// <summary>
		/// City
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public City City { get; set; }
		
		/// <summary>
		/// Country
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public Country Country { get; set; }
		
		/// <summary>
		/// Default currency of ticket prices for events in this venue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// Descriptions of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="descriptions")]
		public System.Collections.Generic.Dictionary<string, string> Descriptions { get; set; }
		
		/// <summary>
		/// True if the entity is dicoverable in discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discoverable")]
		public System.Nullable<System.Boolean> Discoverable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Double> Distance { get; set; }
		
		/// <summary>
		/// The list of associated DMAs (Designated Market Areas) of the venue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dma")]
		public Dma[] Dma { get; set; }
		
		/// <summary>
		/// Venue general information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generalInfo")]
		public VenueGeneralInfo GeneralInfo { get; set; }
		
		/// <summary>
		/// Images of the entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public Image[] Images { get; set; }
		
		/// <summary>
		/// Location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
		
		/// <summary>
		/// Markets of the venue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="markets")]
		public Market[] Markets { get; set; }
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// Venue parking info - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parkingDetails")]
		public System.Collections.Generic.Dictionary<string, string> ParkingDetails { get; set; }
		
		/// <summary>
		/// Postal code / zipcode of the venue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// References of this entity in an other system. Reference is the exact same entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public System.Collections.Generic.Dictionary<string, string> References { get; set; }
		
		/// <summary>
		/// Relationships on the entity, like if the entity is a duplicate of another one
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public Relationship[] Relationships { get; set; }
		
		/// <summary>
		/// Social networks data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social")]
		public Social Social { get; set; }
		
		/// <summary>
		/// Source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public Source Source { get; set; }
		
		/// <summary>
		/// State
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public State State { get; set; }
		
		/// <summary>
		/// Indicate if this is a test entity, by default test entities won't appear in discovery API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test")]
		public System.Nullable<System.Boolean> Test { get; set; }
		
		/// <summary>
		/// Timezone of the venue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// Type of the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public VenueType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
		
		/// <summary>
		/// URL of a web site detail page of the entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Version of the entity. Version is to avoid updated an entity with an older version
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int64> Version { get; set; }
	}
	
	/// <summary>
	/// Venue box office information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VenueBoxOfficeInfo
	{
		
		/// <summary>
		/// Venue box office accepted payment details - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="acceptedPaymentDetails")]
		public System.Collections.Generic.Dictionary<string, string> AcceptedPaymentDetails { get; set; }
		
		/// <summary>
		/// Venue box office opening hours - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openHoursDetails")]
		public System.Collections.Generic.Dictionary<string, string> OpenHoursDetails { get; set; }
		
		/// <summary>
		/// Venue box office phone number - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumberDetails")]
		public System.Collections.Generic.Dictionary<string, string> PhoneNumberDetails { get; set; }
		
		/// <summary>
		/// Venue box office will call details - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="willCallDetails")]
		public System.Collections.Generic.Dictionary<string, string> WillCallDetails { get; set; }
	}
	
	/// <summary>
	/// Venue general information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VenueGeneralInfo
	{
		
		/// <summary>
		/// Venue children rules - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childRules")]
		public System.Collections.Generic.Dictionary<string, string> ChildRules { get; set; }
		
		/// <summary>
		/// Venue general rules - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generalRules")]
		public System.Collections.Generic.Dictionary<string, string> GeneralRules { get; set; }
	}
	
	/// <summary>
	/// Market
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Market
	{
		
		/// <summary>
		/// Market's id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Social networks data
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Social
	{
		
		/// <summary>
		/// Twitter data
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="twitter")]
		public Twitter Twitter { get; set; }
	}
	
	/// <summary>
	/// Twitter data
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Twitter
	{
		
		/// <summary>
		/// Twitter handle
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public System.Nullable<TwitterHandle> Handle { get; set; }
		
		/// <summary>
		/// Twitter hashtags
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hashtags")]
		public string[] Hashtags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TwitterHandle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="@a Twitter handle")]
		@a_Twitter_handle = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VenueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		venue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		attraction = 2,
	}
	
	/// <summary>
	/// All Event's extensions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventExtensions
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Extension
	{
	}
	
	/// <summary>
	/// This class defines an extenstion data on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExtensionData
	{
		
		/// <summary>
		/// The actual information to add to the entity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedEntityId")]
		public string RelatedEntityId { get; set; }
		
		/// <summary>
		/// Source
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedEntitySource")]
		public Source RelatedEntitySource { get; set; }
		
		/// <summary>
		/// The type of the entity to add this extensions to
		/// Required
		/// Pattern: ^event|venue|attraction$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relatedEntityType")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^event|venue|attraction$")]
		public ExtensionDataRelatedEntityType RelatedEntityType { get; set; }
		
		/// <summary>
		/// Source of the extension, where it came from
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// The type of the extension. This represent the data sent
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Version of the extensions. Version is to prevent to override an extension with an older one
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionNumber")]
		public System.Nullable<System.Int64> VersionNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExtensionDataRelatedEntityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="event")]
		_event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		venue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		attraction = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeocodeExtension
	{
		
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="county")]
		public string County { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="formattedAddress")]
		public string FormattedAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="geometry")]
		public Geometry Geometry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="route")]
		public string Route { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="streetNumber")]
		public string StreetNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Geometry
	{
		
		/// <summary>
		/// Location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Location Location { get; set; }
	}
	
	/// <summary>
	/// Venue's geocode extension
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GeolocationVenueExtensions
	{
	}
	
	/// <summary>
	/// Venue's Host extension
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HostExtension
	{
	}
	
	/// <summary>
	/// This class defines the IngestionResult on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IngestionResult
	{
		
		/// <summary>
		/// Id of the entity ingested in the discovery api
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// List properties that are ignored in the validation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ignoredProperties")]
		public System.Collections.Generic.Dictionary<string, object> IgnoredProperties { get; set; }
		
		/// <summary>
		/// List of invalid properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidProperties")]
		public System.Collections.Generic.Dictionary<string, object> InvalidProperties { get; set; }
		
		/// <summary>
		/// List of invalid values
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidValues")]
		public System.Collections.Generic.Dictionary<string, object> InvalidValues { get; set; }
		
		/// <summary>
		/// List of properties that should be present in your entity to ease its dicovery
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="missingProperties")]
		public System.Collections.Generic.Dictionary<string, object> MissingProperties { get; set; }
		
		/// <summary>
		/// Status of the result
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public IngestionResultStatus Status { get; set; }
		
		/// <summary>
		/// List of unknown properties that will be dropped
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unknownProperties")]
		public System.Collections.Generic.Dictionary<string, object> UnknownProperties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IngestionResultStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SuccessWarning = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Success = 2,
	}
	
	/// <summary>
	/// This class defines an entitlement data on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LicensingInformation
	{
		
		/// <summary>
		/// License name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		/// <summary>
		/// This class defines an entitlement data on the Publish API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionRestriction")]
		public RegionRestrictions RegionRestriction { get; set; }
	}
	
	/// <summary>
	/// This class defines an entitlement data on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegionRestrictions
	{
		
		/// <summary>
		/// Restrictions based on regions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public string[] Allowed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Locale
	{
		
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayCountry")]
		public string DisplayCountry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayLanguage")]
		public string DisplayLanguage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayScript")]
		public string DisplayScript { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayVariant")]
		public string DisplayVariant { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="extensionKeys")]
		public string[] ExtensionKeys { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso3Country")]
		public string Iso3Country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso3Language")]
		public string Iso3Language { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="script")]
		public string Script { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unicodeLocaleAttributes")]
		public string[] UnicodeLocaleAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unicodeLocaleKeys")]
		public string[] UnicodeLocaleKeys { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="variant")]
		public string Variant { get; set; }
	}
	
	/// <summary>
	/// Parking
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parking
	{
		
		/// <summary>
		/// Names of the entity - multi-lingual fields
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public System.Collections.Generic.Dictionary<string, string> Names { get; set; }
		
		/// <summary>
		/// Url to the web page of the parking
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The Attraction Tool (TAT) extension
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TatExtension
	{
	}
	
	/// <summary>
	/// Attraction's extension (ticketmaster source)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TicketmasterAttractionExtensions
	{
	}
	
	/// <summary>
	/// Event's extension (ticketmaster source)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TicketmasterEventExtensions
	{
	}
	
	/// <summary>
	/// Venue's extension (ticketmaster source)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TicketmasterVenueExtensions
	{
	}
	
	/// <summary>
	/// All Venue's extensions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VenueExtensions
	{
	}
	
	/// <summary>
	/// This class defines an entitlement data on the Publish API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Video
	{
		
		/// <summary>
		/// The url of the embeded video
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="embedUrl")]
		public string EmbedUrl { get; set; }
		
		/// <summary>
		/// This class defines an entitlement data on the Publish API
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="licensingInformation")]
		public LicensingInformation LicensingInformation { get; set; }
		
		/// <summary>
		/// Source
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public Source Source { get; set; }
		
		/// <summary>
		/// The url of the video
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Publish an attractions
		/// Since 1.0.0
		/// PublishAttraction publish/v2/attractions
		/// </summary>
		/// <param name="requestBody">Attraction</param>
		/// <returns>successful operation</returns>
		public async Task PublishAttractionAsync(Attraction requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/attractions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish a patch on an attraction
		/// Since 1.0.0
		/// PatchAttraction publish/v2/attractions/{id}
		/// </summary>
		/// <param name="id">ID of the attraction the patch will be applied</param>
		/// <param name="requestBody">Patch to apply</param>
		/// <returns>successful operation</returns>
		public async Task PatchAttractionAsync(string id, AugmentationData requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/attractions/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish a video on an attraction
		/// Since 1.0.0
		/// PublishAttractionVideos publish/v2/attractions/{id}/videos
		/// </summary>
		/// <param name="id">ID of the attraction the video is linked to</param>
		/// <param name="requestBody">Video data</param>
		/// <returns>successful operation</returns>
		public async Task PublishAttractionVideosAsync(string id, Video requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/attractions/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/videos";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish entitlements on an entity
		/// Since 2.0.0
		/// PublishEntitlements publish/v2/entitlements
		/// </summary>
		/// <param name="requestBody">Entitlements information to add to the entity</param>
		/// <returns>successful operation</returns>
		public async Task PublishEntitlementsAsync(Entitlement requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/entitlements";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish an event
		/// Since 1.0.0
		/// PublishEvent publish/v2/events
		/// </summary>
		/// <param name="requestBody">Event</param>
		/// <returns>successful operation</returns>
		public async Task PublishEventAsync(Event requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/events";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish a patch on an event
		/// Since 1.0.0
		/// PatchEvent publish/v2/events/{id}
		/// </summary>
		/// <param name="id">ID of the event the patch will be applied</param>
		/// <param name="requestBody">Patch to apply</param>
		/// <returns>successful operation</returns>
		public async Task PatchEventAsync(string id, AugmentationData requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/events/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish a video on an event
		/// Since 1.0.0
		/// PublishEventVideos publish/v2/events/{id}/videos
		/// </summary>
		/// <param name="id">ID of the event the video is linked to</param>
		/// <param name="requestBody">Video data</param>
		/// <returns>successful operation</returns>
		public async Task PublishEventVideosAsync(string id, Video requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/events/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/videos";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish extension on an entity
		/// Since 1.0.0
		/// PublishExtension publish/v2/extensions
		/// </summary>
		/// <param name="requestBody">Extension information to add to the entity</param>
		/// <returns>successful operation</returns>
		public async Task PublishExtensionAsync(ExtensionData requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/extensions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish a venue
		/// Since 1.0.0
		/// PublishVenue publish/v2/venues
		/// </summary>
		/// <param name="requestBody">Venue</param>
		/// <returns>successful operation</returns>
		public async Task PublishVenueAsync(Venue requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/venues";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Publish a patch on a venue
		/// Since 1.0.0
		/// PatchVenue publish/v2/venues/{id}
		/// </summary>
		/// <param name="id">ID of the venue the patch will be applied</param>
		/// <param name="requestBody">Patch to apply</param>
		/// <returns>successful operation</returns>
		public async Task PatchVenueAsync(string id, AugmentationData requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publish/v2/venues/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

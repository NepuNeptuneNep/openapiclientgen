//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Summary of the alerts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AlertSummary
	{
		
		/// <summary>
		/// The number of critical alerts for the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="criticalAlertCount")]
		public System.Nullable<System.Int32> CriticalAlertCount { get; set; }
		
		/// <summary>
		/// The number of warning alerts for the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warningAlertCount")]
		public System.Nullable<System.Int32> WarningAlertCount { get; set; }
	}
	
	/// <summary>
	/// Models the base properties for health resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BaseHealth
	{
		
		/// <summary>
		/// Summary of the alerts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alertSummary")]
		public AlertSummary AlertSummary { get; set; }
		
		/// <summary>
		/// Health state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthState")]
		public string HealthState { get; set; }
		
		/// <summary>
		/// Namespace of the health resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
		
		/// <summary>
		/// Registration ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="registrationId")]
		public string RegistrationId { get; set; }
		
		/// <summary>
		/// Route prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routePrefix")]
		public string RoutePrefix { get; set; }
	}
	
	/// <summary>
	/// Dictionary of string key-value pairs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Dictionary
	{
	}
	
	/// <summary>
	/// Contains the localized display information for this particular operation / action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Display
	{
		
		/// <summary>
		/// The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The localized, friendly name for the operation. Use the name as it will be displayed to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// The localized, friendly version of the resource provider name. The provider name is expected to include the name of the publisher or company responsible. The provider name format should use title case and begin with "Microsoft" for first-party services. For example, the provider name may be"Microsoft Monitoring Insights" or "Microsoft Compute".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// Metrics for a source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Metrics
	{
		
		/// <summary>
		/// Name of the counter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maCounterName")]
		public string MaCounterName { get; set; }
		
		/// <summary>
		/// Name of the usage metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Time counter was observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedTimestamp")]
		public System.Nullable<System.DateTimeOffset> ObservedTimestamp { get; set; }
		
		/// <summary>
		/// The origin of the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceName")]
		public System.Nullable<MetricsSourceName> SourceName { get; set; }
		
		/// <summary>
		/// Type of the source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceType")]
		public string SourceType { get; set; }
		
		/// <summary>
		/// The unit of the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public System.Nullable<MetricsUnit> Unit { get; set; }
		
		/// <summary>
		/// Name of the usage metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MetricsSourceName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PhysicalNode = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VirtualMachine = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceProvider = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MetricsUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		One = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Percentage = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		B = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GB = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TB = 6,
	}
	
	/// <summary>
	/// The origin of the metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MetricsSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PhysicalNode = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VirtualMachine = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceProvider = 2,
	}
	
	/// <summary>
	/// Describes the supported REST operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// Contains the localized display information for this particular operation / action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public Display Display { get; set; }
		
		/// <summary>
		/// The name of the operation performed on the object. The name should match the action name that appears in RBAC or the event service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// List of Operations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationList
	{
		
		/// <summary>
		/// URI to the next page of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Array of operations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// The core properties of ARM resources
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// Fully qualified resource Id for the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The type of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The resource model definition for a ARM tracked top level resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TrackedResource : Resource
	{
		
		/// <summary>
		/// The Azure Region where the resource lives
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Resource tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// Metrics of resource usage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UsageMetrics
	{
		
		/// <summary>
		/// List of usage metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricsValue")]
		public Metrics[] MetricsValue { get; set; }
		
		/// <summary>
		/// Name of the usage metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns a list of support REST operations.
		/// Operations_List providers/Microsoft.InfrastructureInsights.Admin/operations
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK</returns>
		public async Task<OperationList> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.InfrastructureInsights.Admin/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<OperationList>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

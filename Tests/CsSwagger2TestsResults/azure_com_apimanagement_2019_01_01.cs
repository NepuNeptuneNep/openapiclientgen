//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.Namespace
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	
	
	/// <summary>
	/// Error Field contract.
	/// </summary>
	public class ErrorFieldContract
	{
		
		/// <summary>
		/// Property level error code.
		/// </summary>
		public string Code { get; set; }
		
		/// <summary>
		/// Human-readable representation of property-level error.
		/// </summary>
		public string Message { get; set; }
		
		/// <summary>
		/// Property name.
		/// </summary>
		public string Target { get; set; }
	}
	
	/// <summary>
	/// Error Response.
	/// </summary>
	public class ErrorResponse
	{
		
		/// <summary>
		/// Error Body contract.
		/// </summary>
		public ErrorResponseBody Error { get; set; }
	}
	
	/// <summary>
	/// Error Body contract.
	/// </summary>
	public class ErrorResponseBody
	{
		
		/// <summary>
		/// Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
		/// </summary>
		public string Code { get; set; }
		
		/// <summary>
		/// The list of invalid fields send in request, in case of validation error.
		/// </summary>
		public ErrorFieldContract[] Details { get; set; }
		
		/// <summary>
		/// Human-readable representation of the error.
		/// </summary>
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Region profile.
	/// </summary>
	public class RegionContract
	{
		
		/// <summary>
		/// whether Region is deleted.
		/// </summary>
		public System.Nullable<System.Boolean> IsDeleted { get; set; }
		
		/// <summary>
		/// whether Region is the master region.
		/// </summary>
		public System.Nullable<System.Boolean> IsMasterRegion { get; set; }
		
		/// <summary>
		/// Region name.
		/// </summary>
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Lists Regions operation response details.
	/// </summary>
	public class RegionListResult
	{
		
		/// <summary>
		/// Total record count number across all pages.
		/// </summary>
		public System.Nullable<System.Int64> Count { get; set; }
		
		/// <summary>
		/// Next page link if any.
		/// </summary>
		public string NextLink { get; set; }
		
		/// <summary>
		/// Lists of Regions.
		/// </summary>
		public RegionContract[] Value { get; set; }
	}
	
	/// <summary>
	/// The Resource definition.
	/// </summary>
	public class Resource
	{
		
		/// <summary>
		/// Resource ID.
		/// </summary>
		public string Id { get; set; }
		
		/// <summary>
		/// Resource name.
		/// </summary>
		public string Name { get; set; }
		
		/// <summary>
		/// Resource type for API Management resource.
		/// </summary>
		public string Type { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
	}
}

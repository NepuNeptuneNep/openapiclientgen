//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Admin overview resource object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AdminOverview : Resource
	{
		
		/// <summary>
		/// Admin overview properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public AdminOverviewProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Admin overview properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AdminOverviewProperties
	{
		
		/// <summary>
		/// Resource usage information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backendIpUsage")]
		public AdminOverviewResourceUsage BackendIpUsage { get; set; }
		
		/// <summary>
		/// Resource health information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerMuxHealth")]
		public AdminOverviewResourceHealth LoadBalancerMuxHealth { get; set; }
		
		/// <summary>
		/// Resource usage information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="macAddressUsage")]
		public AdminOverviewResourceUsage MacAddressUsage { get; set; }
		
		/// <summary>
		/// The provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public string ProvisioningState { get; set; }
		
		/// <summary>
		/// Resource usage information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicIpAddressUsage")]
		public AdminOverviewResourceUsage PublicIpAddressUsage { get; set; }
		
		/// <summary>
		/// Resource health information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualGatewayHealth")]
		public AdminOverviewResourceHealth VirtualGatewayHealth { get; set; }
		
		/// <summary>
		/// Resource health information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualNetworkHealth")]
		public AdminOverviewResourceHealth VirtualNetworkHealth { get; set; }
	}
	
	/// <summary>
	/// Resource health information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AdminOverviewResourceHealth
	{
		
		/// <summary>
		/// Number of resources in the error state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorResourceCount")]
		public System.Nullable<System.Int64> ErrorResourceCount { get; set; }
		
		/// <summary>
		/// Number of resources in an unknown state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthUnknownCount")]
		public System.Nullable<System.Int64> HealthUnknownCount { get; set; }
		
		/// <summary>
		/// Number of resources in the success state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthyResourceCount")]
		public System.Nullable<System.Int64> HealthyResourceCount { get; set; }
		
		/// <summary>
		/// Total number of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalResourceCount")]
		public System.Nullable<System.Int64> TotalResourceCount { get; set; }
		
		/// <summary>
		/// Number of resources in the warning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="warningResourceCount")]
		public System.Nullable<System.Int64> WarningResourceCount { get; set; }
	}
	
	/// <summary>
	/// Resource usage information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AdminOverviewResourceUsage
	{
		
		/// <summary>
		/// Number of resources in use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inUseResourceCount")]
		public System.Nullable<System.Int64> InUseResourceCount { get; set; }
		
		/// <summary>
		/// Total number of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalResourceCount")]
		public System.Nullable<System.Int64> TotalResourceCount { get; set; }
	}
	
	/// <summary>
	/// Contains the localized display information for this particular operation / action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Display
	{
		
		/// <summary>
		/// The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The localized, friendly name for the operation. Use the name as it will displayed to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// The localized friendly form of the resource provider name â€“ it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// Describes the supported Location
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Location
	{
		
		/// <summary>
		/// The name of the location the operation is being held.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// List of Locations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LocationsList
	{
		
		/// <summary>
		/// URI to the next page of locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Array of locations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Location[] Value { get; set; }
	}
	
	/// <summary>
	/// Describes the supported REST operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// Contains the localized display information for this particular operation / action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public Display Display { get; set; }
		
		/// <summary>
		/// The name of the operation being performed on this particular object. This name should match the name that appears in RBAC or the event service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// List of Operations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationList
	{
		
		/// <summary>
		/// URI to the next page of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Array of operations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// Describes results of a given operation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationResult
	{
		
		/// <summary>
		/// The name of the operation being performed on this particular object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// List of Operation Results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationResultList
	{
		
		/// <summary>
		/// URI to the next page of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Array of operation results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public OperationResult[] Value { get; set; }
	}
	
	/// <summary>
	/// Objects which have a provisioning state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ProvisionedResource
	{
		
		/// <summary>
		/// The provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public string ProvisioningState { get; set; }
	}
	
	/// <summary>
	/// Base Resource Object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// URI of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Region location of resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Name of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of key value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Type of resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// These resources are utilized by a single tenant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TenantResource
	{
		
		/// <summary>
		/// The subscription ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// The tenant resource URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantResourceUri")]
		public string TenantResourceUri { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns the list of supported locations
		/// OnPremLocations_List providers/Microsoft.Network.Admin/locations
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK</returns>
		public async Task<LocationsList> OnPremLocations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.Network.Admin/locations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LocationsList>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the list of operation results for a location
		/// LocationsOperationResults_List providers/Microsoft.Network.Admin/locations/{location}/operationResults
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="location">Location of the resource.</param>
		/// <returns>OK</returns>
		public async Task<OperationResultList> LocationsOperationResults_ListAsync(string api_version, string location)
		{
			var requestUri = "providers/Microsoft.Network.Admin/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/operationResults?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<OperationResultList>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the list of support REST operations.
		/// LocationsOperations_List providers/Microsoft.Network.Admin/locations/{location}/operations
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="location">Location of the resource.</param>
		/// <returns>OK</returns>
		public async Task<OperationList> LocationsOperations_ListAsync(string api_version, string location)
		{
			var requestUri = "providers/Microsoft.Network.Admin/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<OperationList>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the list of support REST operations.
		/// Operations_List providers/Microsoft.Network.Admin/operations
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK</returns>
		public async Task<OperationList> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.Network.Admin/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<OperationList>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get an overview of the state of the network resource provider.
		/// ResourceProviderState_Get subscriptions/{subscriptionId}/providers/Microsoft.Network.Admin/adminOverview
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK</returns>
		public async Task<AdminOverview> ResourceProviderState_GetAsync(string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Network.Admin/adminOverview&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AdminOverview>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

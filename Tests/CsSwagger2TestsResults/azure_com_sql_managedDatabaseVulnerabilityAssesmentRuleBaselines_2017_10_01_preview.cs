//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A database vulnerability assessment rule baseline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DatabaseVulnerabilityAssessmentRuleBaseline
	{
		
		/// <summary>
		/// Properties of a database Vulnerability Assessment rule baseline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DatabaseVulnerabilityAssessmentRuleBaselineProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Properties of a database Vulnerability Assessment rule baseline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DatabaseVulnerabilityAssessmentRuleBaselineProperties
	{
		
		/// <summary>
		/// The rule baseline result
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="baselineResults")]
		public DatabaseVulnerabilityAssessmentRuleBaselineItem[] BaselineResults { get; set; }
	}
	
	/// <summary>
	/// Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DatabaseVulnerabilityAssessmentRuleBaselineItem
	{
		
		/// <summary>
		/// The rule baseline result
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public string[] Result { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Gets a database's vulnerability assessment rule baseline.
		/// ManagedDatabaseVulnerabilityAssessmentRuleBaselines_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.</param>
		/// <param name="managedInstanceName">The name of the managed instance.</param>
		/// <param name="databaseName">The name of the database for which the vulnerability assessment rule baseline is defined.</param>
		/// <param name="vulnerabilityAssessmentName">The name of the vulnerability assessment.</param>
		/// <param name="ruleId">The vulnerability assessment rule ID.</param>
		/// <param name="baselineName">The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).</param>
		/// <param name="subscriptionId">The subscription ID that identifies an Azure subscription.</param>
		/// <param name="api_version">The API version to use for the request.</param>
		/// <returns>Successfully got the vulnerability assessment rule baseline.</returns>
		public async Task<DatabaseVulnerabilityAssessmentRuleBaseline> ManagedDatabaseVulnerabilityAssessmentRuleBaselines_GetAsync(string resourceGroupName, string managedInstanceName, string databaseName, ManagedDatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName vulnerabilityAssessmentName, string ruleId, ManagedDatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName baselineName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Sql/managedInstances/"+ (managedInstanceName==null? "" : System.Uri.EscapeDataString(managedInstanceName))+"/databases/"+ (databaseName==null? "" : System.Uri.EscapeDataString(databaseName))+"/vulnerabilityAssessments/"+vulnerabilityAssessmentName+"/rules/"+ (ruleId==null? "" : System.Uri.EscapeDataString(ruleId))+"/baselines/"+baselineName+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DatabaseVulnerabilityAssessmentRuleBaseline>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates or updates a database's vulnerability assessment rule baseline.
		/// ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdate subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.</param>
		/// <param name="managedInstanceName">The name of the managed instance.</param>
		/// <param name="databaseName">The name of the database for which the vulnerability assessment rule baseline is defined.</param>
		/// <param name="vulnerabilityAssessmentName">The name of the vulnerability assessment.</param>
		/// <param name="ruleId">The vulnerability assessment rule ID.</param>
		/// <param name="baselineName">The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).</param>
		/// <param name="subscriptionId">The subscription ID that identifies an Azure subscription.</param>
		/// <param name="api_version">The API version to use for the request.</param>
		/// <param name="requestBody">The requested rule baseline resource.</param>
		/// <returns>Successfully set the vulnerability assessment rule baseline.</returns>
		public async Task<DatabaseVulnerabilityAssessmentRuleBaseline> ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdateAsync(string resourceGroupName, string managedInstanceName, string databaseName, ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdateVulnerabilityAssessmentName vulnerabilityAssessmentName, string ruleId, ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdateBaselineName baselineName, string subscriptionId, string api_version, DatabaseVulnerabilityAssessmentRuleBaseline requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Sql/managedInstances/"+ (managedInstanceName==null? "" : System.Uri.EscapeDataString(managedInstanceName))+"/databases/"+ (databaseName==null? "" : System.Uri.EscapeDataString(databaseName))+"/vulnerabilityAssessments/"+vulnerabilityAssessmentName+"/rules/"+ (ruleId==null? "" : System.Uri.EscapeDataString(ruleId))+"/baselines/"+baselineName+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DatabaseVulnerabilityAssessmentRuleBaseline>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes the database's vulnerability assessment rule baseline.
		/// ManagedDatabaseVulnerabilityAssessmentRuleBaselines_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.</param>
		/// <param name="managedInstanceName">The name of the managed instance.</param>
		/// <param name="databaseName">The name of the database for which the vulnerability assessment rule baseline is defined.</param>
		/// <param name="vulnerabilityAssessmentName">The name of the vulnerability assessment.</param>
		/// <param name="ruleId">The vulnerability assessment rule ID.</param>
		/// <param name="baselineName">The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).</param>
		/// <param name="subscriptionId">The subscription ID that identifies an Azure subscription.</param>
		/// <param name="api_version">The API version to use for the request.</param>
		/// <returns>Successfully removed the database vulnerability assessment rule baseline.</returns>
		public async Task ManagedDatabaseVulnerabilityAssessmentRuleBaselines_DeleteAsync(string resourceGroupName, string managedInstanceName, string databaseName, ManagedDatabaseVulnerabilityAssessmentRuleBaselines_DeleteVulnerabilityAssessmentName vulnerabilityAssessmentName, string ruleId, ManagedDatabaseVulnerabilityAssessmentRuleBaselines_DeleteBaselineName baselineName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Sql/managedInstances/"+ (managedInstanceName==null? "" : System.Uri.EscapeDataString(managedInstanceName))+"/databases/"+ (databaseName==null? "" : System.Uri.EscapeDataString(databaseName))+"/vulnerabilityAssessments/"+vulnerabilityAssessmentName+"/rules/"+ (ruleId==null? "" : System.Uri.EscapeDataString(ruleId))+"/baselines/"+baselineName+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum ManagedDatabaseVulnerabilityAssessmentRuleBaselines_GetVulnerabilityAssessmentName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 0,
	}
	
	public enum ManagedDatabaseVulnerabilityAssessmentRuleBaselines_GetBaselineName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		master = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 1,
	}
	
	public enum ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdateVulnerabilityAssessmentName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 0,
	}
	
	public enum ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdateBaselineName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		master = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 1,
	}
	
	public enum ManagedDatabaseVulnerabilityAssessmentRuleBaselines_DeleteVulnerabilityAssessmentName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 0,
	}
	
	public enum ManagedDatabaseVulnerabilityAssessmentRuleBaselines_DeleteBaselineName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		master = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

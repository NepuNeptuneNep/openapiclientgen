//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	public class AzureFirewall
	{
	}
	
	/// <summary>
	/// Properties of an application rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallApplicationRule
	{
		
		/// <summary>
		/// Description of the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// List of FQDN Tags for this rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fqdnTags")]
		public string[] FqdnTags { get; set; }
		
		/// <summary>
		/// Name of the application rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Array of ApplicationRuleProtocols.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocols")]
		public AzureFirewallApplicationRuleProtocol[] Protocols { get; set; }
		
		/// <summary>
		/// List of source IP addresses for this rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceAddresses")]
		public string[] SourceAddresses { get; set; }
		
		/// <summary>
		/// List of FQDNs for this rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetFqdns")]
		public string[] TargetFqdns { get; set; }
	}
	
	/// <summary>
	/// Properties of the application rule protocol.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallApplicationRuleProtocol
	{
		
		/// <summary>
		/// Port number for the protocol, cannot be greater than 64000. This field is optional.
		/// Minimum: 0
		/// Maximum: 64000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		[System.ComponentModel.DataAnnotations.Range(0, 64000)]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// The protocol type of a Application Rule resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocolType")]
		public System.Nullable<AzureFirewallApplicationRuleProtocolProtocolType> ProtocolType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallApplicationRuleProtocolProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Http = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Https = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mssql = 2,
	}
	
	public class AzureFirewallApplicationRuleCollection
	{
	}
	
	/// <summary>
	/// Properties of the application rule collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallApplicationRuleCollectionPropertiesFormat
	{
		
		/// <summary>
		/// Properties of the AzureFirewallRCAction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public AzureFirewallRCAction Action { get; set; }
		
		/// <summary>
		/// Priority of the application rule collection resource.
		/// Minimum: 100
		/// Maximum: 65000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		[System.ComponentModel.DataAnnotations.Range(100, 65000)]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// The current provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<AzureFirewallApplicationRuleCollectionPropertiesFormatProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Collection of rules used by a application rule collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public AzureFirewallApplicationRule[] Rules { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallApplicationRuleCollectionPropertiesFormatProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// The protocol type of a Application Rule resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallApplicationRuleProtocolType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Http = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Https = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mssql = 2,
	}
	
	public class AzureFirewallIPConfiguration
	{
	}
	
	/// <summary>
	/// Properties of IP configuration of an Azure Firewall.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallIPConfigurationPropertiesFormat
	{
		
		/// <summary>
		/// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateIPAddress")]
		public string PrivateIPAddress { get; set; }
		
		/// <summary>
		/// The current provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public AzureFirewallApplicationRuleCollectionPropertiesFormatProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// Reference to another subresource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicIPAddress")]
		public object PublicIPAddress { get; set; }
		
		/// <summary>
		/// Reference to another subresource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnet")]
		public object Subnet { get; set; }
	}
	
	/// <summary>
	/// Response for ListAzureFirewalls API service call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallListResult
	{
		
		/// <summary>
		/// URL to get the next set of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Azure Firewalls in a resource group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AzureFirewall[] Value { get; set; }
	}
	
	/// <summary>
	/// AzureFirewall NAT Rule Collection Action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallNatRCAction
	{
		
		/// <summary>
		/// The action type of a NAT rule collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AzureFirewallNatRCActionType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallNatRCActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Snat = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dnat = 1,
	}
	
	/// <summary>
	/// Properties of a NAT rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallNatRule
	{
		
		/// <summary>
		/// Description of the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationAddresses")]
		public string[] DestinationAddresses { get; set; }
		
		/// <summary>
		/// List of destination ports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPorts")]
		public string[] DestinationPorts { get; set; }
		
		/// <summary>
		/// Name of the NAT rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocols")]
		public AzureFirewallNetworkRuleProtocol[] Protocols { get; set; }
		
		/// <summary>
		/// List of source IP addresses for this rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceAddresses")]
		public string[] SourceAddresses { get; set; }
		
		/// <summary>
		/// The translated address for this NAT rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="translatedAddress")]
		public string TranslatedAddress { get; set; }
		
		/// <summary>
		/// The translated port for this NAT rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="translatedPort")]
		public string TranslatedPort { get; set; }
	}
	
	/// <summary>
	/// The protocol of a Network Rule resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallNetworkRuleProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UDP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Any = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICMP = 3,
	}
	
	public class AzureFirewallNatRuleCollection
	{
	}
	
	/// <summary>
	/// Properties of the NAT rule collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallNatRuleCollectionProperties
	{
		
		/// <summary>
		/// AzureFirewall NAT Rule Collection Action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public AzureFirewallNatRCAction Action { get; set; }
		
		/// <summary>
		/// Priority of the NAT rule collection resource.
		/// Minimum: 100
		/// Maximum: 65000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		[System.ComponentModel.DataAnnotations.Range(100, 65000)]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// The current provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public AzureFirewallApplicationRuleCollectionPropertiesFormatProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// Collection of rules used by a NAT rule collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public AzureFirewallNatRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// Properties of the network rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallNetworkRule
	{
		
		/// <summary>
		/// Description of the rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// List of destination IP addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationAddresses")]
		public string[] DestinationAddresses { get; set; }
		
		/// <summary>
		/// List of destination ports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPorts")]
		public string[] DestinationPorts { get; set; }
		
		/// <summary>
		/// Name of the network rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Array of AzureFirewallNetworkRuleProtocols.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocols")]
		public AzureFirewallNetworkRuleProtocol[] Protocols { get; set; }
		
		/// <summary>
		/// List of source IP addresses for this rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceAddresses")]
		public string[] SourceAddresses { get; set; }
	}
	
	public class AzureFirewallNetworkRuleCollection
	{
	}
	
	/// <summary>
	/// Properties of the network rule collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallNetworkRuleCollectionPropertiesFormat
	{
		
		/// <summary>
		/// Properties of the AzureFirewallRCAction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public AzureFirewallRCAction Action { get; set; }
		
		/// <summary>
		/// Priority of the network rule collection resource.
		/// Minimum: 100
		/// Maximum: 65000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		[System.ComponentModel.DataAnnotations.Range(100, 65000)]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// The current provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public AzureFirewallApplicationRuleCollectionPropertiesFormatProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// Collection of rules used by a network rule collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public AzureFirewallNetworkRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// Properties of the Azure Firewall.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallPropertiesFormat
	{
		
		/// <summary>
		/// Collection of application rule collections used by Azure Firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applicationRuleCollections")]
		public AzureFirewallApplicationRuleCollection[] ApplicationRuleCollections { get; set; }
		
		/// <summary>
		/// Reference to another subresource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firewallPolicy")]
		public object FirewallPolicy { get; set; }
		
		/// <summary>
		/// IP addresses associated with azure firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hubIpAddresses")]
		public HubIPAddresses HubIpAddresses { get; set; }
		
		/// <summary>
		/// IP configuration of the Azure Firewall resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipConfigurations")]
		public AzureFirewallIPConfiguration[] IpConfigurations { get; set; }
		
		/// <summary>
		/// Collection of NAT rule collections used by Azure Firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="natRuleCollections")]
		public AzureFirewallNatRuleCollection[] NatRuleCollections { get; set; }
		
		/// <summary>
		/// Collection of network rule collections used by Azure Firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkRuleCollections")]
		public AzureFirewallNetworkRuleCollection[] NetworkRuleCollections { get; set; }
		
		/// <summary>
		/// The current provisioning state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public AzureFirewallApplicationRuleCollectionPropertiesFormatProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// SKU of an Azure Firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public AzureFirewallSku Sku { get; set; }
		
		/// <summary>
		/// The operation mode for Threat Intel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="threatIntelMode")]
		public System.Nullable<AzureFirewallPropertiesFormatThreatIntelMode> ThreatIntelMode { get; set; }
		
		/// <summary>
		/// Reference to another subresource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualHub")]
		public object VirtualHub { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallPropertiesFormatThreatIntelMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Alert = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deny = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 2,
	}
	
	/// <summary>
	/// Public IP Address associated with azure firewall.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallPublicIPAddress
	{
		
		/// <summary>
		/// Public IP Address value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
	}
	
	/// <summary>
	/// Properties of the AzureFirewallRCAction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallRCAction
	{
		
		/// <summary>
		/// The action type of a rule collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AzureFirewallRCActionType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallRCActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Allow = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deny = 1,
	}
	
	/// <summary>
	/// SKU of an Azure Firewall.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFirewallSku
	{
		
		/// <summary>
		/// Name of an Azure Firewall SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public System.Nullable<AzureFirewallSkuName> Name { get; set; }
		
		/// <summary>
		/// Tier of an Azure Firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public System.Nullable<AzureFirewallSkuTier> Tier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallSkuName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZFW_VNet = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZFW_Hub = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallSkuTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard = 0,
	}
	
	/// <summary>
	/// The operation mode for Threat Intel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AzureFirewallThreatIntelMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Alert = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deny = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 2,
	}
	
	/// <summary>
	/// IP addresses associated with azure firewall.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HubIPAddresses
	{
		
		/// <summary>
		/// Private IP Address associated with azure firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateIPAddress")]
		public string PrivateIPAddress { get; set; }
		
		/// <summary>
		/// List of Public IP addresses associated with azure firewall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicIPAddresses")]
		public AzureFirewallPublicIPAddress[] PublicIPAddresses { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Gets all the Azure Firewalls in a subscription.
		/// AzureFirewalls_ListAll subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <returns>Success. The operation returns a list of AzureFirewall resources.</returns>
		public async Task<AzureFirewallListResult> AzureFirewalls_ListAllAsync(string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Network/azureFirewalls?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AzureFirewallListResult>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all Azure Firewalls in a resource group.
		/// AzureFirewalls_List subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group.</param>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <returns>Success. The operation returns a list of AzureFirewall resources.</returns>
		public async Task<AzureFirewallListResult> AzureFirewalls_ListAsync(string resourceGroupName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Network/azureFirewalls&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AzureFirewallListResult>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets the specified Azure Firewall.
		/// AzureFirewalls_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group.</param>
		/// <param name="azureFirewallName">The name of the Azure Firewall.</param>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <returns>Request successful. The operation returns an AzureFirewall resource.</returns>
		public async Task<AzureFirewall> AzureFirewalls_GetAsync(string resourceGroupName, string azureFirewallName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Network/azureFirewalls/"+ (azureFirewallName==null? "" : System.Uri.EscapeDataString(azureFirewallName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AzureFirewall>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates or updates the specified Azure Firewall.
		/// AzureFirewalls_CreateOrUpdate subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group.</param>
		/// <param name="azureFirewallName">The name of the Azure Firewall.</param>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="requestBody">Parameters supplied to the create or update Azure Firewall operation.</param>
		/// <returns>Update successful. The operation returns the resulting AzureFirewall resource.</returns>
		public async Task<AzureFirewall> AzureFirewalls_CreateOrUpdateAsync(string resourceGroupName, string azureFirewallName, string api_version, string subscriptionId, AzureFirewall requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Network/azureFirewalls/"+ (azureFirewallName==null? "" : System.Uri.EscapeDataString(azureFirewallName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AzureFirewall>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the specified Azure Firewall.
		/// AzureFirewalls_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group.</param>
		/// <param name="azureFirewallName">The name of the Azure Firewall.</param>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <returns>Delete successful.</returns>
		public async Task AzureFirewalls_DeleteAsync(string resourceGroupName, string azureFirewallName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Network/azureFirewalls/"+ (azureFirewallName==null? "" : System.Uri.EscapeDataString(azureFirewallName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates tags for an Azure Firewall resource.
		/// AzureFirewalls_UpdateTags subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group.</param>
		/// <param name="azureFirewallName">The name of the Azure Firewall.</param>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="requestBody">Parameters supplied to the create or update Azure Firewall operation.</param>
		/// <returns>Update successful. The operation returns the resulting AzureFirewall resource.</returns>
		public async Task<AzureFirewall> AzureFirewalls_UpdateTagsAsync(string resourceGroupName, string azureFirewallName, string api_version, string subscriptionId, AzureFirewall requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Network/azureFirewalls/"+ (azureFirewallName==null? "" : System.Uri.EscapeDataString(azureFirewallName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AzureFirewall>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

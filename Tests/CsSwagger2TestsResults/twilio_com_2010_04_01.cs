//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Account
	{
		
		[System.Runtime.Serialization.DataMember(Name="auth_token")]
		public string Auth_token { get; set; }
		
		/// <summary>
		/// The date that this account was created, in GMT in RFC 2822 format
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		/// <summary>
		/// The date that this account was last updated, in GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		/// <summary>
		/// A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// A 34 character string that uniquely identifies this account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The status of this account. Usually active, but can be suspended or closed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public string Subresource_uris { get; set; }
		
		/// <summary>
		/// The type of this account. Either Trial or Full if you've upgraded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Accounts
	{
		
		[System.Runtime.Serialization.DataMember(Name="accounts")]
		public AccountsAccounts1[] AccountsAccounts1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class AccountsAccounts1
	{
		
		/// <summary>
		/// The date that this account was created, in GMT in RFC 2822 format
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		/// <summary>
		/// The date that this account was last updated, in GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		/// <summary>
		/// A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// A 34 character string that uniquely identifies this account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The status of this account. Usually active, but can be suspended or closed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The type of this account. Either Trial or Full if you've upgraded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class AppResource
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_status_callback")]
		public string Sms_status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback")]
		public string Status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback_method")]
		public string Status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_caller_id_lookup")]
		public string Voice_caller_id_lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class AppResources
	{
		
		[System.Runtime.Serialization.DataMember(Name="applications")]
		public AppResourcesApplications[] AppResourcesApplications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class AppResourcesApplications
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_status_callback")]
		public string Sms_status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback")]
		public string Status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback_method")]
		public string Status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_caller_id_lookup")]
		public string Voice_caller_id_lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Application
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_status_callback")]
		public string Sms_status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback")]
		public string Status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback_method")]
		public string Status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_caller_id_lookup")]
		public string Voice_caller_id_lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Applications
	{
		
		[System.Runtime.Serialization.DataMember(Name="applications")]
		public ApplicationsApplications1[] ApplicationsApplications1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class ApplicationsApplications1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_status_callback")]
		public string Sms_status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback")]
		public string Status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback_method")]
		public string Status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_caller_id_lookup")]
		public string Voice_caller_id_lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class AuthApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_company_name")]
		public string Connect_app_company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_description")]
		public string Connect_app_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_friendly_name")]
		public string Connect_app_friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_homepage_url")]
		public string Connect_app_homepage_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_sid")]
		public string Connect_app_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class AuthApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="authorized_connect_apps")]
		public AuthAppsAuthorized_connect_apps[] AuthAppsAuthorized_connect_apps { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class AuthAppsAuthorized_connect_apps
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_company_name")]
		public string Connect_app_company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_description")]
		public string Connect_app_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_friendly_name")]
		public string Connect_app_friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_homepage_url")]
		public string Connect_app_homepage_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connect_app_sid")]
		public string Connect_app_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class AvailablePhoneNumbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="available_phone_numbers")]
		public AvailablePhoneNumbersAvailable_phone_numbers[] AvailablePhoneNumbersAvailable_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class AvailablePhoneNumbersAvailable_phone_numbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public AvailablePhoneNumbersAvailable_phone_numbersCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lata")]
		public string Lata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rate_center")]
		public string Rate_center { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	public class AvailablePhoneNumbersAvailable_phone_numbersCapabilities
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public string Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Call
	{
		
		/// <summary>
		/// The unique id of the Account responsible for creating this call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="answered_by")]
		public string Answered_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="caller_name")]
		public string Caller_name { get; set; }
		
		/// <summary>
		/// GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public string Direction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// Given as GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public string End_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="formatted_from")]
		public string Formatted_from { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="formatted_to")]
		public string Formatted_to { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forwarded_from")]
		public string Forwarded_from { get; set; }
		
		/// <summary>
		/// The phone number, SIP address or Client identifier that made this call. Phone numbers are in E.164 format (e.g. +16175551212).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		/// <summary>
		/// Min length: 34
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_call_sid")]
		[System.ComponentModel.DataAnnotations.Length(34, 34)]
		public string Parent_call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number_sid")]
		public string Phone_number_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		/// <summary>
		/// Min length: 34
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.Length(34, 34)]
		public string Sid { get; set; }
		
		/// <summary>
		/// Given as GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public string Start_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CallStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public CallSubresource_uris Subresource_uris { get; set; }
		
		/// <summary>
		/// Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formated as name@company.com. Client identifiers are formatted client:name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum CallStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		queued = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ringing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in-progress")]
		inMinusprogress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		busy = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-answer")]
		noMinusanswer = 7,
	}
	
	public class CallSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="notifications")]
		public string Notifications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recordings")]
		public string Recordings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class CallInstance
	{
		
		/// <summary>
		/// The unique id of the Account responsible for creating this call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// If this call was initiated with answering machine detection, either human or machine. Empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answered_by")]
		public System.Nullable<CallInstanceAnswered_by> Answered_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		/// <summary>
		/// If this call was an incoming call to a phone number with Caller ID Lookup enabled, the caller's name. Empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caller_name")]
		public string Caller_name { get; set; }
		
		/// <summary>
		/// GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		/// <summary>
		/// A string describing the direction of the call. inbound for inbound calls, outbound-api for calls initiated via the REST API or outbound-dial for calls initiated by a <Dial> verb.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<CallInstanceDirection> Direction { get; set; }
		
		/// <summary>
		/// The length of the call in seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// Given as GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public string End_time { get; set; }
		
		/// <summary>
		/// If this call was an incoming call forwarded from another number, the forwarding phone number (depends on carrier supporting forwarding). Empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwarded_from")]
		public string Forwarded_from { get; set; }
		
		/// <summary>
		/// The phone number, SIP address or Client identifier that made this call. Phone numbers are in E.164 format (e.g. +16175551212).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		/// <summary>
		/// Min length: 34
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_call_sid")]
		[System.ComponentModel.DataAnnotations.Length(34, 34)]
		public string Parent_call_sid { get; set; }
		
		/// <summary>
		/// If the call was inbound, this is the Sid of the IncomingPhoneNumber that received the call. If the call was outbound, it is the Sid of the OutgoingCallerId from which the call was placed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number_sid")]
		public string Phone_number_sid { get; set; }
		
		/// <summary>
		/// The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		/// <summary>
		/// The currency in which Price is measured, in ISO 4127 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		/// <summary>
		/// Min length: 34
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.Length(34, 34)]
		public string Sid { get; set; }
		
		/// <summary>
		/// Given as GMT in RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public string Start_time { get; set; }
		
		/// <summary>
		/// A string representing the status of the call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CallInstanceStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public string Subresource_uris { get; set; }
		
		/// <summary>
		/// Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formated as name@company.com. Client identifiers are formatted client:name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		/// <summary>
		/// The URI for this resource, relative to https://api.twilio.com
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum CallInstanceAnswered_by
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="null")]
		_null = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		human = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		machine = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum CallInstanceDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inbound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="outbound-api")]
		outboundMinusapi = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="outbound-dial")]
		outboundMinusdial = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum CallInstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		queued = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ringing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in-progress")]
		inMinusprogress = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		failed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		busy = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-answer")]
		noMinusanswer = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Calls
	{
		
		[System.Runtime.Serialization.DataMember(Name="calls")]
		public CallsCalls1[] CallsCalls1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CallsCalls1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="answered_by")]
		public string Answered_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="caller_name")]
		public string Caller_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public string Direction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public string End_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forwarded_from")]
		public string Forwarded_from { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from_formatted")]
		public string From_formatted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_call_sid")]
		public string Parent_call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number_sid")]
		public string Phone_number_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public string Start_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public CallsCalls1Subresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to_formatted")]
		public string To_formatted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CallsCalls1Subresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="notifications")]
		public string Notifications { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recordings")]
		public string Recordings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Conference
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ConferenceStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public ConferenceSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum ConferenceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		init = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in-progress")]
		inMinusprogress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 2,
	}
	
	public class ConferenceSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="participants")]
		public string Participants { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Conferences
	{
		
		[System.Runtime.Serialization.DataMember(Name="conferences")]
		public ConferencesConferences1[] ConferencesConferences1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class ConferencesConferences1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public ConferencesConferences1Subresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class ConferencesConferences1Subresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="participants")]
		public string Participants { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class ConnectApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="authorize_redirect_url")]
		public string Authorize_redirect_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deauthorize_callback_method")]
		public string Deauthorize_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deauthorize_callback_url")]
		public string Deauthorize_callback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="homepage_url")]
		public string Homepage_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class ConnectApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="connect_apps")]
		public ConnectAppsConnect_apps[] ConnectAppsConnect_apps { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class ConnectAppsConnect_apps
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="authorize_redirect_url")]
		public string Authorize_redirect_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deauthorize_callback_method")]
		public string Deauthorize_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deauthorize_callback_url")]
		public string Deauthorize_callback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="homepage_url")]
		public string Homepage_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Credential
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class CredentialList
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public CredentialListSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CredentialListSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public string Credentials { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class CredentialListMapping
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public CredentialListMappingSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CredentialListMappingSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public string Credentials { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class CredentialListMappings
	{
		
		[System.Runtime.Serialization.DataMember(Name="credential_list_mappings")]
		public string[] Credential_list_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class CredentialLists
	{
		
		[System.Runtime.Serialization.DataMember(Name="credential_lists")]
		public CredentialListsCredential_lists[] CredentialListsCredential_lists { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CredentialListsCredential_lists
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public CredentialListsCredential_listsSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CredentialListsCredential_listsSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public string Credentials { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Credentials
	{
		
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public CredentialsCredentials1[] CredentialsCredentials1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class CredentialsCredentials1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="credential_list_sid")]
		public string Credential_list_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Domain
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_type")]
		public string Auth_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="domain_name")]
		public string Domain_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public DomainSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_status_callback_method")]
		public string Voice_status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_status_callback_url")]
		public string Voice_status_callback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	public class DomainSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="credential_list_mappings")]
		public string Credential_list_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ip_access_control_list_mappings")]
		public string Ip_access_control_list_mappings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Domains
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sip_domains")]
		public DomainsSip_domains[] DomainsSip_domains { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class DomainsSip_domains
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="auth_type")]
		public string Auth_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="domain_name")]
		public string Domain_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public DomainsSip_domainsSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_status_callback_method")]
		public string Voice_status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_status_callback_url")]
		public string Voice_status_callback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	public class DomainsSip_domainsSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="credential_list_mappings")]
		public string Credential_list_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ip_access_control_list_mappings")]
		public string Ip_access_control_list_mappings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IncomingCall
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public IncomingCallCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_application_sid")]
		public string Sms_application_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback")]
		public string Status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback_method")]
		public string Status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_application_sid")]
		public string Voice_application_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_caller_id_lookup")]
		public string Voice_caller_id_lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	public class IncomingCallCapabilities
	{
		
		[System.Runtime.Serialization.DataMember(Name="sms")]
		public string Sms { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public string Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IncomingCalls
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="incoming_phone_numbers")]
		public IncomingCallsIncoming_phone_numbers[] IncomingCallsIncoming_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class IncomingCallsIncoming_phone_numbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public IncomingCallsIncoming_phone_numbersCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_application_sid")]
		public string Sms_application_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback")]
		public string Status_callback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status_callback_method")]
		public string Status_callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_application_sid")]
		public string Voice_application_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_caller_id_lookup")]
		public string Voice_caller_id_lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_method")]
		public string Voice_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_fallback_url")]
		public string Voice_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_method")]
		public string Voice_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice_url")]
		public string Voice_url { get; set; }
	}
	
	public class IncomingCallsIncoming_phone_numbersCapabilities
	{
		
		[System.Runtime.Serialization.DataMember(Name="sms")]
		public System.Nullable<System.Boolean> Sms { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public System.Nullable<System.Boolean> Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IpAccessControlList
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public IpAccessControlListSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class IpAccessControlListSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public string Addresses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IpAccessControlListMapping
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public IpAccessControlListMappingSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class IpAccessControlListMappingSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public string Addresses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IpAccessControlListMappings
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public IpAccessControlListMappingsSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class IpAccessControlListMappingsSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public string Addresses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IpAddress
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class IpAddresses
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ip_addresses")]
		public IpAddressesIp_addresses[] IpAddressesIp_addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class IpAddressesIp_addresses
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Media
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content-type")]
		public string Content_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_sid")]
		public string Parent_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class MediaList
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="media_list")]
		public MediaListMedia_list[] MediaListMedia_list { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class MediaListMedia_list
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_sid")]
		public string Parent_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Member
	{
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_enqueued")]
		public string Date_enqueued { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="position")]
		public System.Nullable<System.Int32> Position { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Members
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="queue_members")]
		public MembersQueue_members[] MembersQueue_members { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class MembersQueue_members
	{
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_enqueued")]
		public string Date_enqueued { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="position")]
		public System.Nullable<System.Int32> Position { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Message
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="body")]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_sent")]
		public string Date_sent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public string Direction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_media")]
		public string Num_media { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_segments")]
		public string Num_segments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Messages
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public MessagesMessages1[] MessagesMessages1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class MessagesMessages1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="body")]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_sent")]
		public string Date_sent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public string Direction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_media")]
		public string Num_media { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_segments")]
		public string Num_segments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public string To { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class MobilePhoneNumbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="available_phone_numbers")]
		public MobilePhoneNumbersAvailable_phone_numbers[] MobilePhoneNumbersAvailable_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class MobilePhoneNumbersAvailable_phone_numbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public MobilePhoneNumbersAvailable_phone_numbersCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lata")]
		public string Lata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rate_center")]
		public string Rate_center { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	public class MobilePhoneNumbersAvailable_phone_numbersCapabilities
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public string Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Notification
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="log")]
		public string Log { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message_date")]
		public string Message_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message_text")]
		public string Message_text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="more_info")]
		public string More_info { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="request_method")]
		public string Request_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="request_url")]
		public string Request_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="request_variables")]
		public string Request_variables { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="response_body")]
		public string Response_body { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="response_headers")]
		public string Response_headers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Notifications
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notifications")]
		public NotificationsNotifications1[] NotificationsNotifications1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class NotificationsNotifications1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="log")]
		public string Log { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message_date")]
		public string Message_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message_text")]
		public string Message_text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="more_info")]
		public string More_info { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="request_method")]
		public string Request_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="request_url")]
		public string Request_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="request_variables")]
		public string Request_variables { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="response_body")]
		public string Response_body { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="response_headers")]
		public string Response_headers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class OutCaller
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="validation_code")]
		public System.Nullable<System.Int32> Validation_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class OutCallerId
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="validation_code")]
		public System.Nullable<System.Int32> Validation_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class OutCallerIds
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="outgoing_caller_ids")]
		public OutCallerIdsOutgoing_caller_ids Outgoing_caller_ids { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class OutCallerIdsOutgoing_caller_ids
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class OutgoingCallerId
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Participant
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="conference_sid")]
		public string Conference_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end_conference_on_exit")]
		public System.Nullable<System.Boolean> End_conference_on_exit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="muted")]
		public System.Nullable<System.Boolean> Muted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_conference_on_enter")]
		public System.Nullable<System.Boolean> Start_conference_on_enter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Participants
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="participants")]
		public ParticipantsParticipants1[] ParticipantsParticipants1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class ParticipantsParticipants1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="conference_sid")]
		public string Conference_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end_conference_on_exit")]
		public System.Nullable<System.Boolean> End_conference_on_exit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="muted")]
		public System.Nullable<System.Boolean> Muted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_conference_on_enter")]
		public System.Nullable<System.Boolean> Start_conference_on_enter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class PhoneLocalNumbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="available_phone_numbers")]
		public PhoneLocalNumbersAvailable_phone_numbers[] PhoneLocalNumbersAvailable_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class PhoneLocalNumbersAvailable_phone_numbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public PhoneLocalNumbersAvailable_phone_numbersCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lata")]
		public string Lata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rate_center")]
		public string Rate_center { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	public class PhoneLocalNumbersAvailable_phone_numbersCapabilities
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public string Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class PhoneMobileNumbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="available_phone_numbers")]
		public PhoneMobileNumbersAvailable_phone_numbers[] PhoneMobileNumbersAvailable_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class PhoneMobileNumbersAvailable_phone_numbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public PhoneMobileNumbersAvailable_phone_numbersCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lata")]
		public string Lata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rate_center")]
		public string Rate_center { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	public class PhoneMobileNumbersAvailable_phone_numbersCapabilities
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public string Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class PhoneNumbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="available_phone_numbers")]
		public PhoneNumbersAvailable_phone_numbers[] PhoneNumbersAvailable_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class PhoneNumbersAvailable_phone_numbers
	{
		
		/// <summary>
		/// A nicely-formatted version of the phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// The ISO country code of this phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		/// <summary>
		/// The LATA of this phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lata")]
		public string Lata { get; set; }
		
		/// <summary>
		/// The latitude coordinate of this phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		/// <summary>
		/// The longitude coordinate of this phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		/// <summary>
		/// The phone number, in E.164 (i.e. '+1') format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// The postal (zip) code of this phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The rate center of this phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate_center")]
		public string Rate_center { get; set; }
		
		/// <summary>
		/// The two-letter state or province abbreviation of this phone number.
		/// Min length: 2
		/// Max length: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		[System.ComponentModel.DataAnnotations.Length(2, 2)]
		public string Region { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class PhoneTollFreeNumbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="available_phone_numbers")]
		public PhoneTollFreeNumbersAvailable_phone_numbers[] PhoneTollFreeNumbersAvailable_phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class PhoneTollFreeNumbersAvailable_phone_numbers
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public PhoneTollFreeNumbersAvailable_phone_numbersCapabilities Capabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iso_country")]
		public string Iso_country { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	public class PhoneTollFreeNumbersAvailable_phone_numbersCapabilities
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="voice")]
		public string Voice { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Queue
	{
		
		[System.Runtime.Serialization.DataMember(Name="average_wait_time")]
		public System.Nullable<System.Int32> Average_wait_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_size")]
		public System.Nullable<System.Int32> Current_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// Maximum: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_size")]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 1000)]
		public System.Nullable<System.Int32> Max_size { get; set; }
		
		/// <summary>
		/// Min length: 34
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.Length(34, 34)]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Queues
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="queues")]
		public QueuesQueues1[] QueuesQueues1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class QueuesQueues1
	{
		
		[System.Runtime.Serialization.DataMember(Name="average_wait_time")]
		public System.Nullable<System.Int32> Average_wait_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_size")]
		public System.Nullable<System.Int32> Current_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// Maximum: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_size")]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 1000)]
		public System.Nullable<System.Int32> Max_size { get; set; }
		
		/// <summary>
		/// Min length: 34
		/// Max length: 34
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.Length(34, 34)]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Recordings
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recordings")]
		public RecordingsRecordings1[] RecordingsRecordings1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class RecordingsRecordings1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="call_sid")]
		public string Call_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class ShortCode
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="short_code")]
		public string Short_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class ShortCodes
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="short_codes")]
		public ShortCodesShort_codes[] ShortCodesShort_codes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class ShortCodesShort_codes
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="short_code")]
		public string Short_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_method")]
		public string Sms_fallback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_fallback_url")]
		public string Sms_fallback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_method")]
		public string Sms_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sms_url")]
		public string Sms_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Transcription
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recording_sid")]
		public string Recording_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transcription_text")]
		public string Transcription_text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Transcriptions
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transcriptions")]
		public TranscriptionsTranscriptions1[] TranscriptionsTranscriptions1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class TranscriptionsTranscriptions1
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="api_version")]
		public string Api_version { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recording_sid")]
		public string Recording_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transcription_text")]
		public string Transcription_text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class UsageRecords
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usage_records")]
		public UsageRecordsUsage_records Usage_records { get; set; }
	}
	
	public class UsageRecordsUsage_records
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count_unit")]
		public string Count_unit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public string End_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="price_unit")]
		public string Price_unit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public string Start_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public string Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usage")]
		public string Usage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usage_unit")]
		public string Usage_unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class UsageTrigger
	{
		
		/// <summary>
		/// The account this trigger monitors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The HTTP method Twilio will use when making a request to the CallbackUrl. GET or POST.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callback_method")]
		public System.Nullable<UsageTriggerCallback_method> Callback_method { get; set; }
		
		/// <summary>
		/// Twilio will make a request to this url when the trigger fires.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callback_url")]
		public string Callback_url { get; set; }
		
		/// <summary>
		/// The current value of the field the trigger is watching.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_value")]
		public string Current_value { get; set; }
		
		/// <summary>
		/// The date the trigger was created, given as GMT RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		/// <summary>
		/// The date the trigger was last fired, given as GMT RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_fired")]
		public string Date_fired { get; set; }
		
		/// <summary>
		/// The date the trigger was last updated, given as GMT RFC 2822 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		/// <summary>
		/// A user-specified, human-readable name for the trigger.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// How this trigger recurs. Empty for non-recurring triggers. One of daily, monthly, or yearly for recurring triggers. A trigger will only fire once during each recurring period. Recurring periods are in GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recurring")]
		public string Recurring { get; set; }
		
		/// <summary>
		/// The trigger's unique Sid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The field in the UsageRecord that fires the trigger. One of count, usage, or price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_by")]
		public System.Nullable<UsageTriggerTrigger_by> Trigger_by { get; set; }
		
		/// <summary>
		/// The value at which the trigger will fire. Must be a positive numeric value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_value")]
		public string Trigger_value { get; set; }
		
		/// <summary>
		/// The URI for this resource, relative to https://api.twilio.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// The usage category the trigger watches. One of the supported usage categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_category")]
		public string Usage_category { get; set; }
		
		/// <summary>
		/// The URI of the UsageRecord this trigger is watching, relative to https://api.twilio.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_record_uri")]
		public string Usage_record_uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum UsageTriggerCallback_method
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POST = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum UsageTriggerTrigger_by
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		count = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		usage = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class UsageTriggers
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Int32> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Int32> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usage_triggers")]
		public UsageTriggersUsage_triggers[] UsageTriggersUsage_triggers { get; set; }
	}
	
	public class UsageTriggersUsage_triggers
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="callback_method")]
		public System.Nullable<UsageTriggersUsage_triggersCallback_method> Callback_method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="callback_url")]
		public string Callback_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_value")]
		public string Current_value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_fired")]
		public string Date_fired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recurring")]
		public string Recurring { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trigger_by")]
		public System.Nullable<UsageTriggersUsage_triggersTrigger_by> Trigger_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trigger_value")]
		public string Trigger_value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usage_category")]
		public string Usage_category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usage_record_uri")]
		public string Usage_record_uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum UsageTriggersUsage_triggersCallback_method
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POST = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum UsageTriggersUsage_triggersTrigger_by
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		count = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		usage = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class UserLists
	{
		
		[System.Runtime.Serialization.DataMember(Name="credential_list_mappings")]
		public UserListsCredential_list_mappings[] UserListsCredential_list_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Double> End { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_page_uri")]
		public string First_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_page_uri")]
		public string Last_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next_page_uri")]
		public string Next_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_pages")]
		public System.Nullable<System.Double> Num_pages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous_page_uri")]
		public string Previous_page_uri { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Double> Start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Double> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class UserListsCredential_list_mappings
	{
		
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		public string Account_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_updated")]
		public string Date_updated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sid")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subresource_uris")]
		public UserListsCredential_list_mappingsSubresource_uris Subresource_uris { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	public class UserListsCredential_list_mappingsSubresource_uris
	{
		
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public string Credentials { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get application instance resource.
		/// Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionGet Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string ApplicationSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Applications/"+ (ApplicationSid==null? "" : System.Uri.EscapeDataString(ApplicationSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tries to update the application's properties, and returns the updated
		/// resource representation if successful. The returned response is identical
		/// to that returned above when making a GET request.
		/// 
		/// Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionPost Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string ApplicationSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Applications/"+ (ApplicationSid==null? "" : System.Uri.EscapeDataString(ApplicationSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete this application.
		/// Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Applications/{ApplicationSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string ApplicationSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Applications/"+ (ApplicationSid==null? "" : System.Uri.EscapeDataString(ApplicationSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of Application resource representations, each representing
		/// an application within your account. The list includes paging information.
		/// 
		/// Accounts_AccountSidApplications_mediaTypeExtensionGet Accounts/{AccountSid}/Applications{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidApplications_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidApplications_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Applications"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new application within your account.
		/// Accounts_AccountSidApplications_mediaTypeExtensionPost Accounts/{AccountSid}/Applications{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidApplications_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidApplications_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Applications"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get the properties of the authorized application.
		/// Accounts_AccountSidAuthorizedConnectApps_ConnectAppSid_mediaTypeExtensionGet Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidAuthorizedConnectApps_ConnectAppSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidAuthorizedConnectApps_ConnectAppSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string ConnectAppSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/AuthorizedConnectApps/"+ (ConnectAppSid==null? "" : System.Uri.EscapeDataString(ConnectAppSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of Connect App resource representations, each representing a
		/// Connect App you've authorized to access your account. The list includes
		/// paging information.
		/// 
		/// Accounts_AccountSidAuthorizedConnectApps_mediaTypeExtensionGet Accounts/{AccountSid}/AuthorizedConnectApps{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidAuthorizedConnectApps_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidAuthorizedConnectApps_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/AuthorizedConnectApps"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of local AvailablePhoneNumber resource representations
		/// that match the specified filters, each representing a phone number tha
		/// is currently available for provisioning within your account.
		/// 
		/// Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeLocal_mediaTypeExtensionGet Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local{mediaTypeExtension}
		/// </summary>
		/// <param name="IsoCountryCode">ISO 3166-1 alpha-2.
		/// Min length: 2
		/// Max length: 2
		// </param>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeLocal_mediaTypeExtensionGetAsync(string AccountSid, string IsoCountryCode, Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeLocal_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/AvailablePhoneNumbers/"+ (IsoCountryCode==null? "" : System.Uri.EscapeDataString(IsoCountryCode))+"/Local"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of mobile AvailablePhoneNumber resource representations that match the specified filters, each representing a phone number that is currently available for provisioning within your account.
		/// Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeMobile_mediaTypeExtensionGet Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Mobile{mediaTypeExtension}
		/// </summary>
		/// <param name="IsoCountryCode">ISO 3166-1 alpha-2.
		/// Min length: 2
		/// Max length: 2
		// </param>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeMobile_mediaTypeExtensionGetAsync(string AccountSid, string IsoCountryCode, Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeMobile_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/AvailablePhoneNumbers/"+ (IsoCountryCode==null? "" : System.Uri.EscapeDataString(IsoCountryCode))+"/Mobile"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of toll-free AvailablePhoneNumber elements that match the
		/// specified filters, each representing a phone number that is currently
		/// available for provisioning within your account. To provision an available
		/// phone number, POST the number to the IncomingPhoneNumbers resource.
		/// 
		/// Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeTollFree_mediaTypeExtensionGet Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree{mediaTypeExtension}
		/// </summary>
		/// <param name="IsoCountryCode">ISO 3166-1 alpha-2.
		/// Min length: 2
		/// Max length: 2
		// </param>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeTollFree_mediaTypeExtensionGetAsync(string AccountSid, string IsoCountryCode, Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeTollFree_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/AvailablePhoneNumbers/"+ (IsoCountryCode==null? "" : System.Uri.EscapeDataString(IsoCountryCode))+"/TollFree"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of all AvailablePhoneNumber subresources for your account by ISO Country. For full information about our phone number support, see our Phone Number CSV (http://www.twilio.com/resources/rates/international-phone-number-rates.csv).
		/// Accounts_AccountSidAvailablePhoneNumbers_mediaTypeExtensionGet Accounts/{AccountSid}/AvailablePhoneNumbers{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidAvailablePhoneNumbers_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidAvailablePhoneNumbers_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/AvailablePhoneNumbers"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of notifications generated for an account. The list includes
		/// paging information.
		/// 
		/// Accounts_AccountSidCalls_CallSidNotifications_mediaTypeExtensionGet Accounts/{AccountSid}/Calls/{CallSid}/Notifications{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidCalls_CallSidNotifications_mediaTypeExtensionGetAsync(string AccountSid, string CallSid, Accounts_AccountSidCalls_CallSidNotifications_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Calls/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+"/Notifications"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of Recording resource representations, each representing a
		/// recording generated during the course of a phone call.
		/// 
		/// Accounts_AccountSidCalls_CallSidRecordings_mediaTypeExtensionGet Accounts/{AccountSid}/Calls/{CallSid}/Recordings{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidCalls_CallSidRecordings_mediaTypeExtensionGetAsync(string AccountSid, string CallSid, Accounts_AccountSidCalls_CallSidRecordings_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Calls/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+"/Recordings"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the single Call resource identified by {CallSid}.
		/// Accounts_AccountSidCalls_CallSid_mediaTypeExtensionGet Accounts/{AccountSid}/Calls/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidCalls_CallSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidCalls_CallSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Calls/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Modify a phone call.
		/// Accounts_AccountSidCalls_CallSid_mediaTypeExtensionPost Accounts/{AccountSid}/Calls/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidCalls_CallSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidCalls_CallSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Calls/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of phone calls made to and from the account identified by {AccountSid}.
		/// Accounts_AccountSidCalls_mediaTypeExtensionGet Accounts/{AccountSid}/Calls{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidCalls_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidCalls_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Calls"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// To make a call, make an HTTP POST request. Initiate a new phone call.
		/// Accounts_AccountSidCalls_mediaTypeExtensionPost Accounts/{AccountSid}/Calls{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidCalls_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidCalls_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Calls"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a representation of this participant.
		/// Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionGet Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionGetAsync(string AccountSid, string ConferenceSid, Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Conferences/"+ (ConferenceSid==null? "" : System.Uri.EscapeDataString(ConferenceSid))+"/Participants/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the status of a participant.
		/// Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionPost Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionPostAsync(string AccountSid, string ConferenceSid, Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Conferences/"+ (ConferenceSid==null? "" : System.Uri.EscapeDataString(ConferenceSid))+"/Participants/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Kick this participant from the conference.
		/// Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionDeleteAsync(string AccountSid, string ConferenceSid, Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Conferences/"+ (ConferenceSid==null? "" : System.Uri.EscapeDataString(ConferenceSid))+"/Participants/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the list of participants in the conference identified by
		/// {ConferenceSid}.
		/// 
		/// Accounts_AccountSidConferences_ConferenceSidParticipants_mediaTypeExtensionGet Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidConferences_ConferenceSidParticipants_mediaTypeExtensionGetAsync(string AccountSid, string ConferenceSid, Accounts_AccountSidConferences_ConferenceSidParticipants_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Conferences/"+ (ConferenceSid==null? "" : System.Uri.EscapeDataString(ConferenceSid))+"/Participants"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a representation of the conference identified by {ConferenceSid}.
		/// 
		/// Accounts_AccountSidConferences_ConferenceSid_mediaTypeExtensionGet Accounts/{AccountSid}/Conferences/{ConferenceSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidConferences_ConferenceSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidConferences_ConferenceSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string ConferenceSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Conferences/"+ (ConferenceSid==null? "" : System.Uri.EscapeDataString(ConferenceSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of conferences within an account. The list includes paging
		/// information.
		/// 
		/// Accounts_AccountSidConferences_mediaTypeExtensionGet Accounts/{AccountSid}/Conferences{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidConferences_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidConferences_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Conferences"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get the properties of a Connect App.
		/// Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionGet Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string ConnectAppSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/ConnectApps/"+ (ConnectAppSid==null? "" : System.Uri.EscapeDataString(ConnectAppSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tries to update the Connect App's properties, and returns the updated
		/// resource representation if successful. The returned response is identical
		/// to that returned above when making a GET request.
		/// 
		/// Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionPost Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string ConnectAppSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/ConnectApps/"+ (ConnectAppSid==null? "" : System.Uri.EscapeDataString(ConnectAppSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of Connect App resource representations, each representing
		/// a Connect App in your account. The list includes paging information.
		/// 
		/// Accounts_AccountSidConnectApps_mediaTypeExtensionGet Accounts/{AccountSid}/ConnectApps{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidConnectApps_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidConnectApps_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/ConnectApps"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of local <IncomingPhoneNumber> elements, each representing a local (not toll-free) phone number given to your account, under an <IncomingPhoneNumbers> list element that includes paging information. Works exactly the same as the IncomingPhoneNumber resource, but filters out toll-free numbers.
		/// Accounts_AccountSidIncomingPhoneNumbersLocal_mediaTypeExtensionGet Accounts/{AccountSid}/IncomingPhoneNumbers/Local{mediaTypeExtension}
		/// </summary>
		/// <returns>OK</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbersLocal_mediaTypeExtensionGetAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/Local"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds a new phone number to your account. If a phone number is found for your request, Twilio will add it to your account and bill you for the first month's cost of the phone number.
		/// Accounts_AccountSidIncomingPhoneNumbersLocal_mediaTypeExtensionPost Accounts/{AccountSid}/IncomingPhoneNumbers/Local{mediaTypeExtension}
		/// </summary>
		public async Task Accounts_AccountSidIncomingPhoneNumbersLocal_mediaTypeExtensionPostAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/Local"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of local <IncomingPhoneNumber> elements, each representing a mobile phone number given to your account, under an <IncomingPhoneNumbers> list element that includes paging information. Works exactly the same as the IncomingPhoneNumber resource, but filters out local and toll free numbers.
		/// Accounts_AccountSidIncomingPhoneNumbersMobile_mediaTypeExtensionGet Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile{mediaTypeExtension}
		/// </summary>
		/// <returns>OK</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbersMobile_mediaTypeExtensionGetAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/Mobile"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds a new phone number to your account. If a phone number is found for your request, Twilio will add it to your account and bill you for the first month's cost of the phone number.
		/// Accounts_AccountSidIncomingPhoneNumbersMobile_mediaTypeExtensionPost Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile{mediaTypeExtension}
		/// </summary>
		public async Task Accounts_AccountSidIncomingPhoneNumbersMobile_mediaTypeExtensionPostAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/Mobile"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of local <IncomingPhoneNumber> elements, each representing a toll-free phone number given to your account, under an <IncomingPhoneNumbers> list element that includes paging information. Works exactly the same as the IncomingPhoneNumber resource, but filters out all numbers that aren't toll-free.
		/// Accounts_AccountSidIncomingPhoneNumbersTollFree_mediaTypeExtensionGet Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree{mediaTypeExtension}
		/// </summary>
		/// <returns>OK</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbersTollFree_mediaTypeExtensionGetAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/TollFree"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds a new phone number to your account. If a phone number is found for your request, Twilio will add it to your account and bill you for the first month's cost of the phone number.
		/// Accounts_AccountSidIncomingPhoneNumbersTollFree_mediaTypeExtensionPost Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree{mediaTypeExtension}
		/// </summary>
		public async Task Accounts_AccountSidIncomingPhoneNumbersTollFree_mediaTypeExtensionPostAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/TollFree"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get info about incoming call's phone number.
		/// Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionGet Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string IncomingPhoneNumberSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/"+ (IncomingPhoneNumberSid==null? "" : System.Uri.EscapeDataString(IncomingPhoneNumberSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tries to update the incoming phone number's properties, and returns the
		/// updated resource representation if successful. The returned response is
		/// identical to that returned above when making a GET request.
		/// 
		/// Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPut Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPutAsync(string AccountSid, Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPutMediaTypeExtension mediaTypeExtension, string IncomingPhoneNumberSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/"+ (IncomingPhoneNumberSid==null? "" : System.Uri.EscapeDataString(IncomingPhoneNumberSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tries to update the incoming phone number's properties, and returns the
		/// updated resource representation if successful. The returned response is
		/// identical to that returned above when making a GET request.
		/// 
		/// Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPost Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string IncomingPhoneNumberSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/"+ (IncomingPhoneNumberSid==null? "" : System.Uri.EscapeDataString(IncomingPhoneNumberSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Release this phone number from your account. Twilio will no longer answer
		/// calls to this number, and you will stop being billed the monthly phone
		/// number fee. The phone number will eventually be recycled and potentially
		/// given to another customer, so use with care. If you make a mistake, contac
		/// us. We may be able to give you the number back.
		/// 
		/// Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionDelete Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string IncomingPhoneNumberSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers/"+ (IncomingPhoneNumberSid==null? "" : System.Uri.EscapeDataString(IncomingPhoneNumberSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of IncomingPhoneNumber resource representations, each
		/// representing a phone number given to your account. The list includes paging
		/// information.
		/// 
		/// Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionGet Accounts/{AccountSid}/IncomingPhoneNumbers{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Purchases a new phone number for your account. If a phone number is found
		/// for your request, Twilio will add it to your account and bill you for the
		/// first month's cost of the phone number.
		/// To find an available phone number to POST, use the subresources of the
		/// AvailablePhoneNumbers list resource.
		/// 
		/// Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionPost Accounts/{AccountSid}/IncomingPhoneNumbers{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/IncomingPhoneNumbers"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Without an extension, the media is returned using the mime-type provided when the media was generated.
		/// Accounts_AccountSidMessages_MessageSidMedia_MediaSid_mediaTypeExtensionGet Accounts/{AccountSid}/Messages/{MessageSid}/Media/{MediaSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidMessages_MessageSidMedia_MediaSid_mediaTypeExtensionGetAsync(string AccountSid, string MessageSid, Accounts_AccountSidMessages_MessageSidMedia_MediaSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string MediaSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Messages/"+ (MessageSid==null? "" : System.Uri.EscapeDataString(MessageSid))+"/Media/"+ (MediaSid==null? "" : System.Uri.EscapeDataString(MediaSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of media associated with your message.
		/// Accounts_AccountSidMessages_MessageSidMedia_mediaTypeExtensionGet Accounts/{AccountSid}/Messages/{MessageSid}/Media{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidMessages_MessageSidMedia_mediaTypeExtensionGetAsync(string AccountSid, string MessageSid, Accounts_AccountSidMessages_MessageSidMedia_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Messages/"+ (MessageSid==null? "" : System.Uri.EscapeDataString(MessageSid))+"/Media"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a single message specified by the provided {MessageSid}.
		/// 
		/// Accounts_AccountSidMessages_MessageSid_mediaTypeExtensionGet Accounts/{AccountSid}/Messages/{MessageSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidMessages_MessageSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidMessages_MessageSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string MessageSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Messages/"+ (MessageSid==null? "" : System.Uri.EscapeDataString(MessageSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of messages associated with your account. The list includes paging information.
		/// Accounts_AccountSidMessages_mediaTypeExtensionGet Accounts/{AccountSid}/Messages{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidMessages_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidMessages_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Messages"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a notification entry.
		/// Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionGet Accounts/{AccountSid}/Notifications/{NotificationSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string NotificationSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Notifications/"+ (NotificationSid==null? "" : System.Uri.EscapeDataString(NotificationSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the notification identified by {NotificationSid} from an account's log.
		/// 
		/// Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Notifications/{NotificationSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string NotificationSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Notifications/"+ (NotificationSid==null? "" : System.Uri.EscapeDataString(NotificationSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of notifications generated for an account. The list includes
		/// paging information.
		/// 
		/// Accounts_AccountSidNotifications_mediaTypeExtensionGet Accounts/{AccountSid}/Notifications{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidNotifications_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidNotifications_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Notifications"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get the set of an account's verified phone numbers.
		/// Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionGet Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string OutgoingCallerIdSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/OutgoingCallerIds/"+ (OutgoingCallerIdSid==null? "" : System.Uri.EscapeDataString(OutgoingCallerIdSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the caller id, and returns the updated resource if successful.
		/// Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPut Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPutAsync(string AccountSid, Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPutMediaTypeExtension mediaTypeExtension, string OutgoingCallerIdSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/OutgoingCallerIds/"+ (OutgoingCallerIdSid==null? "" : System.Uri.EscapeDataString(OutgoingCallerIdSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the caller id, and returns the updated resource if successful.
		/// Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPost Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string OutgoingCallerIdSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/OutgoingCallerIds/"+ (OutgoingCallerIdSid==null? "" : System.Uri.EscapeDataString(OutgoingCallerIdSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the caller ID from the account. Returns an HTTP 204 response if
		/// successful, with no body.
		/// 
		/// Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionDelete Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string OutgoingCallerIdSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/OutgoingCallerIds/"+ (OutgoingCallerIdSid==null? "" : System.Uri.EscapeDataString(OutgoingCallerIdSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of OutgoingCallerId resource representations, each representing
		/// a Caller ID number valid for an account. The list includes paging information.
		/// 
		/// Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionGet Accounts/{AccountSid}/OutgoingCallerIds{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/OutgoingCallerIds"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds a new CallerID to your account.
		/// Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionPost Accounts/{AccountSid}/OutgoingCallerIds{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/OutgoingCallerIds"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a front member.
		/// Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionGet Accounts/{AccountSid}/Queues/{QueueSid}/Members/Front{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionGetAsync(string AccountSid, string QueueSid, Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+"/Members/Front"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Posting a URL and Method to a Queue instance will dequeue a member from a
		/// queue and have the member's call begin executing the TwiML document at that URL
		/// When dequeuing the 'Front' of the queue, the next call in the queue will be redirected.
		/// 
		/// Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionPost Accounts/{AccountSid}/Queues/{QueueSid}/Members/Front{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionPostAsync(string AccountSid, string QueueSid, Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+"/Members/Front"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a specific member.
		/// Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionGet Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionGetAsync(string AccountSid, string QueueSid, Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+"/Members/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Posting a URL and Method to a Queue instance will dequeue a member from a
		/// queue and have the member's call begin executing the TwiML document at that URL
		/// When redirecting a member of a queue addressed by CallSid, only the first request
		/// will succeed and return a 200 response code. A second request will fail and
		/// return an appropriate 400 response code.
		/// 
		/// Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionPost Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionPostAsync(string AccountSid, string QueueSid, Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string CallSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+"/Members/"+ (CallSid==null? "" : System.Uri.EscapeDataString(CallSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the list of members in the queue identified by {QueueSid}.
		/// Accounts_AccountSidQueues_QueueSidMembers_mediaTypeExtensionGet Accounts/{AccountSid}/Queues/{QueueSid}/Members{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSidMembers_mediaTypeExtensionGetAsync(string AccountSid, string QueueSid, Accounts_AccountSidQueues_QueueSidMembers_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+"/Members"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get resource's individual Queue instance.
		/// 
		/// Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionGet Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string QueueSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// This POST request allows you to change the FriendlyName or MaxSize.
		/// 
		/// Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionPost Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string QueueSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// The DELETE method allows you to remove a Queue. Only empty queues are
		/// deletable.
		/// 
		/// Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Queues/{QueueSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string QueueSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues/"+ (QueueSid==null? "" : System.Uri.EscapeDataString(QueueSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of queues within an account. The list includes paging
		/// information.
		/// 
		/// Accounts_AccountSidQueues_mediaTypeExtensionGet Accounts/{AccountSid}/Queues{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidQueues_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidQueues_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a new Queue resource.
		/// 
		/// Accounts_AccountSidQueues_mediaTypeExtensionPost Accounts/{AccountSid}/Queues{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidQueues_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidQueues_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Queues"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a set of Transcription resource representations that includes paging
		/// information.
		/// 
		/// Accounts_AccountSidRecordings_RecordingSidTranscriptions_mediaTypeExtensionGet Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidRecordings_RecordingSidTranscriptions_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidRecordings_RecordingSidTranscriptions_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string RecordingSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Recordings/"+ (RecordingSid==null? "" : System.Uri.EscapeDataString(RecordingSid))+"/Transcriptions"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns one of several representations:
		/// Without an extension, or with a ".wav", a binary WAV audio file is returned
		/// with mime-type "audio/x-wav".
		/// Appending ".mp3" to the URI returns a binary MP3 audio file with mime-type
		/// type "audio/mpeg".
		/// Appending ".xml" to the URI returns a XML representation.
		/// 
		/// Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionGet Accounts/{AccountSid}/Recordings/{RecordingSid}{mediaTypeExtension}
		/// </summary>
		/// <returns>A binary WAV audio file is returned.</returns>
		public async Task Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string RecordingSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Recordings/"+ (RecordingSid==null? "" : System.Uri.EscapeDataString(RecordingSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a recording  from your account.
		/// Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Recordings/{RecordingSid}{mediaTypeExtension}
		/// </summary>
		public async Task Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string RecordingSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Recordings/"+ (RecordingSid==null? "" : System.Uri.EscapeDataString(RecordingSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of Recording resource representations, each representing a
		/// recording generated during the course of a phone call.
		/// 
		/// Accounts_AccountSidRecordings_mediaTypeExtensionGet Accounts/{AccountSid}/Recordings{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidRecordings_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidRecordings_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Recordings"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a specific Credential in a list. Though a password is stored for each username in your list, the password is not returned to protect your password. If you cannot remember your password, you will need to POST to this resource to update it.
		/// Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionGetAsync(string AccountSid, string CLSid, Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string CredentialSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+"/Credentials/"+ (CredentialSid==null? "" : System.Uri.EscapeDataString(CredentialSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change the password of a Credential record.
		/// 
		/// If the change is successful, Twilio will respond with the Credential record but will not include the password in the response.
		/// 
		/// Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionPostAsync(string AccountSid, string CLSid, Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string CredentialSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+"/Credentials/"+ (CredentialSid==null? "" : System.Uri.EscapeDataString(CredentialSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove a Credential from a CredentialList.
		/// Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionDeleteAsync(string AccountSid, string CLSid, Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string CredentialSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+"/Credentials/"+ (CredentialSid==null? "" : System.Uri.EscapeDataString(CredentialSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get the list of Credentials in a CredentialList. The passwords for the Credentials are intentionally not returned so as to protect them.
		/// Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionGetAsync(string AccountSid, string CLSid, Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+"/Credentials"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Add a Credential to the CredentialList.
		/// 
		/// When creating a Credential, you will POST both a username and password, but only receive the username back in the response. The password is intentionally not returned so as to protect it.
		/// 
		/// Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionPostAsync(string AccountSid, string CLSid, Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+"/Credentials"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a credential list instance resource
		/// Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string CLSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change the FriendlyName of the list
		/// Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string CLSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a CredentialList from your account. It can only be deleted if no domains are mapped to it. If you attempt to delete one that is mapped to a domain, you will receive an error.
		/// Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string CLSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets a list of Credential Lists for an account
		/// Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/CredentialLists{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a new Credential List.
		/// Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/CredentialLists{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/CredentialLists"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove a CredentialListMapping from a domain
		/// Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_CLSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings/{CLSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_CLSid_mediaTypeExtensionDeleteAsync(string AccountSid, string SipDomainSid, Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_CLSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string CLSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/CredentialListMappings/"+ (CLSid==null? "" : System.Uri.EscapeDataString(CLSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get the user lists mapped to this domain.
		/// Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionGetAsync(string AccountSid, string SipDomainSid, Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/CredentialListMappings"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Map a CredentialList to the domain.
		/// Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionPostAsync(string AccountSid, string SipDomainSid, Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/CredentialListMappings"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return a specific IpAccessControlListMapping instance by Sid.
		/// Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings/{ALSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionGetAsync(string AccountSid, string SipDomainSid, Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string ALSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/IpAccessControlListMappings/"+ (ALSid==null? "" : System.Uri.EscapeDataString(ALSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Remove a mapping from this domain.
		/// Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings/{ALSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionDeleteAsync(string AccountSid, string SipDomainSid, Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string ALSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/IpAccessControlListMappings/"+ (ALSid==null? "" : System.Uri.EscapeDataString(ALSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return the IpAccessControlListMappings that are associated to this domain.
		/// Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings{mediaTypeExtension}
		/// </summary>
		/// <returns>OK</returns>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_mediaTypeExtensionGetAsync(string AccountSid, string SipDomainSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/IpAccessControlListMappings"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Map an IpAccessControlList to this domain.
		/// Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/IpAccessControlListMappings{mediaTypeExtension}
		/// </summary>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_mediaTypeExtensionPostAsync(string AccountSid, string SipDomainSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+"/IpAccessControlListMappings"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return a specific instance by Sid.
		/// Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string SipDomainSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update the attributes of a domain.
		/// Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string SipDomainSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete a domain. If you have created subdomains of a domain, you will not be able to delete the domain until you first delete all subdomains of it.
		/// Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string SipDomainSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains/"+ (SipDomainSid==null? "" : System.Uri.EscapeDataString(SipDomainSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a paged list of the domains for an account.
		/// Accounts_AccountSidSIPDomains_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/Domains{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSIPDomains_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Domain and returns its instance resource. You must pick a unique domain name that ends in ".sip.twilio.com".
		/// After creating a Domain, you must map it to an authentication method before the domain is ready to receive traffic.
		/// 
		/// Accounts_AccountSidSIPDomains_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/Domains{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPDomains_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidSIPDomains_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/Domains"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return a single IP Address resource.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionGetAsync(string AccountSid, string IpAccessControlListSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string IpAddressSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+"/IpAddresses/"+ (IpAddressSid==null? "" : System.Uri.EscapeDataString(IpAddressSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Change the description or IP address of a given IpAddress instance resource
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionPostAsync(string AccountSid, string IpAccessControlListSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string IpAddressSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+"/IpAddresses/"+ (IpAddressSid==null? "" : System.Uri.EscapeDataString(IpAddressSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an IP address entry from the list.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionDeleteAsync(string AccountSid, string IpAccessControlListSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string IpAddressSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+"/IpAddresses/"+ (IpAddressSid==null? "" : System.Uri.EscapeDataString(IpAddressSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// List the IP Addresses contained in this list.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionGetAsync(string AccountSid, string IpAccessControlListSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+"/IpAddresses"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Add an IP Address to the list with a description.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionPostAsync(string AccountSid, string IpAccessControlListSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+"/IpAddresses"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return a specific IpAccessControlList resource.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string IpAccessControlListSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Rename an IpAccessControlList.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string IpAccessControlListSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete an IpAccessControlList from your account. It can only be deleted if no domains are mapped to it. If you attempt to delete one that is mapped to a domain, you will receive an error.
		/// Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionDelete Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string IpAccessControlListSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists/"+ (IpAccessControlListSid==null? "" : System.Uri.EscapeDataString(IpAccessControlListSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return a paged list of all IpAccessControlLists under this account.
		/// Accounts_AccountSidSIPIpAccessControlLists_mediaTypeExtensionGet Accounts/{AccountSid}/SIP/IpAccessControlLists{mediaTypeExtension}
		/// </summary>
		/// <returns>OK</returns>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_mediaTypeExtensionGetAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a new IpAccessControlList resource.
		/// 
		/// When created, the list will contain no IP addresses. You will need to add IP addresses to the list for it to be active. To add IP addresses, you will need to POST to the IpAddresses List subresource.
		/// 
		/// Accounts_AccountSidSIPIpAccessControlLists_mediaTypeExtensionPost Accounts/{AccountSid}/SIP/IpAccessControlLists{mediaTypeExtension}
		/// </summary>
		public async Task Accounts_AccountSidSIPIpAccessControlLists_mediaTypeExtensionPostAsync(string AccountSid, string mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SIP/IpAccessControlLists"+ (mediaTypeExtension==null? "" : System.Uri.EscapeDataString(mediaTypeExtension));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a single message.
		/// Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionGet Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string ShortCodeSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SMS/ShortCodes/"+ (ShortCodeSid==null? "" : System.Uri.EscapeDataString(ShortCodeSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tries to update the shortcode's properties, and returns the updated
		/// resource representation if successful.
		/// 
		/// Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionPost Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string ShortCodeSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SMS/ShortCodes/"+ (ShortCodeSid==null? "" : System.Uri.EscapeDataString(ShortCodeSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of ShortCode resource representations, each representing a
		/// short code within your account. The list includes paging information.
		/// 
		/// Accounts_AccountSidSMSShortCodes_mediaTypeExtensionGet Accounts/{AccountSid}/SMS/ShortCodes{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidSMSShortCodes_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidSMSShortCodes_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/SMS/ShortCodes"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a single Transcription resource representation identified by the
		/// given {TranscriptionSid}. By default Twilio will respond with the XML metadata for the Transcription. If you append ".txt" to the end of the Transcription resource's URI Twilio will just return you the transcription tex.
		/// 
		/// Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionGet Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string TranscriptionSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Transcriptions/"+ (TranscriptionSid==null? "" : System.Uri.EscapeDataString(TranscriptionSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a transcription from your account.
		/// Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string TranscriptionSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Transcriptions/"+ (TranscriptionSid==null? "" : System.Uri.EscapeDataString(TranscriptionSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a set of Transcription resource representations that includes paging
		/// information.
		/// 
		/// Accounts_AccountSidTranscriptions_mediaTypeExtensionGet Accounts/{AccountSid}/Transcriptions{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidTranscriptions_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidTranscriptions_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Transcriptions"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns UsageRecords for all usage categories for a specified period.
		/// 
		/// Accounts_AccountSidUsageRecords_Subresource_mediaTypeExtensionGet Accounts/{AccountSid}/Usage/Records/{Subresource}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <param name="Subresource">|Subresource|Description|
		///|---|---|
		///|Daily|Return multiple UsageRecords for each usage category, each representing usage over a daily time-interval.|
		///|Monthly|Return multiple UsageRecords for each usage category, each representing usage over a monthly time-interval.|
		///|Yearly|Return multple UsageRecords for each usage category, each representing usage over a yearly time-interval.|
		///|AllTime|  Return a single UsageRecord for each usage category, each representing usage over the date-range specified. This is the same as the root /Usage/Records.|
		///|Today|Return a single UsageRecord per usage category, for today's usage only.|
		///||Yesterday|Return a single UsageRecord per usage category, for yesterday's usage only.|
		///|ThisMonth|Return a single UsageRecord per usage category, for this month's usage only.|
		///|LastMonth|Return a single UsageRecord per usage category, for last month's usage only.|
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidUsageRecords_Subresource_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidUsageRecords_Subresource_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Accounts_AccountSidUsageRecords_Subresource_mediaTypeExtensionGetSubresource Subresource, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Records/"+Subresource+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns UsageRecords for all usage categories. The list includes paging
		/// information.
		/// By default, the UsageRecords resource will return one UsageRecord for
		/// each Category, representing all usage accrued all-time for the account.
		/// You can filter the usage Category or change the date-range over which usage
		/// is counted using optional GET query parameters.
		/// 
		/// Accounts_AccountSidUsageRecords_mediaTypeExtensionGet Accounts/{AccountSid}/Usage/Records{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidUsageRecords_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidUsageRecords_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Records"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a repesentation of the UsageTrigger.
		/// Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionGet Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string UsageTriggerSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Triggers/"+ (UsageTriggerSid==null? "" : System.Uri.EscapeDataString(UsageTriggerSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Tries to update the UsageTrigger's properties, and returns the updated
		/// resource representation if successful.
		/// 
		/// Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionPost Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string UsageTriggerSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Triggers/"+ (UsageTriggerSid==null? "" : System.Uri.EscapeDataString(UsageTriggerSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Delete this UsageTrigger.
		/// Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionDelete Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		public async Task Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionDeleteAsync(string AccountSid, Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionDeleteMediaTypeExtension mediaTypeExtension, string UsageTriggerSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Triggers/"+ (UsageTriggerSid==null? "" : System.Uri.EscapeDataString(UsageTriggerSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of UsageTrigger resource representations. The list includes
		/// paging information.
		/// By default, all UsageTriggers are returned. You can filter the list by
		/// specifying one or more query parameters. Note that the query parameters are
		/// case-sensitive
		/// 
		/// Accounts_AccountSidUsageTriggers_mediaTypeExtensionGet Accounts/{AccountSid}/Usage/Triggers{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSidUsageTriggers_mediaTypeExtensionGetAsync(string AccountSid, Accounts_AccountSidUsageTriggers_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Triggers"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new UsageTrigger. Each account can create up to 1,000 UsageTriggers.
		/// Currently, UsageTriggers that are no longer active are not deleted automatically.
		/// Use DELETE to delete triggers you no longer need.
		/// 
		/// Accounts_AccountSidUsageTriggers_mediaTypeExtensionPost Accounts/{AccountSid}/Usage/Triggers{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSidUsageTriggers_mediaTypeExtensionPostAsync(string AccountSid, Accounts_AccountSidUsageTriggers_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+"/Usage/Triggers"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a representation of an account.
		/// Accounts_AccountSid_mediaTypeExtensionGet Accounts/{AccountSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <param name="AccountSid">A 34 character string that uniquely identifies this account.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_AccountSid_mediaTypeExtensionGetAsync(Accounts_AccountSid_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, string AccountSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows you to modify the properties of an account.
		/// Accounts_AccountSid_mediaTypeExtensionPut Accounts/{AccountSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <param name="AccountSid">A 34 character string that uniquely identifies this account.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSid_mediaTypeExtensionPutAsync(Accounts_AccountSid_mediaTypeExtensionPutMediaTypeExtension mediaTypeExtension, string AccountSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows you to modify the properties of an account.
		/// Accounts_AccountSid_mediaTypeExtensionPost Accounts/{AccountSid}{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <param name="AccountSid">A 34 character string that uniquely identifies this account.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_AccountSid_mediaTypeExtensionPostAsync(Accounts_AccountSid_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, string AccountSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts/"+ (AccountSid==null? "" : System.Uri.EscapeDataString(AccountSid))+mediaTypeExtension+"";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieve a list of the Account resources belonging to the account used to make the
		/// API request. This list will include that Account as well.
		/// 
		/// Accounts_mediaTypeExtensionGet Accounts{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful and the response body contains the representation
		///requested.
		///</returns>
		public async Task Accounts_mediaTypeExtensionGetAsync(Accounts_mediaTypeExtensionGetMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Create a new Account instance resource as a subaccount of the one used to make the request. See
		/// Creating Subaccounts for more information.
		/// 
		/// Accounts_mediaTypeExtensionPost Accounts{mediaTypeExtension}
		/// </summary>
		/// <param name="mediaTypeExtension">By default, Twilio's REST API returns XML. You may obtain CSV, JSON or HTML by appending ".csv", ".json", or ".html".
		///</param>
		/// <returns>The request was successful, we updated the resource and the response
		///body contains the representation.
		///</returns>
		public async Task Accounts_mediaTypeExtensionPostAsync(Accounts_mediaTypeExtensionPostMediaTypeExtension mediaTypeExtension, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "Accounts"+mediaTypeExtension;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidApplications_ApplicationSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidApplications_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidApplications_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidAuthorizedConnectApps_ConnectAppSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidAuthorizedConnectApps_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeLocal_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeMobile_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidAvailablePhoneNumbers_IsoCountryCodeTollFree_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidAvailablePhoneNumbers_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidCalls_CallSidNotifications_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidCalls_CallSidRecordings_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidCalls_CallSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidCalls_CallSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidCalls_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidCalls_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConferences_ConferenceSidParticipants_CallSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConferences_ConferenceSidParticipants_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConferences_ConferenceSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConferences_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConnectApps_ConnectAppSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidConnectApps_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPutMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidIncomingPhoneNumbers_IncomingPhoneNumberSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidIncomingPhoneNumbers_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidMessages_MessageSidMedia_MediaSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidMessages_MessageSidMedia_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidMessages_MessageSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidMessages_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidMessages_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidNotifications_NotificationSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidNotifications_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPutMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidOutgoingCallerIds_OutgoingCallerIdSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidOutgoingCallerIds_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSidMembersFront_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSidMembers_CallSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSidMembers_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_QueueSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidQueues_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidRecordings_RecordingSidTranscriptions_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".wav")]
		_wav = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".mp3")]
		_mp3 = 2,
	}
	
	public enum Accounts_AccountSidRecordings_RecordingSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".wav")]
		_wav = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".mp3")]
		_mp3 = 2,
	}
	
	public enum Accounts_AccountSidRecordings_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSidCredentials_CredentialSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSidCredentials_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_CLSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPCredentialLists_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_CLSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSidCredentialListMappings_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSidIpAccessControlListMappings_ALSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_SipDomainSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPDomains_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_IpAddressSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSidIpAddresses_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSIPIpAccessControlLists_IpAccessControlListSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSMSShortCodes_ShortCodeSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidSMSShortCodes_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".txt")]
		_txt = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 4,
	}
	
	public enum Accounts_AccountSidTranscriptions_TranscriptionSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".txt")]
		_txt = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 4,
	}
	
	public enum Accounts_AccountSidTranscriptions_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageRecords_Subresource_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageRecords_Subresource_mediaTypeExtensionGetSubresource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Daily = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Monthly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Yearly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AllTime = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Today = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Yesterday = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThisMonth = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastMonth = 7,
	}
	
	public enum Accounts_AccountSidUsageRecords_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageTriggers_UsageTriggerSid_mediaTypeExtensionDeleteMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageTriggers_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSidUsageTriggers_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSid_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSid_mediaTypeExtensionPutMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_AccountSid_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_mediaTypeExtensionGetMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
	
	public enum Accounts_mediaTypeExtensionPostMediaTypeExtension
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".xml")]
		_xml = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".json")]
		_json = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".csv")]
		_csv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value=".html")]
		_html = 3,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

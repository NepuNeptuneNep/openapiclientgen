//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Bandit Policy configuration. Please refer https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.banditpolicy?view=azure-ml-py for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveBanditPolicy
	{
	}
	
	/// <summary>
	/// Response for HyperDrive_CancelExperiment in case of success.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveCancelExperimentResponse
	{
		
		/// <summary>
		/// Response code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public int Code { get; set; }
		
		/// <summary>
		/// Message indicating operation success.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public string Result { get; set; }
	}
	
	/// <summary>
	/// Part of request for HyperDrive_CreateExperiment. Contains configuration details required to create hyperdrive run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveCreateExperiment
	{
	}
	
	/// <summary>
	/// No early termination is applied in the case of DefaultPolicy
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveDefaultPolicy
	{
	}
	
	/// <summary>
	/// Response in case of an error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveErrorResponse
	{
		
		/// <summary>
		/// Error response code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public int Code { get; set; }
		
		/// <summary>
		/// Error message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Part of response for HyperDrive_CreateExperiment in case of success. Contains details about the created hyperdrive run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveExperiment
	{
	}
	
	/// <summary>
	/// Base object for both request and response of HyperDrive_CreateExperiment api.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveExperimentBase
	{
		
		/// <summary>
		/// The description for Hyperdrive run.
		/// Max length: 511
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MaxLength(511)]
		public string Description { get; set; }
		
		/// <summary>
		/// Hyperparameter space and the sampling method configuration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="generator_config")]
		public HyperDriveExperimentBaseGenerator_config Generator_config { get; set; }
		
		/// <summary>
		/// Maximum number of runs to run concurrently.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_concurrent_jobs")]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> Max_concurrent_jobs { get; set; }
		
		/// <summary>
		/// Maximum duration of the Hyperdrive run.
		/// Minimum: 1
		/// Maximum: 43200
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_duration_minutes")]
		[System.ComponentModel.DataAnnotations.Range(1, 43200)]
		public System.Nullable<System.Int32> Max_duration_minutes { get; set; }
		
		/// <summary>
		/// Maximum number of runs.
		/// Minimum: 1
		/// Maximum: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_total_jobs")]
		[System.ComponentModel.DataAnnotations.Range(1, 1000)]
		public System.Nullable<System.Int32> Max_total_jobs { get; set; }
		
		/// <summary>
		/// Name of the Hyperdrive run.
		/// Required
		/// Max length: 255
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Name { get; set; }
		
		/// <summary>
		/// Platform of the Hyperdrive run.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public HyperDriveExperimentBasePlatform Platform { get; set; }
		
		/// <summary>
		/// Platform config object specifying the run definition structure.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platform_config")]
		public string Platform_config { get; set; }
		
		/// <summary>
		/// Early termination policy configuration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="policy_config")]
		public HyperDrivePolicyConfigBase Policy_config { get; set; }
		
		/// <summary>
		/// Name of the primary metric and goal of optimizing.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="primary_metric_config")]
		public HyperDriveExperimentBasePrimary_metric_config Primary_metric_config { get; set; }
		
		/// <summary>
		/// Study Id of the Hyperdrive run.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="study_id")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Study_id { get; set; }
	}
	
	public class HyperDriveExperimentBaseGenerator_config
	{
		
		/// <summary>
		/// Hyperparameter sampling method.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public HyperDriveExperimentBaseGenerator_configName Name { get; set; }
		
		/// <summary>
		/// Dictionary specifying hyperparameter space.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parameter_space")]
		public System.Collections.Generic.Dictionary<string, string[]> Parameter_space { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HyperDriveExperimentBaseGenerator_configName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANDOM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAYESIANOPTIMIZATION = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HyperDriveExperimentBasePlatform
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AML = 0,
	}
	
	/// <summary>
	/// Early termination policy configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDrivePolicyConfigBase
	{
		
		/// <summary>
		/// Type of early termination policy.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public HyperDrivePolicyConfigBaseName Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HyperDrivePolicyConfigBaseName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Default = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bandit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MedianStopping = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TruncationSelection = 3,
	}
	
	public class HyperDriveExperimentBasePrimary_metric_config
	{
		
		/// <summary>
		/// Determines if the primary metric has to be minimized/maximized.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="goal")]
		public HyperDriveExperimentBasePrimary_metric_configGoal Goal { get; set; }
		
		/// <summary>
		/// Name of the primary metric reported by runs.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HyperDriveExperimentBasePrimary_metric_configGoal
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAXIMIZE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINIMIZE = 1,
	}
	
	/// <summary>
	/// Response for HyperDrive_CreateExperiment in case of success.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveExperimentResponse
	{
		
		/// <summary>
		/// Response code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public int Code { get; set; }
		
		/// <summary>
		/// Part of response for HyperDrive_CreateExperiment in case of success. Contains details about the created hyperdrive run.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="result")]
		public HyperDriveExperiment Result { get; set; }
	}
	
	/// <summary>
	/// Median stopping policy configuration. Please refer https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.medianstoppingpolicy?view=azure-ml-py for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveMedianStoppingPolicy
	{
	}
	
	/// <summary>
	/// Truncation selection policy configuration. Please refer https://docs.microsoft.com/en-us/python/api/azureml-train-core/azureml.train.hyperdrive.truncationselectionpolicy?view=azure-ml-py for more information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HyperDriveTruncationSelectionPolicy
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Cancel an Experiment.
		/// Cancel a HyperDrive Experiment.
		/// HyperparameterTuning_CancelExperiment hyperdrive/v1.0/{armScope}/runs/{runId}/cancel
		/// </summary>
		/// <param name="armScope">The ARM scope passed in through URL with format:
		///            subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}.
		///</param>
		/// <param name="runId">Hyperdrive run id to cancel.</param>
		/// <returns>OK</returns>
		public async Task<HyperDriveCancelExperimentResponse> HyperparameterTuning_CancelExperimentAsync(string armScope, string runId)
		{
			var requestUri = "hyperdrive/v1.0/"+ (armScope==null? "" : System.Uri.EscapeDataString(armScope))+"/runs/"+ (runId==null? "" : System.Uri.EscapeDataString(runId))+"/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<HyperDriveCancelExperimentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Represents individual job in given blueprint assignment operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssignmentDeploymentJob
	{
		
		/// <summary>
		/// Name of the action performed in this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// Result of this deployment job for each retry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="history")]
		public AssignmentDeploymentJobResult[] History { get; set; }
		
		/// <summary>
		/// Id of this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// State of this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobState")]
		public string JobState { get; set; }
		
		/// <summary>
		/// Kind of job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// Reference to deployment job resource id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestUri")]
		public string RequestUri { get; set; }
		
		/// <summary>
		/// Result of each individual deployment in a blueprint assignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public AssignmentDeploymentJobResult Result { get; set; }
	}
	
	/// <summary>
	/// Result of each individual deployment in a blueprint assignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssignmentDeploymentJobResult
	{
		
		/// <summary>
		/// Error code and message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public AzureResourceManagerError Error { get; set; }
		
		/// <summary>
		/// Resources created as result of the deployment job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public AssignmentJobCreatedResource[] Resources { get; set; }
	}
	
	/// <summary>
	/// Error code and message
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureResourceManagerError
	{
		
		/// <summary>
		/// Error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Azure resource created from deployment job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssignmentJobCreatedResource
	{
		
		/// <summary>
		/// Additional properties in a dictionary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, string> Properties { get; set; }
	}
	
	/// <summary>
	/// Represents underlying deployment detail for each update to the blueprint assignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssignmentOperation
	{
		
		/// <summary>
		/// Properties of AssignmentOperation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public AssignmentOperationProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Properties of AssignmentOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssignmentOperationProperties
	{
		
		/// <summary>
		/// State of this blueprint assignment operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignmentState")]
		public string AssignmentState { get; set; }
		
		/// <summary>
		/// The published version of the blueprint definition used for the blueprint assignment operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blueprintVersion")]
		public string BlueprintVersion { get; set; }
		
		/// <summary>
		/// List of jobs in this blueprint assignment operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployments")]
		public AssignmentDeploymentJob[] Deployments { get; set; }
		
		/// <summary>
		/// Create time of this blueprint assignment operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeCreated")]
		public string TimeCreated { get; set; }
		
		/// <summary>
		/// Finish time of the overall underlying deployments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeFinished")]
		public string TimeFinished { get; set; }
		
		/// <summary>
		/// Start time of the underlying deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeStarted")]
		public string TimeStarted { get; set; }
	}
	
	/// <summary>
	/// List of AssignmentOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssignmentOperationList
	{
		
		/// <summary>
		/// Link to the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of AssignmentOperation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AssignmentOperation[] Value { get; set; }
	}
	
	/// <summary>
	/// Common properties for all Azure resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureResourceBase
	{
		
		/// <summary>
		/// String Id used to locate any resource on Azure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Type of this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List operations for given blueprint assignment within a subscription.
		/// AssignmentOperations_List {scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}/assignmentOperations
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="scope">The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.</param>
		/// <param name="assignmentName">Name of the blueprint assignment.</param>
		/// <returns>OK -- all blueprint assignment operations retrieved.</returns>
		public async Task<AssignmentOperationList> AssignmentOperations_ListAsync(string api_version, string scope, string assignmentName)
		{
			var requestUri = ""+ (scope==null? "" : System.Uri.EscapeDataString(scope))+"/providers/Microsoft.Blueprint/blueprintAssignments/"+ (assignmentName==null? "" : System.Uri.EscapeDataString(assignmentName))+"/assignmentOperations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssignmentOperationList>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get a blueprint assignment operation.
		/// AssignmentOperations_Get {scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}/assignmentOperations/{assignmentOperationName}
		/// </summary>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="scope">The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved for future use.</param>
		/// <param name="assignmentName">Name of the blueprint assignment.</param>
		/// <param name="assignmentOperationName">Name of the blueprint assignment operation.</param>
		/// <returns>OK -- blueprint assignment operation retrieved.</returns>
		public async Task<AssignmentOperation> AssignmentOperations_GetAsync(string api_version, string scope, string assignmentName, string assignmentOperationName)
		{
			var requestUri = ""+ (scope==null? "" : System.Uri.EscapeDataString(scope))+"/providers/Microsoft.Blueprint/blueprintAssignments/"+ (assignmentName==null? "" : System.Uri.EscapeDataString(assignmentName))+"/assignmentOperations/"+ (assignmentOperationName==null? "" : System.Uri.EscapeDataString(assignmentOperationName))+"?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssignmentOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

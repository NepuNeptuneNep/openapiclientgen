//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Activity
	{
		
		/// <summary>
		/// arrival time at this activity in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="arr_time")]
		public System.Nullable<System.Int64> Arr_time { get; set; }
		
		/// <summary>
		/// cumulated distance from start to this activity in m
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Int64> Distance { get; set; }
		
		/// <summary>
		/// driving time of driver in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driving_time")]
		public System.Nullable<System.Int64> Driving_time { get; set; }
		
		/// <summary>
		/// end time of and thus departure time at this activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_time")]
		public System.Nullable<System.Int64> End_time { get; set; }
		
		/// <summary>
		/// id referring to the underlying service or shipment, i.e. the shipment or service this activity belongs to
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Array with size/capacity dimensions after this activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="load_after")]
		public int[] Load_after { get; set; }
		
		/// <summary>
		/// Array with size/capacity dimensions before this activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="load_before")]
		public int[] Load_before { get; set; }
		
		/// <summary>
		/// id that refers to address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location_id")]
		public string Location_id { get; set; }
		
		/// <summary>
		/// type of activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ActivityType> Type { get; set; }
		
		/// <summary>
		/// waiting time at this activity in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waiting_time")]
		public System.Nullable<System.Int64> Waiting_time { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ActivityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		start = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		end = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		service = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pickupShipment = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deliverShipment = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pickup = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivery = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Address
	{
		
		/// <summary>
		/// latitude
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lat")]
		public System.Nullable<System.Double> Lat { get; set; }
		
		/// <summary>
		/// Unique identifier of location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location_id")]
		public string Location_id { get; set; }
		
		/// <summary>
		/// longitude
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lon")]
		public System.Nullable<System.Double> Lon { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Algorithm
	{
		
		[System.Runtime.Serialization.DataMember(Name="objective")]
		public System.Nullable<AlgorithmObjective> Objective { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="problem_type")]
		public System.Nullable<AlgorithmProblem_type> Problem_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AlgorithmObjective
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transport_time = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completion_time = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AlgorithmProblem_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		min = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="min-max")]
		minMinusmax = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Break
	{
		
		/// <summary>
		/// duration of break
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Int64> Duration { get; set; }
		
		/// <summary>
		/// earliest start of break
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="earliest")]
		public System.Nullable<System.Int64> Earliest { get; set; }
		
		/// <summary>
		/// initial driving time, i.e. the time your driver has already spent for driving
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="initial_driving_time")]
		public System.Nullable<System.Int64> Initial_driving_time { get; set; }
		
		/// <summary>
		/// latest start of break
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latest")]
		public System.Nullable<System.Int64> Latest { get; set; }
		
		/// <summary>
		/// max driving time without break
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_driving_time")]
		public System.Nullable<System.Int64> Max_driving_time { get; set; }
		
		/// <summary>
		/// array of splits
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="possible_split")]
		public int[] Possible_split { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CostMatrix
	{
		
		/// <summary>
		/// vehicle profile or empty if catch all fallback
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public string Profile { get; set; }
		
		/// <summary>
		/// type of cost matrix, currently default or google are supported
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<CostMatrixType> Type { get; set; }
		
		/// <summary>
		/// URL of matrix service
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum CostMatrixType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="default")]
		_default = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		google = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobId
	{
		
		/// <summary>
		/// unique id for your job/request with which you can fetch your solution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job_id")]
		public string Job_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Objective
	{
		
		/// <summary>
		/// type of objective function, i.e. min or min-max 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ObjectiveType> Type { get; set; }
		
		/// <summary>
		/// objective function value
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<ObjectiveValue> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ObjectiveType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		min = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="min-max")]
		minMinusmax = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ObjectiveValue
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completion_time = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transport_time = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		vehicles = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Relation
	{
		
		/// <summary>
		/// An array of ids that should be related
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
		
		/// <summary>
		/// identifier of relation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// vehicle id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vehicle_id")]
		public string Vehicle_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Request
	{
		
		[System.Runtime.Serialization.DataMember(Name="algorithm")]
		public Algorithm Algorithm { get; set; }
		
		/// <summary>
		/// An array of cost matrices
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cost_matrices")]
		public CostMatrix[] Cost_matrices { get; set; }
		
		/// <summary>
		/// An array of objectives
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectives")]
		public Objective[] Objectives { get; set; }
		
		/// <summary>
		/// An array of relations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relations")]
		public Relation[] Relations { get; set; }
		
		/// <summary>
		/// An array of services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="services")]
		public Service[] Services { get; set; }
		
		/// <summary>
		/// An array of shipments
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		public Shipment[] Shipments { get; set; }
		
		/// <summary>
		/// An array of vehicle types
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vehicle_types")]
		public VehicleType[] Vehicle_types { get; set; }
		
		/// <summary>
		/// An array of vehicles that can be employed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vehicles")]
		public Vehicle[] Vehicles { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Service
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Address Address { get; set; }
		
		/// <summary>
		/// array of allowed vehicle ids
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed_vehicles")]
		public string[] Allowed_vehicles { get; set; }
		
		/// <summary>
		/// duration of service, i.e. time in ms the corresponding activity takes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Int64> Duration { get; set; }
		
		/// <summary>
		/// Unique identifier of service
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// name of service
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// priority of service, i.e. 1 = high, 2 = normal, 3 = low. default is 2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// array of required skills
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required_skills")]
		public string[] Required_skills { get; set; }
		
		/// <summary>
		/// array of capacity dimensions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public int[] Size { get; set; }
		
		/// <summary>
		/// array of time windows. currently, only a single time window is allowed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="time_windows")]
		public TimeWindow[] Time_windows { get; set; }
		
		/// <summary>
		/// type of service
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ServiceType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TimeWindow
	{
		
		/// <summary>
		/// earliest start time of corresponding activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="earliest")]
		public System.Nullable<System.Int64> Earliest { get; set; }
		
		/// <summary>
		/// latest start time of corresponding activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latest")]
		public System.Nullable<System.Int64> Latest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ServiceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		service = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pickup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivery = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Shipment
	{
		
		/// <summary>
		/// array of allowed vehicle ids
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed_vehicles")]
		public string[] Allowed_vehicles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="delivery")]
		public Stop Delivery { get; set; }
		
		/// <summary>
		/// Unique identifier of service
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// name of shipment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pickup")]
		public Stop Pickup { get; set; }
		
		/// <summary>
		/// priority of service, i.e. 1 = high, 2 = normal, 3 = low. default is 2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// array of required skills
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required_skills")]
		public string[] Required_skills { get; set; }
		
		/// <summary>
		/// array of capacity dimensions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public int[] Size { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Stop
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public Address Address { get; set; }
		
		/// <summary>
		/// duration of stop, i.e. time in ms the corresponding activity takes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Int64> Duration { get; set; }
		
		/// <summary>
		/// array of time windows. currently, only a single time window is allowed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="time_windows")]
		public TimeWindow[] Time_windows { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VehicleType
	{
		
		/// <summary>
		/// array of capacity dimensions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public int[] Capacity { get; set; }
		
		/// <summary>
		/// Profile of vehicle type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public System.Nullable<VehicleTypeProfile> Profile { get; set; }
		
		/// <summary>
		/// service time factor of vehicle type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_time_factor")]
		public System.Nullable<System.Double> Service_time_factor { get; set; }
		
		/// <summary>
		/// speed_factor of vehicle type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="speed_factor")]
		public System.Nullable<System.Double> Speed_factor { get; set; }
		
		/// <summary>
		/// Unique identifier for the vehicle type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_id")]
		public string Type_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum VehicleTypeProfile
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		car = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bike = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		foot = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mtb = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		motorcycle = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		racingbike = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		truck = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		small_truck = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bus = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Vehicle
	{
		
		[System.Runtime.Serialization.DataMember(Name="break")]
		public Break Break { get; set; }
		
		/// <summary>
		/// earliest start of vehicle at its start location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="earliest_start")]
		public System.Nullable<System.Int64> Earliest_start { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end_address")]
		public Address End_address { get; set; }
		
		/// <summary>
		/// latest end of vehicle at its end location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latest_end")]
		public System.Nullable<System.Int64> Latest_end { get; set; }
		
		/// <summary>
		/// Indicates whether vehicle should return to start address or not. If not, it can end at any service activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="return_to_depot")]
		public System.Nullable<System.Boolean> Return_to_depot { get; set; }
		
		/// <summary>
		/// array of skills
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skills")]
		public string[] Skills { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_address")]
		public Address Start_address { get; set; }
		
		/// <summary>
		/// Unique identifier referring to the available vehicle types
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_id")]
		public string Type_id { get; set; }
		
		/// <summary>
		/// Unique identifier of vehicle
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vehicle_id")]
		public string Vehicle_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Response
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyrights")]
		public string[] Copyrights { get; set; }
		
		/// <summary>
		/// unique identify of job - which you get when posting your request to the large problem solver
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job_id")]
		public string Job_id { get; set; }
		
		/// <summary>
		/// processing time in ms. if job is still waiting in queue, processing_time is 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processing_time")]
		public System.Nullable<System.Int64> Processing_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="solution")]
		public Solution Solution { get; set; }
		
		/// <summary>
		/// indicates the current status of the job
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ResponseStatus> Status { get; set; }
		
		/// <summary>
		/// waiting time in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waiting_in_queue")]
		public System.Nullable<System.Int64> Waiting_in_queue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Solution
	{
		
		/// <summary>
		/// overall costs of solution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costs")]
		public System.Nullable<System.Int32> Costs { get; set; }
		
		/// <summary>
		/// overall travel distance in meters
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Int32> Distance { get; set; }
		
		/// <summary>
		/// operation time of the longest route in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_operation_time")]
		public System.Nullable<System.Int64> Max_operation_time { get; set; }
		
		/// <summary>
		/// number of jobs that could not be assigned to final solution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="no_unassigned")]
		public System.Nullable<System.Int32> No_unassigned { get; set; }
		
		/// <summary>
		/// number of employed vehicles
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="no_vehicles")]
		public System.Nullable<System.Int32> No_vehicles { get; set; }
		
		/// <summary>
		/// An array of routes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routes")]
		public Route[] Routes { get; set; }
		
		/// <summary>
		/// overall transport time in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="time")]
		public System.Nullable<System.Int64> Time { get; set; }
		
		/// <summary>
		/// overall transport time in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transport_time")]
		public System.Nullable<System.Int64> Transport_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unassigned")]
		public SolutionUnassigned Unassigned { get; set; }
		
		/// <summary>
		/// total waiting time in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waiting_time")]
		public System.Nullable<System.Int64> Waiting_time { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Route
	{
		
		/// <summary>
		/// array of activities
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activities")]
		public Activity[] Activities { get; set; }
		
		/// <summary>
		/// completion time of route in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completion_time")]
		public System.Nullable<System.Int64> Completion_time { get; set; }
		
		/// <summary>
		/// distance of route in meter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Int64> Distance { get; set; }
		
		/// <summary>
		/// transport time of route in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transport_time")]
		public System.Nullable<System.Int64> Transport_time { get; set; }
		
		/// <summary>
		/// id of vehicle that operates route
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vehicle_id")]
		public string Vehicle_id { get; set; }
		
		/// <summary>
		/// waiting time of route in ms
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waiting_time")]
		public System.Nullable<System.Int64> Waiting_time { get; set; }
	}
	
	public class SolutionUnassigned
	{
		
		/// <summary>
		/// An array of ids of unassigned services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="services")]
		public string[] Services { get; set; }
		
		/// <summary>
		/// An array of ids of unassigned shipments
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipments")]
		public string[] Shipments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		waiting_in_queue = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		finished = 2,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Solves vehicle routing problems
		/// This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
		/// 
		/// PostVrp optimize
		/// </summary>
		/// <param name="key">your API key</param>
		/// <param name="requestBody">Request object that contains the problem to be solved</param>
		/// <returns>A jobId you can use to retrieve your solution from server - see solution endpoint.</returns>
		public async Task<JobId> PostVrpAsync(string key, Request requestBody)
		{
			var requestUri = "optimize?key=" + (key==null? "" : System.Uri.EscapeDataString(key));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<JobId>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Return the solution associated to the jobId
		/// This endpoint returns the solution of a large problems. You can fetch it with the job_id, you have been sent.
		/// 
		/// GetSolution solution/{jobId}
		/// </summary>
		/// <param name="key">your API key</param>
		/// <param name="jobId">Request solution with jobId</param>
		/// <returns>A response containing the solution</returns>
		public async Task<Response> GetSolutionAsync(string key, string jobId)
		{
			var requestUri = "solution/"+ (jobId==null? "" : System.Uri.EscapeDataString(jobId))+"?key=" + (key==null? "" : System.Uri.EscapeDataString(key));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Response>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

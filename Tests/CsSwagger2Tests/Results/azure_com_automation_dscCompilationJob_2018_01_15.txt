//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	public class DscCompilationJob
	{
	}
	
	/// <summary>
	/// The parameters supplied to the create compilation job operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DscCompilationJobCreateParameters
	{
		
		/// <summary>
		/// Gets or sets the location of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Gets or sets name of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The parameters supplied to the create compilation job operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DscCompilationJobCreateProperties Properties { get; set; }
		
		/// <summary>
		/// Gets or sets the tags attached to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// The parameters supplied to the create compilation job operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DscCompilationJobCreateProperties
	{
		
		/// <summary>
		/// The Dsc configuration property associated with the entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="configuration")]
		public DscConfigurationAssociationProperty Configuration { get; set; }
		
		/// <summary>
		/// If a new build version of NodeConfiguration is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="incrementNodeConfigurationBuild")]
		public System.Nullable<System.Boolean> IncrementNodeConfigurationBuild { get; set; }
		
		/// <summary>
		/// Gets or sets the parameters of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, string> Parameters { get; set; }
	}
	
	/// <summary>
	/// The response model for the list job operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DscCompilationJobListResult
	{
		
		/// <summary>
		/// Gets or sets the next link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Gets or sets a list of Dsc Compilation jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public DscCompilationJob[] Value { get; set; }
	}
	
	/// <summary>
	/// Definition of Dsc Compilation job properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DscCompilationJobProperties
	{
		
		/// <summary>
		/// The Dsc configuration property associated with the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configuration")]
		public DscConfigurationAssociationProperty Configuration { get; set; }
		
		/// <summary>
		/// Gets the creation time of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Gets the end time of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Gets the exception of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exception")]
		public string Exception { get; set; }
		
		/// <summary>
		/// Gets the id of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Gets the last modified time of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedTime")]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Gets the last status modified time of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastStatusModifiedTime")]
		public System.Nullable<System.DateTimeOffset> LastStatusModifiedTime { get; set; }
		
		/// <summary>
		/// Gets or sets the parameters of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, string> Parameters { get; set; }
		
		/// <summary>
		/// The provisioning state of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<DscCompilationJobPropertiesProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Gets or sets the runOn which specifies the group name where the job is to be executed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runOn")]
		public string RunOn { get; set; }
		
		/// <summary>
		/// Gets the start time of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Gets the compilation job started by.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startedBy")]
		public string StartedBy { get; set; }
		
		/// <summary>
		/// Gets or sets the status of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DscCompilationJobPropertiesStatus> Status { get; set; }
		
		/// <summary>
		/// Gets or sets the status details of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusDetails")]
		public string StatusDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DscCompilationJobPropertiesProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DscCompilationJobPropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		New = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Activating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopped = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Blocked = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disconnected = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspending = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Stopping = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resuming = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Removing = 12,
	}
	
	/// <summary>
	/// The Dsc configuration property associated with the entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DscConfigurationAssociationProperty
	{
		
		/// <summary>
		/// Gets or sets the name of the Dsc configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The provisioning state of the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum JobProvisioningStateProperty
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 3,
	}
	
	/// <summary>
	/// Definition of the job stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobStream
	{
		
		/// <summary>
		/// Gets or sets the id of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Definition of the job stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public JobStreamProperties Properties { get; set; }
	}
	
	/// <summary>
	/// The response model for the list job stream operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobStreamListResult
	{
		
		/// <summary>
		/// Gets or sets the next link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// A list of job streams.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public JobStream[] Value { get; set; }
	}
	
	/// <summary>
	/// Definition of the job stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobStreamProperties
	{
		
		/// <summary>
		/// Gets or sets the id of the job stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobStreamId")]
		public string JobStreamId { get; set; }
		
		/// <summary>
		/// Gets or sets the stream text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="streamText")]
		public string StreamText { get; set; }
		
		/// <summary>
		/// Gets or sets the stream type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="streamType")]
		public System.Nullable<JobStreamPropertiesStreamType> StreamType { get; set; }
		
		/// <summary>
		/// Gets or sets the summary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public string Summary { get; set; }
		
		/// <summary>
		/// Gets or sets the creation time of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="time")]
		public System.Nullable<System.DateTimeOffset> Time { get; set; }
		
		/// <summary>
		/// Gets or sets the values of the job stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Collections.Generic.Dictionary<string, object> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum JobStreamPropertiesStreamType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Progress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Output = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Warning = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Debug = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Verbose = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Any = 6,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve a list of dsc compilation jobs.
		/// DscCompilationJob_ListByAutomationAccount subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="filter">The filter to apply on the operation.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task<DscCompilationJobListResult> DscCompilationJob_ListByAutomationAccountAsync(string resourceGroupName, string automationAccountName, string filter, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/compilationjobs&$filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DscCompilationJobListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve the Dsc configuration compilation job identified by job id.
		/// DscCompilationJob_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{compilationJobName}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="compilationJobName">The DSC configuration Id.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task<DscCompilationJob> DscCompilationJob_GetAsync(string resourceGroupName, string automationAccountName, string compilationJobName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/compilationjobs/"+ (compilationJobName==null? "" : System.Uri.EscapeDataString(compilationJobName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DscCompilationJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates the Dsc compilation job of the configuration.
		/// DscCompilationJob_Create subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{compilationJobName}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="compilationJobName">The DSC configuration Id.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <param name="requestBody">The parameters supplied to the create compilation job operation.</param>
		public async Task DscCompilationJob_CreateAsync(string resourceGroupName, string automationAccountName, string compilationJobName, string subscriptionId, string api_version, DscCompilationJobCreateParameters requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/compilationjobs/"+ (compilationJobName==null? "" : System.Uri.EscapeDataString(compilationJobName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieve all the job streams for the compilation Job.
		/// DscCompilationJobStream_ListByJob subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="jobId">The job id.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task<JobStreamListResult> DscCompilationJobStream_ListByJobAsync(string resourceGroupName, string automationAccountName, string jobId, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/compilationjobs/"+ (jobId==null? "" : System.Uri.EscapeDataString(jobId))+"/streams&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<JobStreamListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve the job stream identified by job stream id.
		/// DscCompilationJob_GetStream subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams/{jobStreamId}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="jobId">The job id.</param>
		/// <param name="jobStreamId">The job stream id.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task<JobStream> DscCompilationJob_GetStreamAsync(string resourceGroupName, string automationAccountName, string jobId, string jobStreamId, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/compilationjobs/"+ (jobId==null? "" : System.Uri.EscapeDataString(jobId))+"/streams/"+ (jobStreamId==null? "" : System.Uri.EscapeDataString(jobStreamId))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<JobStream>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

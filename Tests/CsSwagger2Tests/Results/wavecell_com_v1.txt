//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BulkSmsRequest
	{
		
		/// <summary>
		/// Max length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientBatchId")]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public string ClientBatchId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMessagesInResponse")]
		public System.Nullable<System.Boolean> IncludeMessagesInResponse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public SmsRequest[] Messages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="template")]
		public SmsTemplate Template { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SmsRequest
	{
		
		/// <summary>
		/// Max length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientMessageId")]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public string ClientMessageId { get; set; }
		
		/// <summary>
		/// Required
		/// Pattern: ^\+{0,1}[1-9]{1}[0-9]{6,14}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="destination")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\+{0,1}[1-9]{1}[0-9]{6,14}$")]
		public string Destination { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public System.Nullable<SmsRequestEncoding> Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiry")]
		public System.Nullable<System.DateTimeOffset> Expiry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scheduled")]
		public System.Nullable<System.DateTimeOffset> Scheduled { get; set; }
		
		/// <summary>
		/// Max length: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SmsRequestEncoding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GSM7bit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNICODE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SmsTemplate
	{
		
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public SmsRequestEncoding Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiry")]
		public System.Nullable<System.DateTimeOffset> Expiry { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scheduled")]
		public System.Nullable<System.DateTimeOffset> Scheduled { get; set; }
		
		/// <summary>
		/// Max length: 16
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		[System.ComponentModel.DataAnnotations.MaxLength(16)]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BulkSmsRequestCompact
	{
		
		/// <summary>
		/// Max length: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientBatchId")]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public string ClientBatchId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="destinations")]
		public string[] Destinations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMessagesInResponse")]
		public System.Nullable<System.Boolean> IncludeMessagesInResponse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="template")]
		public SmsTemplate Template { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BulkSmsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="acceptedCount")]
		public System.Nullable<System.Int32> AcceptedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="batchId")]
		public string BatchId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientBatchId")]
		public string ClientBatchId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public SmsResponse[] Messages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rejectedCount")]
		public System.Nullable<System.Int32> RejectedCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SmsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="clientMessageId")]
		public string ClientMessageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public string Destination { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SmsStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="umid")]
		public string Umid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SmsStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorId")]
		public string ErrorId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// SmsV1StatusGet sms/v1/status
		/// </summary>
		public async Task SmsV1StatusGetAsync()
		{
			var requestUri = "sms/v1/status";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// SendManyMessages sms/v1/{subAccountId}/many
		/// </summary>
		/// <returns>OK</returns>
		public async Task SendManyMessagesAsync(string subAccountId, BulkSmsRequest requestBody)
		{
			var requestUri = "sms/v1/"+ (subAccountId==null? "" : System.Uri.EscapeDataString(subAccountId))+"/many";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// SendManyMessagesInCompactForm sms/v1/{subAccountId}/many/compact
		/// </summary>
		/// <returns>OK</returns>
		public async Task SendManyMessagesInCompactFormAsync(string subAccountId, BulkSmsRequestCompact requestBody)
		{
			var requestUri = "sms/v1/"+ (subAccountId==null? "" : System.Uri.EscapeDataString(subAccountId))+"/many/compact";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// SendSingleMessage sms/v1/{subAccountId}/single
		/// </summary>
		/// <returns>OK</returns>
		public async Task SendSingleMessageAsync(string subAccountId, SmsRequest requestBody)
		{
			var requestUri = "sms/v1/"+ (subAccountId==null? "" : System.Uri.EscapeDataString(subAccountId))+"/single";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

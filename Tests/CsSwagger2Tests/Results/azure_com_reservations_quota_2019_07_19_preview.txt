//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The actions for auto quota increase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Actions
	{
		
		/// <summary>
		/// The email actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailActions")]
		public object EmailActions { get; set; }
		
		/// <summary>
		/// The phone actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneActions")]
		public object PhoneActions { get; set; }
	}
	
	/// <summary>
	/// The Auto quota increase state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AqiState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		enabled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disabled = 1,
	}
	
	/// <summary>
	/// Auto Quota Increase settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AutoQuotaIncreaseDetail
	{
		
		/// <summary>
		/// The subscription Id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public AutoQuotaIncreaseSettings Properties { get; set; }
		
		/// <summary>
		/// The type of the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Actions for auto quota increase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AutoQuotaIncreaseSettings
	{
		
		/// <summary>
		/// The actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onFailure")]
		public Actions OnFailure { get; set; }
		
		/// <summary>
		/// The actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onSuccess")]
		public Actions OnSuccess { get; set; }
		
		/// <summary>
		/// Settings for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public AqiSettings Settings { get; set; }
		
		/// <summary>
		/// The SupportRequest action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportTicketAction")]
		public SupportRequestAction SupportTicketAction { get; set; }
	}
	
	/// <summary>
	/// Settings for auto quota increase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AqiSettings
	{
		
		/// <summary>
		/// The Auto quota increase state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autoQuotaIncreaseState")]
		public AqiState AutoQuotaIncreaseState { get; set; }
	}
	
	/// <summary>
	/// The SupportRequest action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SupportRequestAction
	{
		
		/// <summary>
		/// The alternate email address of the recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternateEmailAddresses")]
		public string[] AlternateEmailAddresses { get; set; }
		
		/// <summary>
		/// The Auto quota increase state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autoQuotaIncreaseState")]
		public AqiState AutoQuotaIncreaseState { get; set; }
		
		/// <summary>
		/// The country of the recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The first name of the recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		/// <summary>
		/// The last name of the recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		/// <summary>
		/// The phone number of the recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// The contact method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferredContactMethod")]
		public ContactMethod PreferredContactMethod { get; set; }
		
		/// <summary>
		/// The primary email addresses of the recipients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryEmailAddress")]
		public string PrimaryEmailAddress { get; set; }
		
		/// <summary>
		/// The Severity types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public SeverityTypes Severity { get; set; }
		
		/// <summary>
		/// The support language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportLanguage")]
		public string SupportLanguage { get; set; }
	}
	
	/// <summary>
	/// The contact method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ContactMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Email = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phone = 1,
	}
	
	/// <summary>
	/// Quota change requests information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreateGenericQuotaRequestParameters
	{
		
		/// <summary>
		/// Quota change requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public CurrentQuotaLimitBase[] Value { get; set; }
	}
	
	/// <summary>
	/// Quota limits.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CurrentQuotaLimitBase
	{
		
		/// <summary>
		/// The current resource usages information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentValue")]
		public System.Nullable<System.Int32> CurrentValue { get; set; }
		
		/// <summary>
		/// The quota limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// Name of the resource provide by the resource Provider. Please use this name property for quotaRequests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public object Name { get; set; }
		
		/// <summary>
		/// Additional properties for the specific resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public string Properties { get; set; }
		
		/// <summary>
		/// The quota period over which the usage values are summarized, such as - P1D (Per one day), PT1M (Per one minute), PT1S (Per one second). This parameter is optional because, for some resources like compute, the period doesnâ€™t matter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaPeriod")]
		public string QuotaPeriod { get; set; }
		
		/// <summary>
		/// The resource types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public ResourceTypesName ResourceType { get; set; }
		
		/// <summary>
		///  The units of the limit, such as - Count, Bytes, etc. Use the unit field provided in the Get quota response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// Quota limits.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CurrentQuotaLimit
	{
		
		/// <summary>
		/// The quota request status details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public QuotaRequestStatusDetails Properties { get; set; }
		
		/// <summary>
		/// Quota limits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaInformation")]
		public CurrentQuotaLimitBase QuotaInformation { get; set; }
	}
	
	/// <summary>
	/// The quota request status details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestStatusDetails
	{
		
		/// <summary>
		/// A user friendly message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The quota request status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public QuotaRequestState ProvisioningState { get; set; }
	}
	
	/// <summary>
	/// Email Action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EmailAction
	{
		
		/// <summary>
		/// The email address for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailAddress")]
		public string EmailAddress { get; set; }
	}
	
	/// <summary>
	/// The email actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EmailActions
	{
		
		/// <summary>
		/// The list of actions based on the success or failure of automatic quota increase action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public EmailAction[] Value { get; set; }
	}
	
	/// <summary>
	/// The api error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ExceptionResponse
	{
		
		/// <summary>
		/// The api error details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ServiceError Error { get; set; }
	}
	
	/// <summary>
	/// The api error details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ServiceError
	{
		
		/// <summary>
		/// The error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The list of error details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ServiceErrorDetail[] Details { get; set; }
		
		/// <summary>
		/// The error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The error details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ServiceErrorDetail
	{
		
		/// <summary>
		/// The error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The actions for auto quota increase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OnFailure
	{
		
		/// <summary>
		/// The email actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailActions")]
		public object EmailActions { get; set; }
		
		/// <summary>
		/// The phone actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneActions")]
		public object PhoneActions { get; set; }
	}
	
	/// <summary>
	/// The actions for auto quota increase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OnSuccess
	{
		
		/// <summary>
		/// The email actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailActions")]
		public object EmailActions { get; set; }
		
		/// <summary>
		/// The phone actions for auto quota increase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneActions")]
		public object PhoneActions { get; set; }
	}
	
	/// <summary>
	/// Phone Action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PhoneAction
	{
		
		/// <summary>
		/// The phone number for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneNumber")]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// The contact method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferredChannel")]
		public ContactMethod PreferredChannel { get; set; }
	}
	
	/// <summary>
	/// Quota limits.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaLimits
	{
		
		/// <summary>
		/// The uri to fetch the next page of quota limits. When there are no more pages, this is null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Quota limits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public CurrentQuotaLimitBase[] Value { get; set; }
	}
	
	/// <summary>
	/// Quota limits request response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaLimitsResponse
	{
		
		/// <summary>
		/// The uri to fetch the next page of quota limits. When there are no more pages, this is null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Quota limits with the quota request status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public CurrentQuotaLimit[] Value { get; set; }
	}
	
	/// <summary>
	/// The details of the quota Request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestDetails
	{
		
		/// <summary>
		/// The quota request Id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the quota request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The details of quota request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public QuotaRequestProperties Properties { get; set; }
		
		/// <summary>
		/// Type of resource. "Microsoft.Capacity/ServiceLimits"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The details of quota request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestProperties
	{
		
		/// <summary>
		/// User friendly status message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The quota request status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public QuotaRequestState ProvisioningState { get; set; }
		
		/// <summary>
		/// The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestSubmitTime")]
		public System.Nullable<System.DateTimeOffset> RequestSubmitTime { get; set; }
		
		/// <summary>
		/// The quotaRequests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public SubRequest[] Value { get; set; }
	}
	
	/// <summary>
	/// The sub-request submitted with the quota request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SubRequest
	{
		
		/// <summary>
		/// The Resource limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// User friendly status message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The Resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public object Name { get; set; }
		
		/// <summary>
		/// The quota request status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public QuotaRequestState ProvisioningState { get; set; }
		
		/// <summary>
		/// Resource type for which the quota check was made.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Sub request id for individual request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subRequestId")]
		public string SubRequestId { get; set; }
		
		/// <summary>
		///  The units of the limit, such as - Count, Bytes, etc. Use the unit field provided in the Get quota response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// Quota requests information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestDetailsList
	{
		
		/// <summary>
		/// The uri to fetch the next page of quota limits. When there are no more pages, this is null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// The quota Requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public QuotaRequestDetails[] Value { get; set; }
	}
	
	/// <summary>
	/// Quota submit request response
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestOneResourceSubmitResponse
	{
		
		/// <summary>
		/// The quota request Id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the quota request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The details of quota request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public QuotaRequestOneResourceProperties Properties { get; set; }
		
		/// <summary>
		/// Type of resource. "Microsoft.Capacity/ServiceLimits"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The details of quota request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestOneResourceProperties
	{
		
		/// <summary>
		/// User friendly status message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Quota limits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public CurrentQuotaLimitBase Properties { get; set; }
		
		/// <summary>
		/// The quota request status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public QuotaRequestState ProvisioningState { get; set; }
		
		/// <summary>
		/// The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestSubmitTime")]
		public System.Nullable<System.DateTimeOffset> RequestSubmitTime { get; set; }
	}
	
	/// <summary>
	/// The quota request status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum QuotaRequestState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Accepted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invalid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 4,
	}
	
	/// <summary>
	/// Quota submit request response
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestSubmitResponse
	{
		
		/// <summary>
		/// The quota request Id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the quota request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The details of quota request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public QuotaRequestProperties Properties { get; set; }
		
		/// <summary>
		/// Type of resource. "Microsoft.Capacity/serviceLimits"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The quota request submit response with request id.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaRequestSubmitResponse201
	{
		
		/// <summary>
		/// The quota request id. Please use the requestId to check the request status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The operation Id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The quota request status details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public QuotaRequestStatusDetails Properties { get; set; }
		
		/// <summary>
		/// The resource type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The resource types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ResourceTypesName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dedicated = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shared = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		serviceSpecific = 3,
	}
	
	/// <summary>
	/// The Severity types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SeverityTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Critical = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Moderate = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimal = 2,
	}
	
	/// <summary>
	/// The support contact types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SupportContactTypes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		chat = 2,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// For the specified subscription, gets the Auto Quota Increase enrollment status.
		/// Gets the Auto Quota Increase enrollment details for the specified subscription.
		/// AutoQuotaIncrease_GetProperties subscriptions/{subscriptionId}/providers/Microsoft.Capacity/autoQuotaIncrease
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="api_version">Api version.</param>
		/// <returns>Ok. Returning the properties of auto quota increase .</returns>
		public async Task<AutoQuotaIncreaseDetail> AutoQuotaIncrease_GetPropertiesAsync(string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/autoQuotaIncrease&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AutoQuotaIncreaseDetail>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// For the specified subscription, sets the Auto Quota Increase enrollment properties.
		/// Sets the Auto Quota Increase enrollment properties for the specified subscription.
		/// AutoQuotaIncrease_Create subscriptions/{subscriptionId}/providers/Microsoft.Capacity/autoQuotaIncrease
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="api_version">Api version.</param>
		/// <param name="requestBody">Auto Quota increase request payload.</param>
		/// <returns>Ok. Returning the updated status of auto quota increase request.</returns>
		public async Task<AutoQuotaIncreaseDetail> AutoQuotaIncrease_CreateAsync(string subscriptionId, string api_version, AutoQuotaIncreaseDetail requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/autoQuotaIncrease&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AutoQuotaIncreaseDetail>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the current quota limit and usages for all the resources by the resource provider at the specified location.
		/// This API gets the current quota limits and usages for the resource provider for the specified location. This response can be used to submit quotaRequests.
		/// Quotas_listStatus subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="providerId">Azure resource Provider id.</param>
		/// <param name="location">Azure region.</param>
		/// <param name="api_version">Api version.</param>
		/// <returns>OK. Quota information will be returned as response with pagination.</returns>
		public async Task<QuotaLimits> Quotas_listStatusAsync(string subscriptionId, string providerId, string location, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/resourceProviders/"+ (providerId==null? "" : System.Uri.EscapeDataString(providerId))+"/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/serviceLimits&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QuotaLimits>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the current quota limit and usages for the resource provider for the specified location for the specific resource in the parameter.
		/// This API gets the current quota limit and usages for the specific resource for resource provider for the specified location. This response can be used to submit quotaRequests.
		/// Quota_listStatus subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="providerId">Azure resource Provider id.</param>
		/// <param name="location">Azure region.</param>
		/// <param name="api_version">Api version.</param>
		/// <param name="resourceName">The Resource name for the specific resource provider, such as SKU name for Microsoft.Compute, pool for Microsoft.Batch.</param>
		/// <returns>OK. Quota information will be returned as response with pagination.</returns>
		public async Task<CurrentQuotaLimitBase> Quota_listStatusAsync(string subscriptionId, string providerId, string location, string api_version, string resourceName)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/resourceProviders/"+ (providerId==null? "" : System.Uri.EscapeDataString(providerId))+"/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/serviceLimits/"+ (resourceName==null? "" : System.Uri.EscapeDataString(resourceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CurrentQuotaLimitBase>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submits a Quota Request for a resource provider at the specified location for the specific resource in the parameter.
		/// Submits Quota change request for a resource provider for the specified location for the specific resource in the parameter. To use, first make a Get request to get quota information. This information consists of a list of resources and information regarding those resources. For all the resources in that list which require an update to their quotas, update their limit fields in the response from the Get request to their new values. Then, submit this updated JSON object to this quota request API. This will update the quota to the values specified. The location header in the response will be used to track the status of the quota request. Please check the provisioningState field in the response.
		/// QuotaRequest_Create subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="providerId">Azure resource Provider id.</param>
		/// <param name="location">Azure region.</param>
		/// <param name="resourceName">The Resource name for the specific resource provider, such as SKU name for Microsoft.Compute, pool for Microsoft.Batch.</param>
		/// <param name="api_version">Api version.</param>
		/// <param name="requestBody">Quota requests payload.</param>
		/// <returns>OK. Returns Quota requests details.</returns>
		public async Task<QuotaRequestOneResourceSubmitResponse> QuotaRequest_CreateAsync(string subscriptionId, string providerId, string location, string resourceName, string api_version, CurrentQuotaLimitBase requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/resourceProviders/"+ (providerId==null? "" : System.Uri.EscapeDataString(providerId))+"/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/serviceLimits/"+ (resourceName==null? "" : System.Uri.EscapeDataString(resourceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QuotaRequestOneResourceSubmitResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Submits a Quota Request for a resource provider at the specified location for the specific resource in the parameter.
		/// Submits Quota change request for a resource provider for the specified location for the specific resource in the parameter. To use, first make a Get request to get quota information. This information consists of a list of resources and information regarding those resources. For all the resources in that list which require an update to their quotas, update their limit fields in the response from the Get request to their new values. Then, submit this updated JSON object to this quota request API. This will update the quota to the values specified. The location header in the response will be used to track the status of the quota request. Please check the provisioningState field in the response.
		/// QuotaRequest_Update subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="providerId">Azure resource Provider id.</param>
		/// <param name="location">Azure region.</param>
		/// <param name="resourceName">The Resource name for the specific resource provider, such as SKU name for Microsoft.Compute, pool for Microsoft.Batch.</param>
		/// <param name="api_version">Api version.</param>
		/// <param name="requestBody">Quota requests payload.</param>
		/// <returns>OK. Returns Quota requests details.</returns>
		public async Task<QuotaRequestOneResourceSubmitResponse> QuotaRequest_UpdateAsync(string subscriptionId, string providerId, string location, string resourceName, string api_version, CurrentQuotaLimitBase requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/resourceProviders/"+ (providerId==null? "" : System.Uri.EscapeDataString(providerId))+"/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/serviceLimits/"+ (resourceName==null? "" : System.Uri.EscapeDataString(resourceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QuotaRequestOneResourceSubmitResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// For the specified location and resource Provider, gets the quota requests under the subscription over the time
		/// period of one year ago from now to one year back, based on the filter specified.
		/// For the specified location and Resource provider gets the current quota requests under the subscription over the time period of one year ago from now to one year back. oData filter can be used to select quota requests.
		/// QuotaRequests_ListStatus subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="api_version">Api version.</param>
		/// <param name="providerId">Azure resource Provider id.</param>
		/// <param name="location">Azure region.</param>
		/// <param name="filter">| Field                    | Supported operators  
		///|---------------------|------------------------
		///
		///|requestSubmitTime | ge, le, eq, gt, lt
		///</param>
		/// <param name="top">Number of records to return.
		/// Minimum: 1
		// </param>
		/// <param name="skiptoken">Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls</param>
		/// <returns>Ok. Sending Quota request status and details</returns>
		public async Task<QuotaRequestDetailsList> QuotaRequests_ListStatusAsync(string subscriptionId, string api_version, string providerId, string location, string filter, int top, string skiptoken)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/resourceProviders/"+ (providerId==null? "" : System.Uri.EscapeDataString(providerId))+"/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/serviceLimitsRequests&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version))+"&$filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&$top="+top+"&$skiptoken=" + (skiptoken==null? "" : System.Uri.EscapeDataString(skiptoken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QuotaRequestDetailsList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the Quota request status by requestId, for the specified resource provider at specified location.
		/// Gets the QuotaRequest details and status by the quota requestId for the resources for the resource provider at a specific location. The requestId is returned as response to the Put requests for serviceLimits.
		/// QuotaRequests_GetStatus subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}
		/// </summary>
		/// <param name="subscriptionId">Azure subscription id.</param>
		/// <param name="api_version">Api version.</param>
		/// <param name="providerId">Azure resource Provider id.</param>
		/// <param name="location">Azure region.</param>
		/// <param name="id">Quota Request id.</param>
		/// <returns>Ok. Returning the status for the quota request .</returns>
		public async Task<QuotaRequestDetails> QuotaRequests_GetStatusAsync(string subscriptionId, string api_version, string providerId, string location, string id)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Capacity/resourceProviders/"+ (providerId==null? "" : System.Uri.EscapeDataString(providerId))+"/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/serviceLimitsRequests/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<QuotaRequestDetails>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

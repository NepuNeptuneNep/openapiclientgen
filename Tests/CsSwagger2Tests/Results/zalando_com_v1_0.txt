//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A single article
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article
	{
		
		/// <summary>
		/// timestamp the article was available in the Zalando webshop
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="activationDate")]
		public System.DateTimeOffset ActivationDate { get; set; }
		
		/// <summary>
		/// any additional information of the article 
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="additionalInfos")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] AdditionalInfos { get; set; }
		
		/// <summary>
		/// age group of the article belongs to
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ageGroups")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] AgeGroups { get; set; }
		
		/// <summary>
		/// article attributes
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public Article_Attribute[] Attributes { get; set; }
		
		/// <summary>
		/// will be true if at least one article unit is available
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available")]
		public bool Available { get; set; }
		
		/// <summary>
		/// Zalando API Brand Schema
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="brand")]
		public Brand Brand { get; set; }
		
		/// <summary>
		/// category keys of the article belongs to
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="categoryKeys")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] CategoryKeys { get; set; }
		
		/// <summary>
		/// the main color of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="color")]
		public string Color { get; set; }
		
		/// <summary>
		/// gender of the article belongs to
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="genders")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Genders { get; set; }
		
		/// <summary>
		/// unique article id
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Zalando API Article Media Schema
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="media")]
		public Article_Media Media { get; set; }
		
		/// <summary>
		/// unique article model id
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// article name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// collection season the article belongs to
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="season")]
		public ArticleSeason Season { get; set; }
		
		/// <summary>
		/// collection year the article belongs to. Could be either a year or 'ALL'
		/// Required
		/// Pattern: ^ALL$|^20[0-9]{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="seasonYear")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^ALL$|^20[0-9]{2}$")]
		public string SeasonYear { get; set; }
		
		/// <summary>
		/// url of the article within the Zalando webshop
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopUrl")]
		public string ShopUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// price of the article
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="units")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Article_Unit[] Units { get; set; }
	}
	
	/// <summary>
	/// Zalando API Article Attribute Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Attribute
	{
		
		/// <summary>
		/// name of the article attribute
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// value of the article attribute
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="values")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Zalando API Brand Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Brand
	{
		
		/// <summary>
		/// Zalando API BrandFamily Schema
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brandFamily")]
		public BrandFamily BrandFamily { get; set; }
		
		/// <summary>
		/// The unique key for a brand
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The url of the large brand logo within the Zalando web shop
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logoLargeUrl")]
		public string LogoLargeUrl { get; set; }
		
		/// <summary>
		/// The url of the brand logo within the Zalando web shop
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logoUrl")]
		public string LogoUrl { get; set; }
		
		/// <summary>
		/// Name of the brand
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The url of the brand within the Zalando web shop
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopUrl")]
		public string ShopUrl { get; set; }
	}
	
	/// <summary>
	/// Zalando API BrandFamily Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class BrandFamily
	{
		
		/// <summary>
		/// The unique key for a brandFamily
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Name of the brandFamily
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The url of the brandFamily within the Zalando web shop
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopUrl")]
		public string ShopUrl { get; set; }
	}
	
	/// <summary>
	/// Zalando API Article Media Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Media
	{
		
		/// <summary>
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="images")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public Article_Image[] Images { get; set; }
	}
	
	/// <summary>
	/// Zalando API Article Image Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Image
	{
		
		/// <summary>
		/// large HD image of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="largeHdUrl")]
		public string LargeHdUrl { get; set; }
		
		/// <summary>
		/// large image of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="largeUrl")]
		public string LargeUrl { get; set; }
		
		/// <summary>
		/// medium HD image of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediumHdUrl")]
		public string MediumHdUrl { get; set; }
		
		/// <summary>
		/// medium image of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mediumUrl")]
		public string MediumUrl { get; set; }
		
		/// <summary>
		/// sequence of the article images
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="orderNumber")]
		public int OrderNumber { get; set; }
		
		/// <summary>
		/// small HD image of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="smallHdUrl")]
		public string SmallHdUrl { get; set; }
		
		/// <summary>
		/// small image of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="smallUrl")]
		public string SmallUrl { get; set; }
		
		/// <summary>
		/// thumbnail HD url of the article images
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="thumbnailHdUrl")]
		public string ThumbnailHdUrl { get; set; }
		
		/// <summary>
		/// model or non model type article images
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum ArticleSeason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUMMER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 2,
	}
	
	/// <summary>
	/// Zalando API Article Unit Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Unit
	{
		
		/// <summary>
		/// availability of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="available")]
		public bool Available { get; set; }
		
		/// <summary>
		/// article id (sku)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Zalando API Article Price Schema
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originalPrice")]
		public Article_Price OriginalPrice { get; set; }
		
		/// <summary>
		/// partner id (vendor id) of the article
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partnerId")]
		public string PartnerId { get; set; }
		
		/// <summary>
		/// Zalando API Article Price Schema
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public Article_Price Price { get; set; }
		
		/// <summary>
		/// article size
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
		
		/// <summary>
		/// stock of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stock")]
		public int Stock { get; set; }
	}
	
	/// <summary>
	/// Zalando API Article Price Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Price
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="formatted")]
		public string Formatted { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// Zalando API Article Review Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Review
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="articleId")]
		public string ArticleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="articleModelId")]
		public string ArticleModelId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="articleSizeRatings")]
		public Article_ReviewArticleSizeRatings ArticleSizeRatings { get; set; }
		
		/// <summary>
		/// article review created date and time
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.DateTimeOffset Created { get; set; }
		
		/// <summary>
		/// customer city in the article review
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerCity")]
		public string CustomerCity { get; set; }
		
		/// <summary>
		/// customer country in the article review
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerCountry")]
		public string CustomerCountry { get; set; }
		
		/// <summary>
		/// Customer short name in the article review
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerNickname")]
		public string CustomerNickname { get; set; }
		
		/// <summary>
		/// description of the article review
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// customer review helpful count of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="helpfulCount")]
		public int HelpfulCount { get; set; }
		
		/// <summary>
		/// language in the article review
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// customer rating of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating")]
		public int Rating { get; set; }
		
		/// <summary>
		/// customer recommend to the article
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommend")]
		public System.Nullable<System.Boolean> Recommend { get; set; }
		
		/// <summary>
		/// unique article review id
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reviewId")]
		public string ReviewId { get; set; }
		
		/// <summary>
		/// title in the article review
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// customer review unhelpful count of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unhelpfulCount")]
		public int UnhelpfulCount { get; set; }
	}
	
	public class Article_ReviewArticleSizeRatings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BOOTLEG_WIDTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CHEST { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CHEST_GIRTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> COLLAR_SIZE { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CUP_SIZE { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HIPS_OR_REAR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LEG_FIT { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LENGTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OVERALL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SHOE_WIDTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SHOULDERS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SLEEVES { get; set; }
	}
	
	/// <summary>
	/// Zalando API Paged Article Reviews Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Reviews
	{
	}
	
	/// <summary>
	/// Zalando API Paged Article Reviews Summaries Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Reviews_Summaries
	{
	}
	
	/// <summary>
	/// Zalando API Article Reviews Summary Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Article_Reviews_Summary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="articleModelId")]
		public string ArticleModelId { get; set; }
		
		/// <summary>
		/// size rating of the article
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="articleSizeRatings")]
		public Article_Reviews_SummaryArticleSizeRatings ArticleSizeRatings { get; set; }
		
		/// <summary>
		/// average star rating of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="averageStarRating")]
		public double AverageStarRating { get; set; }
		
		/// <summary>
		/// number of positive recommendations to the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUserPositiveRecommendations")]
		public int NumberOfUserPositiveRecommendations { get; set; }
		
		/// <summary>
		/// number of users recommended to the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUserRecommendations")]
		public int NumberOfUserRecommendations { get; set; }
		
		/// <summary>
		/// number of user reviews of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="numberOfUserReviews")]
		public int NumberOfUserReviews { get; set; }
		
		/// <summary>
		/// start rating distribution of the article
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="starRatingDistribution")]
		public Article_Reviews_SummaryStarRatingDistribution StarRatingDistribution { get; set; }
	}
	
	public class Article_Reviews_SummaryArticleSizeRatings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BOOTLEG_WIDTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CHEST { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CHEST_GIRTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> COLLAR_SIZE { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CUP_SIZE { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> HIPS_OR_REAR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LEG_FIT { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LENGTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OVERALL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SHOE_WIDTH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SHOULDERS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SLEEVES { get; set; }
	}
	
	public class Article_Reviews_SummaryStarRatingDistribution
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1")]
		public int _1 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2")]
		public int _2 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3")]
		public int _3 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4")]
		public int _4 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="5")]
		public int _5 { get; set; }
	}
	
	/// <summary>
	/// A simple container object that carries paging information as well as a list of articles on the `content` property.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Articles
	{
	}
	
	/// <summary>
	/// Zalando API Paged Brands Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Brands
	{
	}
	
	/// <summary>
	/// Zalando API Paged Categories Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Categories
	{
	}
	
	/// <summary>
	/// Zalando API Category Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Category
	{
		
		/// <summary>
		/// The list of keys of the child categories
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="childKeys")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] ChildKeys { get; set; }
		
		/// <summary>
		/// The numeric ID for a category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cid")]
		public System.Nullable<System.Int32> Cid { get; set; }
		
		/// <summary>
		/// The category is hidden and not shown on the Zalando web shop
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hidden")]
		public System.Nullable<System.Boolean> Hidden { get; set; }
		
		/// <summary>
		/// The unique key for a category
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Name of the category
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Containing articles are from last seasons
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outlet")]
		public System.Nullable<System.Boolean> Outlet { get; set; }
		
		/// <summary>
		/// The key of the parent category
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentKey")]
		public string ParentKey { get; set; }
		
		/// <summary>
		/// list of filter names that are reasonable to use within this category
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="suggestedFilters")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] SuggestedFilters { get; set; }
		
		/// <summary>
		/// The target group of the articles from this category
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetGroup")]
		public CategoryTargetGroup TargetGroup { get; set; }
		
		/// <summary>
		/// The type of the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum CategoryTargetGroup
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WOMEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KIDS = 3,
	}
	
	/// <summary>
	/// Zalando API Domain Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Domain
	{
		
		/// <summary>
		/// domain country code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="countryCode")]
		public string CountryCode { get; set; }
		
		/// <summary>
		/// domain currency code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// domain language
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// domain root category
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rootCategoryKey")]
		public string RootCategoryKey { get; set; }
		
		/// <summary>
		/// domain specific url
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopUrl")]
		public string ShopUrl { get; set; }
		
		/// <summary>
		/// domain tax rate
		/// Required
		/// Minimum: 0
		/// Maximum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="taxRate")]
		[System.ComponentModel.DataAnnotations.Range(0, 1)]
		public double TaxRate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class ErrorDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="invalidName")]
		public System.Nullable<System.Boolean> InvalidName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="invalidValues")]
		public string[] InvalidValues { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class ErrorMessage
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public ErrorDetail[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public int Status { get; set; }
	}
	
	/// <summary>
	/// Zalando API Facet Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Facet
	{
		
		/// <summary>
		/// list of the calculated article counts for each filter value
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="facets")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Facet_Value[] Facets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
	}
	
	/// <summary>
	/// Zalando API FacetValue Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Facet_Value
	{
		
		/// <summary>
		/// number of articles matching this filter value
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Zalando API Filter Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Filter
	{
		
		/// <summary>
		/// can this filter be used multiple times with different values in one search request
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="multiValue")]
		public bool MultiValue { get; set; }
		
		/// <summary>
		/// The unique name for a filter
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// filter enum types
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public FilterType Type { get; set; }
		
		/// <summary>
		/// only if type is 'enum' this list contains all possible filter values
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="values")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public Filter_Value[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public enum FilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKU = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KEY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RANGE = 4,
	}
	
	/// <summary>
	/// Zalando API FilterValue Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Filter_Value
	{
		
		/// <summary>
		/// translated display name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The key for a filterValue. Only unique within one filter
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// wrapper object for paged responses
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Page
	{
		
		/// <summary>
		/// page content
		/// Required
		/// Minimum items: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="content")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		public string[] Content { get; set; }
		
		/// <summary>
		/// page number
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="page")]
		public int Page1 { get; set; }
		
		/// <summary>
		/// total number of elements in a page
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="size")]
		public int Size { get; set; }
		
		/// <summary>
		/// total elements in the response
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="totalElements")]
		public int TotalElements { get; set; }
		
		/// <summary>
		/// total number of pages in the response
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="totalPages")]
		public int TotalPages { get; set; }
	}
	
	/// <summary>
	/// Zalando API Recommendation Article Schema
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	[System.SerializableAttribute()]
	public class Recommendations_Article
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Zalando API Article Media Schema
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="media")]
		public Article_Media Media { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopUrl")]
		public string ShopUrl { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get Article Reviews
		/// Zalando API Article Reviews Schema
		/// Article_reviewsGetByArticleIdAndArticleModelIdAndMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFields article-reviews
		/// </summary>
		/// <param name="articleId">Article IDs. A list of config SKUs for which the article reviews will be returned.
		///Required if articleModelId is empty.
		///</param>
		/// <param name="articleModelId">Article model IDs. A list of model SKUs for which the article reviews will be returned.
		///Required if articleId is empty.
		///</param>
		/// <param name="minStarRating">To get reviews with minimum star rating.</param>
		/// <param name="maxStarRating">To get reviews with maximum star rating.</param>
		/// <param name="sort">articles are sorted on reviews provided by customers (eg: best)</param>
		/// <param name="page">to request with required page number or pagination</param>
		/// <param name="pageSize">to request with required page size in a page</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Articles Reviews response.</returns>
		public async Task<Article_Reviews> Article_reviewsGetByArticleIdAndArticleModelIdAndMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsAsync(string[] articleId, string[] articleModelId, string minStarRating, string maxStarRating, Article_reviewsGetByArticleIdAndArticleModelIdAndMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsSort sort, string page, string pageSize, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "article-reviews?"+string.Join("&", articleId.Select(z => $"articleId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", articleModelId.Select(z => $"articleModelId={System.Uri.EscapeDataString(z.ToString())}"))+"&minStarRating=" + (minStarRating==null? "" : System.Uri.EscapeDataString(minStarRating))+"&maxStarRating=" + (maxStarRating==null? "" : System.Uri.EscapeDataString(maxStarRating))+"&sort=" + sort+"&page=" + (page==null? "" : System.Uri.EscapeDataString(page))+"&pageSize=" + (pageSize==null? "" : System.Uri.EscapeDataString(pageSize))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Reviews>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article Reviews Summaries
		/// Zalando API Article Reviews Summaries Schema
		/// Article_reviews_summariesGetByArticleModelIdAndPageAndPageSizeAndFields article-reviews-summaries
		/// </summary>
		/// <param name="articleModelId">Article model IDs. A list of model SKUs for which the article review summaries will be returned.</param>
		/// <param name="page">to request with required page number or pagination</param>
		/// <param name="pageSize">to request with required page size in a page</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Articles Reviews Summaries response.</returns>
		public async Task<Article_Reviews_Summaries> Article_reviews_summariesGetByArticleModelIdAndPageAndPageSizeAndFieldsAsync(string[] articleModelId, string page, string pageSize, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "article-reviews-summaries?"+string.Join("&", articleModelId.Select(z => $"articleModelId={System.Uri.EscapeDataString(z.ToString())}"))+"&page=" + (page==null? "" : System.Uri.EscapeDataString(page))+"&pageSize=" + (pageSize==null? "" : System.Uri.EscapeDataString(pageSize))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Reviews_Summaries>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article Reviews Summaries by articleModelId
		/// Zalando API ArticleReviewsSummaries Schema
		/// Article_reviews_summaries_articleModelIdGetByFields article-reviews-summaries/{articleModelId}
		/// </summary>
		/// <param name="articleModelId">To get unique reviews summary from article model Id.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Articles Reviews Summaries by articleModelId response.</returns>
		public async Task<Article_Reviews_Summary> Article_reviews_summaries_articleModelIdGetByFieldsAsync(string articleModelId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "article-reviews-summaries/"+ (articleModelId==null? "" : System.Uri.EscapeDataString(articleModelId))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Reviews_Summary>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article Reviews by reviewId
		/// Zalando API ArticleReviews Schema
		/// Article_reviews_reviewIdGetByFields article-reviews/{reviewId}
		/// </summary>
		/// <param name="reviewId">To get unique review by review Id.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Articles Reviews by reviewId response.</returns>
		public async Task<Article_Review> Article_reviews_reviewIdGetByFieldsAsync(string reviewId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "article-reviews/"+ (reviewId==null? "" : System.Uri.EscapeDataString(reviewId))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Review>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search for Articles
		/// Search for articles based on various different possible filter like e.g. the `brandFamily`, the `catagory` or a
		/// specific `color`. See [Filters](https://todo) for a list of all available filter options.
		/// 
		/// The default `pageSize` for responses is set to `20`. You can add a `pageSize` request parameter to adjust that.
		/// Please keep in mind that the maximum `pageSize` for this resource is `200`.
		/// 
		/// The endpoint also supports reducing the fields returned for each article via the `fields` parameter. Please
		/// refer to [fields parameter](https://todo) for more details.
		/// ArticlesGetByArticleIdAndArticleModelIdAndArticleUnitIdAndActivationDateAndAgeGroupAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndFullTextAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndPageAndPageSizeAndSortAndFields articles
		/// </summary>
		/// <param name="articleId">The `articleIds` to use use for filtering.
		///
		///One or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for
		///more than one to be used. They will be treated as `OR` criteria.</param>
		/// <param name="articleModelId">filters by article ModelId</param>
		/// <param name="articleUnitId">filters by article's unit id</param>
		/// <param name="activationDate">period or time the articles are activated for selling in the shop</param>
		/// <param name="ageGroup">filters by age group (eg: kids)</param>
		/// <param name="assortmentArea">filters by classification of articles (eg: maternity) </param>
		/// <param name="brand">filters by brand key given by user (eg: SA5)</param>
		/// <param name="brandfamily">filters by brand family key (eg: nike) </param>
		/// <param name="category">filters by category (eg: Socks, Rain Coats)</param>
		/// <param name="color">filters by color (eg: red, blue)</param>
		/// <param name="den">filters by den </param>
		/// <param name="filling">filters by different kinds of garment filling materials (eg: satin, wolle)</param>
		/// <param name="fullText">filters by text (eg: search by 'as' gives result with articles of brand Sass)</param>
		/// <param name="gender">filters by gender</param>
		/// <param name="heelForm">filters by heel form (eg: flat)</param>
		/// <param name="heelHeight">filters by height of the heel size or length (eg: xs)</param>
		/// <param name="length">filters by garments length (eg: 3/4 length, knee-length)</param>
		/// <param name="occasion">filters by type of occasion (eg: party, business)</param>
		/// <param name="pattern">filters by pattern on the garments (eg: animal print, plain)</param>
		/// <param name="price">filters all articles in price range (eg: 9-90)</param>
		/// <param name="sale">filters discounted articles marked as sale</param>
		/// <param name="season">filters by season (Autumn/Winter or Spring/Summer)</param>
		/// <param name="shaftHeight">filters by shaft height (eg: s, xs)</param>
		/// <param name="shaftWidth">filters by shaft width (eg: s, l)</param>
		/// <param name="shirtCollar">filters by shirt collar styles (eg: low V neck, lined collar)</param>
		/// <param name="shoeFastener">filters by shoe fastener types (eg: buckle, lacing)</param>
		/// <param name="shoeToecap">filters by shoe toe cap variants (eg: pointed, square)</param>
		/// <param name="shopArea">filters by classification of articles</param>
		/// <param name="size">filters by size</param>
		/// <param name="sports">filters by different sport activities (eg: football)</param>
		/// <param name="technology">filters by technology used to produce the articles</param>
		/// <param name="trouserRise">filters by trouser rise</param>
		/// <param name="upperMaterial">filters by different type of upper material used on garments (eg: lace)</param>
		/// <param name="volume">filters by volume</param>
		/// <param name="page">to request with required page number or pagination</param>
		/// <param name="pageSize">to request with required page size in a page</param>
		/// <param name="sort">sorting order (eg: popularity)</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Articles response.</returns>
		public async Task<Articles> ArticlesGetByArticleIdAndArticleModelIdAndArticleUnitIdAndActivationDateAndAgeGroupAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndFullTextAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndPageAndPageSizeAndSortAndFieldsAsync(
					string[] articleId, 
					string[] articleModelId, 
					string[] articleUnitId, 
					string[] activationDate, 
					string[] ageGroup, 
					string[] assortmentArea, 
					string[] brand, 
					string[] brandfamily, 
					string[] category, 
					string[] color, 
					string[] den, 
					string[] filling, 
					string fullText, 
					string[] gender, 
					string[] heelForm, 
					string[] heelHeight, 
					string length, 
					string[] occasion, 
					string[] pattern, 
					string price, 
					string[] sale, 
					string[] season, 
					string[] shaftHeight, 
					string[] shaftWidth, 
					string[] shirtCollar, 
					string[] shoeFastener, 
					string[] shoeToecap, 
					string[] shopArea, 
					string size, 
					string[] sports, 
					string[] technology, 
					string[] trouserRise, 
					string[] upperMaterial, 
					string[] volume, 
					string page, 
					string pageSize, 
					ArticlesGetByArticleIdAndArticleModelIdAndArticleUnitIdAndActivationDateAndAgeGroupAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndFullTextAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndPageAndPageSizeAndSortAndFieldsSort sort, 
					string[] fields, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles?"+string.Join("&", articleId.Select(z => $"articleId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", articleModelId.Select(z => $"articleModelId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", articleUnitId.Select(z => $"articleUnitId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", activationDate.Select(z => $"activationDate={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ageGroup.Select(z => $"ageGroup={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", assortmentArea.Select(z => $"assortmentArea={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", brand.Select(z => $"brand={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", brandfamily.Select(z => $"brandfamily={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", category.Select(z => $"category={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", color.Select(z => $"color={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", den.Select(z => $"den={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filling.Select(z => $"filling={System.Uri.EscapeDataString(z.ToString())}"))+"&fullText=" + (fullText==null? "" : System.Uri.EscapeDataString(fullText))+"&"+string.Join("&", gender.Select(z => $"gender={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", heelForm.Select(z => $"heelForm={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", heelHeight.Select(z => $"heelHeight={System.Uri.EscapeDataString(z.ToString())}"))+"&length=" + (length==null? "" : System.Uri.EscapeDataString(length))+"&"+string.Join("&", occasion.Select(z => $"occasion={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", pattern.Select(z => $"pattern={System.Uri.EscapeDataString(z.ToString())}"))+"&price=" + (price==null? "" : System.Uri.EscapeDataString(price))+"&"+string.Join("&", sale.Select(z => $"sale={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", season.Select(z => $"season={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shaftHeight.Select(z => $"shaftHeight={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shaftWidth.Select(z => $"shaftWidth={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shirtCollar.Select(z => $"shirtCollar={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shoeFastener.Select(z => $"shoeFastener={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shoeToecap.Select(z => $"shoeToecap={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shopArea.Select(z => $"shopArea={System.Uri.EscapeDataString(z.ToString())}"))+"&size=" + (size==null? "" : System.Uri.EscapeDataString(size))+"&"+string.Join("&", sports.Select(z => $"sports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", technology.Select(z => $"technology={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", trouserRise.Select(z => $"trouserRise={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", upperMaterial.Select(z => $"upperMaterial={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", volume.Select(z => $"volume={System.Uri.EscapeDataString(z.ToString())}"))+"&page=" + (page==null? "" : System.Uri.EscapeDataString(page))+"&pageSize=" + (pageSize==null? "" : System.Uri.EscapeDataString(pageSize))+"&sort=" + sort+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Articles>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article by articleId
		/// Zalando API Article Schema
		/// Articles_articleIdGetByFields articles/{articleId}
		/// </summary>
		/// <param name="articleId">To get unique article for article Id.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Article response.</returns>
		public async Task<Article> Articles_articleIdGetByFieldsAsync(string articleId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles/"+ (articleId==null? "" : System.Uri.EscapeDataString(articleId))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article media by articleId
		/// Zalando API Article Schema
		/// Articles_articleIdMediaGetByFields articles/{articleId}/media
		/// </summary>
		/// <param name="articleId">To get unique article for article Id media.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Article response.</returns>
		public async Task<Article_Media> Articles_articleIdMediaGetByFieldsAsync(string articleId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles/"+ (articleId==null? "" : System.Uri.EscapeDataString(articleId))+"/media&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Media>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article reviews by articleId
		/// Zalando API Article Schema
		/// Articles_articleIdReviewsGetByMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFields articles/{articleId}/reviews
		/// </summary>
		/// <param name="articleId">To get unique article for article Id reviews.</param>
		/// <param name="minStarRating">To get reviews with minimum star rating.</param>
		/// <param name="maxStarRating">To get reviews with maximum star rating.</param>
		/// <param name="sort">articles are sorted on reviews provided by customers (eg: best)</param>
		/// <param name="page">to request with required page number or pagination</param>
		/// <param name="pageSize">to request with required page size in a page</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Article response.</returns>
		public async Task<Article_Reviews> Articles_articleIdReviewsGetByMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsAsync(string articleId, string minStarRating, string maxStarRating, Article_reviewsGetByArticleIdAndArticleModelIdAndMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsSort sort, string page, string pageSize, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles/"+ (articleId==null? "" : System.Uri.EscapeDataString(articleId))+"/reviews&minStarRating=" + (minStarRating==null? "" : System.Uri.EscapeDataString(minStarRating))+"&maxStarRating=" + (maxStarRating==null? "" : System.Uri.EscapeDataString(maxStarRating))+"&sort=" + sort+"&page=" + (page==null? "" : System.Uri.EscapeDataString(page))+"&pageSize=" + (pageSize==null? "" : System.Uri.EscapeDataString(pageSize))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Reviews>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article reviews summary by articleId
		/// Zalando API Article Schema
		/// Articles_articleIdReviews_summaryGetByFields articles/{articleId}/reviews-summary
		/// </summary>
		/// <param name="articleId">To get unique article for article Id reviews summary.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Article response.</returns>
		public async Task<Article_Reviews_Summary> Articles_articleIdReviews_summaryGetByFieldsAsync(string articleId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles/"+ (articleId==null? "" : System.Uri.EscapeDataString(articleId))+"/reviews-summary&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Reviews_Summary>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article units by articleId
		/// Zalando API Article Schema
		/// Articles_articleIdUnitsGetByFields articles/{articleId}/units
		/// </summary>
		/// <param name="articleId">To get unique article for article Id units.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Article response.</returns>
		public async Task<Article_Unit[]> Articles_articleIdUnitsGetByFieldsAsync(string articleId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles/"+ (articleId==null? "" : System.Uri.EscapeDataString(articleId))+"/units&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Unit[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Article units by articleId snd unitId
		/// Zalando API Article Schema
		/// Articles_articleIdUnits_unitIdGetByFields articles/{articleId}/units/{unitId}
		/// </summary>
		/// <param name="articleId">To get unique article for article Id.</param>
		/// <param name="unitId">To get unique article for article Id unit.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Article response.</returns>
		public async Task<Article_Unit> Articles_articleIdUnits_unitIdGetByFieldsAsync(string articleId, string unitId, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "articles/"+ (articleId==null? "" : System.Uri.EscapeDataString(articleId))+"/units/"+ (unitId==null? "" : System.Uri.EscapeDataString(unitId))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Article_Unit>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Shop Brands
		/// Zalando API Brands Schema
		/// BrandsGetByKeyAndNameAndBrandFamilyNameAndBrandFamilyKeyAndPageAndPageSizeAndFields brands
		/// </summary>
		/// <param name="key">Request Brand by key</param>
		/// <param name="name">Request Brand by name</param>
		/// <param name="brandFamilyName">Request Brand by brandFamilyName</param>
		/// <param name="brandFamilyKey">Request Brand by brandFamilyKey</param>
		/// <param name="page">to request with required page number or pagination</param>
		/// <param name="pageSize">to request with required page size in a page</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Brands response.</returns>
		public async Task<Brands> BrandsGetByKeyAndNameAndBrandFamilyNameAndBrandFamilyKeyAndPageAndPageSizeAndFieldsAsync(string[] key, string[] name, string[] brandFamilyName, string[] brandFamilyKey, string page, string pageSize, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "brands?"+string.Join("&", key.Select(z => $"key={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", name.Select(z => $"name={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", brandFamilyName.Select(z => $"brandFamilyName={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", brandFamilyKey.Select(z => $"brandFamilyKey={System.Uri.EscapeDataString(z.ToString())}"))+"&page=" + (page==null? "" : System.Uri.EscapeDataString(page))+"&pageSize=" + (pageSize==null? "" : System.Uri.EscapeDataString(pageSize))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Brands>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Single Brand by Key
		/// Zalando API Brand Schema
		/// Brands_keyGetByFields brands/{key}
		/// </summary>
		/// <param name="key">To get unique Brand by key.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Brand Key response.</returns>
		public async Task<Brand> Brands_keyGetByFieldsAsync(string key, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "brands/"+ (key==null? "" : System.Uri.EscapeDataString(key))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Brand>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Shop Categories
		/// Zalando API Categories Schema
		/// CategoriesGetByNameAndTypeAndOutletAndHiddenAndTargetGroupAndKeyAndParentKeyAndChildKeyAndSuggestedFilterAndPageAndPageSizeAndFields categories
		/// </summary>
		/// <param name="name">Request Categories by names</param>
		/// <param name="type">Request Categories by type</param>
		/// <param name="outlet">Request Categories by outlet</param>
		/// <param name="hidden">Request Categories by hidden</param>
		/// <param name="targetGroup">Request Categories by target group</param>
		/// <param name="key">Request Categories by keys</param>
		/// <param name="parentKey">Request Categories by parent keys</param>
		/// <param name="childKey">Request Categories by child keys</param>
		/// <param name="suggestedFilter">Request Categories by suggested filters</param>
		/// <param name="page">to request with required page number or pagination</param>
		/// <param name="pageSize">to request with required page size in a page</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Categories response.</returns>
		public async Task<Categories> CategoriesGetByNameAndTypeAndOutletAndHiddenAndTargetGroupAndKeyAndParentKeyAndChildKeyAndSuggestedFilterAndPageAndPageSizeAndFieldsAsync(string[] name, string type, string outlet, string hidden, string targetGroup, string[] key, string[] parentKey, string[] childKey, string[] suggestedFilter, string page, string pageSize, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "categories?"+string.Join("&", name.Select(z => $"name={System.Uri.EscapeDataString(z.ToString())}"))+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&outlet=" + (outlet==null? "" : System.Uri.EscapeDataString(outlet))+"&hidden=" + (hidden==null? "" : System.Uri.EscapeDataString(hidden))+"&targetGroup=" + (targetGroup==null? "" : System.Uri.EscapeDataString(targetGroup))+"&"+string.Join("&", key.Select(z => $"key={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", parentKey.Select(z => $"parentKey={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", childKey.Select(z => $"childKey={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", suggestedFilter.Select(z => $"suggestedFilter={System.Uri.EscapeDataString(z.ToString())}"))+"&page=" + (page==null? "" : System.Uri.EscapeDataString(page))+"&pageSize=" + (pageSize==null? "" : System.Uri.EscapeDataString(pageSize))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Categories>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Single Category by Key
		/// Zalando API Category Schema
		/// Categories_keyGetByFields categories/{key}
		/// </summary>
		/// <param name="key">To get unique Category by key.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Category Key response.</returns>
		public async Task<Category> Categories_keyGetByFieldsAsync(string[] key, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "categories/{key}"+string.Join("&", key.Select(z => $"key={System.Uri.EscapeDataString(z.ToString())}"))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Category>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Shop Domains
		/// Zalando API Domains Schema
		/// DomainsGet domains
		/// </summary>
		/// <returns>Domains response.</returns>
		public async Task<Domain[]> DomainsGetAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "domains";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Domain[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Shop Facets
		/// Zalando API Facets Schema
		/// FacetsGetByAgeGroupAndArticleIdAndActivationDateAndArticleModelIdAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndFields facets
		/// </summary>
		/// <param name="ageGroup">filters by age group (eg: kids)</param>
		/// <param name="articleId">The `articleIds` to use use for filtering.
		///
		///One or more `articleIds` might be used as a filter criteria. Submit multiple `articleId` request parameters for
		///more than one to be used. They will be treated as `OR` criteria.</param>
		/// <param name="activationDate">period or time the articles are activated for selling in the shop</param>
		/// <param name="articleModelId">filters by article ModelId</param>
		/// <param name="assortmentArea">filters by classification of articles (eg: maternity) </param>
		/// <param name="brand">filters by brand key given by user (eg: SA5)</param>
		/// <param name="brandfamily">filters by brand family key (eg: nike) </param>
		/// <param name="category">filters by category (eg: Socks, Rain Coats)</param>
		/// <param name="color">filters by color (eg: red, blue)</param>
		/// <param name="den">filters by den </param>
		/// <param name="filling">filters by different kinds of garment filling materials (eg: satin, wolle)</param>
		/// <param name="gender">filters by gender</param>
		/// <param name="heelForm">filters by heel form (eg: flat)</param>
		/// <param name="heelHeight">filters by height of the heel size or length (eg: xs)</param>
		/// <param name="length">filters by garments length (eg: 3/4 length, knee-length)</param>
		/// <param name="occasion">filters by type of occasion (eg: party, business)</param>
		/// <param name="pattern">filters by pattern on the garments (eg: animal print, plain)</param>
		/// <param name="price">filters all articles in price range (eg: 9-90)</param>
		/// <param name="sale">filters discounted articles marked as sale</param>
		/// <param name="season">filters by season (Autumn/Winter or Spring/Summer)</param>
		/// <param name="shaftHeight">filters by shaft height (eg: s, xs)</param>
		/// <param name="shaftWidth">filters by shaft width (eg: s, l)</param>
		/// <param name="shirtCollar">filters by shirt collar styles (eg: low V neck, lined collar)</param>
		/// <param name="shoeFastener">filters by shoe fastener types (eg: buckle, lacing)</param>
		/// <param name="shoeToecap">filters by shoe toe cap variants (eg: pointed, square)</param>
		/// <param name="shopArea">filters by classification of articles</param>
		/// <param name="size">filters by size</param>
		/// <param name="sports">filters by different sport activities (eg: football)</param>
		/// <param name="technology">filters by technology used to produce the articles</param>
		/// <param name="trouserRise">filters by trouser rise</param>
		/// <param name="upperMaterial">filters by different type of upper material used on garments (eg: lace)</param>
		/// <param name="volume">filters by volume</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Facets response.</returns>
		public async Task<Facet[]> FacetsGetByAgeGroupAndArticleIdAndActivationDateAndArticleModelIdAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndFieldsAsync(
					string[] ageGroup, 
					string[] articleId, 
					string[] activationDate, 
					string[] articleModelId, 
					string[] assortmentArea, 
					string[] brand, 
					string[] brandfamily, 
					string[] category, 
					string[] color, 
					string[] den, 
					string[] filling, 
					string[] gender, 
					string[] heelForm, 
					string[] heelHeight, 
					string length, 
					string[] occasion, 
					string[] pattern, 
					string price, 
					string[] sale, 
					string[] season, 
					string[] shaftHeight, 
					string[] shaftWidth, 
					string[] shirtCollar, 
					string[] shoeFastener, 
					string[] shoeToecap, 
					string[] shopArea, 
					string size, 
					string[] sports, 
					string[] technology, 
					string[] trouserRise, 
					string[] upperMaterial, 
					string[] volume, 
					string[] fields, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "facets?"+string.Join("&", ageGroup.Select(z => $"ageGroup={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", articleId.Select(z => $"articleId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", activationDate.Select(z => $"activationDate={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", articleModelId.Select(z => $"articleModelId={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", assortmentArea.Select(z => $"assortmentArea={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", brand.Select(z => $"brand={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", brandfamily.Select(z => $"brandfamily={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", category.Select(z => $"category={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", color.Select(z => $"color={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", den.Select(z => $"den={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filling.Select(z => $"filling={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", gender.Select(z => $"gender={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", heelForm.Select(z => $"heelForm={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", heelHeight.Select(z => $"heelHeight={System.Uri.EscapeDataString(z.ToString())}"))+"&length=" + (length==null? "" : System.Uri.EscapeDataString(length))+"&"+string.Join("&", occasion.Select(z => $"occasion={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", pattern.Select(z => $"pattern={System.Uri.EscapeDataString(z.ToString())}"))+"&price=" + (price==null? "" : System.Uri.EscapeDataString(price))+"&"+string.Join("&", sale.Select(z => $"sale={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", season.Select(z => $"season={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shaftHeight.Select(z => $"shaftHeight={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shaftWidth.Select(z => $"shaftWidth={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shirtCollar.Select(z => $"shirtCollar={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shoeFastener.Select(z => $"shoeFastener={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shoeToecap.Select(z => $"shoeToecap={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", shopArea.Select(z => $"shopArea={System.Uri.EscapeDataString(z.ToString())}"))+"&size=" + (size==null? "" : System.Uri.EscapeDataString(size))+"&"+string.Join("&", sports.Select(z => $"sports={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", technology.Select(z => $"technology={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", trouserRise.Select(z => $"trouserRise={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", upperMaterial.Select(z => $"upperMaterial={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", volume.Select(z => $"volume={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Facet[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Shop Filters
		/// Zalando API Filters Schema
		/// FiltersGetByFields filters
		/// </summary>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Filters response.</returns>
		public async Task<Filter[]> FiltersGetByFieldsAsync(string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "filters?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Filter[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Single Filter by filterName
		/// Zalando API Filters Schema
		/// Filters_filterNameGetByFields filters/{filterName}
		/// </summary>
		/// <param name="filterName">To get Filter by filterName.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Filters response.</returns>
		public async Task<Filter> Filters_filterNameGetByFieldsAsync(string filterName, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "filters/"+ (filterName==null? "" : System.Uri.EscapeDataString(filterName))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Filter>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Recommendations by articleId
		/// Zalando API Recommendations Schema
		/// Recommendations_articleIdsGetByMaxResultsAndFields recommendations/{articleIds}
		/// </summary>
		/// <param name="articleIds">To get Recommendations by articleIds.</param>
		/// <param name="maxResults">To get maximum results of Recommendations by articleId.</param>
		/// <param name="fields">Comma separated list of fields that should be returned. Fields of subobjects are specified with dots as separator. Fields of objects within lists are specified in the same way.
		///
		///Example: id,name,brand.key,brand.name, units.id,units.size,units.price.formatted</param>
		/// <returns>Recommendations response.</returns>
		public async Task<Recommendations_Article[]> Recommendations_articleIdsGetByMaxResultsAndFieldsAsync(string[] articleIds, string maxResults, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "recommendations/{articleIds}"+string.Join("&", articleIds.Select(z => $"articleIds={System.Uri.EscapeDataString(z.ToString())}"))+"?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Recommendations_Article[]>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Article_reviewsGetByArticleIdAndArticleModelIdAndMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsSort
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		newest = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		best = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		worst = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		most_helpful = 3,
	}
	
	public enum Article_reviewsGetByArticleIdAndArticleModelIdAndMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Article_reviews_summariesGetByArticleModelIdAndPageAndPageSizeAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Article_reviews_summaries_articleModelIdGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Article_reviews_reviewIdGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum ArticlesGetByArticleIdAndArticleModelIdAndArticleUnitIdAndActivationDateAndAgeGroupAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndFullTextAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndPageAndPageSizeAndSortAndFieldsSort
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		popularity = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		activationdate = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pricedesc = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		priceasc = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sale = 4,
	}
	
	public enum ArticlesGetByArticleIdAndArticleModelIdAndArticleUnitIdAndActivationDateAndAgeGroupAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndFullTextAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndPageAndPageSizeAndSortAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Articles_articleIdGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Articles_articleIdMediaGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Articles_articleIdReviewsGetByMinStarRatingAndMaxStarRatingAndSortAndPageAndPageSizeAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Articles_articleIdReviews_summaryGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Articles_articleIdUnitsGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Articles_articleIdUnits_unitIdGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum BrandsGetByKeyAndNameAndBrandFamilyNameAndBrandFamilyKeyAndPageAndPageSizeAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Brands_keyGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum CategoriesGetByNameAndTypeAndOutletAndHiddenAndTargetGroupAndKeyAndParentKeyAndChildKeyAndSuggestedFilterAndPageAndPageSizeAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Categories_keyGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum FacetsGetByAgeGroupAndArticleIdAndActivationDateAndArticleModelIdAndAssortmentAreaAndBrandAndBrandfamilyAndCategoryAndColorAndDenAndFillingAndGenderAndHeelFormAndHeelHeightAndLengthAndOccasionAndPatternAndPriceAndSaleAndSeasonAndShaftHeightAndShaftWidthAndShirtCollarAndShoeFastenerAndShoeToecapAndShopAreaAndSizeAndSportsAndTechnologyAndTrouserRiseAndUpperMaterialAndVolumeAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum FiltersGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Filters_filterNameGetByFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
	
	public enum Recommendations_articleIdsGetByMaxResultsAndFieldsAccept_Language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="no-NO")]
		noMinusNO = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 15,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

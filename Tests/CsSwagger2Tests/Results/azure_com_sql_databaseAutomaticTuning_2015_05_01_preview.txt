//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Automatic tuning properties for individual advisors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AutomaticTuningOptions
	{
		
		/// <summary>
		/// Automatic tuning option actual state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actualState")]
		public System.Nullable<AutomaticTuningOptionsActualState> ActualState { get; set; }
		
		/// <summary>
		/// Automatic tuning option desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="desiredState")]
		public System.Nullable<AutomaticTuningOptionsDesiredState> DesiredState { get; set; }
		
		/// <summary>
		/// Reason code if desired and actual state are different.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reasonCode")]
		public System.Nullable<System.Int32> ReasonCode { get; set; }
		
		/// <summary>
		/// Reason description if desired and actual state are different.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reasonDesc")]
		public System.Nullable<AutomaticTuningOptionsReasonDesc> ReasonDesc { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AutomaticTuningOptionsActualState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		On = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AutomaticTuningOptionsDesiredState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		On = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Default = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AutomaticTuningOptionsReasonDesc
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Default = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disabled = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoConfigured = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InheritedFromServer = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QueryStoreOff = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QueryStoreReadOnly = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotSupported = 6,
	}
	
	/// <summary>
	/// Database-level Automatic Tuning.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DatabaseAutomaticTuning
	{
		
		/// <summary>
		/// Database-level Automatic Tuning properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DatabaseAutomaticTuningProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Database-level Automatic Tuning properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DatabaseAutomaticTuningProperties
	{
		
		/// <summary>
		/// Automatic tuning actual state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actualState")]
		public System.Nullable<DatabaseAutomaticTuningPropertiesActualState> ActualState { get; set; }
		
		/// <summary>
		/// Automatic tuning desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="desiredState")]
		public DatabaseAutomaticTuningPropertiesActualState DesiredState { get; set; }
		
		/// <summary>
		/// Automatic tuning options definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public System.Collections.Generic.Dictionary<string, AutomaticTuningOptions> Options { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DatabaseAutomaticTuningPropertiesActualState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inherit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Custom = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unspecified = 3,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Gets a database's automatic tuning.
		/// DatabaseAutomaticTuning_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/automaticTuning/current
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.</param>
		/// <param name="serverName">The name of the server.</param>
		/// <param name="databaseName">The name of the database.</param>
		/// <param name="subscriptionId">The subscription ID that identifies an Azure subscription.</param>
		/// <param name="api_version">The API version to use for the request.</param>
		/// <returns>Successfully retrieved database automatic tuning properties.</returns>
		public async Task<DatabaseAutomaticTuning> DatabaseAutomaticTuning_GetAsync(string resourceGroupName, string serverName, string databaseName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Sql/servers/"+ (serverName==null? "" : System.Uri.EscapeDataString(serverName))+"/databases/"+ (databaseName==null? "" : System.Uri.EscapeDataString(databaseName))+"/automaticTuning/current&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DatabaseAutomaticTuning>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update automatic tuning properties for target database.
		/// DatabaseAutomaticTuning_Update subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/automaticTuning/current
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.</param>
		/// <param name="serverName">The name of the server.</param>
		/// <param name="databaseName">The name of the database.</param>
		/// <param name="subscriptionId">The subscription ID that identifies an Azure subscription.</param>
		/// <param name="api_version">The API version to use for the request.</param>
		/// <param name="requestBody">The requested automatic tuning resource state.</param>
		/// <returns>Successfully updated the specified database automatic tuning settings.</returns>
		public async Task<DatabaseAutomaticTuning> DatabaseAutomaticTuning_UpdateAsync(string resourceGroupName, string serverName, string databaseName, string subscriptionId, string api_version, DatabaseAutomaticTuning requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Sql/servers/"+ (serverName==null? "" : System.Uri.EscapeDataString(serverName))+"/databases/"+ (databaseName==null? "" : System.Uri.EscapeDataString(databaseName))+"/automaticTuning/current&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DatabaseAutomaticTuning>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

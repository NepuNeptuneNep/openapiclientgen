//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Definition of the activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Activity
	{
		
		/// <summary>
		/// Gets or sets the id of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Gets the name of the activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Properties of the activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ActivityProperties Properties { get; set; }
	}
	
	/// <summary>
	/// The response model for the list activity operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ActivityListResult
	{
		
		/// <summary>
		/// Gets or sets the next link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Gets or sets a list of activities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Activity[] Value { get; set; }
	}
	
	/// <summary>
	/// Definition of the activity output type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ActivityOutputType
	{
		
		/// <summary>
		/// Gets or sets the name of the activity output type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the type of the activity output type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Definition of the activity parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ActivityParameter
	{
		
		/// <summary>
		/// Gets or sets the description of the activity parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Gets or sets a Boolean value that indicates true if the parameter is dynamic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDynamic")]
		public System.Nullable<System.Boolean> IsDynamic { get; set; }
		
		/// <summary>
		/// Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isMandatory")]
		public System.Nullable<System.Boolean> IsMandatory { get; set; }
		
		/// <summary>
		/// Gets or sets the name of the activity parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the position of the activity parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="position")]
		public System.Nullable<System.Int64> Position { get; set; }
		
		/// <summary>
		/// Gets or sets the type of the activity parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// Gets or sets the validation set of activity parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationSet")]
		public ActivityParameterValidationSet[] ValidationSet { get; set; }
		
		/// <summary>
		/// Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFromPipeline")]
		public System.Nullable<System.Boolean> ValueFromPipeline { get; set; }
		
		/// <summary>
		/// Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFromPipelineByPropertyName")]
		public System.Nullable<System.Boolean> ValueFromPipelineByPropertyName { get; set; }
		
		/// <summary>
		/// Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFromRemainingArguments")]
		public System.Nullable<System.Boolean> ValueFromRemainingArguments { get; set; }
	}
	
	/// <summary>
	/// Definition of the activity parameter validation set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ActivityParameterValidationSet
	{
		
		/// <summary>
		/// Gets or sets the name of the activity parameter validation set member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberValue")]
		public string MemberValue { get; set; }
	}
	
	/// <summary>
	/// Definition of the activity parameter set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ActivityParameterSet
	{
		
		/// <summary>
		/// Gets or sets the name of the activity parameter set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the parameters of the activity parameter set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ActivityParameter[] Parameters { get; set; }
	}
	
	/// <summary>
	/// Properties of the activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ActivityProperties
	{
		
		/// <summary>
		/// Gets or sets the creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Gets or sets the user name of the activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="definition")]
		public string Definition { get; set; }
		
		/// <summary>
		/// Gets or sets the description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Gets or sets the last modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedTime")]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Gets or sets the output types of the activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputTypes")]
		public ActivityOutputType[] OutputTypes { get; set; }
		
		/// <summary>
		/// Gets or sets the parameter sets of the activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterSets")]
		public ActivityParameterSet[] ParameterSets { get; set; }
	}
	
	/// <summary>
	/// Definition of the runbook property type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContentHash
	{
		
		/// <summary>
		/// Gets or sets the content hash algorithm used to hash the content.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="algorithm")]
		public string Algorithm { get; set; }
		
		/// <summary>
		/// Gets or sets expected hash value of the content.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Definition of the content link.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContentLink
	{
		
		/// <summary>
		/// Definition of the runbook property type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentHash")]
		public ContentHash ContentHash { get; set; }
		
		/// <summary>
		/// Gets or sets the uri of the runbook content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// Gets or sets the version of the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class Module
	{
	}
	
	/// <summary>
	/// Definition of the module error info type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ModuleErrorInfo
	{
		
		/// <summary>
		/// Gets or sets the error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Gets or sets the error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The response model for the list module operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ModuleListResult
	{
		
		/// <summary>
		/// Gets or sets the next link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Gets or sets a list of modules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Module[] Value { get; set; }
	}
	
	/// <summary>
	/// Definition of the module property type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ModuleProperties
	{
		
		/// <summary>
		/// Gets or sets the activity count of the module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activityCount")]
		public System.Nullable<System.Int32> ActivityCount { get; set; }
		
		/// <summary>
		/// Definition of the content link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentLink")]
		public ContentLink ContentLink { get; set; }
		
		/// <summary>
		/// Gets or sets the creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// Gets or sets the description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Definition of the module error info type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ModuleErrorInfo Error { get; set; }
		
		/// <summary>
		/// Gets or sets type of module, if its composite or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isComposite")]
		public System.Nullable<System.Boolean> IsComposite { get; set; }
		
		/// <summary>
		/// Gets or sets the isGlobal flag of the module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isGlobal")]
		public System.Nullable<System.Boolean> IsGlobal { get; set; }
		
		/// <summary>
		/// Gets or sets the last modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifiedTime")]
		public System.Nullable<System.DateTimeOffset> LastModifiedTime { get; set; }
		
		/// <summary>
		/// Gets or sets the provisioning state of the module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<ModulePropertiesProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Gets or sets the size in bytes of the module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeInBytes")]
		public System.Nullable<System.Int64> SizeInBytes { get; set; }
		
		/// <summary>
		/// Gets or sets the version of the module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ModulePropertiesProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StartingImportModuleRunbook = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RunningImportModuleRunbook = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ContentRetrieved = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ContentDownloaded = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ContentValidated = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConnectionTypeImported = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ContentStored = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModuleDataStored = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ActivitiesStored = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModuleImportRunbookComplete = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 15,
	}
	
	/// <summary>
	/// The parameters supplied to the create or update module operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PythonPackageCreateParameters
	{
		
		/// <summary>
		/// The parameters supplied to the create or update module properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public PythonPackageCreateProperties Properties { get; set; }
		
		/// <summary>
		/// Gets or sets the tags attached to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// The parameters supplied to the create or update module properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PythonPackageCreateProperties
	{
		
		/// <summary>
		/// Definition of the content link.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentLink")]
		public ContentLink ContentLink { get; set; }
	}
	
	/// <summary>
	/// The parameters supplied to the update module operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PythonPackageUpdateParameters
	{
		
		/// <summary>
		/// Gets or sets the tags attached to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// Information about a field of a type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TypeField
	{
		
		/// <summary>
		/// Gets or sets the name of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the type of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The response model for the list fields operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TypeFieldListResult
	{
		
		/// <summary>
		/// Gets or sets a list of fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public TypeField[] Value { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve a list of python 2 packages.
		/// Python2Package_ListByAutomationAccount subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task<ModuleListResult> Python2Package_ListByAutomationAccountAsync(string resourceGroupName, string automationAccountName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/python2Packages&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ModuleListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve the python 2 package identified by package name.
		/// Python2Package_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="packageName">The python package name.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task<Module> Python2Package_GetAsync(string resourceGroupName, string automationAccountName, string packageName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/python2Packages/"+ (packageName==null? "" : System.Uri.EscapeDataString(packageName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Module>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or Update the python 2 package identified by package name.
		/// Python2Package_CreateOrUpdate subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="packageName">The name of python package.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <param name="requestBody">The create or update parameters for python package.</param>
		/// <returns>OK</returns>
		public async Task<Module> Python2Package_CreateOrUpdateAsync(string resourceGroupName, string automationAccountName, string packageName, string subscriptionId, string api_version, PythonPackageCreateParameters requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/python2Packages/"+ (packageName==null? "" : System.Uri.EscapeDataString(packageName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Module>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete the python 2 package by name.
		/// Python2Package_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="packageName">The python package name.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <returns>OK</returns>
		public async Task Python2Package_DeleteAsync(string resourceGroupName, string automationAccountName, string packageName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/python2Packages/"+ (packageName==null? "" : System.Uri.EscapeDataString(packageName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update the python 2 package identified by package name.
		/// Python2Package_Update subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}
		/// </summary>
		/// <param name="resourceGroupName">Name of an Azure Resource group.
		/// Max length: 90
		/// Min length: 1
		// </param>
		/// <param name="automationAccountName">The name of the automation account.</param>
		/// <param name="packageName">The name of python package.</param>
		/// <param name="subscriptionId">Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client Api Version.</param>
		/// <param name="requestBody">The update parameters for python package.</param>
		/// <returns>OK</returns>
		public async Task<Module> Python2Package_UpdateAsync(string resourceGroupName, string automationAccountName, string packageName, string subscriptionId, string api_version, PythonPackageUpdateParameters requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Automation/automationAccounts/"+ (automationAccountName==null? "" : System.Uri.EscapeDataString(automationAccountName))+"/python2Packages/"+ (packageName==null? "" : System.Uri.EscapeDataString(packageName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Module>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

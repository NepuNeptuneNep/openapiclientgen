//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Managed Disk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiskListInputElement
	{
		
		/// <summary>
		/// Managed disk properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskListInputElementProperties Properties { get; set; }
	}
	
	public class DiskListInputElementProperties
	{
		
		/// <summary>
		/// The actual size of disk in GB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actualSizeGB")]
		public System.Nullable<System.Int64> ActualSizeGB { get; set; }
		
		/// <summary>
		/// The disk id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// Disk Sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSku")]
		public System.Nullable<DiskListInputElementPropertiesDiskSku> DiskSku { get; set; }
		
		/// <summary>
		/// Disk resource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskType")]
		public System.Nullable<DiskListInputElementPropertiesDiskType> DiskType { get; set; }
		
		/// <summary>
		/// Compute resource Uri which owns this disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managedBy")]
		public string ManagedBy { get; set; }
		
		/// <summary>
		/// The provision size of disk in GB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisionSizeGB")]
		public System.Nullable<System.Int64> ProvisionSizeGB { get; set; }
		
		/// <summary>
		/// The disk share path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharePath")]
		public string SharePath { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DiskListInputElementPropertiesStatus> Status { get; set; }
		
		/// <summary>
		/// The disk resource Uri from user view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userResourceId")]
		public string UserResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiskListInputElementPropertiesDiskSku
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard_LRS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard_ZRS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard_GRS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard_RAGRS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Premium_LRS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StandardSSD_LRS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UltraSSD_LRS = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiskListInputElementPropertiesDiskType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Undefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disk = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Snapshot = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RestorePoint = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManagedBlob = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiskListInputElementPropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Undefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unattached = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Attached = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Reserved = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ActiveSAS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		All = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Recommended = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OfflineMigration = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnlineMigration = 9,
	}
	
	/// <summary>
	/// Disk migration job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiskMigrationJob
	{
		
		/// <summary>
		/// Disk migration job properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobProperties
	{
		
		/// <summary>
		/// The job creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The job end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The disk migration id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationId")]
		public string MigrationId { get; set; }
		
		/// <summary>
		/// The job start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Migration job status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DiskMigrationJobPropertiesStatus> Status { get; set; }
		
		/// <summary>
		/// List of disk migration tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtasks")]
		public DiskMigrationJobPropertiesSubtasks[] DiskMigrationJobPropertiesSubtasks { get; set; }
		
		/// <summary>
		/// The target share of migration job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiskMigrationJobPropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Undefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 5,
	}
	
	public class DiskMigrationJobPropertiesSubtasks
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobPropertiesSubtasksProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobPropertiesSubtasksProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public System.Nullable<DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus> MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Undefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Skipped = 6,
	}
	
	/// <summary>
	/// List of disk migration jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiskMigrationJobList
	{
		
		/// <summary>
		/// URI to the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of disk migration jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public DiskMigrationJobListValue[] DiskMigrationJobListValue { get; set; }
	}
	
	public class DiskMigrationJobListValue
	{
		
		/// <summary>
		/// Disk migration job properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobListValueProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobListValueProperties
	{
		
		/// <summary>
		/// The job creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The job end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The disk migration id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationId")]
		public string MigrationId { get; set; }
		
		/// <summary>
		/// The job start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Migration job status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DiskMigrationJobPropertiesStatus Status { get; set; }
		
		/// <summary>
		/// List of disk migration tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtasks")]
		public DiskMigrationJobListValuePropertiesSubtasks[] DiskMigrationJobListValuePropertiesSubtasks { get; set; }
		
		/// <summary>
		/// The target share of migration job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobListValuePropertiesSubtasks
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobListValuePropertiesSubtasksProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobListValuePropertiesSubtasksProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	/// <summary>
	/// Migration job status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MigrationJobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Undefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 5,
	}
	
	/// <summary>
	/// Disk migration child task.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MigrationSubTask
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public MigrationSubTaskProperties Properties { get; set; }
	}
	
	public class MigrationSubTaskProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	/// <summary>
	/// Disk migration child task.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MigrationSubTaskListElement
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public MigrationSubTaskListElementProperties Properties { get; set; }
	}
	
	public class MigrationSubTaskListElementProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	/// <summary>
	/// Migration child task status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MigrationSubTaskStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Undefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Skipped = 6,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns a list of disk migration jobs.
		/// DiskMigrationJobs_List subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">Location of the resource.</param>
		/// <param name="status">The parameters of disk migration job status.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK -- The list of disk migration jobs has been returned.</returns>
		public async Task<DiskMigrationJobs_ListReturn> DiskMigrationJobs_ListAsync(string subscriptionId, string location, string status, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Compute.Admin/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/diskmigrationjobs&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DiskMigrationJobs_ListReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the requested disk migration job.
		/// DiskMigrationJobs_Get subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">Location of the resource.</param>
		/// <param name="migrationId">The migration job guid name.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK -- The disk migration job has been returned.</returns>
		public async Task<DiskMigrationJobs_GetReturn> DiskMigrationJobs_GetAsync(string subscriptionId, string location, string migrationId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Compute.Admin/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/diskmigrationjobs/"+ (migrationId==null? "" : System.Uri.EscapeDataString(migrationId))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DiskMigrationJobs_GetReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a disk migration job.
		/// DiskMigrationJobs_Create subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">Location of the resource.</param>
		/// <param name="migrationId">The migration job guid name.</param>
		/// <param name="targetShare">The target share name.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="requestBody">The parameters of disk list.</param>
		/// <returns>OK --  Disk migration job is created successfully.</returns>
		public async Task<DiskMigrationJobs_CreateReturn> DiskMigrationJobs_CreateAsync(string subscriptionId, string location, string migrationId, string targetShare, string api_version, DiskMigrationJobs_CreatePutBody[] requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Compute.Admin/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/diskmigrationjobs/"+ (migrationId==null? "" : System.Uri.EscapeDataString(migrationId))+"&targetShare=" + (targetShare==null? "" : System.Uri.EscapeDataString(targetShare))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DiskMigrationJobs_CreateReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancel a disk migration job.
		/// DiskMigrationJobs_Cancel subscriptions/{subscriptionId}/providers/Microsoft.Compute.Admin/locations/{location}/diskmigrationjobs/{migrationId}/Cancel
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">Location of the resource.</param>
		/// <param name="migrationId">The migration job guid name.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK --  Disk migration job cancellation is called.</returns>
		public async Task<DiskMigrationJobs_CancelReturn> DiskMigrationJobs_CancelAsync(string subscriptionId, string location, string migrationId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Compute.Admin/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/diskmigrationjobs/"+ (migrationId==null? "" : System.Uri.EscapeDataString(migrationId))+"/Cancel&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DiskMigrationJobs_CancelReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class DiskMigrationJobs_ListReturn
	{
		
		/// <summary>
		/// URI to the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of disk migration jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public DiskMigrationJobs_ListReturnValue[] DiskMigrationJobs_ListReturnValue { get; set; }
	}
	
	public class DiskMigrationJobs_ListReturnValue
	{
		
		/// <summary>
		/// Disk migration job properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_ListReturnValueProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_ListReturnValueProperties
	{
		
		/// <summary>
		/// The job creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The job end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The disk migration id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationId")]
		public string MigrationId { get; set; }
		
		/// <summary>
		/// The job start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Migration job status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DiskMigrationJobPropertiesStatus Status { get; set; }
		
		/// <summary>
		/// List of disk migration tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtasks")]
		public DiskMigrationJobs_ListReturnValuePropertiesSubtasks[] DiskMigrationJobs_ListReturnValuePropertiesSubtasks { get; set; }
		
		/// <summary>
		/// The target share of migration job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_ListReturnValuePropertiesSubtasks
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_ListReturnValuePropertiesSubtasksProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_ListReturnValuePropertiesSubtasksProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_GetReturn
	{
		
		/// <summary>
		/// Disk migration job properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_GetReturnProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_GetReturnProperties
	{
		
		/// <summary>
		/// The job creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The job end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The disk migration id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationId")]
		public string MigrationId { get; set; }
		
		/// <summary>
		/// The job start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Migration job status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DiskMigrationJobPropertiesStatus Status { get; set; }
		
		/// <summary>
		/// List of disk migration tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtasks")]
		public DiskMigrationJobs_GetReturnPropertiesSubtasks[] DiskMigrationJobs_GetReturnPropertiesSubtasks { get; set; }
		
		/// <summary>
		/// The target share of migration job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_GetReturnPropertiesSubtasks
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_GetReturnPropertiesSubtasksProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_GetReturnPropertiesSubtasksProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_CreatePutBody
	{
		
		/// <summary>
		/// Managed disk properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_CreatePutBodyProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_CreatePutBodyProperties
	{
		
		/// <summary>
		/// The actual size of disk in GB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actualSizeGB")]
		public System.Nullable<System.Int64> ActualSizeGB { get; set; }
		
		/// <summary>
		/// The disk id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// Disk Sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSku")]
		public DiskListInputElementPropertiesDiskSku DiskSku { get; set; }
		
		/// <summary>
		/// Disk resource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskType")]
		public DiskListInputElementPropertiesDiskType DiskType { get; set; }
		
		/// <summary>
		/// Compute resource Uri which owns this disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managedBy")]
		public string ManagedBy { get; set; }
		
		/// <summary>
		/// The provision size of disk in GB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisionSizeGB")]
		public System.Nullable<System.Int64> ProvisionSizeGB { get; set; }
		
		/// <summary>
		/// The disk share path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharePath")]
		public string SharePath { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DiskListInputElementPropertiesStatus Status { get; set; }
		
		/// <summary>
		/// The disk resource Uri from user view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userResourceId")]
		public string UserResourceId { get; set; }
	}
	
	public class DiskMigrationJobs_CreateReturn
	{
		
		/// <summary>
		/// Disk migration job properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_CreateReturnProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_CreateReturnProperties
	{
		
		/// <summary>
		/// The job creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The job end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The disk migration id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationId")]
		public string MigrationId { get; set; }
		
		/// <summary>
		/// The job start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Migration job status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DiskMigrationJobPropertiesStatus Status { get; set; }
		
		/// <summary>
		/// List of disk migration tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtasks")]
		public DiskMigrationJobs_CreateReturnPropertiesSubtasks[] DiskMigrationJobs_CreateReturnPropertiesSubtasks { get; set; }
		
		/// <summary>
		/// The target share of migration job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_CreateReturnPropertiesSubtasks
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_CreateReturnPropertiesSubtasksProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_CreateReturnPropertiesSubtasksProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_CancelReturn
	{
		
		/// <summary>
		/// Disk migration job properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_CancelReturnProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_CancelReturnProperties
	{
		
		/// <summary>
		/// The job creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.Nullable<System.DateTimeOffset> CreationTime { get; set; }
		
		/// <summary>
		/// The job end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The disk migration id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationId")]
		public string MigrationId { get; set; }
		
		/// <summary>
		/// The job start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Migration job status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DiskMigrationJobPropertiesStatus Status { get; set; }
		
		/// <summary>
		/// List of disk migration tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtasks")]
		public DiskMigrationJobs_CancelReturnPropertiesSubtasks[] DiskMigrationJobs_CancelReturnPropertiesSubtasks { get; set; }
		
		/// <summary>
		/// The target share of migration job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
	
	public class DiskMigrationJobs_CancelReturnPropertiesSubtasks
	{
		
		/// <summary>
		/// The id of migration child task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubTaskId")]
		public string MigrationSubTaskId { get; set; }
		
		/// <summary>
		/// Disk migration child task properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public DiskMigrationJobs_CancelReturnPropertiesSubtasksProperties Properties { get; set; }
	}
	
	public class DiskMigrationJobs_CancelReturnPropertiesSubtasksProperties
	{
		
		/// <summary>
		/// The id of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskId")]
		public string DiskId { get; set; }
		
		/// <summary>
		/// The task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Migration child task status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrationSubtaskStatus")]
		public DiskMigrationJobPropertiesSubtasksPropertiesMigrationSubtaskStatus MigrationSubtaskStatus { get; set; }
		
		/// <summary>
		/// The reason of task failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The source share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceShare")]
		public string SourceShare { get; set; }
		
		/// <summary>
		/// The task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Disk State.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetDiskStateForMigration")]
		public DiskListInputElementPropertiesStatus TargetDiskStateForMigration { get; set; }
		
		/// <summary>
		/// The target share of migration task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetShare")]
		public string TargetShare { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

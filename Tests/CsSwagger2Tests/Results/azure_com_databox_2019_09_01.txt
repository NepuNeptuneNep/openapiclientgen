//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Credential details of the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AccountCredentialDetails
	{
		
		/// <summary>
		/// Connection string of the account endpoint to use the account as a storage endpoint on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountConnectionString")]
		public string AccountConnectionString { get; set; }
		
		/// <summary>
		/// Name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		/// <summary>
		/// Data Destination Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataDestinationType")]
		public System.Nullable<AccountCredentialDetailsDataDestinationType> DataDestinationType { get; set; }
		
		/// <summary>
		/// Per share level unencrypted access credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shareCredentialDetails")]
		public ShareCredentialDetails[] ShareCredentialDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AccountCredentialDetailsDataDestinationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StorageAccount = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManagedDisk = 1,
	}
	
	/// <summary>
	/// Credential details of the shares in account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ShareCredentialDetails
	{
		
		/// <summary>
		/// Password for the share.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		/// <summary>
		/// Name of the share.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shareName")]
		public string ShareName { get; set; }
		
		/// <summary>
		/// Type of the share.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shareType")]
		public System.Nullable<ShareCredentialDetailsShareType> ShareType { get; set; }
		
		/// <summary>
		/// Access protocols supported on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedAccessProtocols")]
		public string[] SupportedAccessProtocols { get; set; }
		
		/// <summary>
		/// User name for the share.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ShareCredentialDetailsShareType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnknownType = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HCS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BlockBlob = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PageBlob = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AzureFile = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManagedDisk = 5,
	}
	
	/// <summary>
	/// Output of the address validation api.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AddressValidationOutput
	{
		
		/// <summary>
		/// The address validation output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public AddressValidationProperties Properties { get; set; }
	}
	
	/// <summary>
	/// The address validation output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AddressValidationProperties
	{
		
		/// <summary>
		/// List of alternate addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternateAddresses")]
		public ShippingAddress[] AlternateAddresses { get; set; }
		
		/// <summary>
		/// The address validation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationStatus")]
		public System.Nullable<AddressValidationPropertiesValidationStatus> ValidationStatus { get; set; }
	}
	
	/// <summary>
	/// Shipping address where customer wishes to receive the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ShippingAddress
	{
		
		/// <summary>
		/// Type of address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressType")]
		public System.Nullable<ShippingAddressAddressType> AddressType { get; set; }
		
		/// <summary>
		/// Name of the City.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
		
		/// <summary>
		/// Name of the Country.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Postal code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		/// <summary>
		/// Name of the State or Province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateOrProvince")]
		public string StateOrProvince { get; set; }
		
		/// <summary>
		/// Street Address line 1.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="streetAddress1")]
		public string StreetAddress1 { get; set; }
		
		/// <summary>
		/// Street Address line 2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="streetAddress2")]
		public string StreetAddress2 { get; set; }
		
		/// <summary>
		/// Street Address line 3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="streetAddress3")]
		public string StreetAddress3 { get; set; }
		
		/// <summary>
		/// Extended Zip Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zipExtendedCode")]
		public string ZipExtendedCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ShippingAddressAddressType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Residential = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Commercial = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AddressValidationPropertiesValidationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Valid = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invalid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ambiguous = 2,
	}
	
	/// <summary>
	/// The Network Adapter configuration of a DataBox.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ApplianceNetworkConfiguration
	{
		
		/// <summary>
		/// Mac Address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="macAddress")]
		public string MacAddress { get; set; }
		
		/// <summary>
		/// Name of the network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Base class for all objects under resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ArmBaseObject
	{
		
		/// <summary>
		/// Id of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Type of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The filters for showing the available skus.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AvailableSkuRequest
	{
		
		/// <summary>
		/// ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Sku Names to filter for available skus
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuNames")]
		public string[] SkuNames { get; set; }
		
		/// <summary>
		/// Type of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transferType")]
		public AvailableSkuRequestTransferType TransferType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AvailableSkuRequestTransferType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImportToAzure = 0,
	}
	
	/// <summary>
	/// The available skus operation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AvailableSkusResult
	{
		
		/// <summary>
		/// Link for the next set of skus.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of available skus.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public SkuInformation[] Value { get; set; }
	}
	
	/// <summary>
	/// Information of the sku.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuInformation
	{
		
		/// <summary>
		/// The sku is enabled or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Properties of the sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public SkuProperties Properties { get; set; }
		
		/// <summary>
		/// The Sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public Sku Sku { get; set; }
	}
	
	/// <summary>
	/// Properties of the sku.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuProperties
	{
		
		/// <summary>
		/// Api versions that support this Sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiVersions")]
		public string[] ApiVersions { get; set; }
		
		/// <summary>
		/// Capacity of the sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public SkuCapacity Capacity { get; set; }
		
		/// <summary>
		/// Cost of the Sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costs")]
		public SkuCost[] Costs { get; set; }
		
		/// <summary>
		/// The map of destination location to service location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationToServiceLocationMap")]
		public DestinationToServiceLocationMap[] DestinationToServiceLocationMap { get; set; }
		
		/// <summary>
		/// Reason why the Sku is disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledReason")]
		public System.Nullable<SkuPropertiesDisabledReason> DisabledReason { get; set; }
		
		/// <summary>
		/// Message for why the Sku is disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabledReasonMessage")]
		public string DisabledReasonMessage { get; set; }
		
		/// <summary>
		/// Required feature to access the sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requiredFeature")]
		public string RequiredFeature { get; set; }
	}
	
	/// <summary>
	/// Capacity of the sku.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuCapacity
	{
		
		/// <summary>
		/// Maximum capacity in TB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public string Maximum { get; set; }
		
		/// <summary>
		/// Usable capacity in TB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usable")]
		public string Usable { get; set; }
	}
	
	/// <summary>
	/// Describes metadata for retrieving price info.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuCost
	{
		
		/// <summary>
		/// Meter id of the Sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meterId")]
		public string MeterId { get; set; }
		
		/// <summary>
		/// The type of the meter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meterType")]
		public string MeterType { get; set; }
	}
	
	/// <summary>
	/// Map of destination location to service location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DestinationToServiceLocationMap
	{
		
		/// <summary>
		/// Location of the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationLocation")]
		public string DestinationLocation { get; set; }
		
		/// <summary>
		/// Location of the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceLocation")]
		public string ServiceLocation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SkuPropertiesDisabledReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Country = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Region = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Feature = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OfferType = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoSubscriptionInfo = 5,
	}
	
	/// <summary>
	/// The Sku.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Sku
	{
		
		/// <summary>
		/// The display name of the sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The sku family.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="family")]
		public string Family { get; set; }
		
		/// <summary>
		/// The sku name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SkuName Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SkuName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataBox = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataBoxDisk = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataBoxHeavy = 2,
	}
	
	/// <summary>
	/// Reason for cancellation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CancellationReason
	{
		
		/// <summary>
		/// Reason for cancellation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// The error information object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CloudError
	{
		
		/// <summary>
		/// Error code string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// More detailed error information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public CloudError[] Details { get; set; }
		
		/// <summary>
		/// Descriptive error information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Error target
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
	}
	
	/// <summary>
	/// Contact Details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContactDetails
	{
		
		/// <summary>
		/// Contact name of the person.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contactName")]
		public string ContactName { get; set; }
		
		/// <summary>
		/// List of Email-ids to be notified about job progress.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="emailList")]
		public string[] EmailList { get; set; }
		
		/// <summary>
		/// Mobile number of the contact person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mobile")]
		public string Mobile { get; set; }
		
		/// <summary>
		/// Notification preference for a job stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notificationPreference")]
		public NotificationPreference[] NotificationPreference { get; set; }
		
		/// <summary>
		/// Phone number of the contact person.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// Phone extension number of the contact person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phoneExtension")]
		public string PhoneExtension { get; set; }
	}
	
	/// <summary>
	/// Notification preference for a job stage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class NotificationPreference
	{
		
		/// <summary>
		/// Notification is required or not.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sendNotification")]
		public bool SendNotification { get; set; }
		
		/// <summary>
		/// Name of the stage.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stageName")]
		public NotificationPreferenceStageName StageName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum NotificationPreferenceStageName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DevicePrepared = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dispatched = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Delivered = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PickedUp = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AtAzureDC = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataCopy = 5,
	}
	
	/// <summary>
	/// Details for log generated during copy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CopyLogDetails
	{
		
		/// <summary>
		/// Indicates the type of job details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="copyLogDetailsType")]
		public SkuName CopyLogDetailsType { get; set; }
	}
	
	/// <summary>
	/// Copy progress.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CopyProgress
	{
		
		/// <summary>
		/// Id of the account where the data needs to be uploaded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Amount of data uploaded by the job as of now.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bytesSentToCloud")]
		public System.Nullable<System.Int64> BytesSentToCloud { get; set; }
		
		/// <summary>
		/// Data Destination Type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataDestinationType")]
		public AccountCredentialDetailsDataDestinationType DataDestinationType { get; set; }
		
		/// <summary>
		/// Number of files which could not be copied
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filesErroredOut")]
		public System.Nullable<System.Int64> FilesErroredOut { get; set; }
		
		/// <summary>
		/// Number of files processed by the job as of now.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filesProcessed")]
		public System.Nullable<System.Int64> FilesProcessed { get; set; }
		
		/// <summary>
		/// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidFileBytesUploaded")]
		public System.Nullable<System.Int64> InvalidFileBytesUploaded { get; set; }
		
		/// <summary>
		/// Number of files not adhering to azure naming conventions which were processed by automatic renaming
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidFilesProcessed")]
		public System.Nullable<System.Int64> InvalidFilesProcessed { get; set; }
		
		/// <summary>
		/// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renamedContainerCount")]
		public System.Nullable<System.Int64> RenamedContainerCount { get; set; }
		
		/// <summary>
		/// Name of the storage account where the data needs to be uploaded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageAccountName")]
		public string StorageAccountName { get; set; }
		
		/// <summary>
		/// Total amount of data to be processed by the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalBytesToProcess")]
		public System.Nullable<System.Int64> TotalBytesToProcess { get; set; }
		
		/// <summary>
		/// Total number of files to be processed by the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalFilesToProcess")]
		public System.Nullable<System.Int64> TotalFilesToProcess { get; set; }
	}
	
	/// <summary>
	/// It does all pre-job creation validations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreateJobValidations
	{
	}
	
	/// <summary>
	/// Request to validate create order limit for current subscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreateOrderLimitForSubscriptionValidationRequest
	{
		
		/// <summary>
		/// Device type to be used for the job.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public SkuName DeviceType { get; set; }
	}
	
	/// <summary>
	/// Properties of create order limit for subscription validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreateOrderLimitForSubscriptionValidationResponseProperties
	{
		
		/// <summary>
		/// Create order limit validation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CreateOrderLimitForSubscriptionValidationResponsePropertiesStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum CreateOrderLimitForSubscriptionValidationResponsePropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Valid = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invalid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Skipped = 2,
	}
	
	/// <summary>
	/// Copy log details for a storage account of a DataBox job
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxAccountCopyLogDetails
	{
		
		/// <summary>
		/// Destination account name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		/// <summary>
		/// Link for copy logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyLogLink")]
		public string CopyLogLink { get; set; }
	}
	
	/// <summary>
	/// Copy Log Details for a disk
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxDiskCopyLogDetails
	{
		
		/// <summary>
		/// Disk Serial Number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSerialNumber")]
		public string DiskSerialNumber { get; set; }
		
		/// <summary>
		/// Link for copy error logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorLogLink")]
		public string ErrorLogLink { get; set; }
		
		/// <summary>
		/// Link for copy verbose logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verboseLogLink")]
		public string VerboseLogLink { get; set; }
	}
	
	/// <summary>
	/// DataBox Disk Copy Progress
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxDiskCopyProgress
	{
		
		/// <summary>
		/// Bytes copied during the copy of disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bytesCopied")]
		public System.Nullable<System.Int64> BytesCopied { get; set; }
		
		/// <summary>
		/// Indicates the percentage completed for the copy of the disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentComplete")]
		public System.Nullable<System.Int32> PercentComplete { get; set; }
		
		/// <summary>
		/// The serial number of the disk
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
		
		/// <summary>
		/// The Status of the copy
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DataBoxDiskCopyProgressStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DataBoxDiskCopyProgressStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotStarted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompletedWithErrors = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotReturned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HardwareError = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeviceFormatted = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeviceMetadataModified = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StorageAccountNotAccessible = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnsupportedData = 10,
	}
	
	/// <summary>
	/// DataBox Disk Job Details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxDiskJobDetails
	{
		
		/// <summary>
		/// Copy progress per disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyProgress")]
		public DataBoxDiskCopyProgress[] CopyProgress { get; set; }
		
		/// <summary>
		/// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disksAndSizeDetails")]
		public System.Collections.Generic.Dictionary<string, int> DisksAndSizeDetails { get; set; }
		
		/// <summary>
		/// User entered passkey for DataBox Disk job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passkey")]
		public string Passkey { get; set; }
		
		/// <summary>
		/// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferredDisks")]
		public System.Collections.Generic.Dictionary<string, int> PreferredDisks { get; set; }
	}
	
	/// <summary>
	/// The secrets related to disk job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxDiskJobSecrets
	{
		
		/// <summary>
		/// Contains the list of secrets object for that device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSecrets")]
		public DiskSecret[] DiskSecrets { get; set; }
		
		/// <summary>
		/// Whether passkey was provided by user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isPasskeyUserDefined")]
		public System.Nullable<System.Boolean> IsPasskeyUserDefined { get; set; }
		
		/// <summary>
		/// PassKey for the disk Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passKey")]
		public string PassKey { get; set; }
	}
	
	/// <summary>
	/// Contains all the secrets of a Disk.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiskSecret
	{
		
		/// <summary>
		/// Bit Locker key of the disk which can be used to unlock the disk to copy data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bitLockerKey")]
		public string BitLockerKey { get; set; }
		
		/// <summary>
		/// Serial number of the assigned disk.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSerialNumber")]
		public string DiskSerialNumber { get; set; }
	}
	
	/// <summary>
	/// Copy log details for a storage account for Databox heavy
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxHeavyAccountCopyLogDetails
	{
		
		/// <summary>
		/// Destination account name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		/// <summary>
		/// Link for copy logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyLogLink")]
		public string[] CopyLogLink { get; set; }
	}
	
	/// <summary>
	/// Databox Heavy Device Job Details
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxHeavyJobDetails
	{
		
		/// <summary>
		/// Copy progress per account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyProgress")]
		public CopyProgress[] CopyProgress { get; set; }
		
		/// <summary>
		/// Set Device password for unlocking Databox Heavy
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="devicePassword")]
		public string DevicePassword { get; set; }
	}
	
	/// <summary>
	/// The secrets related to a databox heavy job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxHeavyJobSecrets
	{
		
		/// <summary>
		/// Contains the list of secret objects for a databox heavy job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cabinetPodSecrets")]
		public DataBoxHeavySecret[] CabinetPodSecrets { get; set; }
	}
	
	/// <summary>
	/// The secrets related to a databox heavy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxHeavySecret
	{
		
		/// <summary>
		/// Per account level access credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountCredentialDetails")]
		public AccountCredentialDetails[] AccountCredentialDetails { get; set; }
		
		/// <summary>
		/// Password for out of the box experience on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="devicePassword")]
		public string DevicePassword { get; set; }
		
		/// <summary>
		/// Serial number of the assigned device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceSerialNumber")]
		public string DeviceSerialNumber { get; set; }
		
		/// <summary>
		/// The base 64 encoded public key to authenticate with the device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encodedValidationCertPubKey")]
		public string EncodedValidationCertPubKey { get; set; }
		
		/// <summary>
		/// Network configuration of the appliance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkConfigurations")]
		public ApplianceNetworkConfiguration[] NetworkConfigurations { get; set; }
	}
	
	/// <summary>
	/// Databox Job Details
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxJobDetails
	{
		
		/// <summary>
		/// Copy progress per storage account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyProgress")]
		public CopyProgress[] CopyProgress { get; set; }
		
		/// <summary>
		/// Set Device password for unlocking Databox
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="devicePassword")]
		public string DevicePassword { get; set; }
	}
	
	/// <summary>
	/// Request body to get the availability for scheduling data box orders orders.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxScheduleAvailabilityRequest
	{
	}
	
	/// <summary>
	/// The secrets related to a DataBox.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataBoxSecret
	{
		
		/// <summary>
		/// Per account level access credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountCredentialDetails")]
		public AccountCredentialDetails[] AccountCredentialDetails { get; set; }
		
		/// <summary>
		/// Password for out of the box experience on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="devicePassword")]
		public string DevicePassword { get; set; }
		
		/// <summary>
		/// Serial number of the assigned device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceSerialNumber")]
		public string DeviceSerialNumber { get; set; }
		
		/// <summary>
		/// The base 64 encoded public key to authenticate with the device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encodedValidationCertPubKey")]
		public string EncodedValidationCertPubKey { get; set; }
		
		/// <summary>
		/// Network configuration of the appliance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkConfigurations")]
		public ApplianceNetworkConfiguration[] NetworkConfigurations { get; set; }
	}
	
	/// <summary>
	/// Request to validate data destination details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataDestinationDetailsValidationRequest
	{
		
		/// <summary>
		/// Destination account details list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="destinationAccountDetails")]
		public DestinationAccountDetails[] DestinationAccountDetails { get; set; }
		
		/// <summary>
		/// Location of stamp or geo.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
	}
	
	/// <summary>
	/// Details of the destination storage accounts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DestinationAccountDetails
	{
		
		/// <summary>
		/// Arm Id of the destination where the data has to be moved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		/// <summary>
		/// Data Destination Type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataDestinationType")]
		public AccountCredentialDetailsDataDestinationType DataDestinationType { get; set; }
		
		/// <summary>
		/// Share password to be shared by all shares in SA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharePassword")]
		public string SharePassword { get; set; }
	}
	
	/// <summary>
	/// Properties of data destination details validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataDestinationDetailsValidationResponseProperties
	{
		
		/// <summary>
		/// Data destination details validation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public CreateOrderLimitForSubscriptionValidationResponsePropertiesStatus Status { get; set; }
	}
	
	/// <summary>
	/// The secrets related to a databox job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DataboxJobSecrets
	{
		
		/// <summary>
		/// Contains the list of secret objects for a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="podSecrets")]
		public DataBoxSecret[] PodSecrets { get; set; }
	}
	
	/// <summary>
	/// Dc Access Security code for device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DcAccessSecurityCode
	{
		
		/// <summary>
		/// Dc Access Code for dispatching from DC.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardDcAccessCode")]
		public string ForwardDcAccessCode { get; set; }
		
		/// <summary>
		/// Dc Access code for dropping off at DC.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reverseDcAccessCode")]
		public string ReverseDcAccessCode { get; set; }
	}
	
	/// <summary>
	/// Details for the destination compute disks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DestinationManagedDiskDetails
	{
		
		/// <summary>
		/// Destination Resource Group Id where the Compute disks should be created.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourceGroupId")]
		public string ResourceGroupId { get; set; }
		
		/// <summary>
		/// Arm Id of the storage account that can be used to copy the vhd for staging.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stagingStorageAccountId")]
		public string StagingStorageAccountId { get; set; }
	}
	
	/// <summary>
	/// Details for the destination storage account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DestinationStorageAccountDetails
	{
		
		/// <summary>
		/// Destination Storage Account Arm Id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storageAccountId")]
		public string StorageAccountId { get; set; }
	}
	
	/// <summary>
	/// Request body to get the availability for scheduling disk orders.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiskScheduleAvailabilityRequest
	{
		
		/// <summary>
		/// The expected size of the data, which needs to be transferred in this job, in terabytes.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="expectedDataSizeInTerabytes")]
		public int ExpectedDataSizeInTerabytes { get; set; }
	}
	
	/// <summary>
	/// Top level error for the job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Error
	{
		
		/// <summary>
		/// Error code that can be used to programmatically identify the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Describes the error in detail and provides debugging information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Request body to get the availability for scheduling heavy orders.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HeavyScheduleAvailabilityRequest
	{
	}
	
	/// <summary>
	/// Additional delivery info.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobDeliveryInfo
	{
		
		/// <summary>
		/// Scheduled date time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduledDateTime")]
		public System.Nullable<System.DateTimeOffset> ScheduledDateTime { get; set; }
	}
	
	/// <summary>
	/// Job details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobDetails
	{
		
		/// <summary>
		/// Shared access key to download the chain of custody logs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chainOfCustodySasKey")]
		public string ChainOfCustodySasKey { get; set; }
		
		/// <summary>
		/// Contact Details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contactDetails")]
		public ContactDetails ContactDetails { get; set; }
		
		/// <summary>
		/// List of copy log details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyLogDetails")]
		public CopyLogDetails[] CopyLogDetails { get; set; }
		
		/// <summary>
		/// Shipping details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryPackage")]
		public PackageShippingDetails DeliveryPackage { get; set; }
		
		/// <summary>
		/// Destination account details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="destinationAccountDetails")]
		public DestinationAccountDetails[] DestinationAccountDetails { get; set; }
		
		/// <summary>
		/// Error details for failure. This is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorDetails")]
		public JobErrorDetails[] ErrorDetails { get; set; }
		
		/// <summary>
		/// The expected size of the data, which needs to be transferred in this job, in terabytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expectedDataSizeInTerabytes")]
		public System.Nullable<System.Int32> ExpectedDataSizeInTerabytes { get; set; }
		
		/// <summary>
		/// Indicates the type of job details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobDetailsType")]
		public SkuName JobDetailsType { get; set; }
		
		/// <summary>
		/// List of stages that run in the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobStages")]
		public JobStages[] JobStages { get; set; }
		
		/// <summary>
		/// Preferences related to the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferences")]
		public Preferences Preferences { get; set; }
		
		/// <summary>
		/// Shipping details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnPackage")]
		public PackageShippingDetails ReturnPackage { get; set; }
		
		/// <summary>
		/// Shared access key to download the return shipment label
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reverseShipmentLabelSasKey")]
		public string ReverseShipmentLabelSasKey { get; set; }
		
		/// <summary>
		/// Shipping address where customer wishes to receive the device.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shippingAddress")]
		public ShippingAddress ShippingAddress { get; set; }
	}
	
	/// <summary>
	/// Shipping details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PackageShippingDetails
	{
		
		/// <summary>
		/// Name of the carrier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carrierName")]
		public string CarrierName { get; set; }
		
		/// <summary>
		/// Tracking Id of shipment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingId")]
		public string TrackingId { get; set; }
		
		/// <summary>
		/// Url where shipment can be tracked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingUrl")]
		public string TrackingUrl { get; set; }
	}
	
	/// <summary>
	/// Job Error Details for providing the information and recommended action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobErrorDetails
	{
		
		/// <summary>
		/// Code for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public System.Nullable<System.Int32> ErrorCode { get; set; }
		
		/// <summary>
		/// Message for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
		
		/// <summary>
		/// Contains the non localized exception message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exceptionMessage")]
		public string ExceptionMessage { get; set; }
		
		/// <summary>
		/// Recommended action for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendedAction")]
		public string RecommendedAction { get; set; }
	}
	
	/// <summary>
	/// Job stages.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobStages
	{
		
		/// <summary>
		/// Display name of the job stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Error details for the stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorDetails")]
		public JobErrorDetails[] ErrorDetails { get; set; }
		
		/// <summary>
		/// Job Stage Details
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobStageDetails")]
		public string JobStageDetails { get; set; }
		
		/// <summary>
		/// Name of the job stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stageName")]
		public System.Nullable<JobStagesStageName> StageName { get; set; }
		
		/// <summary>
		/// Status of the job stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stageStatus")]
		public System.Nullable<JobStagesStageStatus> StageStatus { get; set; }
		
		/// <summary>
		/// Time for the job stage in UTC ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stageTime")]
		public System.Nullable<System.DateTimeOffset> StageTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum JobStagesStageName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeviceOrdered = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DevicePrepared = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dispatched = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Delivered = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PickedUp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AtAzureDC = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataCopy = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompletedWithErrors = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed_IssueReportedAtCustomer = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed_IssueDetectedAtAzureDC = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Aborted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CompletedWithWarnings = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReadyToDispatchFromAzureDC = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReadyToReceiveAtAzureDC = 15,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum JobStagesStageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelling = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SucceededWithErrors = 6,
	}
	
	/// <summary>
	/// Preferences related to the order
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Preferences
	{
		
		/// <summary>
		/// Preferred Data Center Region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferredDataCenterRegion")]
		public string[] PreferredDataCenterRegion { get; set; }
		
		/// <summary>
		/// Preferences related to the shipment logistics of the sku
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transportPreferences")]
		public TransportPreferences TransportPreferences { get; set; }
	}
	
	/// <summary>
	/// Preferences related to the shipment logistics of the sku
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TransportPreferences
	{
		
		/// <summary>
		/// Indicates Shipment Logistics type that the customer preferred.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="preferredShipmentType")]
		public TransportPreferencesPreferredShipmentType PreferredShipmentType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum TransportPreferencesPreferredShipmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CustomerManaged = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MicrosoftManaged = 1,
	}
	
	/// <summary>
	/// Job Properties
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobProperties
	{
		
		/// <summary>
		/// Reason for cancellation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancellationReason")]
		public string CancellationReason { get; set; }
		
		/// <summary>
		/// Additional delivery info.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryInfo")]
		public JobDeliveryInfo DeliveryInfo { get; set; }
		
		/// <summary>
		/// Delivery type of Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryType")]
		public System.Nullable<JobPropertiesDeliveryType> DeliveryType { get; set; }
		
		/// <summary>
		/// Job details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public JobDetails Details { get; set; }
		
		/// <summary>
		/// Top level error for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Error Error { get; set; }
		
		/// <summary>
		/// Describes whether the job is cancellable or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isCancellable")]
		public System.Nullable<System.Boolean> IsCancellable { get; set; }
		
		/// <summary>
		/// Flag to indicate cancellation of scheduled job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isCancellableWithoutFee")]
		public System.Nullable<System.Boolean> IsCancellableWithoutFee { get; set; }
		
		/// <summary>
		/// Describes whether the job is deletable or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDeletable")]
		public System.Nullable<System.Boolean> IsDeletable { get; set; }
		
		/// <summary>
		/// Describes whether the shipping address is editable or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isShippingAddressEditable")]
		public System.Nullable<System.Boolean> IsShippingAddressEditable { get; set; }
		
		/// <summary>
		/// Time at which the job was started in UTC ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Name of the stage which is in progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public JobStagesStageName Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum JobPropertiesDeliveryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NonScheduled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 1,
	}
	
	/// <summary>
	/// Job Resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobResource
	{
		
		/// <summary>
		/// Id of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Job Properties
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public JobProperties Properties { get; set; }
		
		/// <summary>
		/// Type of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Job Resource Collection
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobResourceList
	{
		
		/// <summary>
		/// Link for the next set of job resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of job resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public JobResource[] Value { get; set; }
	}
	
	/// <summary>
	/// The JobResourceUpdateParameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobResourceUpdateParameter
	{
		
		/// <summary>
		/// Job Properties for update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public UpdateJobProperties Properties { get; set; }
		
		/// <summary>
		/// The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// Job Properties for update
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UpdateJobProperties
	{
		
		/// <summary>
		/// Destination account details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationAccountDetails")]
		public DestinationAccountDetails[] DestinationAccountDetails { get; set; }
		
		/// <summary>
		/// Job details for update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public UpdateJobDetails Details { get; set; }
	}
	
	/// <summary>
	/// Job details for update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UpdateJobDetails
	{
		
		/// <summary>
		/// Contact Details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contactDetails")]
		public ContactDetails ContactDetails { get; set; }
		
		/// <summary>
		/// Shipping address where customer wishes to receive the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shippingAddress")]
		public ShippingAddress ShippingAddress { get; set; }
	}
	
	/// <summary>
	/// The base class for the secrets
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JobSecrets
	{
		
		/// <summary>
		/// Dc Access Security code for device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dcAccessSecurityCode")]
		public DcAccessSecurityCode DcAccessSecurityCode { get; set; }
		
		/// <summary>
		/// Used to indicate what type of job secrets object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jobSecretsType")]
		public SkuName JobSecretsType { get; set; }
	}
	
	/// <summary>
	/// Operation entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// Operation display
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public OperationDisplay Display { get; set; }
		
		/// <summary>
		/// Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Origin of the operation. Can be : user|system|user,system
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origin")]
		public string Origin { get; set; }
		
		/// <summary>
		/// Operation properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public OperationProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Operation display
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationDisplay
	{
		
		/// <summary>
		/// Localized description of the operation for display purpose.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Localized name of the operation for display purpose.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Provider name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// Resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// Operation properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationProperties
	{
	}
	
	/// <summary>
	/// Operation Collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationList
	{
		
		/// <summary>
		/// Link for the next set of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// Request to validate preference of transport and data center.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PreferencesValidationRequest
	{
		
		/// <summary>
		/// Device type to be used for the job.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public SkuName DeviceType { get; set; }
		
		/// <summary>
		/// Preferences related to the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preference")]
		public Preferences Preference { get; set; }
	}
	
	/// <summary>
	/// Properties of data center and transport preference validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PreferencesValidationResponseProperties
	{
		
		/// <summary>
		/// Validation status of requested data center and transport.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public CreateOrderLimitForSubscriptionValidationResponsePropertiesStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request body to get the configuration for the region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RegionConfigurationRequest
	{
		
		/// <summary>
		/// Request body to get the availability for scheduling orders.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleAvailabilityRequest")]
		public ScheduleAvailabilityRequest ScheduleAvailabilityRequest { get; set; }
		
		/// <summary>
		/// Request body to get the transport availability for given sku.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transportAvailabilityRequest")]
		public TransportAvailabilityRequest TransportAvailabilityRequest { get; set; }
	}
	
	/// <summary>
	/// Request body to get the availability for scheduling orders.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ScheduleAvailabilityRequest
	{
		
		/// <summary>
		/// Sku Name for which the order is to be scheduled.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="skuName")]
		public SkuName SkuName { get; set; }
		
		/// <summary>
		/// Location for data transfer. 
		///For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="storageLocation")]
		public string StorageLocation { get; set; }
	}
	
	/// <summary>
	/// Request body to get the transport availability for given sku.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TransportAvailabilityRequest
	{
		
		/// <summary>
		/// Type of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuName")]
		public SkuName SkuName { get; set; }
	}
	
	/// <summary>
	/// Configuration response specific to a region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RegionConfigurationResponse
	{
		
		/// <summary>
		/// Schedule availability response for given sku in a region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleAvailabilityResponse")]
		public ScheduleAvailabilityResponse ScheduleAvailabilityResponse { get; set; }
		
		/// <summary>
		/// Transport options available for given sku in a region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transportAvailabilityResponse")]
		public TransportAvailabilityResponse TransportAvailabilityResponse { get; set; }
	}
	
	/// <summary>
	/// Schedule availability response for given sku in a region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ScheduleAvailabilityResponse
	{
		
		/// <summary>
		/// List of dates available to schedule
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableDates")]
		public string[] AvailableDates { get; set; }
	}
	
	/// <summary>
	/// Transport options available for given sku in a region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TransportAvailabilityResponse
	{
		
		/// <summary>
		/// List of transport availability details for given region
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transportAvailabilityDetails")]
		public TransportAvailabilityDetails[] TransportAvailabilityDetails { get; set; }
	}
	
	/// <summary>
	/// Transport options availability details for given region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TransportAvailabilityDetails
	{
		
		/// <summary>
		/// Transport Shipment Type supported for given region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipmentType")]
		public TransportPreferencesPreferredShipmentType ShipmentType { get; set; }
	}
	
	/// <summary>
	/// Model of the Resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// The Sku.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public Sku Sku { get; set; }
		
		/// <summary>
		/// The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// Shipment pick up request details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ShipmentPickUpRequest
	{
		
		/// <summary>
		/// Maximum date before which the pick up should commence, this must be in local time of pick up area.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Shipment Location in the pickup place. Eg.front desk
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shipmentLocation")]
		public string ShipmentLocation { get; set; }
		
		/// <summary>
		/// Minimum date after which the pick up should commence, this must be in local time of pick up area.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.DateTimeOffset StartTime { get; set; }
	}
	
	/// <summary>
	/// Shipment pick up response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ShipmentPickUpResponse
	{
		
		/// <summary>
		/// Confirmation number for the pick up request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confirmationNumber")]
		public string ConfirmationNumber { get; set; }
		
		/// <summary>
		/// Time by which shipment should be ready for pick up, this is in local time of pick up area.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readyByTime")]
		public System.Nullable<System.DateTimeOffset> ReadyByTime { get; set; }
	}
	
	/// <summary>
	/// Request to validate sku availability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuAvailabilityValidationRequest
	{
		
		/// <summary>
		/// ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Device type to be used for the job.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public SkuName DeviceType { get; set; }
		
		/// <summary>
		/// Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Type of the transfer.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="transferType")]
		public AvailableSkuRequestTransferType TransferType { get; set; }
	}
	
	/// <summary>
	/// Properties of sku availability validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuAvailabilityValidationResponseProperties
	{
		
		/// <summary>
		/// Sku availability validation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public CreateOrderLimitForSubscriptionValidationResponsePropertiesStatus Status { get; set; }
	}
	
	/// <summary>
	/// Request to validate subscription permission to create jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SubscriptionIsAllowedToCreateJobValidationRequest
	{
	}
	
	/// <summary>
	/// Properties of subscription permission to create job validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SubscriptionIsAllowedToCreateJobValidationResponseProperties
	{
		
		/// <summary>
		/// Validation status of subscription permission to create job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public CreateOrderLimitForSubscriptionValidationResponsePropertiesStatus Status { get; set; }
	}
	
	/// <summary>
	/// Unencrypted credentials for accessing device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UnencryptedCredentials
	{
		
		/// <summary>
		/// Name of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobName")]
		public string JobName { get; set; }
		
		/// <summary>
		/// The base class for the secrets
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobSecrets")]
		public JobSecrets JobSecrets { get; set; }
	}
	
	/// <summary>
	/// List of unencrypted credentials for accessing device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UnencryptedCredentialsList
	{
		
		/// <summary>
		/// Link for the next set of unencrypted credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of unencrypted credentials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public UnencryptedCredentials[] Value { get; set; }
	}
	
	/// <summary>
	/// The requirements to validate customer address where the device needs to be shipped.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ValidateAddress
	{
		
		/// <summary>
		/// Device type to be used for the job.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public SkuName DeviceType { get; set; }
		
		/// <summary>
		/// Shipping address where customer wishes to receive the device.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shippingAddress")]
		public ShippingAddress ShippingAddress { get; set; }
		
		/// <summary>
		/// Preferences related to the shipment logistics of the sku
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transportPreferences")]
		public TransportPreferences TransportPreferences { get; set; }
	}
	
	/// <summary>
	/// Minimum fields that must be present in any type of validation request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ValidationInputRequest
	{
		
		/// <summary>
		/// Identifies the type of validation request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="validationType")]
		public ValidationInputRequestValidationType ValidationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ValidationInputRequestValidationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidateAddress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidateDataDestinationDetails = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidateSubscriptionIsAllowedToCreateJob = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidatePreferences = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidateCreateOrderLimit = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ValidateSkuAvailability = 5,
	}
	
	/// <summary>
	/// Minimum properties that should be present in each individual validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ValidationInputResponse
	{
		
		/// <summary>
		/// Top level error for the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Error Error { get; set; }
		
		/// <summary>
		/// Identifies the type of validation response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="validationType")]
		public ValidationInputRequestValidationType ValidationType { get; set; }
	}
	
	/// <summary>
	/// Input request for all pre job creation validation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ValidationRequest
	{
		
		/// <summary>
		/// List of request details contain validationType and its request as key and value respectively.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="individualRequestDetails")]
		public ValidationInputRequest[] IndividualRequestDetails { get; set; }
		
		/// <summary>
		/// Identify the nature of validation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="validationCategory")]
		public ValidationRequestValidationCategory ValidationCategory { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ValidationRequestValidationCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JobCreationValidation = 0,
	}
	
	/// <summary>
	/// Response of pre job creation validations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ValidationResponse
	{
		
		/// <summary>
		/// Properties of pre job creation validation response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ValidationResponseProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Properties of pre job creation validation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ValidationResponseProperties
	{
		
		/// <summary>
		/// List of response details contain validationType and its response as key and value respectively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="individualResponseDetails")]
		public ValidationInputResponse[] IndividualResponseDetails { get; set; }
		
		/// <summary>
		/// Overall validation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ValidationResponsePropertiesStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ValidationResponsePropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AllValidToProceed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InputsRevisitRequired = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CertainInputValidationsSkipped = 2,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// This method gets all the operations.
		/// Operations_List providers/Microsoft.DataBox/operations
		/// </summary>
		/// <param name="api_version">The API Version</param>
		/// <returns>The supported operations list.</returns>
		public async Task<OperationList> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.DataBox/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OperationList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the jobs available under the subscription.
		/// Jobs_List subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="skipToken">$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.</param>
		/// <returns>List of jobs available under the subscription.</returns>
		public async Task<JobResourceList> Jobs_ListAsync(string subscriptionId, string api_version, string skipToken)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.DataBox/jobs&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version))+"&$skipToken=" + (skipToken==null? "" : System.Uri.EscapeDataString(skipToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JobResourceList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This method provides the list of available skus for the given subscription and location.
		/// Service_ListAvailableSkus subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/availableSkus
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="location">The location of the resource</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Filters for showing the available skus.</param>
		/// <returns>The list of available skus under subscription.</returns>
		public async Task<AvailableSkusResult> Service_ListAvailableSkusAsync(string subscriptionId, string location, string api_version, AvailableSkuRequest requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.DataBox/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/availableSkus&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AvailableSkusResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This API provides configuration details specific to given region/location.
		/// Service_RegionConfiguration subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/regionConfiguration
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="location">The location of the resource</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Request body to get the configuration for the region.</param>
		/// <returns>Region configuration response.</returns>
		public async Task<RegionConfigurationResponse> Service_RegionConfigurationAsync(string subscriptionId, string location, string api_version, RegionConfigurationRequest requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.DataBox/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/regionConfiguration&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegionConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// [DEPRECATED NOTICE: This operation will soon be removed] This method validates the customer shipping address and provide alternate addresses if any.
		/// Service_ValidateAddress subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="location">The location of the resource</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Shipping address of the customer.</param>
		/// <returns>The valid and alternate addresses.</returns>
		public async Task<AddressValidationOutput> Service_ValidateAddressAsync(string subscriptionId, string location, string api_version, ValidateAddress requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.DataBox/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/validateAddress&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddressValidationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This method does all necessary pre-job creation validation under subscription.
		/// Service_ValidateInputs subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateInputs
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="location">The location of the resource</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Inputs of the customer.</param>
		/// <returns>The validation status and responses of each validating parameter.</returns>
		public async Task<ValidationResponse> Service_ValidateInputsAsync(string subscriptionId, string location, string api_version, ValidationRequest requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.DataBox/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/validateInputs&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ValidationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the jobs available under the given resource group.
		/// Jobs_ListByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="skipToken">$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.</param>
		/// <returns>List of jobs by resource group.</returns>
		public async Task<JobResourceList> Jobs_ListByResourceGroupAsync(string subscriptionId, string resourceGroupName, string api_version, string skipToken)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version))+"&$skipToken=" + (skipToken==null? "" : System.Uri.EscapeDataString(skipToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JobResourceList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about the specified job.
		/// Jobs_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		/// <param name="expand">$expand is supported on details parameter for job, which provides details on the job stages.</param>
		/// <returns>Job object.</returns>
		public async Task<JobResource> Jobs_GetAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version, string expand)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version))+"&$expand=" + (expand==null? "" : System.Uri.EscapeDataString(expand));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JobResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new job with the specified parameters. Existing job cannot be updated with this API and should instead be updated with the Update job API.
		/// Jobs_Create subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Job details from request body.</param>
		/// <returns>Job object.</returns>
		public async Task<JobResource> Jobs_CreateAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version, JobResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JobResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a job.
		/// Jobs_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		public async Task Jobs_DeleteAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the properties of an existing job.
		/// Jobs_Update subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Job update parameters from request body.</param>
		/// <returns>Job object.</returns>
		public async Task<JobResource> Jobs_UpdateAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version, JobResourceUpdateParameter requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JobResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Book shipment pick up.
		/// Jobs_BookShipmentPickUp subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/bookShipmentPickUp
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Details of shipment pick up request.</param>
		/// <returns>Booked shipment pick up successfully.</returns>
		public async Task<ShipmentPickUpResponse> Jobs_BookShipmentPickUpAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version, ShipmentPickUpRequest requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"/bookShipmentPickUp&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ShipmentPickUpResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// CancelJob.
		/// Jobs_Cancel subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/cancel
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Reason for cancellation.</param>
		public async Task Jobs_CancelAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version, CancellationReason requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"/cancel&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This method gets the unencrypted secrets related to the job.
		/// Jobs_ListCredentials subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/listCredentials
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="jobName">The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
		/// Min length: 3
		/// Max length: 24
		// </param>
		/// <param name="api_version">The API Version</param>
		/// <returns>List of unencrypted credentials of the job.</returns>
		public async Task<UnencryptedCredentialsList> Jobs_ListCredentialsAsync(string subscriptionId, string resourceGroupName, string jobName, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/jobs/"+ (jobName==null? "" : System.Uri.EscapeDataString(jobName))+"/listCredentials&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UnencryptedCredentialsList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This method provides the list of available skus for the given subscription, resource group and location.
		/// Service_ListAvailableSkusByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/availableSkus
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="location">The location of the resource</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Filters for showing the available skus.</param>
		/// <returns>The list of available skus under Resource group.</returns>
		public async Task<AvailableSkusResult> Service_ListAvailableSkusByResourceGroupAsync(string subscriptionId, string resourceGroupName, string location, string api_version, AvailableSkuRequest requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/availableSkus&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AvailableSkusResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This method does all necessary pre-job creation validation under resource group.
		/// Service_ValidateInputsByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/validateInputs
		/// </summary>
		/// <param name="subscriptionId">The Subscription Id</param>
		/// <param name="resourceGroupName">The Resource Group Name</param>
		/// <param name="location">The location of the resource</param>
		/// <param name="api_version">The API Version</param>
		/// <param name="requestBody">Inputs of the customer.</param>
		/// <returns>The validation status and responses of each validating parameter.</returns>
		public async Task<ValidationResponse> Service_ValidateInputsByResourceGroupAsync(string subscriptionId, string resourceGroupName, string location, string api_version, ValidationRequest requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DataBox/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/validateInputs&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ValidationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

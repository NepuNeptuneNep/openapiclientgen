//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Airport
	{
		
		[System.Runtime.Serialization.DataMember(Name="iataCode")]
		public string IataCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="icaoCode")]
		public string IcaoCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Answer
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CivicStructure
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContractualRulesAttribution
	{
		
		/// <summary>
		/// A Boolean value that determines whether the contents of the rule must be placed in close proximity to the field that the rule applies to. If true, the contents must be placed in close proximity. If false, or this field does not exist, the contents may be placed at the caller's discretion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mustBeCloseToContent")]
		public System.Nullable<System.Boolean> MustBeCloseToContent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContractualRulesContractualRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
		
		/// <summary>
		/// The name of the field that the rule applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetPropertyName")]
		public string TargetPropertyName { get; set; }
	}
	
	/// <summary>
	/// Defines a contractual rule for license attribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContractualRulesLicenseAttribution
	{
		
		/// <summary>
		/// Defines the license under which the text or photo may be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="license")]
		public License License { get; set; }
		
		/// <summary>
		/// The license to display next to the targeted field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="licenseNotice")]
		public string LicenseNotice { get; set; }
	}
	
	/// <summary>
	/// Defines the license under which the text or photo may be used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class License
	{
	}
	
	/// <summary>
	/// Defines a contractual rule for link attribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContractualRulesLinkAttribution
	{
		
		/// <summary>
		/// Indicates whether this provider's attribution is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optionalForListDisplay")]
		public System.Nullable<System.Boolean> OptionalForListDisplay { get; set; }
		
		/// <summary>
		/// The attribution text.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// The URL to the provider's website. Use text and URL to create the hyperlink.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Defines a contractual rule for media attribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContractualRulesMediaAttribution
	{
		
		/// <summary>
		/// The URL that you use to create of hyperlink of the media content. For example, if the target is an image, you would use the URL to make the image clickable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Defines a contractual rule for text attribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContractualRulesTextAttribution
	{
		
		/// <summary>
		/// Indicates whether this provider's attribution is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optionalForListDisplay")]
		public System.Nullable<System.Boolean> OptionalForListDisplay { get; set; }
		
		/// <summary>
		/// The attribution text. Text attribution applies to the entity as a whole and should be displayed immediately following the entity presentation. If there are multiple text or link attribution rules that do not specify a target, you should concatenate them and display them using a "Data from:" label.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreativeWork
	{
		
		/// <summary>
		/// The source of the creative work.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public Thing[] Provider { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// The URL to a thumbnail of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnailUrl")]
		public string ThumbnailUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Thing
	{
		
		/// <summary>
		/// An ID that uniquely identifies this item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bingId")]
		public string BingId { get; set; }
		
		/// <summary>
		/// A short description of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Defines additional information about an entity such as type hints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityPresentationInfo")]
		public EntitiesEntityPresentationInfo EntityPresentationInfo { get; set; }
		
		/// <summary>
		/// Defines an image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public ImageObject Image { get; set; }
		
		/// <summary>
		/// The name of the thing represented by this object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The URL to get more information about the thing represented by this object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Defines additional information about an entity such as type hints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EntitiesEntityPresentationInfo
	{
		
		/// <summary>
		/// The supported scenario.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(EntitiesEntityPresentationInfoEntityScenario.DominantEntity)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="entityScenario")]
		public EntitiesEntityPresentationInfoEntityScenario EntityScenario { get; set; } = EntitiesEntityPresentationInfoEntityScenario.DominantEntity;
		
		/// <summary>
		/// A display version of the entity hint. For example, if entityTypeHints is Artist, this field may be set to American Singer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityTypeDisplayHint")]
		public string EntityTypeDisplayHint { get; set; }
		
		/// <summary>
		/// A list of hints that indicate the entity's type. The list could contain a single hint such as Movie or a list of hints such as Place, LocalBusiness, Restaurant. Each successive hint in the array narrows the entity's type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityTypeHints")]
		public string[] EntityTypeHints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum EntitiesEntityPresentationInfoEntityScenario
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DominantEntity = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DisambiguationItem = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListItem = 2,
	}
	
	/// <summary>
	/// Defines an image
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImageObject
	{
		
		/// <summary>
		/// Defines an image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public ImageObject Thumbnail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EntertainmentBusiness
	{
	}
	
	/// <summary>
	/// Defines an entity answer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Entities
	{
		
		/// <summary>
		/// The supported query scenario. This field is set to DominantEntity or DisambiguationItem. The field is set to DominantEntity if Bing determines that only a single entity satisfies the request. For example, a book, movie, person, or attraction. If multiple entities could satisfy the request, the field is set to DisambiguationItem. For example, if the request uses the generic title of a movie franchise, the entity's type would likely be DisambiguationItem. But, if the request specifies a specific title from the franchise, the entity's type would likely be DominantEntity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryScenario")]
		public System.Nullable<EntitiesQueryScenario> QueryScenario { get; set; }
		
		/// <summary>
		/// A list of entities.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Thing[] Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum EntitiesQueryScenario
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DominantEntity = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DominantEntityWithDisambiguation = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disambiguation = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		List = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListWithPivot = 4,
	}
	
	/// <summary>
	/// Defines the error that occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Error
	{
		
		/// <summary>
		/// The error code that identifies the category of error.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(ErrorCode.None)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public ErrorCode Code { get; set; } = ErrorCode.None;
		
		/// <summary>
		/// A description of the error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// A description that provides additional information about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moreDetails")]
		public string MoreDetails { get; set; }
		
		/// <summary>
		/// The parameter in the request that caused the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public string Parameter { get; set; }
		
		/// <summary>
		/// The error code that further helps to identify the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subCode")]
		public System.Nullable<ErrorSubCode> SubCode { get; set; }
		
		/// <summary>
		/// The parameter's value in the request that was not valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServerError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RateLimitExceeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidAuthorization = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientAuthorization = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ErrorSubCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnexpectedError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotImplemented = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterMissing = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterInvalidValue = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HttpNotAllowed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Blocked = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationMissing = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationRedundancy = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationDisabled = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationExpired = 10,
	}
	
	/// <summary>
	/// The top-level response that represents a failed request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// A list of errors that describe the reasons why the request failed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public Error[] Errors { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FoodEstablishment
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Hotel
	{
		
		[System.Runtime.Serialization.DataMember(Name="amenities")]
		public string[] Amenities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hotelClass")]
		public string HotelClass { get; set; }
	}
	
	/// <summary>
	/// Defines the identity of a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Identifiable
	{
		
		/// <summary>
		/// A String identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Intangible
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LocalBusiness
	{
		
		[System.Runtime.Serialization.DataMember(Name="isPermanentlyClosed")]
		public System.Nullable<System.Boolean> IsPermanentlyClosed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="panoramas")]
		public ImageObject[] Panoramas { get; set; }
		
		/// <summary>
		/// $$.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceRange")]
		public string PriceRange { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tagLine")]
		public string TagLine { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LodgingBusiness
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MediaObject
	{
		
		/// <summary>
		/// Original URL to retrieve the source (file) for the media object (e.g the source URL for the image).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentUrl")]
		public string ContentUrl { get; set; }
		
		/// <summary>
		/// The height of the source media object, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// URL of the page that hosts the media object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostPageUrl")]
		public string HostPageUrl { get; set; }
		
		/// <summary>
		/// The width of the source media object, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MovieTheater
	{
		
		[System.Runtime.Serialization.DataMember(Name="screenCount")]
		public System.Nullable<System.Int32> ScreenCount { get; set; }
	}
	
	/// <summary>
	/// Defines an organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Organization
	{
	}
	
	/// <summary>
	/// Defines information about a local entity, such as a restaurant or hotel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Place
	{
		
		/// <summary>
		/// Defines a postal address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostalAddress Address { get; set; }
		
		/// <summary>
		/// The entity's telephone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="telephone")]
		public string Telephone { get; set; }
	}
	
	/// <summary>
	/// Defines a postal address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PostalAddress
	{
		
		/// <summary>
		/// The country/region where the street address is located. This could be the two-letter ISO code. For example, US, or the full name, United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressCountry")]
		public string AddressCountry { get; set; }
		
		/// <summary>
		/// The city where the street address is located. For example, Seattle.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressLocality")]
		public string AddressLocality { get; set; }
		
		/// <summary>
		/// The state or province code where the street address is located. This could be the two-letter code. For example, WA, or the full name , Washington.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressRegion")]
		public string AddressRegion { get; set; }
		
		/// <summary>
		/// Region Abbreviation. For example, WA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addressRegionAbbreviation")]
		public string AddressRegionAbbreviation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addressSubregion")]
		public string AddressSubregion { get; set; }
		
		/// <summary>
		/// The two letter ISO code of this country. For example, US.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="countryIso")]
		public string CountryIso { get; set; }
		
		/// <summary>
		/// The neighborhood where the street address is located. For example, Westlake.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighborhood")]
		public string Neighborhood { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postOfficeBoxNumber")]
		public string PostOfficeBoxNumber { get; set; }
		
		/// <summary>
		/// The zip code or postal code where the street address is located. For example, 98052.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postalCode")]
		public string PostalCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="streetAddress")]
		public string StreetAddress { get; set; }
		
		/// <summary>
		/// The complete address. For example, 2100 Westlake Ave N, Bellevue, WA 98052.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Defines a local entity answer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Places
	{
		
		/// <summary>
		/// A list of local entities, such as restaurants or hotels.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Thing[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines the query context that Bing used for the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QueryContext
	{
		
		/// <summary>
		/// A Boolean value that indicates whether the specified query has adult intent. The value is true if the query has adult intent; otherwise, false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adultIntent")]
		public System.Nullable<System.Boolean> AdultIntent { get; set; }
		
		/// <summary>
		/// The query string to use to force Bing to use the original string. For example, if the query string is "saling downwind", the override query string will be "+saling downwind". Remember to encode the query string which results in "%2Bsaling+downwind". This field is included only if the original query string contains a spelling mistake.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alterationOverrideQuery")]
		public string AlterationOverrideQuery { get; set; }
		
		/// <summary>
		/// The query string used by Bing to perform the query. Bing uses the altered query string if the original query string contained spelling mistakes. For example, if the query string is "saling downwind", the altered query string will be "sailing downwind". This field is included only if the original query string contains a spelling mistake.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alteredQuery")]
		public string AlteredQuery { get; set; }
		
		/// <summary>
		/// A Boolean value that indicates whether Bing requires the user's location to provide accurate results. If you specified the user's location by using the X-MSEdge-ClientIP and X-Search-Location headers, you can ignore this field. For location aware queries, such as "today's weather" or "restaurants near me" that need the user's location to provide accurate results, this field is set to true. For location aware queries that include the location (for example, "Seattle weather"), this field is set to false. This field is also set to false for queries that are not location aware, such as "best sellers".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="askUserForLocation")]
		public System.Nullable<System.Boolean> AskUserForLocation { get; set; }
		
		/// <summary>
		/// The query string as specified in the request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originalQuery")]
		public string OriginalQuery { get; set; }
	}
	
	/// <summary>
	/// Defines a response. All schemas that could be returned at the root of a response should inherit from this
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Response
	{
		
		/// <summary>
		/// A list of rules that you must adhere to if you display the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contractualRules")]
		public ContractualRulesContractualRule[] ContractualRules { get; set; }
		
		/// <summary>
		/// The URL To Bing's search result for this item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webSearchUrl")]
		public string WebSearchUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResponseBase
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Restaurant
	{
		
		[System.Runtime.Serialization.DataMember(Name="acceptsReservations")]
		public System.Nullable<System.Boolean> AcceptsReservations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="menuUrl")]
		public string MenuUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reservationUrl")]
		public string ReservationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="servesCuisine")]
		public string[] ServesCuisine { get; set; }
	}
	
	/// <summary>
	/// Defines the top-level object that the response includes when the request succeeds.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SearchResponse
	{
		
		/// <summary>
		/// Defines an entity answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public Entities Entities { get; set; }
		
		/// <summary>
		/// Defines a local entity answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="places")]
		public Places Places { get; set; }
		
		/// <summary>
		/// Defines the query context that Bing used for the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryContext")]
		public QueryContext QueryContext { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SearchResultsAnswer
	{
		
		/// <summary>
		/// Defines the query context that Bing used for the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryContext")]
		public QueryContext QueryContext { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StructuredValue
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TouristAttraction
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. Place results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. Place in this context is tourist attractions, states, countries, etc.
		/// Entities_Search entities
		/// </summary>
		/// <param name="cc">A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="mkt">The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="q">The user's search term.</param>
		/// <param name="ResponseFilter">A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data.</param>
		/// <param name="ResponseFormat">The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results.</param>
		/// <param name="SafeSearch">A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.</param>
		/// <param name="SetLang">The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.</param>
		/// <returns>Success.</returns>
		public async Task<SearchResponse> Entities_SearchAsync(string cc, string mkt, string q, string[] ResponseFilter, string[] ResponseFormat, Entities_SearchSafeSearch SafeSearch, string SetLang)
		{
			var requestUri = "entities?cc=" + (cc==null? "" : System.Uri.EscapeDataString(cc))+"&mkt=" + (mkt==null? "" : System.Uri.EscapeDataString(mkt))+"&q=" + (q==null? "" : System.Uri.EscapeDataString(q))+"&"+string.Join("&", ResponseFilter.Select(z => $"ResponseFilter={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", ResponseFormat.Select(z => $"ResponseFormat={System.Uri.EscapeDataString(z.ToString())}"))+"&SafeSearch=" + SafeSearch+"&SetLang=" + (SetLang==null? "" : System.Uri.EscapeDataString(SetLang));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SearchResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum Entities_SearchX_BingApis_SDK
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
	}
	
	public enum Entities_SearchSafeSearch
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Moderate = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Strict = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

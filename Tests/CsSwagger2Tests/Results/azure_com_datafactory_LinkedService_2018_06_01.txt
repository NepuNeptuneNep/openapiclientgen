//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Amazon Marketplace Web Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AmazonMWSLinkedService
	{
		
		/// <summary>
		/// Amazon Marketplace Web Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AmazonMWSLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Amazon Marketplace Web Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AmazonMWSLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The access key id used to access data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accessKeyId")]
		public string AccessKeyId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="marketplaceID")]
		public string MarketplaceID { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mwsAuthToken")]
		public AmazonMWSLinkedServiceTypePropertiesMwsAuthToken MwsAuthToken { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretKey")]
		public AmazonMWSLinkedServiceTypePropertiesSecretKey SecretKey { get; set; }
		
		/// <summary>
		/// The Amazon seller ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sellerID")]
		public string SellerID { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class AmazonMWSLinkedServiceTypePropertiesMwsAuthToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class AmazonMWSLinkedServiceTypePropertiesSecretKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Amazon Redshift.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AmazonRedshiftLinkedService
	{
		
		/// <summary>
		/// Amazon Redshift linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AmazonRedshiftLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Amazon Redshift linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AmazonRedshiftLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AmazonRedshiftLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class AmazonRedshiftLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AmazonS3LinkedService
	{
		
		/// <summary>
		/// Amazon S3 linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AmazonS3LinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Amazon S3 linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AmazonS3LinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessKeyId")]
		public string AccessKeyId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretAccessKey")]
		public AmazonS3LinkedServiceTypePropertiesSecretAccessKey SecretAccessKey { get; set; }
		
		/// <summary>
		/// This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUrl")]
		public string ServiceUrl { get; set; }
	}
	
	public class AmazonS3LinkedServiceTypePropertiesSecretAccessKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Batch linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureBatchLinkedService
	{
		
		/// <summary>
		/// Azure Batch linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureBatchLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Batch linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureBatchLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessKey")]
		public AzureBatchLinkedServiceTypePropertiesAccessKey AccessKey { get; set; }
		
		/// <summary>
		/// The Azure Batch account name. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		/// <summary>
		/// The Azure Batch URI. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batchUri")]
		public string BatchUri { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="linkedServiceName")]
		public object LinkedServiceName { get; set; }
		
		/// <summary>
		/// The Azure Batch pool name. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="poolName")]
		public string PoolName { get; set; }
	}
	
	public class AzureBatchLinkedServiceTypePropertiesAccessKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Data Lake Storage Gen2 linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureBlobFSLinkedService
	{
		
		/// <summary>
		/// Azure Data Lake Storage Gen2 linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureBlobFSLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Data Lake Storage Gen2 linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureBlobFSLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountKey")]
		public string AccountKey { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureBlobFSLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
		
		/// <summary>
		/// Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class AzureBlobFSLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The azure blob storage linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureBlobStorageLinkedService
	{
		
		/// <summary>
		/// Azure Blob Storage linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureBlobStorageLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Blob Storage linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureBlobStorageLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountKey")]
		public AzureBlobStorageLinkedServiceTypePropertiesAccountKey AccountKey { get; set; }
		
		/// <summary>
		/// The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sasToken")]
		public AzureBlobStorageLinkedServiceTypePropertiesSasToken SasToken { get; set; }
		
		/// <summary>
		/// SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sasUri")]
		public string SasUri { get; set; }
		
		/// <summary>
		/// Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceEndpoint")]
		public string ServiceEndpoint { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureBlobStorageLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureBlobStorageLinkedServiceTypePropertiesAccountKey
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	public class AzureBlobStorageLinkedServiceTypePropertiesSasToken
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	public class AzureBlobStorageLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Data Explorer (Kusto) linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDataExplorerLinkedService
	{
		
		/// <summary>
		/// Azure Data Explorer (Kusto) linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureDataExplorerLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Data Explorer (Kusto) linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDataExplorerLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Database name for connection. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// The endpoint of Azure Data Explorer (the engine's endpoint). URL will be in the format https://<clusterName>.<regionName>.kusto.windows.net. Type: string (or Expression with resultType string)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against Azure Data Explorer. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureDataExplorerLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureDataExplorerLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Data Lake Analytics linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDataLakeAnalyticsLinkedService
	{
		
		/// <summary>
		/// Azure Data Lake Analytics linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureDataLakeAnalyticsLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Data Lake Analytics linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDataLakeAnalyticsLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		/// <summary>
		/// Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataLakeAnalyticsUri")]
		public string DataLakeAnalyticsUri { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceGroupName")]
		public string ResourceGroupName { get; set; }
		
		/// <summary>
		/// The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureDataLakeAnalyticsLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureDataLakeAnalyticsLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Data Lake Store linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDataLakeStoreLinkedService
	{
		
		/// <summary>
		/// Azure Data Lake Store linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureDataLakeStoreLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Data Lake Store linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDataLakeStoreLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Data Lake Store account name. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountName")]
		public string AccountName { get; set; }
		
		/// <summary>
		/// Data Lake Store service URI. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataLakeStoreUri")]
		public string DataLakeStoreUri { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceGroupName")]
		public string ResourceGroupName { get; set; }
		
		/// <summary>
		/// The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureDataLakeStoreLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureDataLakeStoreLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Databricks linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDatabricksLinkedService
	{
		
		/// <summary>
		/// Azure Databricks linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureDatabricksLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Databricks linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureDatabricksLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public AzureDatabricksLinkedServiceTypePropertiesAccessToken AccessToken { get; set; }
		
		/// <summary>
		/// <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="existingClusterId")]
		public string ExistingClusterId { get; set; }
		
		/// <summary>
		/// The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instancePoolId")]
		public string InstancePoolId { get; set; }
		
		/// <summary>
		/// Additional tags for cluster resources. This property is ignored in instance pool configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterCustomTags")]
		public System.Collections.Generic.Dictionary<string, object> NewClusterCustomTags { get; set; }
		
		/// <summary>
		/// The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterDriverNodeType")]
		public string NewClusterDriverNodeType { get; set; }
		
		/// <summary>
		/// Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterEnableElasticDisk")]
		public string NewClusterEnableElasticDisk { get; set; }
		
		/// <summary>
		/// User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterInitScripts")]
		public string NewClusterInitScripts { get; set; }
		
		/// <summary>
		/// The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterNodeType")]
		public string NewClusterNodeType { get; set; }
		
		/// <summary>
		/// If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterNumOfWorker")]
		public string NewClusterNumOfWorker { get; set; }
		
		/// <summary>
		/// A set of optional, user-specified Spark configuration key-value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterSparkConf")]
		public System.Collections.Generic.Dictionary<string, object> NewClusterSparkConf { get; set; }
		
		/// <summary>
		/// A set of optional, user-specified Spark environment variables key-value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterSparkEnvVars")]
		public System.Collections.Generic.Dictionary<string, object> NewClusterSparkEnvVars { get; set; }
		
		/// <summary>
		/// If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newClusterVersion")]
		public string NewClusterVersion { get; set; }
	}
	
	public class AzureDatabricksLinkedServiceTypePropertiesAccessToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure File Storage linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFileStorageLinkedService
	{
		
		/// <summary>
		/// Azure File Storage linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureFileStorageLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure File Storage linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFileStorageLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Host name of the server. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AzureFileStorageLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// User ID to logon the server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
	}
	
	public class AzureFileStorageLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Function linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFunctionLinkedService
	{
		
		/// <summary>
		/// Azure Function linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureFunctionLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Function linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureFunctionLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Azure Function App. URL will be in the format https://<accountName>.azurewebsites.net.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="functionAppUrl")]
		public string FunctionAppUrl { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionKey")]
		public AzureFunctionLinkedServiceTypePropertiesFunctionKey FunctionKey { get; set; }
	}
	
	public class AzureFunctionLinkedServiceTypePropertiesFunctionKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Key Vault linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureKeyVaultLinkedService
	{
		
		/// <summary>
		/// Azure Key Vault linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureKeyVaultLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Key Vault linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureKeyVaultLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="baseUrl")]
		public string BaseUrl { get; set; }
	}
	
	/// <summary>
	/// Azure ML Studio Web Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMLLinkedService
	{
		
		/// <summary>
		/// Azure ML Studio Web Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureMLLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure ML Studio Web Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMLLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="apiKey")]
		public AzureMLLinkedServiceTypePropertiesApiKey ApiKey { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The Batch Execution REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mlEndpoint")]
		public string MlEndpoint { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureMLLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
		
		/// <summary>
		/// The Update Resource REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateResourceEndpoint")]
		public string UpdateResourceEndpoint { get; set; }
	}
	
	public class AzureMLLinkedServiceTypePropertiesApiKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class AzureMLLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure ML Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMLServiceLinkedService
	{
		
		/// <summary>
		/// Azure ML Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureMLServiceLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure ML Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMLServiceLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure ML Service workspace name. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mlWorkspaceName")]
		public string MlWorkspaceName { get; set; }
		
		/// <summary>
		/// Azure ML Service workspace resource group name. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourceGroupName")]
		public string ResourceGroupName { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureMLServiceLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// Azure ML Service workspace subscription ID. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureMLServiceLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure Database for MariaDB linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMariaDBLinkedService
	{
		
		/// <summary>
		/// Azure Database for MariaDB linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureMariaDBLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Database for MariaDB linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMariaDBLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwd")]
		public AzureMariaDBLinkedServiceTypePropertiesPwd Pwd { get; set; }
	}
	
	public class AzureMariaDBLinkedServiceTypePropertiesPwd
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Azure MySQL database linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMySqlLinkedService
	{
		
		/// <summary>
		/// Azure MySQL database linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureMySqlLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure MySQL database linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureMySqlLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AzureMySqlLinkedServiceTypePropertiesPassword Password { get; set; }
	}
	
	public class AzureMySqlLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Azure PostgreSQL linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzurePostgreSqlLinkedService
	{
		
		/// <summary>
		/// Azure PostgreSQL linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzurePostgreSqlLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure PostgreSQL linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzurePostgreSqlLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AzurePostgreSqlLinkedServiceTypePropertiesPassword Password { get; set; }
	}
	
	public class AzurePostgreSqlLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Linked service for Windows Azure Search Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSearchLinkedService
	{
		
		/// <summary>
		/// Windows Azure Search Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureSearchLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Windows Azure Search Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSearchLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public AzureSearchLinkedServiceTypePropertiesKey Key { get; set; }
		
		/// <summary>
		/// URL for Azure Search service. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class AzureSearchLinkedServiceTypePropertiesKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure SQL Data Warehouse linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSqlDWLinkedService
	{
		
		/// <summary>
		/// Azure SQL Data Warehouse linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureSqlDWLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure SQL Data Warehouse linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSqlDWLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AzureSqlDWLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureSqlDWLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureSqlDWLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	public class AzureSqlDWLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Microsoft Azure SQL Database linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSqlDatabaseLinkedService
	{
		
		/// <summary>
		/// Azure SQL Database linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureSqlDatabaseLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure SQL Database linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSqlDatabaseLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AzureSqlDatabaseLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureSqlDatabaseLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureSqlDatabaseLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	public class AzureSqlDatabaseLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Azure SQL Managed Instance linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSqlMILinkedService
	{
		
		/// <summary>
		/// Azure SQL Managed Instance linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureSqlMILinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure SQL Managed Instance linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureSqlMILinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public AzureSqlMILinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public AzureSqlMILinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
	}
	
	public class AzureSqlMILinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	public class AzureSqlMILinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The storage account linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureStorageLinkedService
	{
		
		/// <summary>
		/// Azure Storage linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureStorageLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Azure Storage linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureStorageLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountKey")]
		public AzureStorageLinkedServiceTypePropertiesAccountKey AccountKey { get; set; }
		
		/// <summary>
		/// The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sasToken")]
		public AzureStorageLinkedServiceTypePropertiesSasToken SasToken { get; set; }
		
		/// <summary>
		/// SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sasUri")]
		public string SasUri { get; set; }
	}
	
	public class AzureStorageLinkedServiceTypePropertiesAccountKey
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	public class AzureStorageLinkedServiceTypePropertiesSasToken
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// The azure table storage linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AzureTableStorageLinkedService
	{
		
		/// <summary>
		/// Azure Storage linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public AzureStorageLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Linked service for Cassandra data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CassandraLinkedService
	{
		
		/// <summary>
		/// Cassandra linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public CassandraLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Cassandra linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CassandraLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public string AuthenticationType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Host name for connection. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public CassandraLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The port for the connection. Type: integer (or Expression with resultType integer).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// Username for authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class CassandraLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Common Data Service for Apps linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CommonDataServiceForAppsLinkedService
	{
		
		/// <summary>
		/// Common Data Service for Apps linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public CommonDataServiceForAppsLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Common Data Service for Apps linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CommonDataServiceForAppsLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to connect to Common Data Service for Apps server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The deployment type of the Common Data Service for Apps instance. 'Online' for Common Data Service for Apps Online and 'OnPremisesWithIfd' for Common Data Service for Apps on-premises with Ifd. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentType")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The host name of the on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostName")]
		public string HostName { get; set; }
		
		/// <summary>
		/// The organization name of the Common Data Service for Apps instance. The property is required for on-prem and required for online when there are more than one Common Data Service for Apps instances associated with the user. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizationName")]
		public string OrganizationName { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The port of on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalCredential")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredential ServicePrincipalCredential { get; set; }
		
		/// <summary>
		/// The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalCredentialType")]
		public System.Nullable<CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredentialType> ServicePrincipalCredentialType { get; set; }
		
		/// <summary>
		/// The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The URL to the Microsoft Common Data Service for Apps server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUri")]
		public string ServiceUri { get; set; }
		
		/// <summary>
		/// User name to access the Common Data Service for Apps instance. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum CommonDataServiceForAppsLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Office365 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ifd = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AADServicePrincipal = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum CommonDataServiceForAppsLinkedServiceTypePropertiesDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Online = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnPremisesWithIfd = 1,
	}
	
	public class CommonDataServiceForAppsLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredential
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredentialType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServicePrincipalKey = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServicePrincipalCert = 1,
	}
	
	/// <summary>
	/// Concur Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ConcurLinkedService
	{
		
		/// <summary>
		/// Concur Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ConcurLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Concur Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ConcurLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Application client_id supplied by Concur App Management.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public ConcurLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
		
		/// <summary>
		/// The user name that you use to access Concur Service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class ConcurLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Microsoft Azure Cosmos Database (CosmosDB) linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CosmosDbLinkedService
	{
		
		/// <summary>
		/// CosmosDB linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public CosmosDbLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// CosmosDB linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CosmosDbLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountEndpoint")]
		public string AccountEndpoint { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accountKey")]
		public CosmosDbLinkedServiceTypePropertiesAccountKey AccountKey { get; set; }
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The name of the database. Type: string (or Expression with resultType string)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
	}
	
	public class CosmosDbLinkedServiceTypePropertiesAccountKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for CosmosDB (MongoDB API) data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CosmosDbMongoDbApiLinkedService
	{
		
		/// <summary>
		/// CosmosDB (MongoDB API) linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public CosmosDbMongoDbApiLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// CosmosDB (MongoDB API) linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CosmosDbMongoDbApiLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The CosmosDB (MongoDB API) connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The name of the CosmosDB (MongoDB API) database that you want to access. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// Couchbase server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CouchbaseLinkedService
	{
		
		/// <summary>
		/// Couchbase server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public CouchbaseLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Couchbase server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CouchbaseLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credString")]
		public CouchbaseLinkedServiceTypePropertiesCredString CredString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
	}
	
	public class CouchbaseLinkedServiceTypePropertiesCredString
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Custom linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CustomDataSourceLinkedService
	{
		
		/// <summary>
		/// Custom linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public string TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Linked service for DB2 data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Db2LinkedService
	{
		
		/// <summary>
		/// DB2 linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public Db2LinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// DB2 linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Db2LinkedServiceTypeProperties
	{
		
		/// <summary>
		/// AuthenticationType to be used for connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public System.Nullable<Db2LinkedServiceTypePropertiesAuthenticationType> AuthenticationType { get; set; }
		
		/// <summary>
		/// Certificate Common Name when TLS is enabled. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certificateCommonName")]
		public string CertificateCommonName { get; set; }
		
		/// <summary>
		/// Database name for connection. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Under where packages are created when querying database. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageCollection")]
		public string PackageCollection { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public Db2LinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Server name for connection. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// Username for authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum Db2LinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
	}
	
	public class Db2LinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Drill server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DrillLinkedService
	{
		
		/// <summary>
		/// Drill server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public DrillLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Drill server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DrillLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwd")]
		public DrillLinkedServiceTypePropertiesPwd Pwd { get; set; }
	}
	
	public class DrillLinkedServiceTypePropertiesPwd
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Dynamics AX linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DynamicsAXLinkedService
	{
		
		/// <summary>
		/// Dynamics AX linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public DynamicsAXLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Dynamics AX linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DynamicsAXLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specify the resource you are requesting authorization. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="aadResourceId")]
		public string AadResourceId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Specify the application's client ID. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public DynamicsAXLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
		
		/// <summary>
		/// The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class DynamicsAXLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Dynamics CRM linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DynamicsCrmLinkedService
	{
		
		/// <summary>
		/// Dynamics CRM linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public DynamicsCrmLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Dynamics CRM linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DynamicsCrmLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to connect to Dynamics CRM server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The deployment type of the Dynamics CRM instance. 'Online' for Dynamics CRM Online and 'OnPremisesWithIfd' for Dynamics CRM on-premises with Ifd. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentType")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The host name of the on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostName")]
		public string HostName { get; set; }
		
		/// <summary>
		/// The organization name of the Dynamics CRM instance. The property is required for on-prem and required for online when there are more than one Dynamics CRM instances associated with the user. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizationName")]
		public string OrganizationName { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public DynamicsCrmLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The port of on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalCredential")]
		public DynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredential ServicePrincipalCredential { get; set; }
		
		/// <summary>
		/// The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalCredentialType")]
		public System.Nullable<DynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredentialType> ServicePrincipalCredentialType { get; set; }
		
		/// <summary>
		/// The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The URL to the Microsoft Dynamics CRM server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUri")]
		public string ServiceUri { get; set; }
		
		/// <summary>
		/// User name to access the Dynamics CRM instance. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class DynamicsCrmLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class DynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredential
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredentialType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServicePrincipalKey = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServicePrincipalCert = 1,
	}
	
	/// <summary>
	/// Dynamics linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DynamicsLinkedService
	{
		
		/// <summary>
		/// Dynamics linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public DynamicsLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Dynamics linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DynamicsLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public DynamicsLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deploymentType")]
		public DynamicsLinkedServiceTypePropertiesDeploymentType DeploymentType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostName")]
		public string HostName { get; set; }
		
		/// <summary>
		/// The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="organizationName")]
		public string OrganizationName { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public DynamicsLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalCredential")]
		public DynamicsLinkedServiceTypePropertiesServicePrincipalCredential ServicePrincipalCredential { get; set; }
		
		/// <summary>
		/// The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalCredentialType")]
		public System.Nullable<DynamicsLinkedServiceTypePropertiesServicePrincipalCredentialType> ServicePrincipalCredentialType { get; set; }
		
		/// <summary>
		/// The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUri")]
		public string ServiceUri { get; set; }
		
		/// <summary>
		/// User name to access the Dynamics instance. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DynamicsLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Office365 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ifd = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AADServicePrincipal = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DynamicsLinkedServiceTypePropertiesDeploymentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Online = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnPremisesWithIfd = 1,
	}
	
	public class DynamicsLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class DynamicsLinkedServiceTypePropertiesServicePrincipalCredential
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DynamicsLinkedServiceTypePropertiesServicePrincipalCredentialType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServicePrincipalKey = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServicePrincipalCert = 1,
	}
	
	/// <summary>
	/// Eloqua server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EloquaLinkedService
	{
		
		/// <summary>
		/// Eloqua server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public EloquaLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Eloqua server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EloquaLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Eloqua server. (i.e. eloqua.example.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public EloquaLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
		
		/// <summary>
		/// The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class EloquaLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// File system linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FileServerLinkedService
	{
		
		/// <summary>
		/// File system linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public FileServerLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// File system linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FileServerLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Host name of the server. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public FileServerLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// User ID to logon the server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
	}
	
	public class FileServerLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A FTP server Linked Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FtpServerLinkedService
	{
		
		/// <summary>
		/// Properties specific to this linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public FtpServerLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to this linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FtpServerLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to be used to connect to the FTP server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public System.Nullable<FtpServerLinkedServiceTypePropertiesAuthenticationType> AuthenticationType { get; set; }
		
		/// <summary>
		/// If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableServerCertificateValidation")]
		public string EnableServerCertificateValidation { get; set; }
		
		/// <summary>
		/// If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Host name of the FTP server. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public FtpServerLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// Username to logon the FTP server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum FtpServerLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 1,
	}
	
	public class FtpServerLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Google AdWords service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GoogleAdWordsLinkedService
	{
		
		/// <summary>
		/// Google AdWords service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public GoogleAdWordsLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Google AdWords service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GoogleAdWordsLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public GoogleAdWordsLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The Client customer ID of the AdWords account that you want to fetch report data for.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientCustomerID")]
		public string ClientCustomerID { get; set; }
		
		/// <summary>
		/// The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public GoogleAdWordsLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="developerToken")]
		public GoogleAdWordsLinkedServiceTypePropertiesDeveloperToken DeveloperToken { get; set; }
		
		/// <summary>
		/// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyFilePath")]
		public string KeyFilePath { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public GoogleAdWordsLinkedServiceTypePropertiesRefreshToken RefreshToken { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum GoogleAdWordsLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceAuthentication = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserAuthentication = 1,
	}
	
	public class GoogleAdWordsLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GoogleAdWordsLinkedServiceTypePropertiesDeveloperToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GoogleAdWordsLinkedServiceTypePropertiesRefreshToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Google BigQuery service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GoogleBigQueryLinkedService
	{
		
		/// <summary>
		/// Google BigQuery service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public GoogleBigQueryLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Google BigQuery service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GoogleBigQueryLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// A comma-separated list of public BigQuery projects to access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalProjects")]
		public string AdditionalProjects { get; set; }
		
		/// <summary>
		/// The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public GoogleAdWordsLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public GoogleBigQueryLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyFilePath")]
		public string KeyFilePath { get; set; }
		
		/// <summary>
		/// The default BigQuery project to query against.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="project")]
		public string Project { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public GoogleBigQueryLinkedServiceTypePropertiesRefreshToken RefreshToken { get; set; }
		
		/// <summary>
		/// Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestGoogleDriveScope")]
		public string RequestGoogleDriveScope { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
	}
	
	public class GoogleBigQueryLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GoogleBigQueryLinkedServiceTypePropertiesRefreshToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Google Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GoogleCloudStorageLinkedService
	{
		
		/// <summary>
		/// Google Cloud Storage linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public GoogleCloudStorageLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Google Cloud Storage linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GoogleCloudStorageLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The access key identifier of the Google Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessKeyId")]
		public string AccessKeyId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretAccessKey")]
		public GoogleCloudStorageLinkedServiceTypePropertiesSecretAccessKey SecretAccessKey { get; set; }
		
		/// <summary>
		/// This value specifies the endpoint to access with the Google Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUrl")]
		public string ServiceUrl { get; set; }
	}
	
	public class GoogleCloudStorageLinkedServiceTypePropertiesSecretAccessKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Greenplum Database linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GreenplumLinkedService
	{
		
		/// <summary>
		/// Greenplum Database linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public GreenplumLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Greenplum Database linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GreenplumLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwd")]
		public GreenplumLinkedServiceTypePropertiesPwd Pwd { get; set; }
	}
	
	public class GreenplumLinkedServiceTypePropertiesPwd
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// HBase server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HBaseLinkedService
	{
		
		/// <summary>
		/// HBase server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HBaseLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// HBase server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HBaseLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowHostNameCNMismatch")]
		public string AllowHostNameCNMismatch { get; set; }
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// The authentication mechanism to use to connect to the HBase server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public HBaseLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The IP address or host name of the HBase server. (i.e. 192.168.222.160)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpPath")]
		public string HttpPath { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public HBaseLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// The user name used to connect to the HBase instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HBaseLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 1,
	}
	
	public class HBaseLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// HDInsight linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HDInsightLinkedService
	{
		
		/// <summary>
		/// HDInsight linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HDInsightLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// HDInsight linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HDInsightLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// HDInsight cluster URI. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clusterUri")]
		public string ClusterUri { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileSystem")]
		public string FileSystem { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hcatalogLinkedServiceName")]
		public object HcatalogLinkedServiceName { get; set; }
		
		/// <summary>
		/// Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isEspEnabled")]
		public string IsEspEnabled { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkedServiceName")]
		public object LinkedServiceName { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public HDInsightLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// HDInsight cluster user name. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class HDInsightLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// HDInsight ondemand linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HDInsightOnDemandLinkedService
	{
		
		/// <summary>
		/// HDInsight ondemand linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HDInsightOnDemandLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// HDInsight ondemand linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HDInsightOnDemandLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalLinkedServiceNames")]
		public HDInsightOnDemandLinkedServiceTypePropertiesAdditionalLinkedServiceNames[] HDInsightOnDemandLinkedServiceTypePropertiesAdditionalLinkedServiceNames { get; set; }
		
		/// <summary>
		/// The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterNamePrefix")]
		public string ClusterNamePrefix { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterPassword")]
		public HDInsightOnDemandLinkedServiceTypePropertiesClusterPassword ClusterPassword { get; set; }
		
		/// <summary>
		/// The resource group where the cluster belongs. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clusterResourceGroup")]
		public string ClusterResourceGroup { get; set; }
		
		/// <summary>
		/// Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clusterSize")]
		public string ClusterSize { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterSshPassword")]
		public HDInsightOnDemandLinkedServiceTypePropertiesClusterSshPassword ClusterSshPassword { get; set; }
		
		/// <summary>
		/// The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterSshUserName")]
		public string ClusterSshUserName { get; set; }
		
		/// <summary>
		/// The cluster type. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterType")]
		public string ClusterType { get; set; }
		
		/// <summary>
		/// The username to access the cluster. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterUserName")]
		public string ClusterUserName { get; set; }
		
		/// <summary>
		/// Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="coreConfiguration")]
		public string CoreConfiguration { get; set; }
		
		/// <summary>
		/// Specifies the size of the data node for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataNodeSize")]
		public string DataNodeSize { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hBaseConfiguration")]
		public string HBaseConfiguration { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hcatalogLinkedServiceName")]
		public object HcatalogLinkedServiceName { get; set; }
		
		/// <summary>
		/// Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hdfsConfiguration")]
		public string HdfsConfiguration { get; set; }
		
		/// <summary>
		/// Specifies the size of the head node for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="headNodeSize")]
		public string HeadNodeSize { get; set; }
		
		/// <summary>
		/// Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hiveConfiguration")]
		public string HiveConfiguration { get; set; }
		
		/// <summary>
		/// The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hostSubscriptionId")]
		public string HostSubscriptionId { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="linkedServiceName")]
		public object LinkedServiceName { get; set; }
		
		/// <summary>
		/// Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mapReduceConfiguration")]
		public string MapReduceConfiguration { get; set; }
		
		/// <summary>
		/// Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oozieConfiguration")]
		public string OozieConfiguration { get; set; }
		
		/// <summary>
		/// Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scriptActions")]
		public ScriptAction[] ScriptActions { get; set; }
		
		/// <summary>
		/// The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public HDInsightOnDemandLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sparkVersion")]
		public string SparkVersion { get; set; }
		
		/// <summary>
		/// Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stormConfiguration")]
		public string StormConfiguration { get; set; }
		
		/// <summary>
		/// The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnetName")]
		public string SubnetName { get; set; }
		
		/// <summary>
		/// The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
		
		/// <summary>
		/// The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timeToLive")]
		public string TimeToLive { get; set; }
		
		/// <summary>
		/// Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
		
		/// <summary>
		/// The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualNetworkId")]
		public string VirtualNetworkId { get; set; }
		
		/// <summary>
		/// Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yarnConfiguration")]
		public string YarnConfiguration { get; set; }
		
		/// <summary>
		/// Specifies the size of the Zoo Keeper node for the HDInsight cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zookeeperNodeSize")]
		public string ZookeeperNodeSize { get; set; }
	}
	
	public class HDInsightOnDemandLinkedServiceTypePropertiesAdditionalLinkedServiceNames
	{
		
		/// <summary>
		/// An object mapping parameter names to argument values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, object> Parameters { get; set; }
		
		/// <summary>
		/// Reference LinkedService name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="referenceName")]
		public string ReferenceName { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public HDInsightOnDemandLinkedServiceTypePropertiesAdditionalLinkedServiceNamesType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HDInsightOnDemandLinkedServiceTypePropertiesAdditionalLinkedServiceNamesType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LinkedServiceReference = 0,
	}
	
	public class HDInsightOnDemandLinkedServiceTypePropertiesClusterPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class HDInsightOnDemandLinkedServiceTypePropertiesClusterSshPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Custom script action to run on HDI ondemand cluster once it's up.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ScriptAction
	{
		
		/// <summary>
		/// The user provided name of the script action.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The parameters for the script action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// The node types on which the script action should be executed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public ScriptActionRoles Roles { get; set; }
		
		/// <summary>
		/// The URI for the script action.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ScriptActionRoles
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Headnode = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Workernode = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Zookeeper = 2,
	}
	
	public class HDInsightOnDemandLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Hadoop Distributed File System (HDFS) linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HdfsLinkedService
	{
		
		/// <summary>
		/// HDFS linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HdfsLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// HDFS linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HdfsLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public string AuthenticationType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public HdfsLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// User name for Windows authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class HdfsLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Hive Server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HiveLinkedService
	{
		
		/// <summary>
		/// Hive Server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HiveLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Hive Server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HiveLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowHostNameCNMismatch")]
		public string AllowHostNameCNMismatch { get; set; }
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// The authentication method used to access the Hive server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public HiveLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The partial URL corresponding to the Hive server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpPath")]
		public string HttpPath { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public HiveLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the Hive server uses to listen for client connections.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The type of Hive server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serverType")]
		public System.Nullable<HiveLinkedServiceTypePropertiesServerType> ServerType { get; set; }
		
		/// <summary>
		/// true to indicate using the ZooKeeper service, false not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceDiscoveryMode")]
		public string ServiceDiscoveryMode { get; set; }
		
		/// <summary>
		/// The transport protocol to use in the Thrift layer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thriftTransportProtocol")]
		public System.Nullable<HiveLinkedServiceTypePropertiesThriftTransportProtocol> ThriftTransportProtocol { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useNativeQuery")]
		public string UseNativeQuery { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
		
		/// <summary>
		/// The user name that you use to access Hive Server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
		
		/// <summary>
		/// The namespace on ZooKeeper under which Hive Server 2 nodes are added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zooKeeperNameSpace")]
		public string ZooKeeperNameSpace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HiveLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Username = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UsernameAndPassword = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WindowsAzureHDInsightService = 3,
	}
	
	public class HiveLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HiveLinkedServiceTypePropertiesServerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HiveServer1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HiveServer2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HiveThriftServer = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HiveLinkedServiceTypePropertiesThriftTransportProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Binary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HTTP ")]
		HTTP_ = 2,
	}
	
	/// <summary>
	/// Linked service for an HTTP source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HttpLinkedService
	{
		
		/// <summary>
		/// Properties specific to this linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HttpLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to this linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HttpLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to be used to connect to the HTTP server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public System.Nullable<HttpLinkedServiceTypePropertiesAuthenticationType> AuthenticationType { get; set; }
		
		/// <summary>
		/// Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certThumbprint")]
		public string CertThumbprint { get; set; }
		
		/// <summary>
		/// Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="embeddedCertData")]
		public string EmbeddedCertData { get; set; }
		
		/// <summary>
		/// If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableServerCertificateValidation")]
		public string EnableServerCertificateValidation { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public HttpLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HttpLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Digest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Windows = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClientCertificate = 4,
	}
	
	public class HttpLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Hubspot Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HubspotLinkedService
	{
		
		/// <summary>
		/// Hubspot Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public HubspotLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Hubspot Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HubspotLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public HubspotLinkedServiceTypePropertiesAccessToken AccessToken { get; set; }
		
		/// <summary>
		/// The client ID associated with your Hubspot application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public HubspotLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refreshToken")]
		public HubspotLinkedServiceTypePropertiesRefreshToken RefreshToken { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class HubspotLinkedServiceTypePropertiesAccessToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class HubspotLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class HubspotLinkedServiceTypePropertiesRefreshToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Impala server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImpalaLinkedService
	{
		
		/// <summary>
		/// Impala server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ImpalaLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Impala server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImpalaLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowHostNameCNMismatch")]
		public string AllowHostNameCNMismatch { get; set; }
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// The authentication type to use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public ImpalaLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The IP address or host name of the Impala server. (i.e. 192.168.222.160)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public ImpalaLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
		
		/// <summary>
		/// The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ImpalaLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASLUsername = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UsernameAndPassword = 2,
	}
	
	public class ImpalaLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Informix linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class InformixLinkedService
	{
		
		/// <summary>
		/// Informix linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public InformixLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Informix linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class InformixLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Type of authentication used to connect to the Informix as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public string AuthenticationType { get; set; }
		
		/// <summary>
		/// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credential")]
		public InformixLinkedServiceTypePropertiesCredential Credential { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public InformixLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// User name for Basic authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class InformixLinkedServiceTypePropertiesCredential
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class InformixLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Jira Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JiraLinkedService
	{
		
		/// <summary>
		/// Jira Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public JiraLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Jira Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class JiraLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The IP address or host name of the Jira service. (e.g. jira.example.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public JiraLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
		
		/// <summary>
		/// The user name that you use to access Jira Service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class JiraLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LinkedService
	{
		
		/// <summary>
		/// List of tags that can be used for describing the linked service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public string[] Annotations { get; set; }
		
		/// <summary>
		/// Integration runtime reference type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectVia")]
		public object ConnectVia { get; set; }
		
		/// <summary>
		/// Linked service description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Definition of all parameters for an entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, LinkedServiceParameters> Parameters { get; set; }
		
		/// <summary>
		/// Type of linked service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class LinkedServiceParameters
	{
		
		/// <summary>
		/// Default value of parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// Parameter type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public LinkedServiceParametersType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum LinkedServiceParametersType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Object = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Int = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Float = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bool = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Array = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecureString = 6,
	}
	
	/// <summary>
	/// Magento server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MagentoLinkedService
	{
		
		/// <summary>
		/// Magento server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MagentoLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Magento server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MagentoLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public MagentoLinkedServiceTypePropertiesAccessToken AccessToken { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class MagentoLinkedServiceTypePropertiesAccessToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// MariaDB server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MariaDBLinkedService
	{
		
		/// <summary>
		/// MariaDB server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MariaDBLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// MariaDB server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MariaDBLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwd")]
		public MariaDBLinkedServiceTypePropertiesPwd Pwd { get; set; }
	}
	
	public class MariaDBLinkedServiceTypePropertiesPwd
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Marketo server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MarketoLinkedService
	{
		
		/// <summary>
		/// Marketo server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MarketoLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Marketo server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MarketoLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The client Id of your Marketo service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public MarketoLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class MarketoLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Microsoft Access linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MicrosoftAccessLinkedService
	{
		
		/// <summary>
		/// Microsoft Access linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MicrosoftAccessLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Microsoft Access linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MicrosoftAccessLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Type of authentication used to connect to the Microsoft Access as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public string AuthenticationType { get; set; }
		
		/// <summary>
		/// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credential")]
		public MicrosoftAccessLinkedServiceTypePropertiesCredential Credential { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public MicrosoftAccessLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// User name for Basic authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class MicrosoftAccessLinkedServiceTypePropertiesCredential
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class MicrosoftAccessLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for MongoDb data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MongoDbLinkedService
	{
		
		/// <summary>
		/// MongoDB linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MongoDbLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// MongoDB linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MongoDbLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// Database to verify the username and password. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authSource")]
		public string AuthSource { get; set; }
		
		/// <summary>
		/// The authentication type to be used to connect to the MongoDB database.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public FtpServerLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="databaseName")]
		public string DatabaseName { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public MongoDbLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// Username for authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class MongoDbLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for MongoDB data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MongoDbV2LinkedService
	{
		
		/// <summary>
		/// MongoDB linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MongoDbV2LinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// MongoDB linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MongoDbV2LinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The MongoDB connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
	}
	
	/// <summary>
	/// Linked service for MySQL data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MySqlLinkedService
	{
		
		/// <summary>
		/// MySQL linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public MySqlLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// MySQL linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MySqlLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public MySqlLinkedServiceTypePropertiesPassword Password { get; set; }
	}
	
	public class MySqlLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Netezza linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class NetezzaLinkedService
	{
		
		/// <summary>
		/// Netezza linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public NetezzaLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Netezza linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class NetezzaLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwd")]
		public NetezzaLinkedServiceTypePropertiesPwd Pwd { get; set; }
	}
	
	public class NetezzaLinkedServiceTypePropertiesPwd
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Open Data Protocol (OData) linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ODataLinkedService
	{
		
		/// <summary>
		/// OData linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ODataLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// OData linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ODataLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aadResourceId")]
		public string AadResourceId { get; set; }
		
		/// <summary>
		/// Specify the credential type (key or cert) is used for service principal.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aadServicePrincipalCredentialType")]
		public CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredentialType AadServicePrincipalCredentialType { get; set; }
		
		/// <summary>
		/// Type of authentication used to connect to the OData service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public System.Nullable<ODataLinkedServiceTypePropertiesAuthenticationType> AuthenticationType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public ODataLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalEmbeddedCert")]
		public ODataLinkedServiceTypePropertiesServicePrincipalEmbeddedCert ServicePrincipalEmbeddedCert { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalEmbeddedCertPassword")]
		public ODataLinkedServiceTypePropertiesServicePrincipalEmbeddedCertPassword ServicePrincipalEmbeddedCertPassword { get; set; }
		
		/// <summary>
		/// Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public ODataLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
		
		/// <summary>
		/// The URL of the OData service endpoint. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// User name of the OData service. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ODataLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Windows = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AadServicePrincipal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManagedServiceIdentity = 4,
	}
	
	public class ODataLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ODataLinkedServiceTypePropertiesServicePrincipalEmbeddedCert
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ODataLinkedServiceTypePropertiesServicePrincipalEmbeddedCertPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ODataLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Open Database Connectivity (ODBC) linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OdbcLinkedService
	{
		
		/// <summary>
		/// ODBC linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public OdbcLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// ODBC linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OdbcLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public string AuthenticationType { get; set; }
		
		/// <summary>
		/// The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credential")]
		public OdbcLinkedServiceTypePropertiesCredential Credential { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public OdbcLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// User name for Basic authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class OdbcLinkedServiceTypePropertiesCredential
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class OdbcLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Office365 linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Office365LinkedService
	{
		
		/// <summary>
		/// Office365 linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public Office365LinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Office365 linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Office365LinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="office365TenantId")]
		public string Office365TenantId { get; set; }
		
		/// <summary>
		/// Specify the application's client ID. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public Office365LinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// Specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalTenantId")]
		public string ServicePrincipalTenantId { get; set; }
	}
	
	public class Office365LinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Oracle database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OracleLinkedService
	{
		
		/// <summary>
		/// Oracle database linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public OracleLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Oracle database linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OracleLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public OracleLinkedServiceTypePropertiesPassword Password { get; set; }
	}
	
	public class OracleLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Oracle Service Cloud linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OracleServiceCloudLinkedService
	{
		
		/// <summary>
		/// Oracle Service Cloud linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public OracleServiceCloudLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Oracle Service Cloud linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OracleServiceCloudLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The URL of the Oracle Service Cloud instance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		public OracleServiceCloudLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
		
		/// <summary>
		/// The user name that you use to access Oracle Service Cloud server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class OracleServiceCloudLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Paypal Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PaypalLinkedService
	{
		
		/// <summary>
		/// Paypal Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public PaypalLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Paypal Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PaypalLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The client ID associated with your PayPal application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public PaypalLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class PaypalLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Phoenix server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PhoenixLinkedService
	{
		
		/// <summary>
		/// Phoenix server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public PhoenixLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Phoenix server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PhoenixLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowHostNameCNMismatch")]
		public string AllowHostNameCNMismatch { get; set; }
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// The authentication mechanism used to connect to the Phoenix server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public PhoenixLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpPath")]
		public string HttpPath { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public PhoenixLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
		
		/// <summary>
		/// The user name used to connect to the Phoenix server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum PhoenixLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UsernameAndPassword = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WindowsAzureHDInsightService = 2,
	}
	
	public class PhoenixLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for PostgreSQL data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PostgreSqlLinkedService
	{
		
		/// <summary>
		/// PostgreSQL linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public PostgreSqlLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// PostgreSQL linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PostgreSqlLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public PostgreSqlLinkedServiceTypePropertiesPassword Password { get; set; }
	}
	
	public class PostgreSqlLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// Presto server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PrestoLinkedService
	{
		
		/// <summary>
		/// Presto server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public PrestoLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Presto server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PrestoLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowHostNameCNMismatch")]
		public string AllowHostNameCNMismatch { get; set; }
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// The authentication mechanism used to connect to the Presto server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public PrestoLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The catalog context for all request against the server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="catalog")]
		public string Catalog { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The IP address or host name of the Presto server. (i.e. 192.168.222.160)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public PrestoLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The version of the Presto server. (i.e. 0.148-t)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="serverVersion")]
		public string ServerVersion { get; set; }
		
		/// <summary>
		/// The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZoneID")]
		public string TimeZoneID { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
		
		/// <summary>
		/// The user name used to connect to the Presto server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum PrestoLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LDAP = 1,
	}
	
	public class PrestoLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// QuickBooks server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuickBooksLinkedService
	{
		
		/// <summary>
		/// QuickBooks server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public QuickBooksLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// QuickBooks server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuickBooksLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public QuickBooksLinkedServiceTypePropertiesAccessToken AccessToken { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="accessTokenSecret")]
		public QuickBooksLinkedServiceTypePropertiesAccessTokenSecret AccessTokenSecret { get; set; }
		
		/// <summary>
		/// The company ID of the QuickBooks company to authorize.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="companyId")]
		public string CompanyId { get; set; }
		
		/// <summary>
		/// The consumer key for OAuth 1.0 authentication.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consumerKey")]
		public string ConsumerKey { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="consumerSecret")]
		public QuickBooksLinkedServiceTypePropertiesConsumerSecret ConsumerSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
	}
	
	public class QuickBooksLinkedServiceTypePropertiesAccessToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class QuickBooksLinkedServiceTypePropertiesAccessTokenSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class QuickBooksLinkedServiceTypePropertiesConsumerSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Responsys linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResponsysLinkedService
	{
		
		/// <summary>
		/// Responsys linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ResponsysLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Responsys linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResponsysLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public ResponsysLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Responsys server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class ResponsysLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Rest Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RestServiceLinkedService
	{
		
		/// <summary>
		/// Rest Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public RestServiceLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Rest Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RestServiceLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The resource you are requesting authorization to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aadResourceId")]
		public string AadResourceId { get; set; }
		
		/// <summary>
		/// Type of authentication used to connect to the REST service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public RestServiceLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableServerCertificateValidation")]
		public string EnableServerCertificateValidation { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public RestServiceLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The application's client ID used in AadServicePrincipal authentication type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalId")]
		public string ServicePrincipalId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servicePrincipalKey")]
		public RestServiceLinkedServiceTypePropertiesServicePrincipalKey ServicePrincipalKey { get; set; }
		
		/// <summary>
		/// The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenant")]
		public string Tenant { get; set; }
		
		/// <summary>
		/// The base URL of the REST service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The user name used in Basic authentication type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum RestServiceLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AadServicePrincipal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManagedServiceIdentity = 3,
	}
	
	public class RestServiceLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class RestServiceLinkedServiceTypePropertiesServicePrincipalKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Salesforce.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SalesforceLinkedService
	{
		
		/// <summary>
		/// Salesforce linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SalesforceLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Salesforce linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SalesforceLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentUrl")]
		public string EnvironmentUrl { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SalesforceLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityToken")]
		public SalesforceLinkedServiceTypePropertiesSecurityToken SecurityToken { get; set; }
		
		/// <summary>
		/// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class SalesforceLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class SalesforceLinkedServiceTypePropertiesSecurityToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Salesforce Marketing Cloud linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SalesforceMarketingCloudLinkedService
	{
		
		/// <summary>
		/// Salesforce Marketing Cloud linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SalesforceMarketingCloudLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Salesforce Marketing Cloud linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SalesforceMarketingCloudLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public SalesforceMarketingCloudLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class SalesforceMarketingCloudLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Salesforce Service Cloud.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SalesforceServiceCloudLinkedService
	{
		
		/// <summary>
		/// Salesforce Service Cloud linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SalesforceServiceCloudLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Salesforce Service Cloud linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SalesforceServiceCloudLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The URL of Salesforce Service Cloud instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentUrl")]
		public string EnvironmentUrl { get; set; }
		
		/// <summary>
		/// Extended properties appended to the connection string. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extendedProperties")]
		public string ExtendedProperties { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SalesforceServiceCloudLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityToken")]
		public SalesforceServiceCloudLinkedServiceTypePropertiesSecurityToken SecurityToken { get; set; }
		
		/// <summary>
		/// The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class SalesforceServiceCloudLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class SalesforceServiceCloudLinkedServiceTypePropertiesSecurityToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// SAP Business Warehouse Linked Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapBWLinkedService
	{
		
		/// <summary>
		/// Properties specific to this linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SapBWLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to this linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapBWLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SapBWLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Host name of the SAP BW instance. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="systemNumber")]
		public string SystemNumber { get; set; }
		
		/// <summary>
		/// Username to access the SAP BW server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class SapBWLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for SAP Cloud for Customer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapCloudForCustomerLinkedService
	{
		
		/// <summary>
		/// SAP Cloud for Customer linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SapCloudForCustomerLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// SAP Cloud for Customer linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapCloudForCustomerLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SapCloudForCustomerLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The username for Basic authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class SapCloudForCustomerLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for SAP ERP Central Component(SAP ECC).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapEccLinkedService
	{
		
		/// <summary>
		/// SAP ECC linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SapEccLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// SAP ECC linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapEccLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SapEccLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The username for Basic authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class SapEccLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// SAP HANA Linked Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapHanaLinkedService
	{
		
		/// <summary>
		/// Properties specific to this linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SapHanaLinkedServiceProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to this linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapHanaLinkedServiceProperties
	{
		
		/// <summary>
		/// The authentication type to be used to connect to the SAP HANA server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public System.Nullable<SapHanaLinkedServicePropertiesAuthenticationType> AuthenticationType { get; set; }
		
		/// <summary>
		/// SAP HANA ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SapHanaLinkedServicePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Host name of the SAP HANA server. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// Username to access the SAP HANA server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SapHanaLinkedServicePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Windows = 1,
	}
	
	public class SapHanaLinkedServicePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// SAP Business Warehouse Open Hub Destination Linked Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapOpenHubLinkedService
	{
		
		/// <summary>
		/// Properties specific to SAP Business Warehouse Open Hub Destination linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SapOpenHubLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to SAP Business Warehouse Open Hub Destination linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapOpenHubLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SapOpenHubLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="systemNumber")]
		public string SystemNumber { get; set; }
		
		/// <summary>
		/// Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class SapOpenHubLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// SAP Table Linked Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapTableLinkedService
	{
		
		/// <summary>
		/// Properties specific to this linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SapTableLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to this linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SapTableLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The Logon Group for the SAP System. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logonGroup")]
		public string LogonGroup { get; set; }
		
		/// <summary>
		/// The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageServer")]
		public string MessageServer { get; set; }
		
		/// <summary>
		/// The service name or port number of the Message Server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageServerService")]
		public string MessageServerService { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SapTableLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sncLibraryPath")]
		public string SncLibraryPath { get; set; }
		
		/// <summary>
		/// SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sncMode")]
		public string SncMode { get; set; }
		
		/// <summary>
		/// Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sncMyName")]
		public string SncMyName { get; set; }
		
		/// <summary>
		/// Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sncPartnerName")]
		public string SncPartnerName { get; set; }
		
		/// <summary>
		/// SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sncQop")]
		public string SncQop { get; set; }
		
		/// <summary>
		/// SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="systemId")]
		public string SystemId { get; set; }
		
		/// <summary>
		/// System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="systemNumber")]
		public string SystemNumber { get; set; }
		
		/// <summary>
		/// Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class SapTableLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// ServiceNow server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ServiceNowLinkedService
	{
		
		/// <summary>
		/// ServiceNow server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ServiceNowLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// ServiceNow server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ServiceNowLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public ServiceNowLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The client id for OAuth2 authentication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public ServiceNowLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public ServiceNowLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
		
		/// <summary>
		/// The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ServiceNowLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAuth2 = 1,
	}
	
	public class ServiceNowLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ServiceNowLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A linked service for an SSH File Transfer Protocol (SFTP) server. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SftpServerLinkedService
	{
		
		/// <summary>
		/// Properties specific to this linked service type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SftpServerLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Properties specific to this linked service type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SftpServerLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The authentication type to be used to connect to the FTP server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public System.Nullable<SftpServerLinkedServiceTypePropertiesAuthenticationType> AuthenticationType { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The SFTP server host name. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostKeyFingerprint")]
		public string HostKeyFingerprint { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passPhrase")]
		public SftpServerLinkedServiceTypePropertiesPassPhrase PassPhrase { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SftpServerLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateKeyContent")]
		public SftpServerLinkedServiceTypePropertiesPrivateKeyContent PrivateKeyContent { get; set; }
		
		/// <summary>
		/// The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateKeyPath")]
		public string PrivateKeyPath { get; set; }
		
		/// <summary>
		/// If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skipHostKeyValidation")]
		public string SkipHostKeyValidation { get; set; }
		
		/// <summary>
		/// The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SftpServerLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SshPublicKey = 1,
	}
	
	public class SftpServerLinkedServiceTypePropertiesPassPhrase
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class SftpServerLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class SftpServerLinkedServiceTypePropertiesPrivateKeyContent
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Shopify Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ShopifyLinkedService
	{
		
		/// <summary>
		/// Shopify Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ShopifyLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Shopify Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ShopifyLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public ShopifyLinkedServiceTypePropertiesAccessToken AccessToken { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class ShopifyLinkedServiceTypePropertiesAccessToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Spark Server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SparkLinkedService
	{
		
		/// <summary>
		/// Spark Server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SparkLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Spark Server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SparkLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowHostNameCNMismatch")]
		public string AllowHostNameCNMismatch { get; set; }
		
		/// <summary>
		/// Specifies whether to allow self-signed certificates from the server. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowSelfSignedServerCert")]
		public string AllowSelfSignedServerCert { get; set; }
		
		/// <summary>
		/// The authentication method used to access the Spark server.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public HiveLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Specifies whether the connections to the server are encrypted using SSL. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSsl")]
		public string EnableSsl { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// IP address or host name of the Spark server
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The partial URL corresponding to the Spark server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpPath")]
		public string HttpPath { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SparkLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The TCP port that the Spark server uses to listen for client connections.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="port")]
		public string Port { get; set; }
		
		/// <summary>
		/// The type of Spark server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serverType")]
		public System.Nullable<SparkLinkedServiceTypePropertiesServerType> ServerType { get; set; }
		
		/// <summary>
		/// The transport protocol to use in the Thrift layer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thriftTransportProtocol")]
		public System.Nullable<SparkLinkedServiceTypePropertiesThriftTransportProtocol> ThriftTransportProtocol { get; set; }
		
		/// <summary>
		/// The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trustedCertPath")]
		public string TrustedCertPath { get; set; }
		
		/// <summary>
		/// Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useSystemTrustStore")]
		public string UseSystemTrustStore { get; set; }
		
		/// <summary>
		/// The user name that you use to access Spark Server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class SparkLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SparkLinkedServiceTypePropertiesServerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SharkServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SharkServer2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SparkThriftServer = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SparkLinkedServiceTypePropertiesThriftTransportProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Binary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HTTP ")]
		HTTP_ = 2,
	}
	
	/// <summary>
	/// SQL Server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SqlServerLinkedService
	{
		
		/// <summary>
		/// SQL Server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SqlServerLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// SQL Server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SqlServerLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SqlServerLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	public class SqlServerLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Square Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SquareLinkedService
	{
		
		/// <summary>
		/// Square Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SquareLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Square Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SquareLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The client ID associated with your Square application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientSecret")]
		public SquareLinkedServiceTypePropertiesClientSecret ClientSecret { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The URL of the Square instance. (i.e. mystore.mysquare.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redirectUri")]
		public string RedirectUri { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class SquareLinkedServiceTypePropertiesClientSecret
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Sybase data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SybaseLinkedService
	{
		
		/// <summary>
		/// Sybase linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public SybaseLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Sybase linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SybaseLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// AuthenticationType to be used for connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public SapHanaLinkedServicePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Database name for connection. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="database")]
		public string Database { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public SybaseLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Schema name for connection. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// Server name for connection. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// Username for authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class SybaseLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Linked service for Teradata data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TeradataLinkedService
	{
		
		/// <summary>
		/// Teradata linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public TeradataLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Teradata linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TeradataLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// AuthenticationType to be used for connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public SapHanaLinkedServicePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public TeradataLinkedServiceTypePropertiesPassword Password { get; set; }
		
		/// <summary>
		/// Server name for connection. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
		
		/// <summary>
		/// Username for authentication. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class TeradataLinkedServiceTypePropertiesPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Vertica linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VerticaLinkedService
	{
		
		/// <summary>
		/// Vertica linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public VerticaLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Vertica linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VerticaLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionString")]
		public string ConnectionString { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// Azure Key Vault secret reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pwd")]
		public VerticaLinkedServiceTypePropertiesPwd Pwd { get; set; }
	}
	
	public class VerticaLinkedServiceTypePropertiesPwd
	{
		
		/// <summary>
		/// The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="secretName")]
		public string SecretName { get; set; }
		
		/// <summary>
		/// The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretVersion")]
		public string SecretVersion { get; set; }
		
		/// <summary>
		/// Linked service reference type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="store")]
		public object Store { get; set; }
	}
	
	/// <summary>
	/// A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebAnonymousAuthentication
	{
	}
	
	/// <summary>
	/// A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebBasicAuthentication : WebLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		public WebBasicAuthenticationPassword Password { get; set; }
		
		/// <summary>
		/// User name for Basic authentication. Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class WebBasicAuthenticationPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebClientCertificateAuthentication : WebLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		public WebClientCertificateAuthenticationPassword Password { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pfx")]
		public WebClientCertificateAuthenticationPfx Pfx { get; set; }
	}
	
	public class WebClientCertificateAuthenticationPassword
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class WebClientCertificateAuthenticationPfx
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Web linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebLinkedService
	{
		
		/// <summary>
		/// Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public WebLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// Type of authentication used to connect to the web table source.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public WebLinkedServiceTypePropertiesAuthenticationType AuthenticationType { get; set; }
		
		/// <summary>
		/// The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum WebLinkedServiceTypePropertiesAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClientCertificate = 2,
	}
	
	/// <summary>
	/// Xero Service linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class XeroLinkedService
	{
		
		/// <summary>
		/// Xero Service linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public XeroLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Xero Service linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class XeroLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumerKey")]
		public XeroLinkedServiceTypePropertiesConsumerKey ConsumerKey { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Xero server. (i.e. api.xero.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateKey")]
		public XeroLinkedServiceTypePropertiesPrivateKey PrivateKey { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class XeroLinkedServiceTypePropertiesConsumerKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class XeroLinkedServiceTypePropertiesPrivateKey
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Zoho server linked service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ZohoLinkedService
	{
		
		/// <summary>
		/// Zoho server linked service properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="typeProperties")]
		public ZohoLinkedServiceTypeProperties TypeProperties { get; set; }
	}
	
	/// <summary>
	/// Zoho server linked service properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ZohoLinkedServiceTypeProperties
	{
		
		/// <summary>
		/// The base definition of a secret type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessToken")]
		public ZohoLinkedServiceTypePropertiesAccessToken AccessToken { get; set; }
		
		/// <summary>
		/// The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptedCredential")]
		public string EncryptedCredential { get; set; }
		
		/// <summary>
		/// The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useEncryptedEndpoints")]
		public string UseEncryptedEndpoints { get; set; }
		
		/// <summary>
		/// Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useHostVerification")]
		public string UseHostVerification { get; set; }
		
		/// <summary>
		/// Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usePeerVerification")]
		public string UsePeerVerification { get; set; }
	}
	
	public class ZohoLinkedServiceTypePropertiesAccessToken
	{
		
		/// <summary>
		/// Type of the secret.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

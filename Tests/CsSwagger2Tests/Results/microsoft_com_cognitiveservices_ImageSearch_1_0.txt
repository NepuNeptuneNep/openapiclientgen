//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Defines a list of offers from merchants that are related to the image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AggregateOffer
	{
		
		/// <summary>
		/// A list of offers from merchants that have offerings related to the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offers")]
		public Offer[] Offers { get; set; }
	}
	
	/// <summary>
	/// Defines a merchant's offer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Offer
	{
		
		/// <summary>
		/// Defines the metrics that indicate how well an item was rated by others.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregateRating")]
		public AggregateRating AggregateRating { get; set; }
		
		/// <summary>
		/// The item's availability. The following are the possible values: Discontinued, InStock, InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availability")]
		public System.Nullable<OfferAvailability> Availability { get; set; }
		
		/// <summary>
		/// The last date that the offer was updated. The date is in the form YYYY-MM-DD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdated")]
		public string LastUpdated { get; set; }
		
		/// <summary>
		/// The item's price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Single> Price { get; set; }
		
		/// <summary>
		/// The monetary currency. For example, USD.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceCurrency")]
		public System.Nullable<OfferPriceCurrency> PriceCurrency { get; set; }
		
		/// <summary>
		/// Defines an organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="seller")]
		public Organization Seller { get; set; }
	}
	
	/// <summary>
	/// Defines the metrics that indicate how well an item was rated by others.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AggregateRating
	{
		
		/// <summary>
		/// The number of times the recipe has been rated or reviewed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reviewCount")]
		public System.Nullable<System.Int32> ReviewCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum OfferAvailability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Discontinued = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InStock = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InStoreOnly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LimitedAvailability = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnlineOnly = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutOfStock = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreOrder = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SoldOut = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum OfferPriceCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COP = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JPY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUD = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANG = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AOA = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARS = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWG = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZN = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAM = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BBD = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BDT = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BGN = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BHD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIF = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BMD = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BND = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOB = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOV = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRL = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BSD = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTN = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BWP = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYR = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZD = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CDF = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHE = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHF = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHW = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COU = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRC = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUC = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUP = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CVE = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZK = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJF = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOP = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZD = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EGP = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERN = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETB = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJD = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FKP = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEL = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GHS = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIP = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMD = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GNF = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTQ = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GYD = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HKD = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HNL = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HRK = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTG = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUF = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ILS = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQD = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRR = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISK = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JMD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOD = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LYD = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAD = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MDL = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MGA = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKD = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMK = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MNT = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOP = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MRO = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUR = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MVR = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MWK = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXN = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXV = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYR = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZN = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAD = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NGN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NIO = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NPR = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZD = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OMR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAB = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEN = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PGK = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHP = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKR = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYG = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QAR = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RON = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSD = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUB = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RWF = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAR = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SBD = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SDG = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SGD = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHP = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLL = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOS = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SRD = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSP = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZL = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THB = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJS = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TMT = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TND = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRY = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TTD = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWD = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZS = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UAH = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UGX = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYU = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VEF = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VND = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VUV = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WST = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAF = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCD = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XOF = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPF = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YER = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZAR = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMW = 160,
	}
	
	/// <summary>
	/// Defines an organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Organization
	{
	}
	
	/// <summary>
	/// Defines an answer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Answer
	{
	}
	
	/// <summary>
	/// Defines a link to a webpage that contains a collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CollectionPage
	{
	}
	
	/// <summary>
	/// The most generic kind of creative work, including books, movies, photographs, software programs, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreativeWork
	{
		
		/// <summary>
		/// The date on which the CreativeWork was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datePublished")]
		public string DatePublished { get; set; }
		
		/// <summary>
		/// The source of the creative work.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public Thing[] Provider { get; set; }
		
		/// <summary>
		/// Text content of this creative work
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// The URL to a thumbnail of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnailUrl")]
		public string ThumbnailUrl { get; set; }
	}
	
	/// <summary>
	/// Defines a thing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Thing
	{
		
		/// <summary>
		/// An alias for the item
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternateName")]
		public string AlternateName { get; set; }
		
		/// <summary>
		/// An ID that uniquely identifies this item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bingId")]
		public string BingId { get; set; }
		
		/// <summary>
		/// A short description of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Defines an image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public ImageObject Image { get; set; }
		
		/// <summary>
		/// The name of the thing represented by this object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The URL to get more information about the thing represented by this object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Defines an image
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImageObject
	{
		
		/// <summary>
		/// A three-byte hexadecimal number that represents the color that dominates the image. Use the color as the temporary background in your client until the image is loaded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accentColor")]
		public string AccentColor { get; set; }
		
		/// <summary>
		/// Unique Id for the image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
		
		/// <summary>
		/// The token that you use in a subsequent call to the Image Search API to get additional information about the image. For information about using this token, see the insightsToken query parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageInsightsToken")]
		public string ImageInsightsToken { get; set; }
		
		/// <summary>
		/// Defines a count of the number of websites where you can shop or perform other actions related to the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insightsMetadata")]
		public ImagesImageMetadata InsightsMetadata { get; set; }
		
		/// <summary>
		/// Defines an image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public ImageObject Thumbnail { get; set; }
		
		/// <summary>
		/// Visual representation of the image. Used for getting more sizes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visualWords")]
		public string VisualWords { get; set; }
	}
	
	/// <summary>
	/// Defines a count of the number of websites where you can shop or perform other actions related to the image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImagesImageMetadata
	{
		
		/// <summary>
		/// Defines a list of offers from merchants that are related to the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aggregateOffer")]
		public AggregateOffer AggregateOffer { get; set; }
		
		/// <summary>
		/// The number of websites that offer recipes of the food seen in the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipeSourcesCount")]
		public System.Nullable<System.Int32> RecipeSourcesCount { get; set; }
		
		/// <summary>
		/// The number of websites that offer goods of the products seen in the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shoppingSourcesCount")]
		public System.Nullable<System.Int32> ShoppingSourcesCount { get; set; }
	}
	
	/// <summary>
	/// Defines the error that occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Error
	{
		
		/// <summary>
		/// The error code that identifies the category of error.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(ErrorCode.None)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public ErrorCode Code { get; set; } = ErrorCode.None;
		
		/// <summary>
		/// A description of the error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// A description that provides additional information about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moreDetails")]
		public string MoreDetails { get; set; }
		
		/// <summary>
		/// The parameter in the request that caused the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public string Parameter { get; set; }
		
		/// <summary>
		/// The error code that further helps to identify the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subCode")]
		public System.Nullable<ErrorSubCode> SubCode { get; set; }
		
		/// <summary>
		/// The parameter's value in the request that was not valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServerError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RateLimitExceeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidAuthorization = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientAuthorization = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ErrorSubCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnexpectedError = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotImplemented = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterMissing = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterInvalidValue = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HttpNotAllowed = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Blocked = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationMissing = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationRedundancy = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationDisabled = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AuthorizationExpired = 10,
	}
	
	/// <summary>
	/// The top-level response that represents a failed request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// A list of errors that describe the reasons why the request failed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public Error[] Errors { get; set; }
	}
	
	/// <summary>
	/// Defines the identity of a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Identifiable
	{
		
		/// <summary>
		/// A String identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Defines a link to a webpage that contains a collection of related images.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImageGallery
	{
		
		/// <summary>
		/// The number of users on the social network that follow the creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="followersCount")]
		public System.Nullable<System.Int64> FollowersCount { get; set; }
		
		/// <summary>
		/// The number of related images found in the collection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imagesCount")]
		public System.Nullable<System.Int64> ImagesCount { get; set; }
		
		/// <summary>
		/// The publisher or social network where the images were found. You must attribute the publisher as the source where the collection was found.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
	}
	
	/// <summary>
	/// The top-level object that the response includes when an image insights request succeeds. For information about requesting image insights, see the [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken) query parameter. The modules query parameter affects the fields that Bing includes in the response. If you set [modules](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#modulesrequested) to only Caption, then this object includes only the imageCaption field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImageInsights
	{
		
		/// <summary>
		/// Defines a search query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bestRepresentativeQuery")]
		public Query BestRepresentativeQuery { get; set; }
		
		/// <summary>
		/// Defines an image's caption.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageCaption")]
		public ImageInsightsImageCaption ImageCaption { get; set; }
		
		/// <summary>
		/// A token that you use in a subsequent call to the Image Search API to get more information about the image. For information about using this token, see the insightsToken query parameter. This token has the same usage as the token in the Image object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageInsightsToken")]
		public string ImageInsightsToken { get; set; }
		
		/// <summary>
		/// Defines the characteristics of content found in an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageTags")]
		public ImageTagsModule ImageTags { get; set; }
		
		/// <summary>
		/// Defines a list of images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pagesIncluding")]
		public ImagesModule PagesIncluding { get; set; }
		
		/// <summary>
		/// Defines a list of recipes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipes")]
		public RecipesModule Recipes { get; set; }
		
		/// <summary>
		/// Defines a list of previously recognized entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recognizedEntityGroups")]
		public RecognizedEntitiesModule RecognizedEntityGroups { get; set; }
		
		/// <summary>
		/// Defines a list of webpages that contain related images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedCollections")]
		public RelatedCollectionsModule RelatedCollections { get; set; }
		
		/// <summary>
		/// Defines a list of related searches.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedSearches")]
		public RelatedSearchesModule RelatedSearches { get; set; }
		
		/// <summary>
		/// Defines a list of offers from merchants that are related to the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shoppingSources")]
		public AggregateOffer ShoppingSources { get; set; }
		
		/// <summary>
		/// Defines a list of images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visuallySimilarImages")]
		public ImagesModule VisuallySimilarImages { get; set; }
		
		/// <summary>
		/// Defines a list of images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visuallySimilarProducts")]
		public ImagesModule VisuallySimilarProducts { get; set; }
	}
	
	/// <summary>
	/// Defines a search query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Query
	{
		
		/// <summary>
		/// The display version of the query term. This version of the query term may contain special characters that highlight the search term found in the query string. The string contains the highlighting characters only if the query enabled hit highlighting
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayText")]
		public string DisplayText { get; set; }
		
		/// <summary>
		/// The URL that you use to get the results of the related search. Before using the URL, you must append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use this URL if you're displaying the results in your own user interface. Otherwise, use the webSearchUrl URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchLink")]
		public string SearchLink { get; set; }
		
		/// <summary>
		/// The query string. Use this string as the query term in a new search request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Defines an image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public ImageObject Thumbnail { get; set; }
		
		/// <summary>
		/// The URL that takes the user to the Bing search results page for the query.Only related search results include this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webSearchUrl")]
		public string WebSearchUrl { get; set; }
	}
	
	/// <summary>
	/// Defines an image's caption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImageInsightsImageCaption
	{
		
		/// <summary>
		/// A caption about the image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="caption")]
		public string Caption { get; set; }
		
		/// <summary>
		/// The URL to the website where the caption was found. You must attribute the caption to the source. For example, by displaying the domain name from the URL next to the caption and using the URL to link to the source website.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dataSourceUrl")]
		public string DataSourceUrl { get; set; }
		
		/// <summary>
		/// A list of entities found in the caption. Use the contents of the Query object to find the entity in the caption and create a link. The link takes the user to images of the entity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relatedSearches")]
		public Query[] RelatedSearches { get; set; }
	}
	
	/// <summary>
	/// Defines the characteristics of content found in an image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImageTagsModule
	{
		
		/// <summary>
		/// A list of tags that describe the characteristics of the content found in the image. For example, if the image is of a musical artist, the list might include Female, Dress, and Music to indicate the person is female music artist that's wearing a dress.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public InsightsTag[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines a characteristic of the content found in the image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class InsightsTag
	{
		
		/// <summary>
		/// The name of the characteristic. For example, cat, kitty, calico cat.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Defines a list of images.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ImagesModule
	{
		
		/// <summary>
		/// A list of images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ImageObject[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines a list of recipes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RecipesModule
	{
		
		/// <summary>
		/// A list of recipes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Recipe[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines a cooking recipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Recipe
	{
		
		/// <summary>
		/// The amount of time the food takes to cook. For example, PT25M. For information about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cookTime")]
		public string CookTime { get; set; }
		
		/// <summary>
		/// The amount of time required to prepare the ingredients. For example, PT15M. For information about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prepTime")]
		public string PrepTime { get; set; }
		
		/// <summary>
		/// The total amount of time it takes to prepare and cook the recipe. For example, PT45M. For information about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalTime")]
		public string TotalTime { get; set; }
	}
	
	/// <summary>
	/// Defines a list of previously recognized entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RecognizedEntitiesModule
	{
		
		/// <summary>
		/// A list of recognized entities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public RecognizedEntityGroup[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines a group of previously recognized entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RecognizedEntityGroup
	{
		
		/// <summary>
		/// The name of the group where images of the entity were also found. The following are possible groups. CelebRecognitionAnnotations: Similar to CelebrityAnnotations but provides a higher probability of an accurate match. CelebrityAnnotations: Contains celebrities such as actors, politicians, athletes, and historical figures.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The regions of the image that contain entities.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recognizedEntityRegions")]
		public RecognizedEntityRegion[] RecognizedEntityRegions { get; set; }
	}
	
	/// <summary>
	/// Defines a region of the image where an entity was found and a list of entities that might match it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RecognizedEntityRegion
	{
		
		/// <summary>
		/// A list of entities that Bing believes match the entity found in the region. The entities are in descending order of confidence (see the matchConfidence field of RecognizedEntity).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchingEntities")]
		public RecognizedEntity[] MatchingEntities { get; set; }
		
		/// <summary>
		/// Defines a region of an image. The region is defined by the coordinates of the top, left corner and bottom, right corner of the region. The coordinates are fractional values of the original image's width and height in the range 0.0 through 1.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public NormalizedRectangle Region { get; set; }
	}
	
	/// <summary>
	/// Defines a recognized entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RecognizedEntity
	{
		
		/// <summary>
		/// Defines a thing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity")]
		public Thing Entity { get; set; }
		
		/// <summary>
		/// The confidence that Bing has that the entity in the image matches this entity. The confidence ranges from 0.0 through 1.0 with 1.0 being very confident.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchConfidence")]
		public System.Nullable<System.Single> MatchConfidence { get; set; }
	}
	
	/// <summary>
	/// Defines a region of an image. The region is defined by the coordinates of the top, left corner and bottom, right corner of the region. The coordinates are fractional values of the original image's width and height in the range 0.0 through 1.0.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class NormalizedRectangle
	{
		
		/// <summary>
		/// The bottom coordinate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bottom")]
		public float Bottom { get; set; }
		
		/// <summary>
		/// The left coordinate.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="left")]
		public float Left { get; set; }
		
		/// <summary>
		/// The right coordinate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="right")]
		public float Right { get; set; }
		
		/// <summary>
		/// The top coordinate
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="top")]
		public float Top { get; set; }
	}
	
	/// <summary>
	/// Defines a list of webpages that contain related images.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RelatedCollectionsModule
	{
		
		/// <summary>
		/// A list of webpages that contain related images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ImageGallery[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines a list of related searches.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RelatedSearchesModule
	{
		
		/// <summary>
		/// A list of related searches.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Query[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines an image answer
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Images
	{
		
		/// <summary>
		/// Used as part of deduping. Tells client the next offset that client should use in the next pagination request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextOffset")]
		public System.Nullable<System.Int32> NextOffset { get; set; }
		
		/// <summary>
		/// A list of segments in the original query. For example, if the query was Red Flowers, Bing might segment the query into Red and Flowers. The Flowers pivot may contain query suggestions such as Red Peonies and Red Daisies, and the Red pivot may contain query suggestions such as Green Flowers and Yellow Flowers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pivotSuggestions")]
		public PivotSuggestions[] PivotSuggestions { get; set; }
		
		/// <summary>
		/// A list of expanded queries that narrows the original query. For example, if the query was Microsoft Surface, the expanded queries might be: Microsoft Surface Pro 3, Microsoft Surface RT, Microsoft Surface Phone, and Microsoft Surface Hub.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryExpansions")]
		public Query[] QueryExpansions { get; set; }
		
		/// <summary>
		/// A list of terms that are similar in meaning to the user's query term.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="similarTerms")]
		public Query[] SimilarTerms { get; set; }
		
		/// <summary>
		/// A list of image objects that are relevant to the query. If there are no results, the List is empty.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ImageObject[] Value { get; set; }
	}
	
	/// <summary>
	/// Defines the pivot segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PivotSuggestions
	{
		
		/// <summary>
		/// The segment from the original query to pivot on.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pivot")]
		public string Pivot { get; set; }
		
		/// <summary>
		/// A list of suggested queries for the pivot.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="suggestions")]
		public Query[] Suggestions { get; set; }
	}
	
	/// <summary>
	/// A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Intangible
	{
	}
	
	/// <summary>
	/// Defines a media object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MediaObject
	{
		
		/// <summary>
		/// Size of the media object content (use format "value unit" e.g "1024 B").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentSize")]
		public string ContentSize { get; set; }
		
		/// <summary>
		/// Original URL to retrieve the source (file) for the media object (e.g the source URL for the image).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentUrl")]
		public string ContentUrl { get; set; }
		
		/// <summary>
		/// Encoding format (e.g mp3, mp4, jpeg, etc).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encodingFormat")]
		public string EncodingFormat { get; set; }
		
		/// <summary>
		/// The height of the source media object, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Display URL of the page that hosts the media object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostPageDisplayUrl")]
		public string HostPageDisplayUrl { get; set; }
		
		/// <summary>
		/// URL of the page that hosts the media object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostPageUrl")]
		public string HostPageUrl { get; set; }
		
		/// <summary>
		/// The width of the source media object, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	/// <summary>
	/// Defines a person.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Person
	{
		
		/// <summary>
		/// The person's job title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobTitle")]
		public string JobTitle { get; set; }
		
		/// <summary>
		/// The URL of the person's twitter profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="twitterProfile")]
		public string TwitterProfile { get; set; }
	}
	
	/// <summary>
	/// Defines an item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PropertiesItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
		
		/// <summary>
		/// Text representation of an item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// Defines a rating.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Rating
	{
		
		/// <summary>
		/// The highest rated review. The possible values are 1.0 through 5.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bestRating")]
		public System.Nullable<System.Single> BestRating { get; set; }
		
		/// <summary>
		/// The mean (average) rating. The possible values are 1.0 through 5.0.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ratingValue")]
		public float RatingValue { get; set; }
	}
	
	/// <summary>
	/// Defines a response. All schemas that could be returned at the root of a response should inherit from this
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Response
	{
		
		/// <summary>
		/// The URL that returns this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readLink")]
		public string ReadLink { get; set; }
		
		/// <summary>
		/// The URL To Bing's search result for this item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webSearchUrl")]
		public string WebSearchUrl { get; set; }
	}
	
	/// <summary>
	/// Response base
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResponseBase
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
	}
	
	/// <summary>
	/// Defines a search result answer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SearchResultsAnswer
	{
		
		/// <summary>
		/// The estimated number of webpages that are relevant to the query. Use this number along with the count and offset query parameters to page the results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalEstimatedMatches")]
		public System.Nullable<System.Int64> TotalEstimatedMatches { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StructuredValue
	{
	}
	
	/// <summary>
	/// The top-level object that the response includes when a trending images request succeeds.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TrendingImages
	{
		
		/// <summary>
		/// A list that identifies categories of images and a list of trending images in that category.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public TrendingImagesCategory[] Categories { get; set; }
	}
	
	/// <summary>
	/// Defines the category of trending images.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TrendingImagesCategory
	{
		
		/// <summary>
		/// A list of images that are trending in the category. Each tile contains an image and a URL that returns more images of the subject. For example, if the category is Popular People Searches, the image is of a popular person and the URL would return more images of that person.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tiles")]
		public TrendingImagesTile[] Tiles { get; set; }
		
		/// <summary>
		/// The name of the image category. For example, Popular People Searches.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Defines an image tile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TrendingImagesTile
	{
		
		/// <summary>
		/// Defines an image
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="image")]
		public ImageObject Image { get; set; }
		
		/// <summary>
		/// Defines a search query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public Query Query { get; set; }
	}
	
	/// <summary>
	/// Defines a webpage that is relevant to the query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebPage
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// The Image Detail Search API lets you search on Bing and get back insights about an image, such as webpages that include the image. This section provides technical details about the query parameters and headers that you use to request insights of images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
		/// Images_Details images/details
		/// </summary>
		/// <param name="cab">The bottom coordinate of the region to crop. The coordinate is a fractional value of the original image's height and is measured from the top, left corner of the image. Specify the coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="cal">The left coordinate of the region to crop. The coordinate is a fractional value of the original image's height and is measured from the top, left corner of the image. Specify the coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="car">The right coordinate of the region to crop. The coordinate is a fractional value of the original image's height and is measured from the top, left corner of the image. Specify the coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="cat">The top coordinate of the region to crop. The coordinate is a fractional value of the original image's height and is measured from the top, left corner of the image. Specify the coordinate as a value from 0.0 through 1.0. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="ct">The crop type to use when cropping the image based on the coordinates specified in the cal, cat, car, and cab parameters. The following are the possible values. 0: Rectangular (default). Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="cc">A 2-character country code of the country where the results come from. For a list of possible values, see [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes). If you set this parameter, you must also specify the [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage) header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt) query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="id">An ID that uniquely identifies an image. Use this parameter to ensure that the specified image is the first image in the list of images that Bing returns. The [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image) object's imageId field contains the ID that you set this parameter to.</param>
		/// <param name="imgUrl">The URL of an image that you want to get insights of. Use this parameter as an alternative to using the insightsToken parameter to specify the image. You may also specify the image by placing the binary of the image in the body of a POST request. If you use the binary option, see the [Content-Type](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#contenttype) header. The maximum supported image size is 1 MB. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="insightsToken">An image token. The [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image) object's [imageInsightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image-imageinsightstoken) contains the token. Specify this parameter to get additional information about an image, such as a caption or shopping source. For a list of the additional information about an image that you can get, see the [modules](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#modulesrequested) query parameter. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="modules">A comma-delimited list of insights to request. The following are the possible case-insensitive values. All: Return all insights, if available, except RecognizedEntities. BRQ: Best representative query. The query term that best describes the image. Caption: A caption that provides information about the image. If the caption contains entities, the response may include links to images of those entities. Collections: A list of related images. Recipes: A list of recipes for cooking the food shown in the images. PagesIncluding: A list of webpages that include the image. RecognizedEntities: A list of entities (people) that were recognized in the image. NOTE: You may not specify this module with any other module. If you specify it with other modules, the response doesn't include recognized entities. RelatedSearches: A list of related searches made by others. ShoppingSources: A list of merchants where you can buy related offerings. SimilarImages: A list of images that are visually similar to the original image. SimilarProducts: A list of images that contain a product that is similar to a product found in the original image. Tags: Provides characteristics of the type of content found in the image. For example, if the image is of a person, the tags might indicate the person's gender and type of clothes they're wearing. If you specify a module and there is no data for the module, the response object doesn't include the related field. For example, if you specify Caption and it does not exist, the response doesn't include the imageCaption field. To include related searches, the request must include the original query string. Although the original query string is not required for similar images or products, you should always include it because it can help improve relevance and the results. Use this parameter only with the Insights API. Do not specify this parameter when calling the Images, Trending Images, or Web Search APIs.</param>
		/// <param name="mkt">The market where the results come from. Typically, mkt is the country where the user is making the request from. However, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form <language code>-<country code>. For example, en-US. The string is case insensitive. For a list of possible market values, see [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes). NOTE: If known, you are encouraged to always specify the market. Specifying the market helps Bing route the request and return an appropriate and optimal response. If you specify a market that is not listed in [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes), Bing uses a best fit market code based on an internal mapping that is subject to change. This parameter and the [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc) query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="q">The user's search query term. The term cannot be empty. The term may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. To help improve relevance of an insights query (see [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)), you should always include the user's query term. Use this parameter only with the Image Search API.Do not specify this parameter when calling the Trending Images API.</param>
		/// <param name="safeSearch">Filter images for adult content. The following are the possible filter values. Off: May return images with adult content. If the request is through the Image Search API, the response includes thumbnail images that are clear (non-fuzzy). However, if the request is through the Web Search API, the response includes thumbnail images that are pixelated (fuzzy). Moderate: If the request is through the Image Search API, the response doesn't include images with adult content. If the request is through the Web Search API, the response may include images with adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not return images with adult content. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.</param>
		/// <param name="setLang">The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage) header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.</param>
		/// <returns>Success.</returns>
		public async Task<ImageInsights> Images_DetailsAsync(float cab, float cal, float car, float cat, Images_DetailsCt ct, string cc, string id, string imgUrl, string insightsToken, string[] modules, string mkt, string q, Images_DetailsSafeSearch safeSearch, string setLang)
		{
			var requestUri = "images/details?cab="+cab+"&cal="+cal+"&car="+car+"&cat="+cat+"&ct=" + ct+"&cc=" + (cc==null? "" : System.Uri.EscapeDataString(cc))+"&id=" + (id==null? "" : System.Uri.EscapeDataString(id))+"&imgUrl=" + (imgUrl==null? "" : System.Uri.EscapeDataString(imgUrl))+"&insightsToken=" + (insightsToken==null? "" : System.Uri.EscapeDataString(insightsToken))+"&"+string.Join("&", modules.Select(z => $"modules={System.Uri.EscapeDataString(z.ToString())}"))+"&mkt=" + (mkt==null? "" : System.Uri.EscapeDataString(mkt))+"&q=" + (q==null? "" : System.Uri.EscapeDataString(q))+"&safeSearch=" + safeSearch+"&setLang=" + (setLang==null? "" : System.Uri.EscapeDataString(setLang));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ImageInsights>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web).
		/// Images_Search images/search
		/// </summary>
		/// <param name="aspect">Filter images by the following aspect ratios. All: Do not filter by aspect.Specifying this value is the same as not specifying the aspect parameter. Square: Return images with standard aspect ratio. Wide: Return images with wide screen aspect ratio. Tall: Return images with tall aspect ratio.</param>
		/// <param name="color">Filter images by the following color options. ColorOnly: Return color images. Monochrome: Return black and white images. Return images with one of the following dominant colors: Black, Blue, Brown, Gray, Green, Orange, Pink, Purple, Red, Teal, White, Yellow</param>
		/// <param name="cc">A 2-character country code of the country where the results come from. For a list of possible values, see [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes). If you set this parameter, you must also specify the [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage) header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#mkt) query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="count">The number of images to return in the response. The actual number delivered may be less than requested. The default is 35. The maximum value is 150. You use this parameter along with the offset parameter to page results.For example, if your user interface displays 20 images per page, set count to 20 and offset to 0 to get the first page of results.For each subsequent page, increment offset by 20 (for example, 0, 20, 40). Use this parameter only with the Image Search API.Do not specify this parameter when calling the Insights, Trending Images, or Web Search APIs.</param>
		/// <param name="freshness">Filter images by the following discovery options. Day: Return images discovered by Bing within the last 24 hours. Week: Return images discovered by Bing within the last 7 days. Month: Return images discovered by Bing within the last 30 days.</param>
		/// <param name="height">Filter images that have the specified height, in pixels. You may use this filter with the size filter to return small images that have a height of 150 pixels.</param>
		/// <param name="id">An ID that uniquely identifies an image. Use this parameter to ensure that the specified image is the first image in the list of images that Bing returns. The [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image) object's imageId field contains the ID that you set this parameter to.</param>
		/// <param name="imageContent">Filter images by the following content types. Face: Return images that show only a person's face. Portrait: Return images that show only a person's head and shoulders.</param>
		/// <param name="imageType">Filter images by the following image types. AnimatedGif: Return only animated GIFs. Clipart: Return only clip art images. Line: Return only line drawings. Photo: Return only photographs(excluding line drawings, animated Gifs, and clip art). Shopping: Return only images that contain items where Bing knows of a merchant that is selling the items. This option is valid in the en - US market only.Transparent: Return only images with a transparent background.</param>
		/// <param name="license">Filter images by the following license types. All: Do not filter by license type.Specifying this value is the same as not specifying the license parameter. Any: Return images that are under any license type. The response doesn't include images that do not specify a license or the license is unknown. Public: Return images where the creator has waived their exclusive rights, to the fullest extent allowed by law. Share: Return images that may be shared with others. Changing or editing the image might not be allowed. Also, modifying, sharing, and using the image for commercial purposes might not be allowed. Typically, this option returns the most images. ShareCommercially: Return images that may be shared with others for personal or commercial purposes. Changing or editing the image might not be allowed. Modify: Return images that may be modified, shared, and used. Changing or editing the image might not be allowed. Modifying, sharing, and using the image for commercial purposes might not be allowed. ModifyCommercially: Return images that may be modified, shared, and used for personal or commercial purposes. Typically, this option returns the fewest images. For more information about these license types, see [Filter Images By License Type](http://go.microsoft.com/fwlink/?LinkId=309768).</param>
		/// <param name="mkt">The market where the results come from. Typically, mkt is the country where the user is making the request from. However, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form <language code>-<country code>. For example, en-US. The string is case insensitive. For a list of possible market values, see [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes). NOTE: If known, you are encouraged to always specify the market. Specifying the market helps Bing route the request and return an appropriate and optimal response. If you specify a market that is not listed in [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes), Bing uses a best fit market code based on an internal mapping that is subject to change. This parameter and the [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc) query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="maxFileSize">Filter images that are less than or equal to the specified file size. The maximum file size that you may specify is 520,192 bytes. If you specify a larger value, the API uses 520,192. It is possible that the response may include images that are slightly larger than the specified maximum. You may specify this filter and minFileSize to filter images within a range of file sizes.</param>
		/// <param name="maxHeight">Filter images that have a height that is less than or equal to the specified height. Specify the height in pixels. You may specify this filter and minHeight to filter images within a range of heights. This filter and the height filter are mutually exclusive.</param>
		/// <param name="maxWidth">Filter images that have a width that is less than or equal to the specified width. Specify the width in pixels. You may specify this filter and maxWidth to filter images within a range of widths. This filter and the width filter are mutually exclusive.</param>
		/// <param name="minFileSize">Filter images that are greater than or equal to the specified file size. The maximum file size that you may specify is 520,192 bytes. If you specify a larger value, the API uses 520,192. It is possible that the response may include images that are slightly smaller than the specified minimum. You may specify this filter and maxFileSize to filter images within a range of file sizes.</param>
		/// <param name="minHeight">Filter images that have a height that is greater than or equal to the specified height. Specify the height in pixels. You may specify this filter and maxHeight to filter images within a range of heights. This filter and the height filter are mutually exclusive.</param>
		/// <param name="minWidth">Filter images that have a width that is greater than or equal to the specified width. Specify the width in pixels. You may specify this filter and maxWidth to filter images within a range of widths. This filter and the width filter are mutually exclusive.</param>
		/// <param name="offset">The zero-based offset that indicates the number of images to skip before returning images. The default is 0. The offset should be less than ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#totalestimatedmatches) - count). Use this parameter along with the count parameter to page results. For example, if your user interface displays 20 images per page, set count to 20 and offset to 0 to get the first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in results. To prevent duplicates, see [nextOffset](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#nextoffset). Use this parameter only with the Image API. Do not specify this parameter when calling the Trending Images API or the Web Search API.</param>
		/// <param name="q">The user's search query term. The term cannot be empty. The term may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For example, to limit images to a specific domain, use the [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. To help improve relevance of an insights query (see [insightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken)), you should always include the user's query term. Use this parameter only with the Image Search API.Do not specify this parameter when calling the Trending Images API.</param>
		/// <param name="safeSearch">Filter images for adult content. The following are the possible filter values. Off: May return images with adult content. If the request is through the Image Search API, the response includes thumbnail images that are clear (non-fuzzy). However, if the request is through the Web Search API, the response includes thumbnail images that are pixelated (fuzzy). Moderate: If the request is through the Image Search API, the response doesn't include images with adult content. If the request is through the Web Search API, the response may include images with adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not return images with adult content. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.</param>
		/// <param name="size">Filter images by the following sizes. All: Do not filter by size. Specifying this value is the same as not specifying the size parameter. Small: Return images that are less than 200x200 pixels. Medium: Return images that are greater than or equal to 200x200 pixels but less than 500x500 pixels. Large: Return images that are 500x500 pixels or larger. Wallpaper: Return wallpaper images. You may use this parameter along with the height or width parameters. For example, you may use height and size to request small images that are 150 pixels tall.</param>
		/// <param name="setLang">The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage) header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.</param>
		/// <param name="width">Filter images that have the specified width, in pixels. You may use this filter with the size filter to return small images that have a width of 150 pixels.</param>
		/// <returns>Success.</returns>
		public async Task<Images> Images_SearchAsync(
					Images_SearchAspect aspect, 
					Images_SearchColor color, 
					string cc, 
					int count, 
					Images_SearchFreshness freshness, 
					int height, 
					string id, 
					Images_SearchImageContent imageContent, 
					Images_SearchImageType imageType, 
					Images_SearchLicense license, 
					string mkt, 
					long maxFileSize, 
					long maxHeight, 
					long maxWidth, 
					long minFileSize, 
					long minHeight, 
					long minWidth, 
					long offset, 
					string q, 
					Images_DetailsSafeSearch safeSearch, 
					Images_SearchSize size, 
					string setLang, 
					int width)
		{
			var requestUri = "images/search?aspect=" + aspect+"&color=" + color+"&cc=" + (cc==null? "" : System.Uri.EscapeDataString(cc))+"&count="+count+"&freshness=" + freshness+"&height="+height+"&id=" + (id==null? "" : System.Uri.EscapeDataString(id))+"&imageContent=" + imageContent+"&imageType=" + imageType+"&license=" + license+"&mkt=" + (mkt==null? "" : System.Uri.EscapeDataString(mkt))+"&maxFileSize="+maxFileSize+"&maxHeight="+maxHeight+"&maxWidth="+maxWidth+"&minFileSize="+minFileSize+"&minHeight="+minHeight+"&minWidth="+minWidth+"&offset="+offset+"&q=" + (q==null? "" : System.Uri.EscapeDataString(q))+"&safeSearch=" + safeSearch+"&size=" + size+"&setLang=" + (setLang==null? "" : System.Uri.EscapeDataString(setLang))+"&width="+width;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Images>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// The Image Trending Search API lets you search on Bing and get back a list of images that are trending based on search requests made by others. The images are broken out into different categories. For example, Popular People Searches. For a list of markets that support trending images, see [Trending Images](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images).
		/// Images_Trending images/trending
		/// </summary>
		/// <param name="cc">A 2-character country code of the country where the results come from. This API supports only the United States, Canada, Australia, and China markets. If you specify this query parameter, it must be set to us, ca, au, or cn. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="mkt">The market where the results come from. Typically, mkt is the country where the user is making the request from. However, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form <language code>-<country code>. For example, en-US. The string is case insensitive. For a list of possible market values, see [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes). NOTE: If known, you are encouraged to always specify the market. Specifying the market helps Bing route the request and return an appropriate and optimal response. If you specify a market that is not listed in [Market Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#market-codes), Bing uses a best fit market code based on an internal mapping that is subject to change. This parameter and the [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#cc) query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="safeSearch">Filter images for adult content. The following are the possible filter values. Off: May return images with adult content. If the request is through the Image Search API, the response includes thumbnail images that are clear (non-fuzzy). However, if the request is through the Web Search API, the response includes thumbnail images that are pixelated (fuzzy). Moderate: If the request is through the Image Search API, the response doesn't include images with adult content. If the request is through the Web Search API, the response may include images with adult content (the thumbnail images are pixelated (fuzzy)). Strict: Do not return images with adult content. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.</param>
		/// <param name="setLang">The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#acceptlanguage) header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.</param>
		/// <returns>Success.</returns>
		public async Task<TrendingImages> Images_TrendingAsync(string cc, string mkt, Images_DetailsSafeSearch safeSearch, string setLang)
		{
			var requestUri = "images/trending?cc=" + (cc==null? "" : System.Uri.EscapeDataString(cc))+"&mkt=" + (mkt==null? "" : System.Uri.EscapeDataString(mkt))+"&safeSearch=" + safeSearch+"&setLang=" + (setLang==null? "" : System.Uri.EscapeDataString(setLang));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TrendingImages>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Images_DetailsX_BingApis_SDK
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
	}
	
	public enum Images_DetailsCt
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Rectangular = 0,
	}
	
	public enum Images_DetailsSafeSearch
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Moderate = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Strict = 2,
	}
	
	public enum Images_SearchX_BingApis_SDK
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
	}
	
	public enum Images_SearchAspect
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		All = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Square = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Wide = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tall = 3,
	}
	
	public enum Images_SearchColor
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ColorOnly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Monochrome = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Black = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Blue = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Brown = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gray = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Green = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Orange = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pink = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Purple = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Red = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Teal = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		White = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Yellow = 13,
	}
	
	public enum Images_SearchFreshness
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Day = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Week = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Month = 2,
	}
	
	public enum Images_SearchImageContent
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Face = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Portrait = 1,
	}
	
	public enum Images_SearchImageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AnimatedGif = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Clipart = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Line = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Photo = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shopping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Transparent = 5,
	}
	
	public enum Images_SearchLicense
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		All = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Any = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Public = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Share = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShareCommercially = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Modify = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ModifyCommercially = 6,
	}
	
	public enum Images_SearchSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		All = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Small = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Large = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Wallpaper = 4,
	}
	
	public enum Images_TrendingX_BingApis_SDK
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Container host mapping object specifying the Container host resource ID and its associated Controller resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContainerHostMapping
	{
		
		/// <summary>
		/// ARM ID of the Container Host resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerHostResourceId")]
		public string ContainerHostResourceId { get; set; }
		
		/// <summary>
		/// ARM ID of the mapped Controller resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mappedControllerResourceId")]
		public string MappedControllerResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Controller : TrackedResource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ControllerProperties Properties { get; set; }
		
		/// <summary>
		/// Model representing SKU for Azure Dev Spaces Controller.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public Sku Sku { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ControllerConnectionDetails
	{
		
		/// <summary>
		/// Base class for types that supply values used to connect to container orchestrators
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orchestratorSpecificConnectionDetails")]
		public OrchestratorSpecificConnectionDetails OrchestratorSpecificConnectionDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ControllerConnectionDetailsList
	{
		
		/// <summary>
		/// List of Azure Dev Spaces Controller connection details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectionDetailsList")]
		public ControllerConnectionDetails[] ConnectionDetailsList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ControllerList
	{
		
		/// <summary>
		/// The URI that can be used to request the next page for list of Azure Dev Spaces Controllers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Azure Dev Spaces Controllers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Controller[] Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ControllerProperties
	{
		
		/// <summary>
		/// DNS name for accessing DataPlane services
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataPlaneFqdn")]
		public string DataPlaneFqdn { get; set; }
		
		/// <summary>
		/// DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostSuffix")]
		public string HostSuffix { get; set; }
		
		/// <summary>
		/// Provisioning state of the Azure Dev Spaces Controller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<ControllerPropertiesProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Credentials of the target container host (base64).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetContainerHostCredentialsBase64")]
		public string TargetContainerHostCredentialsBase64 { get; set; }
		
		/// <summary>
		/// Resource ID of the target container host
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetContainerHostResourceId")]
		public string TargetContainerHostResourceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ControllerPropertiesProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleted = 6,
	}
	
	/// <summary>
	/// Parameters for updating an Azure Dev Spaces Controller.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ControllerUpdateParameters
	{
		
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ControllerUpdateParametersProperties Properties { get; set; }
		
		/// <summary>
		/// Tags for the Azure Dev Spaces Controller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public object Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ControllerUpdateParametersProperties
	{
		
		/// <summary>
		/// Credentials of the target container host (base64).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetContainerHostCredentialsBase64")]
		public string TargetContainerHostCredentialsBase64 { get; set; }
	}
	
	/// <summary>
	/// Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DevSpacesErrorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ErrorDetails Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorDetails
	{
		
		/// <summary>
		/// Status code for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Error message describing the error in detail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The target of the particular error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
	}
	
	/// <summary>
	/// Contains information used to connect to a Kubernetes cluster
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class KubernetesConnectionDetails : OrchestratorSpecificConnectionDetails
	{
		
		/// <summary>
		/// Gets the kubeconfig for the cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kubeConfig")]
		public string KubeConfig { get; set; }
	}
	
	/// <summary>
	/// Parameters for listing connection details of an Azure Dev Spaces Controller.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ListConnectionDetailsParameters
	{
		
		/// <summary>
		/// Resource ID of the target container host mapped to the Azure Dev Spaces Controller.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetContainerHostResourceId")]
		public string TargetContainerHostResourceId { get; set; }
	}
	
	/// <summary>
	/// Base class for types that supply values used to connect to container orchestrators
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OrchestratorSpecificConnectionDetails
	{
		
		/// <summary>
		/// Gets the Instance type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
	}
	
	/// <summary>
	/// An Azure resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// Fully qualified resource Id for the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The type of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResourceProviderOperationDefinition
	{
		
		[System.Runtime.Serialization.DataMember(Name="display")]
		public ResourceProviderOperationDisplay Display { get; set; }
		
		/// <summary>
		/// Resource provider operation name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResourceProviderOperationDisplay
	{
		
		/// <summary>
		/// Description of the resource provider operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Name of the resource provider operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Name of the resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// Name of the resource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResourceProviderOperationList
	{
		
		/// <summary>
		/// The URI that can be used to request the next page for list of Azure operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Resource provider operations list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ResourceProviderOperationDefinition[] Value { get; set; }
	}
	
	/// <summary>
	/// Model representing SKU for Azure Dev Spaces Controller.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Sku
	{
		
		/// <summary>
		/// The name of the SKU for Azure Dev Spaces Controller.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SkuName Name { get; set; }
		
		/// <summary>
		/// The tier of the SKU for Azure Dev Spaces Controller.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public System.Nullable<SkuTier> Tier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SkuName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S1 = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SkuTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard = 0,
	}
	
	/// <summary>
	/// The resource model definition for a ARM tracked top level resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TrackedResource : Resource
	{
		
		/// <summary>
		/// Region where the Azure resource is located.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Tags for the Azure resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists operations for the resource provider.
		/// Lists all the supported operations by the Microsoft.DevSpaces resource provider along with their description.
		/// Operations_List providers/Microsoft.DevSpaces/operations
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <returns>The request was successful; response contains the list of operations under Microsoft.DevSpaces resource provider.</returns>
		public async Task<ResourceProviderOperationList> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.DevSpaces/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ResourceProviderOperationList>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Azure Dev Spaces Controllers in a subscription.
		/// Lists all the Azure Dev Spaces Controllers with their properties in the subscription.
		/// Controllers_List subscriptions/{subscriptionId}/providers/Microsoft.DevSpaces/controllers
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <returns>The request was successful; response contains the list of Azure Dev Spaces Controllers in the subscription.</returns>
		public async Task<ControllerList> Controllers_ListAsync(string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.DevSpaces/controllers?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ControllerList>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the Azure Dev Spaces Controllers in a resource group.
		/// Lists all the Azure Dev Spaces Controllers with their properties in the specified resource group and subscription.
		/// Controllers_ListByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <returns>The request was successful; response contains the list of Azure Dev Spaces Controllers in the resource group.</returns>
		public async Task<ControllerList> Controllers_ListByResourceGroupAsync(string api_version, string subscriptionId, string resourceGroupName)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/controllers?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ControllerList>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an Azure Dev Spaces Controller.
		/// Gets the properties for an Azure Dev Spaces Controller.
		/// Controllers_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the resource.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <returns>The request was successful; response contains the Azure Dev Spaces Controller.</returns>
		public async Task<Controller> Controllers_GetAsync(string api_version, string subscriptionId, string resourceGroupName, string name)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/controllers/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Controller>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Azure Dev Spaces Controller.
		/// Creates an Azure Dev Spaces Controller with the specified create parameters.
		/// Controllers_Create subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the resource.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="requestBody">Controller create parameters.</param>
		/// <returns>The request was successful; response contains the created Azure Dev Spaces Controller .</returns>
		public async Task<Controller> Controllers_CreateAsync(string api_version, string subscriptionId, string resourceGroupName, string name, Controller requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/controllers/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Controller>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an Azure Dev Spaces Controller.
		/// Deletes an existing Azure Dev Spaces Controller.
		/// Controllers_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the resource.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <returns>The request was successful; the Azure Dev Spaces Controller is deleted.</returns>
		public async Task Controllers_DeleteAsync(string api_version, string subscriptionId, string resourceGroupName, string name)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/controllers/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an Azure Dev Spaces Controller.
		/// Updates the properties of an existing Azure Dev Spaces Controller with the specified update parameters.
		/// Controllers_Update subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the resource.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="requestBody">Parameters for updating the Azure Dev Spaces Controller.</param>
		/// <returns>The request was successful; response contains the updated Azure Dev Spaces Controller .</returns>
		public async Task<Controller> Controllers_UpdateAsync(string api_version, string subscriptionId, string resourceGroupName, string name, ControllerUpdateParameters requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/controllers/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Controller>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists connection details for an Azure Dev Spaces Controller.
		/// Lists connection details for the underlying container resources of an Azure Dev Spaces Controller.
		/// Controllers_ListConnectionDetails subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}/listConnectionDetails
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the resource.
		/// Min length: 1
		/// Max length: 63
		// </param>
		/// <param name="requestBody">Parameters for listing connection details of Azure Dev Spaces Controller.</param>
		/// <returns>The request was successful; response contains the list of connection details for the Azure Dev Spaces Controller .</returns>
		public async Task<ControllerConnectionDetailsList> Controllers_ListConnectionDetailsAsync(string api_version, string subscriptionId, string resourceGroupName, string name, ListConnectionDetailsParameters requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/controllers/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/listConnectionDetails?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ControllerConnectionDetailsList>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns container host mapping object for a container host resource ID if an associated controller exists.
		/// ContainerHostMappings_GetContainerHostMapping subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/locations/{location}/checkContainerHostMapping
		/// </summary>
		/// <param name="api_version">Client API version.</param>
		/// <param name="subscriptionId">Azure subscription ID.</param>
		/// <param name="resourceGroupName">Resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="location">Location of the container host.</param>
		/// <returns>The request was successful; response contains the container host mapping.</returns>
		public async Task<ContainerHostMapping> ContainerHostMappings_GetContainerHostMappingAsync(string api_version, string subscriptionId, string resourceGroupName, string location, ContainerHostMapping requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.DevSpaces/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/checkContainerHostMapping?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ContainerHostMapping>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

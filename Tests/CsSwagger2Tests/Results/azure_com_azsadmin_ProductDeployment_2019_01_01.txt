//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Parameters for bootstrap action
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BootStrapActionParameters
	{
		
		/// <summary>
		/// Generic Version object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Parameters for deploy action
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DeployActionParameters
	{
		
		/// <summary>
		/// Deployment parameters, value in JToken
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// Generic Version object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Resource provider deployment information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DeploymentInfo
	{
		
		/// <summary>
		/// The identifier of the latest action plan instance resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actionPlanInstanceResourceId")]
		public string ActionPlanInstanceResourceId { get; set; }
		
		/// <summary>
		/// entity tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eTag")]
		public string ETag { get; set; }
		
		/// <summary>
		/// The latest deployment parameters as JToken
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// The product version
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Status of an operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bootstrapping = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BootstrapSucceeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BootstrapFailed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deploying = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeploymentSucceeded = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DeploymentFailed = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateSucceeded = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateFailed = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Removing = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RemoveFailed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecretRotationInProgress = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecretRotationSucceeded = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecretRotationFailed = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Migrated = 15,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ExtendedErrorInfo
	{
	}
	
	/// <summary>
	/// Resource provider deployment information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ExternalAccessInfo
	{
		
		/// <summary>
		/// The deployment start time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationTime")]
		public System.Nullable<System.DateTimeOffset> ExpirationTime { get; set; }
		
		/// <summary>
		/// The object identifier of the user, group or service principal that have access to resource provider subscription.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
	}
	
	/// <summary>
	/// Product deployment entity
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ProductDeploymentResourceEntity
	{
		
		/// <summary>
		/// entity tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eTag")]
		public string ETag { get; set; }
		
		/// <summary>
		/// Product deployment resource properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ProductDeploymentsProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Product deployment resource properties
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ProductDeploymentsProperties
	{
		
		/// <summary>
		/// Resource provider deployment information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployment")]
		public DeploymentInfo Deployment { get; set; }
		
		/// <summary>
		/// Error information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ProductDeploymentsPropertiesError Error { get; set; }
		
		/// <summary>
		/// Resource provider deployment information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalAccess")]
		public ExternalAccessInfo ExternalAccess { get; set; }
		
		/// <summary>
		/// Resource type internal state
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalState")]
		public ProductDeploymentsInternalState InternalState { get; set; }
		
		/// <summary>
		/// Resource provider deployment information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSuccessfulDeployment")]
		public DeploymentInfo LastSuccessfulDeployment { get; set; }
		
		/// <summary>
		/// The product identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		/// <summary>
		/// The provisioning state
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public string ProvisioningState { get; set; }
		
		/// <summary>
		/// Resource provider deployment information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretRotation")]
		public SecretRotationInfo SecretRotation { get; set; }
		
		/// <summary>
		/// Status of an operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeploymentStatus Status { get; set; }
		
		/// <summary>
		/// The product subscription identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
	}
	
	public class ProductDeploymentsPropertiesError
	{
		
		/// <summary>
		/// Error Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ExtendedErrorInfo Details { get; set; }
		
		/// <summary>
		/// Error Message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Resource type internal state
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ProductDeploymentsInternalState
	{
		
		/// <summary>
		/// The current external access role assignment identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalAccessRoleAssignmentId")]
		public string ExternalAccessRoleAssignmentId { get; set; }
		
		/// <summary>
		/// The intermediate vault resource identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intermediateVaultId")]
		public string IntermediateVaultId { get; set; }
		
		/// <summary>
		/// The intermediate vault Uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intermediateVaultUri")]
		public string IntermediateVaultUri { get; set; }
		
		/// <summary>
		/// The latest deployment job identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// Resource provider deployment information
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SecretRotationInfo
	{
		
		/// <summary>
		/// The identifier of the latest secret rotation plan instance resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretRotationPlanInstanceResourceId")]
		public string SecretRotationPlanInstanceResourceId { get; set; }
	}
	
	/// <summary>
	/// List of Product Deployments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ProductDeploymentsList
	{
		
		/// <summary>
		/// URI to the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Product Deployments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ProductDeploymentResourceEntity[] Value { get; set; }
	}
	
	/// <summary>
	/// Parameters for bootstrap action
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UnlockActionParameters
	{
		
		/// <summary>
		/// Duration in TimeSpan format(Define which ISO format)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
	}
	
	/// <summary>
	/// Parameters for bootstrap action
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BootstrapActionParameter
	{
		
		/// <summary>
		/// Generic Version object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Parameters for deploy action
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DeployActionParameter
	{
		
		/// <summary>
		/// Deployment parameters, value in JToken
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// Generic Version object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Parameters for bootstrap action
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UnlockActionParameter
	{
		
		/// <summary>
		/// Duration in TimeSpan format(Define which ISO format)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Invokes bootstrap action on the product deployment
		/// ProductDeployments_List subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>Ok</returns>
		public async Task<ProductDeploymentsList> ProductDeployments_ListAsync(string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ProductDeploymentsList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Invokes bootstrap action on the product deployment
		/// ProductDeployments_Get subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="productId">The product identifier.</param>
		/// <returns>Ok</returns>
		public async Task<ProductDeploymentResourceEntity> ProductDeployments_GetAsync(string subscriptionId, string api_version, string productId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ProductDeploymentResourceEntity>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Invokes bootstrap action on the product deployment
		/// ProductDeployments_BootStrap subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/bootstrap
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="productId">The product identifier.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="requestBody">Represents bootstrap action parameter</param>
		/// <returns>Ok</returns>
		public async Task ProductDeployments_BootStrapAsync(string subscriptionId, string productId, string api_version, ProductDeployments_BootStrapPostBody requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"/bootstrap&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Invokes deploy action on the product
		/// ProductDeployments_Deploy subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/deploy
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="productId">The product identifier.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="requestBody">Represents bootstrap action parameter</param>
		/// <returns>Ok</returns>
		public async Task ProductDeployments_DeployAsync(string subscriptionId, string productId, string api_version, ProductDeployments_DeployPostBody requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"/deploy&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// locks the product subscription
		/// ProductDeployments_Lock subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/lock
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="productId">The product identifier.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK</returns>
		public async Task ProductDeployments_LockAsync(string subscriptionId, string productId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"/lock&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Invokes remove action on the product deployment
		/// ProductDeployments_Remove subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/remove
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="productId">The product identifier.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>Ok</returns>
		public async Task ProductDeployments_RemoveAsync(string subscriptionId, string productId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"/remove&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Invokes rotate secrets action on the product deployment
		/// ProductDeployments_RotateSecrets subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/rotateSecrets
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="productId">The product identifier.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <returns>OK</returns>
		public async Task ProductDeployments_RotateSecretsAsync(string subscriptionId, string productId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"/rotateSecrets&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Unlocks the product subscription
		/// ProductDeployments_Unlock subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/{productId}/unlock
		/// </summary>
		/// <param name="subscriptionId">Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="productId">The product identifier.</param>
		/// <param name="api_version">Client API Version.</param>
		/// <param name="requestBody">Represents bootstrap action parameter</param>
		/// <returns>OK</returns>
		public async Task ProductDeployments_UnlockAsync(string subscriptionId, string productId, string api_version, ProductDeployments_UnlockPostBody requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Deployment.Admin/locations/global/productDeployments/"+ (productId==null? "" : System.Uri.EscapeDataString(productId))+"/unlock&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ProductDeployments_BootStrapPostBody
	{
		
		/// <summary>
		/// Generic Version object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class ProductDeployments_DeployPostBody
	{
		
		/// <summary>
		/// Deployment parameters, value in JToken
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// Generic Version object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class ProductDeployments_UnlockPostBody
	{
		
		/// <summary>
		/// Duration in TimeSpan format(Define which ISO format)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

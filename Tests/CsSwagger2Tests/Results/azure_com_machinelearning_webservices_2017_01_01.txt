//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Information about an asset associated with the web service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AssetItem
	{
		
		/// <summary>
		/// Asset's Id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Information about the asset's input ports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputPorts")]
		public System.Collections.Generic.Dictionary<string, InputPort> InputPorts { get; set; }
		
		/// <summary>
		/// Describes the access location for a blob.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locationInfo")]
		public BlobLocation LocationInfo { get; set; }
		
		/// <summary>
		/// If the asset is a custom module, this holds the module's metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
		
		/// <summary>
		/// Asset's friendly name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Information about the asset's output ports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputPorts")]
		public System.Collections.Generic.Dictionary<string, OutputPort> OutputPorts { get; set; }
		
		/// <summary>
		/// If the asset is a custom module, this holds the module's parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ModuleAssetParameter[] Parameters { get; set; }
		
		/// <summary>
		/// Asset's type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AssetItemType Type { get; set; }
	}
	
	/// <summary>
	/// Asset input port
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class InputPort
	{
		
		/// <summary>
		/// Port data type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<InputPortType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum InputPortType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dataset = 0,
	}
	
	/// <summary>
	/// Describes the access location for a blob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BlobLocation
	{
		
		/// <summary>
		/// Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="credentials")]
		public string Credentials { get; set; }
		
		/// <summary>
		/// The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Asset output port
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OutputPort
	{
		
		/// <summary>
		/// Port data type.
		/// </summary>
		[System.ComponentModel.DefaultValue(InputPortType.Dataset)]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public InputPortType Type { get; set; } = InputPortType.Dataset;
	}
	
	/// <summary>
	/// Parameter definition for a module asset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ModuleAssetParameter
	{
		
		/// <summary>
		/// Definitions for nested interface parameters if this is a complex module parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modeValuesInfo")]
		public System.Collections.Generic.Dictionary<string, ModeValueInfo> ModeValuesInfo { get; set; }
		
		/// <summary>
		/// Parameter name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Parameter type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterType")]
		public string ParameterType { get; set; }
	}
	
	/// <summary>
	/// Nested parameter definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ModeValueInfo
	{
		
		/// <summary>
		/// The interface string name for the nested parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interfaceString")]
		public string InterfaceString { get; set; }
		
		/// <summary>
		/// The definition of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public ModuleAssetParameter[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AssetItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Module = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resource = 1,
	}
	
	/// <summary>
	/// The error detail information for async operation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AsyncOperationErrorInfo
	{
		
		/// <summary>
		/// The error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// An array containing error information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public AsyncOperationErrorInfo[] Details { get; set; }
		
		/// <summary>
		/// The error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The error target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
	}
	
	/// <summary>
	/// Azure async operation status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AsyncOperationStatus
	{
		
		/// <summary>
		/// The date time that the async operation finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// The error detail information for async operation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorInfo")]
		public AsyncOperationErrorInfo ErrorInfo { get; set; }
		
		/// <summary>
		/// Async operation id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Async operation name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Async operation progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentComplete")]
		public System.Nullable<System.Double> PercentComplete { get; set; }
		
		/// <summary>
		/// Read Only: The provisioning state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<AsyncOperationStatusProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// The date time that the async operation started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AsyncOperationStatusProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Provisioning = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	/// <summary>
	/// Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ColumnSpecification
	{
		
		/// <summary>
		/// If the data type is categorical, this provides the list of accepted categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enum")]
		public string[] Enum { get; set; }
		
		/// <summary>
		/// Additional format information for the data type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public System.Nullable<ColumnSpecificationFormat> Format { get; set; }
		
		/// <summary>
		/// Data type of the column.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public ColumnSpecificationType Type { get; set; }
		
		/// <summary>
		/// Flag indicating if the type supports null values or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x-ms-isnullable")]
		public System.Nullable<System.Boolean> X_ms_isnullable { get; set; }
		
		/// <summary>
		/// Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x-ms-isordered")]
		public System.Nullable<System.Boolean> X_ms_isordered { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ColumnSpecificationFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Byte = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Char = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complex64 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complex128 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Date-time")]
		DateMinustime = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Date-timeOffset")]
		DateMinustimeOffset = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Double = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duration = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Float = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Int8 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Int16 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Int32 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Int64 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uint8 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uint16 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uint32 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Uint64 = 16,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ColumnSpecificationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Boolean = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Integer = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Number = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 3,
	}
	
	/// <summary>
	/// Information about the machine learning commitment plan associated with the web service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CommitmentPlan
	{
		
		/// <summary>
		/// Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Diagnostics settings for an Azure ML web service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiagnosticsConfiguration
	{
		
		/// <summary>
		/// Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiry")]
		public System.Nullable<System.DateTimeOffset> Expiry { get; set; }
		
		/// <summary>
		/// Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="level")]
		public DiagnosticsConfigurationLevel Level { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiagnosticsConfigurationLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		All = 2,
	}
	
	/// <summary>
	/// Sample input data for the service's input(s).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ExampleRequest
	{
		
		/// <summary>
		/// Sample input data for the web service's global parameters
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="globalParameters")]
		public System.Collections.Generic.Dictionary<string, object> GlobalParameters { get; set; }
		
		/// <summary>
		/// Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public System.Collections.Generic.Dictionary<string, string[]> Inputs { get; set; }
	}
	
	/// <summary>
	/// Defines an edge within the web service's graph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GraphEdge
	{
		
		/// <summary>
		/// The source graph node's identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceNodeId")]
		public string SourceNodeId { get; set; }
		
		/// <summary>
		/// The identifier of the source node's port that the edge connects from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourcePortId")]
		public string SourcePortId { get; set; }
		
		/// <summary>
		/// The destination graph node's identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetNodeId")]
		public string TargetNodeId { get; set; }
		
		/// <summary>
		/// The identifier of the destination node's port that the edge connects into.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetPortId")]
		public string TargetPortId { get; set; }
	}
	
	/// <summary>
	/// Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GraphNode
	{
		
		/// <summary>
		/// The id of the asset represented by this node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetId")]
		public string AssetId { get; set; }
		
		/// <summary>
		/// The id of the input element represented by this node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputId")]
		public string InputId { get; set; }
		
		/// <summary>
		/// The id of the output element represented by this node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputId")]
		public string OutputId { get; set; }
		
		/// <summary>
		/// If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, WebServiceParameter> Parameters { get; set; }
	}
	
	/// <summary>
	/// Web Service Parameter object for node and global parameter
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebServiceParameter
	{
		
		/// <summary>
		/// If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certificateThumbprint")]
		public string CertificateThumbprint { get; set; }
		
		/// <summary>
		/// The parameter value
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Defines the graph of modules making up the machine learning solution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GraphPackage
	{
		
		/// <summary>
		/// The list of edges making up the graph.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edges")]
		public GraphEdge[] Edges { get; set; }
		
		/// <summary>
		/// The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="graphParameters")]
		public System.Collections.Generic.Dictionary<string, GraphParameter> GraphParameters { get; set; }
		
		/// <summary>
		/// The set of nodes making up the graph, provided as a nodeId to GraphNode map
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodes")]
		public System.Collections.Generic.Dictionary<string, GraphNode> Nodes { get; set; }
	}
	
	/// <summary>
	/// Defines a global parameter in the graph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GraphParameter
	{
		
		/// <summary>
		/// Description of this graph parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Association links for this parameter to nodes in the graph.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public GraphParameterLink[] Links { get; set; }
		
		/// <summary>
		/// Graph parameter's type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GraphParameterType Type { get; set; }
	}
	
	/// <summary>
	/// Association link for a graph global parameter to a node in the graph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class GraphParameterLink
	{
		
		/// <summary>
		/// The graph node's identifier
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nodeId")]
		public string NodeId { get; set; }
		
		/// <summary>
		/// The identifier of the node parameter that the global parameter maps to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="parameterKey")]
		public string ParameterKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum GraphParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Int = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Float = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enumerated = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Script = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mode = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Credential = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Boolean = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Double = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ColumnPicker = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParameterRange = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataGatewayName = 11,
	}
	
	/// <summary>
	/// Information about the machine learning workspace containing the experiment that is source for the web service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MachineLearningWorkspace
	{
		
		/// <summary>
		/// Specifies the workspace ID of the machine learning workspace associated with the web service
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// The API operation info.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationDisplayInfo
	{
		
		/// <summary>
		/// The description of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The action that users can perform, based on their permission level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// The service provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// The resource on which the operation is performed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// An API operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationEntity
	{
		
		/// <summary>
		/// The API operation info.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public OperationDisplayInfo Display { get; set; }
		
		/// <summary>
		/// Operation name: {provider}/{resource}/{operation}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The list of REST API operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationEntityListResult
	{
		
		/// <summary>
		/// The list of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public OperationEntity[] Value { get; set; }
	}
	
	/// <summary>
	/// Paginated list of web services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PaginatedWebServicesList
	{
		
		/// <summary>
		/// A continuation link (absolute URI) to the next page of results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// An array of web service objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public WebService[] Value { get; set; }
	}
	
	/// <summary>
	/// Instance of an Azure ML web service resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebService
	{
		
		/// <summary>
		/// The set of properties specific to the Azure ML web service resource.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public WebServiceProperties Properties { get; set; }
	}
	
	/// <summary>
	/// The set of properties specific to the Azure ML web service resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebServiceProperties
	{
		
		/// <summary>
		/// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assets")]
		public System.Collections.Generic.Dictionary<string, AssetItem> Assets { get; set; }
		
		/// <summary>
		/// Information about the machine learning commitment plan associated with the web service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commitmentPlan")]
		public CommitmentPlan CommitmentPlan { get; set; }
		
		/// <summary>
		/// Read Only: The date and time when the web service was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdOn")]
		public System.Nullable<System.DateTimeOffset> CreatedOn { get; set; }
		
		/// <summary>
		/// The description of the web service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Diagnostics settings for an Azure ML web service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diagnostics")]
		public DiagnosticsConfiguration Diagnostics { get; set; }
		
		/// <summary>
		/// Sample input data for the service's input(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exampleRequest")]
		public ExampleRequest ExampleRequest { get; set; }
		
		/// <summary>
		/// When set to true, sample data is included in the web service's swagger definition. The default value is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exposeSampleData")]
		public System.Nullable<System.Boolean> ExposeSampleData { get; set; }
		
		/// <summary>
		/// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="input")]
		public ServiceInputOutputSpecification Input { get; set; }
		
		/// <summary>
		/// Access keys for the web service calls.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keys")]
		public WebServiceKeys Keys { get; set; }
		
		/// <summary>
		/// Information about the machine learning workspace containing the experiment that is source for the web service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineLearningWorkspace")]
		public MachineLearningWorkspace MachineLearningWorkspace { get; set; }
		
		/// <summary>
		/// Read Only: The date and time when the web service was last modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedOn")]
		public System.Nullable<System.DateTimeOffset> ModifiedOn { get; set; }
		
		/// <summary>
		/// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="output")]
		public ServiceInputOutputSpecification Output { get; set; }
		
		/// <summary>
		/// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="packageType")]
		public WebServicePropertiesPackageType PackageType { get; set; }
		
		/// <summary>
		/// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, WebServiceParameter> Parameters { get; set; }
		
		/// <summary>
		/// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payloadsInBlobStorage")]
		public System.Nullable<System.Boolean> PayloadsInBlobStorage { get; set; }
		
		/// <summary>
		/// Describes the access location for a blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payloadsLocation")]
		public BlobLocation PayloadsLocation { get; set; }
		
		/// <summary>
		/// Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public AsyncOperationStatusProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
		
		/// <summary>
		/// Holds the available configuration options for an Azure ML web service endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="realtimeConfiguration")]
		public RealtimeConfiguration RealtimeConfiguration { get; set; }
		
		/// <summary>
		/// Access information for a storage account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageAccount")]
		public StorageAccount StorageAccount { get; set; }
		
		/// <summary>
		/// Read Only: Contains the URI of the swagger spec associated with this web service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="swaggerLocation")]
		public string SwaggerLocation { get; set; }
		
		/// <summary>
		/// The title of the web service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ServiceInputOutputSpecification
	{
		
		/// <summary>
		/// The description of the Swagger schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, TableSpecification> Properties { get; set; }
		
		/// <summary>
		/// The title of your Swagger schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of the entity described in swagger. Always 'object'.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue("object")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; } = "object";
	}
	
	/// <summary>
	/// The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TableSpecification
	{
		
		/// <summary>
		/// Swagger schema description.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The format, if 'type' is not 'object'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		/// <summary>
		/// The set of columns within the data table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, ColumnSpecification> Properties { get; set; }
		
		/// <summary>
		/// Swagger schema title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of the entity described in swagger.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue("object")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; } = "object";
	}
	
	/// <summary>
	/// Access keys for the web service calls.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebServiceKeys
	{
		
		/// <summary>
		/// The primary access key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary")]
		public string Primary { get; set; }
		
		/// <summary>
		/// The secondary access key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secondary")]
		public string Secondary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum WebServicePropertiesPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Graph = 0,
	}
	
	/// <summary>
	/// Holds the available configuration options for an Azure ML web service endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RealtimeConfiguration
	{
		
		/// <summary>
		/// Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
		/// Minimum: 4
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxConcurrentCalls")]
		[System.ComponentModel.DataAnnotations.Range(4, 200)]
		public System.Nullable<System.Int32> MaxConcurrentCalls { get; set; }
	}
	
	/// <summary>
	/// Access information for a storage account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageAccount
	{
		
		/// <summary>
		/// Specifies the key used to access the storage account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Specifies the name of the storage account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Azure resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PatchedResource
	{
		
		/// <summary>
		/// Specifies the resource ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Specifies the location of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Specifies the name of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Contains resource tags defined as key/value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Specifies the type of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Instance of an Patched Azure ML web service resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PatchedWebService
	{
		
		/// <summary>
		/// The set of properties specific to the Azure ML web service resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public WebServiceProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Azure resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// Specifies the resource ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Specifies the location of the resource.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Specifies the name of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Contains resource tags defined as key/value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Specifies the type of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Properties specific to a Graph based web service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WebServicePropertiesForGraph : WebServiceProperties
	{
		
		/// <summary>
		/// Defines the graph of modules making up the machine learning solution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="package")]
		public GraphPackage Package { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists all the available REST API operations.
		/// Operations_List providers/Microsoft.MachineLearning/operations
		/// </summary>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <returns>OK.</returns>
		public async Task<OperationEntityListResult> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.MachineLearning/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OperationEntityListResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the web services in the specified subscription.
		/// WebServices_ListBySubscriptionId subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/webServices
		/// </summary>
		/// <param name="skiptoken">Continuation token for pagination.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <returns>Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service.</returns>
		public async Task<PaginatedWebServicesList> WebServices_ListBySubscriptionIdAsync(string skiptoken, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.MachineLearning/webServices?$skiptoken=" + (skiptoken==null? "" : System.Uri.EscapeDataString(skiptoken))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PaginatedWebServicesList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the web services in the specified resource group.
		/// WebServices_ListByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="skiptoken">Continuation token for pagination.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <returns>Success. The response includes a paginated array of web service objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the web service objects are sparsely populated to conserve space in the response content. To get the full web service object, call the GET operation on the web service.</returns>
		public async Task<PaginatedWebServicesList> WebServices_ListByResourceGroupAsync(string resourceGroupName, string skiptoken, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices&$skiptoken=" + (skiptoken==null? "" : System.Uri.EscapeDataString(skiptoken))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PaginatedWebServicesList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the Web Service Definition as specified by a subscription, resource group, and name. Note that the storage credentials and web service keys are not returned by this call. To get the web service access keys, call List Keys.
		/// WebServices_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="webServiceName">The name of the web service.</param>
		/// <param name="region">The region for which encrypted credential parameters are valid.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <returns>Success.  The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more informationFor more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.</returns>
		public async Task<WebService> WebServices_GetAsync(string resourceGroupName, string webServiceName, string region, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices/"+ (webServiceName==null? "" : System.Uri.EscapeDataString(webServiceName))+"&region=" + (region==null? "" : System.Uri.EscapeDataString(region))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WebService>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update a web service. This call will overwrite an existing web service. Note that there is no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new web service, call the Get operation first to verify that it does not exist.
		/// WebServices_CreateOrUpdate subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="webServiceName">The name of the web service.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <param name="requestBody">The payload that is used to create or update the web service.</param>
		/// <returns>Success. This response is returned for an update web service operation. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.</returns>
		public async Task<WebService> WebServices_CreateOrUpdateAsync(string resourceGroupName, string webServiceName, string api_version, string subscriptionId, WebService requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices/"+ (webServiceName==null? "" : System.Uri.EscapeDataString(webServiceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WebService>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified web service.
		/// WebServices_Remove subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="webServiceName">The name of the web service.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		public async Task WebServices_RemoveAsync(string resourceGroupName, string webServiceName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices/"+ (webServiceName==null? "" : System.Uri.EscapeDataString(webServiceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To determine whether it has completed successfully, you must perform a Get operation.
		/// WebServices_Patch subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="webServiceName">The name of the web service.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <param name="requestBody">The payload to use to patch the web service.</param>
		/// <returns>Success. The response payload is identical to the response payload that is returned by the GET operation. The response includes the Provisioning State and the Azure-AsyncOperation header. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.</returns>
		public async Task<WebService> WebServices_PatchAsync(string resourceGroupName, string webServiceName, string api_version, string subscriptionId, PatchedWebService requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices/"+ (webServiceName==null? "" : System.Uri.EscapeDataString(webServiceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WebService>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an encrypted credentials parameter blob for the specified region. To get the web service from a region other than the region in which it has been created, you must first call Create Regional Web Services Properties to create a copy of the encrypted credential parameter blob in that region. You only need to do this before the first time that you get the web service in the new region.
		/// WebServices_CreateRegionalProperties subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/CreateRegionalBlob
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="webServiceName">The name of the web service.</param>
		/// <param name="region">The region for which encrypted credential parameters are created.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <returns>OK. Internal use only. Used for SDK return values.</returns>
		public async Task<AsyncOperationStatus> WebServices_CreateRegionalPropertiesAsync(string resourceGroupName, string webServiceName, string region, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices/"+ (webServiceName==null? "" : System.Uri.EscapeDataString(webServiceName))+"/CreateRegionalBlob&region=" + (region==null? "" : System.Uri.EscapeDataString(region))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AsyncOperationStatus>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the access keys for the specified web service.
		/// WebServices_ListKeys subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/listKeys
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group in which the web service is located.</param>
		/// <param name="webServiceName">The name of the web service.</param>
		/// <param name="api_version">The version of the Microsoft.MachineLearning resource provider API to use.</param>
		/// <param name="subscriptionId">The Azure subscription ID.</param>
		/// <returns>Success.</returns>
		public async Task<WebServiceKeys> WebServices_ListKeysAsync(string resourceGroupName, string webServiceName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.MachineLearning/webServices/"+ (webServiceName==null? "" : System.Uri.EscapeDataString(webServiceName))+"/listKeys&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WebServiceKeys>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

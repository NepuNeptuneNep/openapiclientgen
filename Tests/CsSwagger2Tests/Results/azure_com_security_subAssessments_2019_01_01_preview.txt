//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Details of the sub-assessment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AdditionalData
	{
		
		/// <summary>
		/// Sub-assessment resource type
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assessedResourceType")]
		public AdditionalDataAssessedResourceType AssessedResourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AdditionalDataAssessedResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SqlServerVulnerability = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ContainerRegistryVulnerability = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServerVulnerability = 2,
	}
	
	/// <summary>
	/// CVE details
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CVE
	{
		
		/// <summary>
		/// Link url
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// CVE title
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// CVSS details
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CVSS
	{
		
		/// <summary>
		/// CVSS base
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="base")]
		public System.Nullable<System.Double> Base { get; set; }
	}
	
	/// <summary>
	/// Additional context fields for container registry Vulnerability assessment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ContainerRegistryVulnerabilityProperties
	{
		
		/// <summary>
		/// List of CVEs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cve")]
		public CVE[] Cve { get; set; }
		
		/// <summary>
		/// Dictionary from cvss version to cvss details object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cvss")]
		public System.Collections.Generic.Dictionary<string, CVSS> Cvss { get; set; }
		
		/// <summary>
		/// Digest of the vulnerable image
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageDigest")]
		public string ImageDigest { get; set; }
		
		/// <summary>
		/// Indicates whether a patch is available or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="patchable")]
		public System.Nullable<System.Boolean> Patchable { get; set; }
		
		/// <summary>
		/// Published time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishedTime")]
		public System.Nullable<System.DateTimeOffset> PublishedTime { get; set; }
		
		/// <summary>
		/// Name of the repository which the vulnerable image belongs to
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repositoryName")]
		public string RepositoryName { get; set; }
		
		/// <summary>
		/// Vulnerability Type. e.g: Vulnerability, Potential Vulnerability, Information Gathered, Vulnerability
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vendorReferences")]
		public VendorReference[] VendorReferences { get; set; }
	}
	
	/// <summary>
	/// Vendor reference
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VendorReference
	{
		
		/// <summary>
		/// Link url
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// Link title
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Security sub-assessment on a resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SecuritySubAssessment
	{
		
		/// <summary>
		/// Describes properties of an sub-assessment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public SecuritySubAssessmentProperties Properties { get; set; }
	}
	
	/// <summary>
	/// Describes properties of an sub-assessment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SecuritySubAssessmentProperties
	{
		
		/// <summary>
		/// Details of the sub-assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalData")]
		public AdditionalData AdditionalData { get; set; }
		
		/// <summary>
		/// Category of the sub-assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// Human readable description of the assessment status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// User friendly display name of the sub-assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Vulnerability ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Description of the impact of this sub-assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="impact")]
		public string Impact { get; set; }
		
		/// <summary>
		/// Information on how to remediate this sub-assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remediation")]
		public string Remediation { get; set; }
		
		/// <summary>
		/// Details of the resource that was assessed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceDetails")]
		public SecuritySubAssessmentPropertiesResourceDetails ResourceDetails { get; set; }
		
		/// <summary>
		/// Status of the sub-assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public SubAssessmentStatus Status { get; set; }
		
		/// <summary>
		/// The date and time the sub-assessment was generated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeGenerated")]
		public System.Nullable<System.DateTimeOffset> TimeGenerated { get; set; }
	}
	
	public class SecuritySubAssessmentPropertiesResourceDetails
	{
		
		/// <summary>
		/// The platform where the assessed resource resides
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="source")]
		public SecuritySubAssessmentPropertiesResourceDetailsSource Source { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SecuritySubAssessmentPropertiesResourceDetailsSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Azure = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnPremise = 1,
	}
	
	/// <summary>
	/// Status of the sub-assessment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SubAssessmentStatus
	{
		
		/// <summary>
		/// Programmatic code for the cause of the assessment status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cause")]
		public string Cause { get; set; }
		
		/// <summary>
		/// Programmatic code for the status of the assessment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<SubAssessmentStatusCode> Code { get; set; }
		
		/// <summary>
		/// Human readable description of the assessment status
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The sub-assessment severity level
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<SubAssessmentStatusSeverity> Severity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SubAssessmentStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Healthy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unhealthy = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotApplicable = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SubAssessmentStatusSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 2,
	}
	
	/// <summary>
	/// List of security sub-assessments
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SecuritySubAssessmentList
	{
		
		/// <summary>
		/// The URI to fetch the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public SecuritySubAssessment[] Value { get; set; }
	}
	
	/// <summary>
	/// Additional context fields for server vulnerability assessment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ServerVulnerabilityProperties
	{
		
		/// <summary>
		/// List of CVEs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cve")]
		public CVE[] Cve { get; set; }
		
		/// <summary>
		/// Dictionary from cvss version to cvss details object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cvss")]
		public System.Collections.Generic.Dictionary<string, CVSS> Cvss { get; set; }
		
		/// <summary>
		/// Indicates whether a patch is available or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="patchable")]
		public System.Nullable<System.Boolean> Patchable { get; set; }
		
		/// <summary>
		/// Published time
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publishedTime")]
		public System.Nullable<System.DateTimeOffset> PublishedTime { get; set; }
		
		/// <summary>
		/// Threat name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="threat")]
		public string Threat { get; set; }
		
		/// <summary>
		/// Vulnerability Type. e.g: Vulnerability, Potential Vulnerability, Information Gathered
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vendorReferences")]
		public VendorReference[] VendorReferences { get; set; }
	}
	
	/// <summary>
	/// Details of the resource that was assessed
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SqlServerVulnerabilityProperties
	{
		
		/// <summary>
		/// The T-SQL query that runs on your SQL database to perform the particular check
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// The resource type the sub assessment refers to in its resource details
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get security sub-assessments on all your scanned resources inside a scope
		/// SubAssessments_List {scope}/providers/Microsoft.Security/assessments/{assessmentName}/subAssessments
		/// </summary>
		/// <param name="api_version">API version for the operation</param>
		/// <param name="scope">Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).</param>
		/// <param name="assessmentName">The Assessment Key - Unique key for the assessment type</param>
		/// <returns>OK</returns>
		public async Task<SecuritySubAssessmentList> SubAssessments_ListAsync(string api_version, string scope, string assessmentName)
		{
			var requestUri = ""+ (scope==null? "" : System.Uri.EscapeDataString(scope))+"/providers/Microsoft.Security/assessments/"+ (assessmentName==null? "" : System.Uri.EscapeDataString(assessmentName))+"/subAssessments?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SecuritySubAssessmentList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a security sub-assessment on your scanned resource
		/// SubAssessments_Get {scope}/providers/Microsoft.Security/assessments/{assessmentName}/subAssessments/{subAssessmentName}
		/// </summary>
		/// <param name="api_version">API version for the operation</param>
		/// <param name="scope">Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).</param>
		/// <param name="assessmentName">The Assessment Key - Unique key for the assessment type</param>
		/// <param name="subAssessmentName">The Sub-Assessment Key - Unique key for the sub-assessment type</param>
		/// <returns>OK</returns>
		public async Task<SecuritySubAssessment> SubAssessments_GetAsync(string api_version, string scope, string assessmentName, string subAssessmentName)
		{
			var requestUri = ""+ (scope==null? "" : System.Uri.EscapeDataString(scope))+"/providers/Microsoft.Security/assessments/"+ (assessmentName==null? "" : System.Uri.EscapeDataString(assessmentName))+"/subAssessments/"+ (subAssessmentName==null? "" : System.Uri.EscapeDataString(subAssessmentName))+"?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SecuritySubAssessment>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get security sub-assessments on all your scanned resources inside a subscription scope
		/// SubAssessments_ListAll {scope}/providers/Microsoft.Security/subAssessments
		/// </summary>
		/// <param name="api_version">API version for the operation</param>
		/// <param name="scope">Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).</param>
		/// <returns>OK</returns>
		public async Task<SecuritySubAssessmentList> SubAssessments_ListAllAsync(string api_version, string scope)
		{
			var requestUri = ""+ (scope==null? "" : System.Uri.EscapeDataString(scope))+"/providers/Microsoft.Security/subAssessments?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SecuritySubAssessmentList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

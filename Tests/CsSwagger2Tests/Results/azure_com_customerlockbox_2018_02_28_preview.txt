//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Request content object, in the use of Approve or Deny a Lockbox request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Approval
	{
		
		/// <summary>
		/// Approval decision to the Lockbox request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decision")]
		public System.Nullable<ApprovalDecision> Decision { get; set; }
		
		/// <summary>
		/// Reason of the decision
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ApprovalDecision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approve = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deny = 1,
	}
	
	/// <summary>
	/// An error additional info for the Lockbox service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorAdditionalInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="info")]
		public ErrorAdditionalInfoInfo Info { get; set; }
		
		/// <summary>
		/// The type of error info.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ErrorAdditionalInfoInfo
	{
		
		/// <summary>
		/// The status of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentStatus")]
		public System.Nullable<ErrorAdditionalInfoInfoCurrentStatus> CurrentStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ErrorAdditionalInfoInfoCurrentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Initializing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approving = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Denying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approved = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Denied = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Revoking = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Revoked = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 12,
	}
	
	/// <summary>
	/// An error response body from the Lockbox service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorBody
	{
		
		/// <summary>
		/// A list of error details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalInfo")]
		public ErrorAdditionalInfo[] AdditionalInfo { get; set; }
		
		/// <summary>
		/// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// A message describing the error, intended to be suitable for display in a user interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The target of the particular error. For example, the name of the property in error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
	}
	
	/// <summary>
	/// An error response from the Lockbox service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// An error response body from the Lockbox service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ErrorBody Error { get; set; }
	}
	
	/// <summary>
	/// A Lockbox request response object, containing all information associated with the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LockboxRequestResponse
	{
		
		/// <summary>
		/// The Arm resource id of the Lockbox request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the Lockbox request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The properties that are associated with a lockbox request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public LockboxRequestResponseProperties Properties { get; set; }
		
		/// <summary>
		/// The type of the Lockbox request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The properties that are associated with a lockbox request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LockboxRequestResponseProperties
	{
		
		/// <summary>
		/// The creation time of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdDateTime")]
		public System.Nullable<System.DateTimeOffset> CreatedDateTime { get; set; }
		
		/// <summary>
		/// The duration of the request in hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		/// <summary>
		/// The expiration time of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationDateTime")]
		public System.Nullable<System.DateTimeOffset> ExpirationDateTime { get; set; }
		
		/// <summary>
		/// The justification of the requestor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="justification")]
		public string Justification { get; set; }
		
		/// <summary>
		/// The Lockbox request ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// A list of resource IDs associated with the Lockbox request separated by ','.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedResourceIds")]
		public string[] RequestedResourceIds { get; set; }
		
		/// <summary>
		/// The resource type of the requested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// The status of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ErrorAdditionalInfoInfoCurrentStatus Status { get; set; }
		
		/// <summary>
		/// The subscription ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// The url of the support case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportCaseUrl")]
		public string SupportCaseUrl { get; set; }
		
		/// <summary>
		/// The id of the support request associated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportRequest")]
		public string SupportRequest { get; set; }
	}
	
	/// <summary>
	/// The status of the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum LockboxRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Initializing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approving = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Denying = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Approved = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Denied = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expired = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Revoking = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Revoked = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Error = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completing = 12,
	}
	
	/// <summary>
	/// Operation result model for ARM RP
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// Contains the localized display information for this particular operation / action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public object Display { get; set; }
		
		/// <summary>
		/// Gets or sets a value indicating whether it is a data plane action
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDataAction")]
		public string IsDataAction { get; set; }
		
		/// <summary>
		/// Gets or sets action name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets origin
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="origin")]
		public string Origin { get; set; }
		
		/// <summary>
		/// Gets or sets properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public string Properties { get; set; }
	}
	
	/// <summary>
	/// Result of the request to list Customer Lockbox operations. It contains a list of operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationListResult
	{
		
		/// <summary>
		/// URL to get the next set of operation list results if there are any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Customer Lockbox operations supported by the Microsoft.StreamAnalytics resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// Object containing a list of streaming jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RequestListResult
	{
		
		/// <summary>
		/// URL to get the next set of operation list results if there are any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// A list of Lockbox requests. Populated by a 'List' operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public LockboxRequestResponse[] Value { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists all the available REST API operations.
		/// Operations_List providers/Microsoft.CustomerLockbox/operations
		/// </summary>
		/// <param name="api_version">The API version to be used with the HTTP request.</param>
		/// <returns>OK. Successfully retrieved operation list.</returns>
		public async Task<OperationListResult> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.CustomerLockbox/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<OperationListResult>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all of the Lockbox requests in the given subscription.
		/// Requests_List subscriptions/{subscriptionId}/providers/Microsoft.CustomerLockbox/requests
		/// </summary>
		/// <param name="filter">The $filter OData query parameter. Only filter by request status is supported, e.g $filter=properties/status eq 'Pending'</param>
		/// <param name="subscriptionId">The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)</param>
		/// <returns>Successfully listed the Lockbox requests under the given subscription.</returns>
		public async Task<RequestListResult> Requests_ListAsync(string filter, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.CustomerLockbox/requests?$filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RequestListResult>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Get Customer Lockbox request
		/// Requests_Get subscriptions/{subscriptionId}/providers/Microsoft.CustomerLockbox/requests/{requestId}
		/// </summary>
		/// <param name="requestId">The Lockbox request ID.</param>
		/// <param name="subscriptionId">The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)</param>
		/// <param name="api_version">The API version to be used with the HTTP request.</param>
		/// <returns>Retrieval of Customer Lockbox request successful.</returns>
		public async Task<LockboxRequestResponse> Requests_GetAsync(string requestId, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.CustomerLockbox/requests/"+ (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<LockboxRequestResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Update Customer Lockbox request approval status API
		/// Requests_UpdateStatus subscriptions/{subscriptionId}/providers/Microsoft.CustomerLockbox/requests/{requestId}/UpdateApproval
		/// </summary>
		/// <param name="subscriptionId">The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)</param>
		/// <param name="requestId">The Lockbox request ID.</param>
		/// <param name="api_version">The API version to be used with the HTTP request.</param>
		/// <param name="requestBody">The approval object to update request status.</param>
		/// <returns>Update of Request Status successful</returns>
		public async Task<Approval> Requests_UpdateStatusAsync(string subscriptionId, string requestId, string api_version, Approval requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.CustomerLockbox/requests/"+ (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"/UpdateApproval&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Approval>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

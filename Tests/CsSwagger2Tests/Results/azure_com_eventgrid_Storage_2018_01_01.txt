//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobCreated event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageBlobCreatedEventData
	{
		
		/// <summary>
		/// The name of the API/operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public string Api { get; set; }
		
		/// <summary>
		/// The type of blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobType")]
		public string BlobType { get; set; }
		
		/// <summary>
		/// A request id provided by the client of the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestId")]
		public string ClientRequestId { get; set; }
		
		/// <summary>
		/// The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentLength")]
		public System.Nullable<System.Int64> ContentLength { get; set; }
		
		/// <summary>
		/// The offset of the blob in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentOffset")]
		public System.Nullable<System.Int64> ContentOffset { get; set; }
		
		/// <summary>
		/// The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// The etag of the blob at the time this event was triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eTag")]
		public string ETag { get; set; }
		
		/// <summary>
		/// The identity of the requester that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The request id generated by the Storage service for the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequencer")]
		public string Sequencer { get; set; }
		
		/// <summary>
		/// For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageDiagnostics")]
		public string StorageDiagnostics { get; set; }
		
		/// <summary>
		/// The path to the blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobDeleted event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageBlobDeletedEventData
	{
		
		/// <summary>
		/// The name of the API/operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public string Api { get; set; }
		
		/// <summary>
		/// The type of blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobType")]
		public string BlobType { get; set; }
		
		/// <summary>
		/// A request id provided by the client of the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestId")]
		public string ClientRequestId { get; set; }
		
		/// <summary>
		/// The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// The identity of the requester that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The request id generated by the Storage service for the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequencer")]
		public string Sequencer { get; set; }
		
		/// <summary>
		/// For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageDiagnostics")]
		public string StorageDiagnostics { get; set; }
		
		/// <summary>
		/// The path to the blob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobRenamed event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageBlobRenamedEventData
	{
		
		/// <summary>
		/// The name of the API/operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public string Api { get; set; }
		
		/// <summary>
		/// A request id provided by the client of the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestId")]
		public string ClientRequestId { get; set; }
		
		/// <summary>
		/// The new path to the blob after the rename operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationUrl")]
		public string DestinationUrl { get; set; }
		
		/// <summary>
		/// The identity of the requester that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The request id generated by the storage service for the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequencer")]
		public string Sequencer { get; set; }
		
		/// <summary>
		/// The path to the blob that was renamed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceUrl")]
		public string SourceUrl { get; set; }
		
		/// <summary>
		/// For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageDiagnostics")]
		public string StorageDiagnostics { get; set; }
	}
	
	/// <summary>
	/// Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryCreated event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageDirectoryCreatedEventData
	{
		
		/// <summary>
		/// The name of the API/operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public string Api { get; set; }
		
		/// <summary>
		/// A request id provided by the client of the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestId")]
		public string ClientRequestId { get; set; }
		
		/// <summary>
		/// The etag of the directory at the time this event was triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eTag")]
		public string ETag { get; set; }
		
		/// <summary>
		/// The identity of the requester that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The request id generated by the storage service for the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequencer")]
		public string Sequencer { get; set; }
		
		/// <summary>
		/// For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageDiagnostics")]
		public string StorageDiagnostics { get; set; }
		
		/// <summary>
		/// The path to the directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryDeleted event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageDirectoryDeletedEventData
	{
		
		/// <summary>
		/// The name of the API/operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public string Api { get; set; }
		
		/// <summary>
		/// A request id provided by the client of the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestId")]
		public string ClientRequestId { get; set; }
		
		/// <summary>
		/// The identity of the requester that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// Is this event for a recursive delete operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recursive")]
		public System.Nullable<System.Boolean> Recursive { get; set; }
		
		/// <summary>
		/// The request id generated by the storage service for the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequencer")]
		public string Sequencer { get; set; }
		
		/// <summary>
		/// For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageDiagnostics")]
		public string StorageDiagnostics { get; set; }
		
		/// <summary>
		/// The path to the deleted directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Schema of the Data property of an EventGridEvent for an Microsoft.Storage.DirectoryRenamed event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StorageDirectoryRenamedEventData
	{
		
		/// <summary>
		/// The name of the API/operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public string Api { get; set; }
		
		/// <summary>
		/// A request id provided by the client of the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientRequestId")]
		public string ClientRequestId { get; set; }
		
		/// <summary>
		/// The new path to the directory after the rename operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationUrl")]
		public string DestinationUrl { get; set; }
		
		/// <summary>
		/// The identity of the requester that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public string Identity { get; set; }
		
		/// <summary>
		/// The request id generated by the storage service for the storage API operation that triggered this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestId")]
		public string RequestId { get; set; }
		
		/// <summary>
		/// An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sequencer")]
		public string Sequencer { get; set; }
		
		/// <summary>
		/// The path to the directory that was renamed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceUrl")]
		public string SourceUrl { get; set; }
		
		/// <summary>
		/// For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageDiagnostics")]
		public string StorageDiagnostics { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The details of the error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorDetails
	{
		
		/// <summary>
		/// One of a server-defined set of error codes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// A human-readable representation of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// (Optional) The target of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
	}
	
	/// <summary>
	/// The error object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// The details of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ErrorDetails Error { get; set; }
	}
	
	/// <summary>
	/// The management group details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroup
	{
		
		/// <summary>
		/// The ID of the management group. E.g. /providers/Microsoft.Management/managementGroups/20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the management group. E.g. 20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The generic properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ManagementGroupProperties Properties { get; set; }
		
		/// <summary>
		/// The type of the resource. E.g. /providers/Microsoft.Management/managementGroups
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The generic properties of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupProperties
	{
		
		/// <summary>
		/// The details properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ManagementGroupDetailsProperties Details { get; set; }
		
		/// <summary>
		/// The friendly name of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The AAD Tenant ID associated with the management group. E.g. 10000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// The details properties of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupDetailsProperties
	{
		
		/// <summary>
		/// (Optional) The type of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managementGroupType")]
		public System.Nullable<ManagementGroupDetailsPropertiesManagementGroupType> ManagementGroupType { get; set; }
		
		/// <summary>
		/// (Optional) The ID of the parent management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public ParentGroupInfo Parent { get; set; }
		
		/// <summary>
		/// The identity of the principal or process that updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedBy")]
		public string UpdatedBy { get; set; }
		
		/// <summary>
		/// The date and time when this object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updatedTime")]
		public System.Nullable<System.DateTimeOffset> UpdatedTime { get; set; }
		
		/// <summary>
		/// The version number of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ManagementGroupDetailsPropertiesManagementGroupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enrollment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Department = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Account = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Subscription = 3,
	}
	
	/// <summary>
	/// The unique identifier (ID) of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupChildInfo
	{
		
		/// <summary>
		/// The ID of the child resource (management group or subscription). E.g. /providers/Microsoft.Management/managementGroups/40000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childId")]
		public string ChildId { get; set; }
		
		/// <summary>
		/// (Optional) The type of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childType")]
		public ManagementGroupDetailsPropertiesManagementGroupType ChildType { get; set; }
		
		/// <summary>
		/// The friendly name of the child resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// (Optional) The AAD Tenant ID associated with the child resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// The management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupInfo
	{
		
		/// <summary>
		/// The ID of the management group. E.g. /providers/Microsoft.Management/managementGroups/20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the management group. E.g. 20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The generic properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ManagementGroupInfoProperties Properties { get; set; }
		
		/// <summary>
		/// The type of the resource. E.g. /providers/Microsoft.Management/managementGroups
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The generic properties of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupInfoProperties
	{
		
		/// <summary>
		/// The friendly name of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The AAD Tenant ID associated with the management group. E.g. 10000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// The result of listing management groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupListResult
	{
		
		/// <summary>
		/// The URL to the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// The list of management groups.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ManagementGroupInfo[] Value { get; set; }
	}
	
	/// <summary>
	/// The generic properties of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupPropertiesWithChildren
	{
		
		/// <summary>
		/// The list of children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="children")]
		public ManagementGroupChildInfo[] Children { get; set; }
		
		/// <summary>
		/// The details properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ManagementGroupDetailsProperties Details { get; set; }
		
		/// <summary>
		/// The friendly name of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The AAD Tenant ID associated with the management group. E.g. 10000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// The generic properties of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupPropertiesWithHierarchy
	{
		
		/// <summary>
		/// The list of children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="children")]
		public ManagementGroupRecursiveChildInfo[] Children { get; set; }
		
		/// <summary>
		/// The details properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ManagementGroupDetailsProperties Details { get; set; }
		
		/// <summary>
		/// The friendly name of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The AAD Tenant ID associated with the management group. E.g. 10000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// The unique identifier (ID) of a management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupRecursiveChildInfo
	{
		
		/// <summary>
		/// The ID of the child resource (management group or subscription). E.g. /providers/Microsoft.Management/managementGroups/40000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childId")]
		public string ChildId { get; set; }
		
		/// <summary>
		/// (Optional) The type of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childType")]
		public ManagementGroupDetailsPropertiesManagementGroupType ChildType { get; set; }
		
		/// <summary>
		/// The list of children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="children")]
		public ManagementGroupRecursiveChildInfo[] Children { get; set; }
		
		/// <summary>
		/// The friendly name of the child resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// (Optional) The AAD Tenant ID associated with the child resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
	}
	
	/// <summary>
	/// (Optional) The type of the management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ManagementGroupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enrollment = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Department = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Account = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Subscription = 3,
	}
	
	/// <summary>
	/// The management group details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupWithChildren
	{
		
		/// <summary>
		/// The ID of the management group. E.g. /providers/Microsoft.Management/managementGroups/20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the management group. E.g. 20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The generic properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ManagementGroupPropertiesWithChildren Properties { get; set; }
		
		/// <summary>
		/// The type of the resource. E.g. /providers/Microsoft.Management/managementGroups
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// The management group details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ManagementGroupWithHierarchy
	{
		
		/// <summary>
		/// The ID of the management group. E.g. /providers/Microsoft.Management/managementGroups/20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the management group. E.g. 20000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The generic properties of a management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public ManagementGroupPropertiesWithHierarchy Properties { get; set; }
		
		/// <summary>
		/// The type of the resource. E.g. /providers/Microsoft.Management/managementGroups
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A Management REST API operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// The object that represents the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public object Display { get; set; }
		
		/// <summary>
		/// Operation name: {provider}/{resource}/{operation}.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Result listing  operations. It contains a list of operations and a URL link to get the next set of results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationListResult
	{
		
		/// <summary>
		/// URL to get the next set of operation list results if there are any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of management operations supported by the Microsoft.Management resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// (Optional) The ID of the parent management group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ParentGroupInfo
	{
		
		/// <summary>
		/// The friendly name of the management group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The ID of the parent management group. E.g. /providers/Microsoft.Management/managementGroups/30000000-0000-0000-0000-000000000000
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentId")]
		public string ParentId { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List management groups for the authenticated user.
		/// 
		/// ManagementGroups_List providers/Microsoft.Management/managementGroups
		/// </summary>
		/// <param name="api_version">Version of the API to be used with the client request. The current version is 2017-08-31-preview.</param>
		/// <param name="skiptoken">Page continuation token is only used if a previous operation returned a partial result. 
		///If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
		///</param>
		/// <returns>OK</returns>
		public async Task<ManagementGroupListResult> ManagementGroups_ListAsync(string api_version, string skiptoken)
		{
			var requestUri = "providers/Microsoft.Management/managementGroups?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version))+"&$skiptoken=" + (skiptoken==null? "" : System.Uri.EscapeDataString(skiptoken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ManagementGroupListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the details of the management group.
		/// 
		/// ManagementGroups_Get providers/Microsoft.Management/managementGroups/{groupId}
		/// </summary>
		/// <param name="groupId">Management Group ID.</param>
		/// <param name="api_version">Version of the API to be used with the client request. The current version is 2017-08-31-preview.</param>
		/// <param name="expand">The $expand=children query string parameter allows clients to request inclusion of children in the response payload.</param>
		/// <param name="recurse">The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload.</param>
		/// <returns>OK</returns>
		public async Task<ManagementGroupWithHierarchy> ManagementGroups_GetAsync(string groupId, string api_version, ManagementGroups_GetExpand expand, bool recurse)
		{
			var requestUri = "providers/Microsoft.Management/managementGroups/"+ (groupId==null? "" : System.Uri.EscapeDataString(groupId))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version))+"&$expand=" + expand+"&$recurse="+recurse;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ManagementGroupWithHierarchy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all of the available management REST API operations.
		/// Operations_List providers/Microsoft.Management/operations
		/// </summary>
		/// <param name="api_version">Version of the API to be used with the client request. The current version is 2017-08-31-preview.</param>
		/// <returns>OK. The request has succeeded.</returns>
		public async Task<OperationListResult> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.Management/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<OperationListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum ManagementGroups_GetExpand
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		children = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

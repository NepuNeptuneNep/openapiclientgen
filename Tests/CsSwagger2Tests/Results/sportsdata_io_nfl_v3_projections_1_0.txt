//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DfsSlate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DfsSlateGame[] DfsSlateGames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DfsSlatePlayer[] DfsSlatePlayers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsMultiDaySlate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfGames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Operator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorDay { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorGameType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OperatorSlateID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemovedByOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SalaryCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SlateRosterSlots { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DfsSlateGame
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Game { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OperatorGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RemovedByOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScoreID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DfsSlatePlayer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FantasyDefenseProjectionStatID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorPlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorPlayerName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OperatorRosterSlots { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OperatorSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperatorSlatePlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerGameProjectionStatID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlateID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SlatePlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FantasyDefenseGameProjection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKicks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Day { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DefensiveTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DraftKingsPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DraftKingsSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsWideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FanDuelPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FanDuelSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelWideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FantasyDataSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FantasyDefenseID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FantasyDraftPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FantasyDraftSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftWideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsDraftKings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFanDuel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFantasyDraft { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsYahoo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FourthDownAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FourthDownConversions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GameKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalOpponentID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalTeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomeOrAway { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Humidity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Interceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsGameOver { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OffensiveYardsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Opponent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentPositionRank { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentRank { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassesDefended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PointsAllowedByDefenseSpecialTeams { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuarterbackHits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SackYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Sacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Safeties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScoreID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScoringDetail[] ScoringDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Stadium { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TacklesForLoss { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Temperature { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThirdDownAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThirdDownConversions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TouchdownsScored { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VictivSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Week { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> WideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WindSpeed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string YahooPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> YahooSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooWideReceiverFantasyPointsAllowed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ScoringDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string GameKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Length { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScoreID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScoringDetailID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ScoringType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Week { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class FantasyDefenseSeasonProjection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AuctionValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AuctionValuePPR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPosition2QB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPositionDynasty { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPositionPPR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKicks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DefensiveTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DraftKingsWideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FanDuelWideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyDraftWideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsDraftKings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFanDuel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFantasyDraft { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsYahoo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FourthDownAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FourthDownConversions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Games { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalTeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Humidity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Interceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OffensiveYardsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassesDefended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PointsAllowedByDefenseSpecialTeams { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuarterbackHits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SackYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Sacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Safeties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScoringDetail[] ScoringDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TacklesForLoss { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Temperature { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThirdDownAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThirdDownConversions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TouchdownsScored { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> WideReceiverFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WindSpeed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooKickerFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooQuarterbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooRunningbackFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooTightEndFantasyPointsAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> YahooWideReceiverFantasyPointsAllowed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PlayerGameProjection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Activated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKicks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Day { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeclaredInactive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefensiveSnapsPlayed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefensiveTeamSnaps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DefensiveTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DraftKingsPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DraftKingsSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ExtraPointsAttempted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ExtraPointsHadBlocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ExtraPointsMade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FanDuelPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FanDuelSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FantasyDataSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FantasyDraftPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FantasyDraftSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsDraftKings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFanDuel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFantasyDraft { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsPPR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsYahoo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FantasyPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsAttempted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsHadBlocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsLongestMade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade0to19 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade20to29 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade30to39 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade40to49 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade50Plus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Fumbles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesLost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesOutOfBounds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesOwnRecoveries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GameDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GameKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalOpponentID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalTeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomeOrAway { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Humidity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InjuryBodyPart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InjuryNotes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InjuryPractice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InjuryPracticeDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InjuryStartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InjuryStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Interceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsGameOver { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnFairCatches { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscAssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscFumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscFumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscSoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Number { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OffensiveFumbleRecoveryTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OffensiveSnapsPlayed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OffensiveTeamSnaps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OffensiveTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Opponent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentPositionRank { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpponentRank { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassesDefended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingCompletionPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingCompletions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingInterceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingRating { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingSackYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingSacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingYardsPerCompletion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Played { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PlayingSurface { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Position { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PositionCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntAverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntInside20 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntNetAverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntNetYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnFairCatches { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntTouchbacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Punts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntsHadBlocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuarterbackHits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingYardsPerReception { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingYardsPerTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceptionPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Receptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SackYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Sacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Safeties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SafetiesAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScoreID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScoringDetail[] ScoringDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ShortName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsAssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsFumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsFumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpecialTeamsSnapsPlayed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsSoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpecialTeamsTeamSnaps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Stadium { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Started { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Tackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TacklesForLoss { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Temperature { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Touchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionPasses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionReceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionRuns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VictivSalary { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Week { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WindSpeed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string YahooPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> YahooSalary { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class PlayerSeasonProjection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Activated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AuctionValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AuctionValuePPR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPosition2QB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPositionDynasty { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPositionPPR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AverageDraftPositionRookie { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BlockedKicks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefensiveSnapsPlayed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DefensiveTeamSnaps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DefensiveTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ExtraPointsAttempted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ExtraPointsHadBlocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ExtraPointsMade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsDraftKings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFanDuel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsFantasyDraft { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsPPR { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FantasyPointsYahoo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FantasyPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsAttempted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsHadBlocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsLongestMade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade0to19 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade20to29 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade30to39 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade40to49 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FieldGoalsMade50Plus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumbleReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Fumbles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesLost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesOutOfBounds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesOwnRecoveries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalTeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Humidity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InterceptionReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Interceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnFairCatches { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturnYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> KickReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscAssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscFumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscFumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MiscSoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Number { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OffensiveSnapsPlayed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OffensiveTeamSnaps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OffensiveTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassesDefended { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingCompletionPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingCompletions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingInterceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingRating { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingSackYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingSacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PassingYardsPerCompletion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Played { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PlayerSeasonID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Position { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PositionCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntAverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntInside20 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntNetAverage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntNetYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnFairCatches { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturnYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntTouchbacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Punts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PuntsHadBlocked { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> QuarterbackHits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingTargets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingYardsPerReception { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceivingYardsPerTarget { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReceptionPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Receptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RushingYardsPerAttempt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SackYards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Sacks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Safeties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SafetiesAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScoringDetail[] ScoringDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ShortName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsAssistedTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsFumblesForced { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsFumblesRecovered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpecialTeamsSnapsPlayed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsSoloTackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpecialTeamsTeamSnaps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpecialTeamsTouchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Started { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Tackles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TacklesForLoss { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Team { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Temperature { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Touchdowns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionPasses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionReceptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionReturns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TwoPointConversionRuns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WindSpeed { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Schedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AwayTeam { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AwayTeamMoneyLine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Canceled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Channel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Day { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ForecastDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ForecastTempHigh { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ForecastTempLow { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ForecastWindChill { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ForecastWindSpeed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string GameKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> GeoLat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> GeoLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalAwayTeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalGameID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> GlobalHomeTeamID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HomeTeam { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HomeTeamMoneyLine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> OverUnder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> PointSpread { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ScoreID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Season { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SeasonType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Stadium StadiumDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StadiumID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Week { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Stadium
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string City { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Country { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> GeoLat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> GeoLong { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PlayingSurface { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StadiumID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// DFS Slates by Date
		/// DfsSlatesByDate {format}/DfsSlatesByDate/{date}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="date">The date of the slates.
		///<br>Examples: <code>2017-SEP-25</code>, <code>2017-10-31</code>.</param>
		public async Task<DfsSlate[]> DfsSlatesByDateAsync(DfsSlatesByDateFormat format, string date)
		{
			var requestUri = ""+format+"/DfsSlatesByDate/"+ (date==null? "" : System.Uri.EscapeDataString(date));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DfsSlate[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// DFS Slates by Week
		/// DfsSlatesByWeek {format}/DfsSlatesByWeek/{season}/{week}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code></param>
		/// <param name="week">Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code></param>
		public async Task<DfsSlate[]> DfsSlatesByWeekAsync(DfsSlatesByDateFormat format, string season, string week)
		{
			var requestUri = ""+format+"/DfsSlatesByWeek/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DfsSlate[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Fantasy Defense Game Stats (w/ DFS Salaries)
		/// ProjectedFantasyDefenseGameStatsWDfsSalaries {format}/FantasyDefenseProjectionsByGame/{season}/{week}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		public async Task<FantasyDefenseGameProjection[]> ProjectedFantasyDefenseGameStatsWDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week)
		{
			var requestUri = ""+format+"/FantasyDefenseProjectionsByGame/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<FantasyDefenseGameProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Fantasy Defense Season Stats (w/ Bye Week, ADP)
		/// ProjectedFantasyDefenseSeasonStatsWByeWeekAdp {format}/FantasyDefenseProjectionsBySeason/{season}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		public async Task<FantasyDefenseSeasonProjection[]> ProjectedFantasyDefenseSeasonStatsWByeWeekAdpAsync(DfsSlatesByDateFormat format, string season)
		{
			var requestUri = ""+format+"/FantasyDefenseProjectionsBySeason/"+ (season==null? "" : System.Uri.EscapeDataString(season));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<FantasyDefenseSeasonProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// IDP Projected Player Game Stats by Player (w/ Injuries, Lineups, DFS Salaries)
		/// IdpProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalaries {format}/IdpPlayerGameProjectionStatsByPlayerID/{season}/{week}/{playerid}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		/// <param name="playerid">Each NFL player has a unique ID assigned by FantasyData. Player IDs can be determined by pulling player related data. Example:<code>14257</code>.</param>
		public async Task<PlayerGameProjection> IdpProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week, string playerid)
		{
			var requestUri = ""+format+"/IdpPlayerGameProjectionStatsByPlayerID/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week))+"/"+ (playerid==null? "" : System.Uri.EscapeDataString(playerid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// IDP Projected Player Game Stats by Team (w/ Injuries, Lineups, DFS Salaries)
		/// IdpProjectedPlayerGameStatsByTeamWInjuriesLineupsDfsSalaries {format}/IdpPlayerGameProjectionStatsByTeam/{season}/{week}/{team}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		/// <param name="team">Abbreviation of the team. Example: <code>WAS</code>.</param>
		public async Task<PlayerGameProjection[]> IdpProjectedPlayerGameStatsByTeamWInjuriesLineupsDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week, string team)
		{
			var requestUri = ""+format+"/IdpPlayerGameProjectionStatsByTeam/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week))+"/"+ (team==null? "" : System.Uri.EscapeDataString(team));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// IDP Projected Player Game Stats by Week (w/ Injuries, Lineups, DFS Salaries)
		/// IdpProjectedPlayerGameStatsByWeekWInjuriesLineupsDfsSalaries {format}/IdpPlayerGameProjectionStatsByWeek/{season}/{week}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		public async Task<PlayerGameProjection[]> IdpProjectedPlayerGameStatsByWeekWInjuriesLineupsDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week)
		{
			var requestUri = ""+format+"/IdpPlayerGameProjectionStatsByWeek/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Player Game Stats by Player (w/ Injuries, Lineups, DFS Salaries)
		/// ProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalaries {format}/PlayerGameProjectionStatsByPlayerID/{season}/{week}/{playerid}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">
		///          Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		/// <param name="playerid">Each NFL player has a unique ID assigned by FantasyData. Player IDs can be determined by pulling player related data. Example:<code>14257</code>.</param>
		public async Task<PlayerGameProjection> ProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week, string playerid)
		{
			var requestUri = ""+format+"/PlayerGameProjectionStatsByPlayerID/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week))+"/"+ (playerid==null? "" : System.Uri.EscapeDataString(playerid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Player Game Stats by Team (w/ Injuries, Lineups, DFS Salaries)
		/// ProjectedPlayerGameStatsByTeamWInjuriesLineupsDfsSalaries {format}/PlayerGameProjectionStatsByTeam/{season}/{week}/{team}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		/// <param name="team">Abbreviation of the team. Example: <code>WAS</code>.</param>
		public async Task<PlayerGameProjection[]> ProjectedPlayerGameStatsByTeamWInjuriesLineupsDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week, string team)
		{
			var requestUri = ""+format+"/PlayerGameProjectionStatsByTeam/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week))+"/"+ (team==null? "" : System.Uri.EscapeDataString(team));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Player Game Stats by Week (w/ Injuries, Lineups, DFS Salaries)
		/// ProjectedPlayerGameStatsByWeekWInjuriesLineupsDfsSalaries {format}/PlayerGameProjectionStatsByWeek/{season}/{week}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="week">
		///          Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
		///          Example: <code>1</code>
		///        </param>
		public async Task<PlayerGameProjection[]> ProjectedPlayerGameStatsByWeekWInjuriesLineupsDfsSalariesAsync(DfsSlatesByDateFormat format, string season, string week)
		{
			var requestUri = ""+format+"/PlayerGameProjectionStatsByWeek/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (week==null? "" : System.Uri.EscapeDataString(week));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerGameProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Player Season Stats (w/ Bye Week, ADP)
		/// ProjectedPlayerSeasonStatsWByeWeekAdp {format}/PlayerSeasonProjectionStats/{season}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		public async Task<PlayerSeasonProjection[]> ProjectedPlayerSeasonStatsWByeWeekAdpAsync(DfsSlatesByDateFormat format, string season)
		{
			var requestUri = ""+format+"/PlayerSeasonProjectionStats/"+ (season==null? "" : System.Uri.EscapeDataString(season));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerSeasonProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Player Season Stats by Player (w/ Bye Week, ADP)
		/// ProjectedPlayerSeasonStatsByPlayerWByeWeekAdp {format}/PlayerSeasonProjectionStatsByPlayerID/{season}/{playerid}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="playerid">Each NFL player has a unique ID assigned by FantasyData. Player IDs can be determined by pulling player related data. Example:<code>14257</code>.</param>
		public async Task<PlayerSeasonProjection> ProjectedPlayerSeasonStatsByPlayerWByeWeekAdpAsync(DfsSlatesByDateFormat format, string season, string playerid)
		{
			var requestUri = ""+format+"/PlayerSeasonProjectionStatsByPlayerID/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (playerid==null? "" : System.Uri.EscapeDataString(playerid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerSeasonProjection>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Projected Player Season Stats by Team (w/ Bye Week, ADP)
		/// ProjectedPlayerSeasonStatsByTeamWByeWeekAdp {format}/PlayerSeasonProjectionStatsByTeam/{season}/{team}
		/// </summary>
		/// <param name="format">Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.</param>
		/// <param name="season">Year of the season and the season type. If no season type is provided, then the default is regular season.
		///          <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
		///        </param>
		/// <param name="team">Abbreviation of the team. Example: <code>WAS</code>.</param>
		public async Task<PlayerSeasonProjection[]> ProjectedPlayerSeasonStatsByTeamWByeWeekAdpAsync(DfsSlatesByDateFormat format, string season, string team)
		{
			var requestUri = ""+format+"/PlayerSeasonProjectionStatsByTeam/"+ (season==null? "" : System.Uri.EscapeDataString(season))+"/"+ (team==null? "" : System.Uri.EscapeDataString(team));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PlayerSeasonProjection[]>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public enum DfsSlatesByDateFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XML = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

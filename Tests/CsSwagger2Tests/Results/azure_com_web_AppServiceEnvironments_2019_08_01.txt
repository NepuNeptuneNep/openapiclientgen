//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Describes main public IP address and any extra virtual IPs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AddressResponse
	{
		
		/// <summary>
		/// AddressResponse resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	/// <summary>
	/// Collection of App Service Environments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AppServiceEnvironmentCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironmentResource[] Value { get; set; }
	}
	
	/// <summary>
	/// App Service Environment ARM resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AppServiceEnvironmentResource
	{
		
		/// <summary>
		/// Description of an App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public AppServiceEnvironmentResourceProperties Properties { get; set; }
	}
	
	public class AppServiceEnvironmentResourceProperties
	{
		
		/// <summary>
		/// List of comma separated strings describing which VM sizes are allowed for front-ends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedMultiSizes")]
		public string AllowedMultiSizes { get; set; }
		
		/// <summary>
		/// List of comma separated strings describing which VM sizes are allowed for workers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedWorkerSizes")]
		public string AllowedWorkerSizes { get; set; }
		
		/// <summary>
		/// API Management Account associated with the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiManagementAccountId")]
		public string ApiManagementAccountId { get; set; }
		
		/// <summary>
		/// Custom settings for changing the behavior of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterSettings")]
		public AppServiceEnvironmentResourcePropertiesClusterSettings[] AppServiceEnvironmentResourcePropertiesClusterSettings { get; set; }
		
		/// <summary>
		/// Edition of the metadata database for the App Service Environment, e.g. "Standard".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseEdition")]
		public string DatabaseEdition { get; set; }
		
		/// <summary>
		/// Service objective of the metadata database for the App Service Environment, e.g. "S0".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseServiceObjective")]
		public string DatabaseServiceObjective { get; set; }
		
		/// <summary>
		/// Default Scale Factor for FrontEnds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultFrontEndScaleFactor")]
		public System.Nullable<System.Int32> DefaultFrontEndScaleFactor { get; set; }
		
		/// <summary>
		/// DNS suffix of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dnsSuffix")]
		public string DnsSuffix { get; set; }
		
		/// <summary>
		/// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
		///(most likely because NSG blocked the incoming traffic).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamicCacheEnabled")]
		public System.Nullable<System.Boolean> DynamicCacheEnabled { get; set; }
		
		/// <summary>
		/// Current total, used, and available worker capacities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentCapacities")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacities[] AppServiceEnvironmentResourcePropertiesEnvironmentCapacities { get; set; }
		
		/// <summary>
		/// True/false indicating whether the App Service Environment is healthy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentIsHealthy")]
		public System.Nullable<System.Boolean> EnvironmentIsHealthy { get; set; }
		
		/// <summary>
		/// Detailed message about with results of the last check of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentStatus")]
		public string EnvironmentStatus { get; set; }
		
		/// <summary>
		/// Scale factor for front-ends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndScaleFactor")]
		public System.Nullable<System.Int32> FrontEndScaleFactor { get; set; }
		
		/// <summary>
		/// Flag that displays whether an ASE has linux workers or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasLinuxWorkers")]
		public System.Nullable<System.Boolean> HasLinuxWorkers { get; set; }
		
		/// <summary>
		/// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalLoadBalancingMode")]
		public System.Nullable<AppServiceEnvironmentResourcePropertiesInternalLoadBalancingMode> InternalLoadBalancingMode { get; set; }
		
		/// <summary>
		/// Number of IP SSL addresses reserved for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipsslAddressCount")]
		public System.Nullable<System.Int32> IpsslAddressCount { get; set; }
		
		/// <summary>
		/// Last deployment action on the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastAction")]
		public string LastAction { get; set; }
		
		/// <summary>
		/// Result of the last deployment action on the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastActionResult")]
		public string LastActionResult { get; set; }
		
		/// <summary>
		/// Location of the App Service Environment, e.g. "West US".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Maximum number of VMs in the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximumNumberOfMachines")]
		public System.Nullable<System.Int32> MaximumNumberOfMachines { get; set; }
		
		/// <summary>
		/// Number of front-end instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiRoleCount")]
		public System.Nullable<System.Int32> MultiRoleCount { get; set; }
		
		/// <summary>
		/// Front-end VM size, e.g. "Medium", "Large".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiSize")]
		public string MultiSize { get; set; }
		
		/// <summary>
		/// Name of the App Service Environment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Access control list for controlling traffic to the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkAccessControlList")]
		public AppServiceEnvironmentResourcePropertiesNetworkAccessControlList[] AppServiceEnvironmentResourcePropertiesNetworkAccessControlList { get; set; }
		
		/// <summary>
		/// Provisioning state of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public System.Nullable<AppServiceEnvironmentResourcePropertiesProvisioningState> ProvisioningState { get; set; }
		
		/// <summary>
		/// Resource group of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceGroup")]
		public string ResourceGroup { get; set; }
		
		/// <summary>
		/// Key Vault ID for ILB App Service Environment default SSL certificate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sslCertKeyVaultId")]
		public string SslCertKeyVaultId { get; set; }
		
		/// <summary>
		/// Key Vault Secret Name for ILB App Service Environment default SSL certificate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sslCertKeyVaultSecretName")]
		public string SslCertKeyVaultSecretName { get; set; }
		
		/// <summary>
		/// Current status of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<AppServiceEnvironmentResourcePropertiesStatus> Status { get; set; }
		
		/// <summary>
		/// Subscription of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
		/// (most likely because NSG blocked the incoming traffic).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspended")]
		public System.Nullable<System.Boolean> Suspended { get; set; }
		
		/// <summary>
		/// Number of upgrade domains of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upgradeDomains")]
		public System.Nullable<System.Int32> UpgradeDomains { get; set; }
		
		/// <summary>
		/// User added ip ranges to whitelist on ASE db
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userWhitelistedIpRanges")]
		public string[] UserWhitelistedIpRanges { get; set; }
		
		/// <summary>
		/// Description of IP SSL mapping for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vipMappings")]
		public AppServiceEnvironmentResourcePropertiesVipMappings[] AppServiceEnvironmentResourcePropertiesVipMappings { get; set; }
		
		/// <summary>
		/// Specification for using a Virtual Network.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="virtualNetwork")]
		public AppServiceEnvironmentResourcePropertiesVirtualNetwork VirtualNetwork { get; set; }
		
		/// <summary>
		/// Name of the Virtual Network for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetName")]
		public string VnetName { get; set; }
		
		/// <summary>
		/// Resource group of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetResourceGroupName")]
		public string VnetResourceGroupName { get; set; }
		
		/// <summary>
		/// Subnet of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetSubnetName")]
		public string VnetSubnetName { get; set; }
		
		/// <summary>
		/// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workerPools")]
		public AppServiceEnvironmentResourcePropertiesWorkerPools[] AppServiceEnvironmentResourcePropertiesWorkerPools { get; set; }
	}
	
	public class AppServiceEnvironmentResourcePropertiesClusterSettings
	{
		
		/// <summary>
		/// Pair name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Pair value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class AppServiceEnvironmentResourcePropertiesEnvironmentCapacities
	{
		
		/// <summary>
		/// Available capacity (# of machines, bytes of storage etc...).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableCapacity")]
		public System.Nullable<System.Int64> AvailableCapacity { get; set; }
		
		/// <summary>
		/// Shared/dedicated workers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeMode")]
		public System.Nullable<AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode> ComputeMode { get; set; }
		
		/// <summary>
		/// If <code>true</code>, it includes basic apps.
		///Basic apps are not used for capacity allocation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeFromCapacityAllocation")]
		public System.Nullable<System.Boolean> ExcludeFromCapacityAllocation { get; set; }
		
		/// <summary>
		/// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isApplicableForAllComputeModes")]
		public System.Nullable<System.Boolean> IsApplicableForAllComputeModes { get; set; }
		
		/// <summary>
		/// Is this a linux stamp capacity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isLinux")]
		public System.Nullable<System.Boolean> IsLinux { get; set; }
		
		/// <summary>
		/// Name of the stamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Shared or Dedicated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteMode")]
		public string SiteMode { get; set; }
		
		/// <summary>
		/// Total capacity (# of machines, bytes of storage etc...).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCapacity")]
		public System.Nullable<System.Int64> TotalCapacity { get; set; }
		
		/// <summary>
		/// Name of the unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// Size of the machines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSize")]
		public System.Nullable<AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesWorkerSize> WorkerSize { get; set; }
		
		/// <summary>
		/// Size ID of machines: 
		///0 - Small
		///1 - Medium
		///2 - Large
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSizeId")]
		public System.Nullable<System.Int32> WorkerSizeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Shared = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dedicated = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dynamic = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesWorkerSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Small = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Large = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		D1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		D2 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		D3 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NestedSmall = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Default = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironmentResourcePropertiesInternalLoadBalancingMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Web = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Publishing = 2,
	}
	
	public class AppServiceEnvironmentResourcePropertiesNetworkAccessControlList
	{
		
		/// <summary>
		/// Action object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public System.Nullable<AppServiceEnvironmentResourcePropertiesNetworkAccessControlListAction> Action { get; set; }
		
		/// <summary>
		/// Description of network access control entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Order of precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		/// <summary>
		/// Remote subnet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remoteSubnet")]
		public string RemoteSubnet { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironmentResourcePropertiesNetworkAccessControlListAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Permit = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deny = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironmentResourcePropertiesProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironmentResourcePropertiesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Preparing = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scaling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 3,
	}
	
	public class AppServiceEnvironmentResourcePropertiesVipMappings
	{
		
		/// <summary>
		/// Is virtual IP mapping in use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inUse")]
		public System.Nullable<System.Boolean> InUse { get; set; }
		
		/// <summary>
		/// Internal HTTP port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalHttpPort")]
		public System.Nullable<System.Int32> InternalHttpPort { get; set; }
		
		/// <summary>
		/// Internal HTTPS port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalHttpsPort")]
		public System.Nullable<System.Int32> InternalHttpsPort { get; set; }
		
		/// <summary>
		/// name of the service that virtual IP is assigned to
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceName")]
		public string ServiceName { get; set; }
		
		/// <summary>
		/// Virtual IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualIP")]
		public string VirtualIP { get; set; }
	}
	
	public class AppServiceEnvironmentResourcePropertiesVirtualNetwork
	{
		
		/// <summary>
		/// Resource id of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the Virtual Network (read-only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Subnet within the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnet")]
		public string Subnet { get; set; }
		
		/// <summary>
		/// Resource type of the Virtual Network (read-only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class AppServiceEnvironmentResourcePropertiesWorkerPools
	{
		
		/// <summary>
		/// Shared or dedicated app hosting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeMode")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode ComputeMode { get; set; }
		
		/// <summary>
		/// Names of all instances in the worker pool (read only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceNames")]
		public string[] InstanceNames { get; set; }
		
		/// <summary>
		/// Number of instances in the worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public System.Nullable<System.Int32> WorkerCount { get; set; }
		
		/// <summary>
		/// VM size of the worker pool instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSize")]
		public string WorkerSize { get; set; }
		
		/// <summary>
		/// Worker size ID for referencing this worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSizeId")]
		public System.Nullable<System.Int32> WorkerSizeId { get; set; }
	}
	
	/// <summary>
	/// ARM resource for a app service environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class AppServiceEnvironmentPatchResource
	{
		
		/// <summary>
		/// Description of an App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public AppServiceEnvironmentPatchResourceProperties Properties { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourceProperties
	{
		
		/// <summary>
		/// List of comma separated strings describing which VM sizes are allowed for front-ends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedMultiSizes")]
		public string AllowedMultiSizes { get; set; }
		
		/// <summary>
		/// List of comma separated strings describing which VM sizes are allowed for workers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedWorkerSizes")]
		public string AllowedWorkerSizes { get; set; }
		
		/// <summary>
		/// API Management Account associated with the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiManagementAccountId")]
		public string ApiManagementAccountId { get; set; }
		
		/// <summary>
		/// Custom settings for changing the behavior of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterSettings")]
		public AppServiceEnvironmentPatchResourcePropertiesClusterSettings[] AppServiceEnvironmentPatchResourcePropertiesClusterSettings { get; set; }
		
		/// <summary>
		/// Edition of the metadata database for the App Service Environment, e.g. "Standard".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseEdition")]
		public string DatabaseEdition { get; set; }
		
		/// <summary>
		/// Service objective of the metadata database for the App Service Environment, e.g. "S0".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="databaseServiceObjective")]
		public string DatabaseServiceObjective { get; set; }
		
		/// <summary>
		/// Default Scale Factor for FrontEnds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultFrontEndScaleFactor")]
		public System.Nullable<System.Int32> DefaultFrontEndScaleFactor { get; set; }
		
		/// <summary>
		/// DNS suffix of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dnsSuffix")]
		public string DnsSuffix { get; set; }
		
		/// <summary>
		/// True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available
		///(most likely because NSG blocked the incoming traffic).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamicCacheEnabled")]
		public System.Nullable<System.Boolean> DynamicCacheEnabled { get; set; }
		
		/// <summary>
		/// Current total, used, and available worker capacities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentCapacities")]
		public AppServiceEnvironmentPatchResourcePropertiesEnvironmentCapacities[] AppServiceEnvironmentPatchResourcePropertiesEnvironmentCapacities { get; set; }
		
		/// <summary>
		/// True/false indicating whether the App Service Environment is healthy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentIsHealthy")]
		public System.Nullable<System.Boolean> EnvironmentIsHealthy { get; set; }
		
		/// <summary>
		/// Detailed message about with results of the last check of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environmentStatus")]
		public string EnvironmentStatus { get; set; }
		
		/// <summary>
		/// Scale factor for front-ends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndScaleFactor")]
		public System.Nullable<System.Int32> FrontEndScaleFactor { get; set; }
		
		/// <summary>
		/// Flag that displays whether an ASE has linux workers or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasLinuxWorkers")]
		public System.Nullable<System.Boolean> HasLinuxWorkers { get; set; }
		
		/// <summary>
		/// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalLoadBalancingMode")]
		public AppServiceEnvironmentResourcePropertiesInternalLoadBalancingMode InternalLoadBalancingMode { get; set; }
		
		/// <summary>
		/// Number of IP SSL addresses reserved for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipsslAddressCount")]
		public System.Nullable<System.Int32> IpsslAddressCount { get; set; }
		
		/// <summary>
		/// Last deployment action on the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastAction")]
		public string LastAction { get; set; }
		
		/// <summary>
		/// Result of the last deployment action on the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastActionResult")]
		public string LastActionResult { get; set; }
		
		/// <summary>
		/// Location of the App Service Environment, e.g. "West US".
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Maximum number of VMs in the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximumNumberOfMachines")]
		public System.Nullable<System.Int32> MaximumNumberOfMachines { get; set; }
		
		/// <summary>
		/// Number of front-end instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiRoleCount")]
		public System.Nullable<System.Int32> MultiRoleCount { get; set; }
		
		/// <summary>
		/// Front-end VM size, e.g. "Medium", "Large".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiSize")]
		public string MultiSize { get; set; }
		
		/// <summary>
		/// Name of the App Service Environment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Access control list for controlling traffic to the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkAccessControlList")]
		public AppServiceEnvironmentPatchResourcePropertiesNetworkAccessControlList[] AppServiceEnvironmentPatchResourcePropertiesNetworkAccessControlList { get; set; }
		
		/// <summary>
		/// Provisioning state of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public AppServiceEnvironmentResourcePropertiesProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// Resource group of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceGroup")]
		public string ResourceGroup { get; set; }
		
		/// <summary>
		/// Key Vault ID for ILB App Service Environment default SSL certificate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sslCertKeyVaultId")]
		public string SslCertKeyVaultId { get; set; }
		
		/// <summary>
		/// Key Vault Secret Name for ILB App Service Environment default SSL certificate
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sslCertKeyVaultSecretName")]
		public string SslCertKeyVaultSecretName { get; set; }
		
		/// <summary>
		/// Current status of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AppServiceEnvironmentResourcePropertiesStatus Status { get; set; }
		
		/// <summary>
		/// Subscription of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriptionId")]
		public string SubscriptionId { get; set; }
		
		/// <summary>
		/// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
		/// (most likely because NSG blocked the incoming traffic).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspended")]
		public System.Nullable<System.Boolean> Suspended { get; set; }
		
		/// <summary>
		/// Number of upgrade domains of the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upgradeDomains")]
		public System.Nullable<System.Int32> UpgradeDomains { get; set; }
		
		/// <summary>
		/// User added ip ranges to whitelist on ASE db
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userWhitelistedIpRanges")]
		public string[] UserWhitelistedIpRanges { get; set; }
		
		/// <summary>
		/// Description of IP SSL mapping for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vipMappings")]
		public AppServiceEnvironmentPatchResourcePropertiesVipMappings[] AppServiceEnvironmentPatchResourcePropertiesVipMappings { get; set; }
		
		/// <summary>
		/// Specification for using a Virtual Network.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="virtualNetwork")]
		public AppServiceEnvironmentPatchResourcePropertiesVirtualNetwork VirtualNetwork { get; set; }
		
		/// <summary>
		/// Name of the Virtual Network for the App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetName")]
		public string VnetName { get; set; }
		
		/// <summary>
		/// Resource group of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetResourceGroupName")]
		public string VnetResourceGroupName { get; set; }
		
		/// <summary>
		/// Subnet of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetSubnetName")]
		public string VnetSubnetName { get; set; }
		
		/// <summary>
		/// Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workerPools")]
		public AppServiceEnvironmentPatchResourcePropertiesWorkerPools[] AppServiceEnvironmentPatchResourcePropertiesWorkerPools { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourcePropertiesClusterSettings
	{
		
		/// <summary>
		/// Pair name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Pair value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourcePropertiesEnvironmentCapacities
	{
		
		/// <summary>
		/// Available capacity (# of machines, bytes of storage etc...).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableCapacity")]
		public System.Nullable<System.Int64> AvailableCapacity { get; set; }
		
		/// <summary>
		/// Shared/dedicated workers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeMode")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode ComputeMode { get; set; }
		
		/// <summary>
		/// If <code>true</code>, it includes basic apps.
		///Basic apps are not used for capacity allocation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeFromCapacityAllocation")]
		public System.Nullable<System.Boolean> ExcludeFromCapacityAllocation { get; set; }
		
		/// <summary>
		/// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isApplicableForAllComputeModes")]
		public System.Nullable<System.Boolean> IsApplicableForAllComputeModes { get; set; }
		
		/// <summary>
		/// Is this a linux stamp capacity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isLinux")]
		public System.Nullable<System.Boolean> IsLinux { get; set; }
		
		/// <summary>
		/// Name of the stamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Shared or Dedicated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteMode")]
		public string SiteMode { get; set; }
		
		/// <summary>
		/// Total capacity (# of machines, bytes of storage etc...).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCapacity")]
		public System.Nullable<System.Int64> TotalCapacity { get; set; }
		
		/// <summary>
		/// Name of the unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// Size of the machines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSize")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesWorkerSize WorkerSize { get; set; }
		
		/// <summary>
		/// Size ID of machines: 
		///0 - Small
		///1 - Medium
		///2 - Large
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSizeId")]
		public System.Nullable<System.Int32> WorkerSizeId { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourcePropertiesNetworkAccessControlList
	{
		
		/// <summary>
		/// Action object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public AppServiceEnvironmentResourcePropertiesNetworkAccessControlListAction Action { get; set; }
		
		/// <summary>
		/// Description of network access control entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Order of precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order")]
		public System.Nullable<System.Int32> Order { get; set; }
		
		/// <summary>
		/// Remote subnet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remoteSubnet")]
		public string RemoteSubnet { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourcePropertiesVipMappings
	{
		
		/// <summary>
		/// Is virtual IP mapping in use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inUse")]
		public System.Nullable<System.Boolean> InUse { get; set; }
		
		/// <summary>
		/// Internal HTTP port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalHttpPort")]
		public System.Nullable<System.Int32> InternalHttpPort { get; set; }
		
		/// <summary>
		/// Internal HTTPS port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalHttpsPort")]
		public System.Nullable<System.Int32> InternalHttpsPort { get; set; }
		
		/// <summary>
		/// name of the service that virtual IP is assigned to
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceName")]
		public string ServiceName { get; set; }
		
		/// <summary>
		/// Virtual IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="virtualIP")]
		public string VirtualIP { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourcePropertiesVirtualNetwork
	{
		
		/// <summary>
		/// Resource id of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the Virtual Network (read-only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Subnet within the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnet")]
		public string Subnet { get; set; }
		
		/// <summary>
		/// Resource type of the Virtual Network (read-only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class AppServiceEnvironmentPatchResourcePropertiesWorkerPools
	{
		
		/// <summary>
		/// Shared or dedicated app hosting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeMode")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode ComputeMode { get; set; }
		
		/// <summary>
		/// Names of all instances in the worker pool (read only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceNames")]
		public string[] InstanceNames { get; set; }
		
		/// <summary>
		/// Number of instances in the worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public System.Nullable<System.Int32> WorkerCount { get; set; }
		
		/// <summary>
		/// VM size of the worker pool instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSize")]
		public string WorkerSize { get; set; }
		
		/// <summary>
		/// Worker size ID for referencing this worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSizeId")]
		public System.Nullable<System.Int32> WorkerSizeId { get; set; }
	}
	
	/// <summary>
	/// A domain name that a service is reached at, including details of the current connection status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EndpointDependency
	{
		
		/// <summary>
		/// The domain name of the dependency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domainName")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// The IP Addresses and Ports used when connecting to DomainName.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpointDetails")]
		public EndpointDetail[] EndpointDetails { get; set; }
	}
	
	/// <summary>
	/// Current TCP connectivity information from the App Service Environment to a single endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class EndpointDetail
	{
		
		/// <summary>
		/// An IP Address that Domain Name currently resolves to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddress")]
		public string IpAddress { get; set; }
		
		/// <summary>
		/// Whether it is possible to create a TCP connection from the App Service Environment to this IpAddress at this Port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isAccessible")]
		public System.Nullable<System.Boolean> IsAccessible { get; set; }
		
		/// <summary>
		/// The time in milliseconds it takes for a TCP connection to be created from the App Service Environment to this IpAddress at this Port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latency")]
		public System.Nullable<System.Double> Latency { get; set; }
		
		/// <summary>
		/// The port an endpoint is connected to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorEntity
	{
	}
	
	/// <summary>
	/// Diagnostics for an App Service Environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class HostingEnvironmentDiagnostics
	{
		
		/// <summary>
		/// Diagnostics output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diagnosticsOutput")]
		public string DiagnosticsOutput { get; set; }
		
		/// <summary>
		/// Name/identifier of the diagnostics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The IP Addresses and Ports that require inbound network access to and within the subnet of the App Service Environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class InboundEnvironmentEndpoint
	{
		
		/// <summary>
		/// Short text describing the purpose of the network traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The IP addresses that network traffic will originate from in cidr notation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoints")]
		public string[] Endpoints { get; set; }
		
		/// <summary>
		/// The ports that network traffic will arrive to the App Service Environment at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ports")]
		public string[] Ports { get; set; }
	}
	
	/// <summary>
	/// Collection of Inbound Environment Endpoints
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class InboundEnvironmentEndpointCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public InboundEnvironmentEndpoint[] Value { get; set; }
	}
	
	/// <summary>
	/// Endpoints accessed for a common purpose that the App Service Environment requires outbound network access to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OutboundEnvironmentEndpoint
	{
		
		/// <summary>
		/// The type of service accessed by the App Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// The endpoints that the App Service Environment reaches the service at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoints")]
		public EndpointDependency[] Endpoints { get; set; }
	}
	
	/// <summary>
	/// Collection of Outbound Environment Endpoints
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OutboundEnvironmentEndpointCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public OutboundEnvironmentEndpoint[] Value { get; set; }
	}
	
	/// <summary>
	/// Metrics availability and retention.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResourceMetricAvailability
	{
		
		/// <summary>
		/// Retention period for the current time grain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retention")]
		public string Retention { get; set; }
		
		/// <summary>
		/// Time grain .
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeGrain")]
		public string TimeGrain { get; set; }
	}
	
	/// <summary>
	/// Metadata for the metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResourceMetricDefinition
	{
		
		/// <summary>
		/// ResourceMetricDefinition resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	/// <summary>
	/// Collection of metric definitions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResourceMetricDefinitionCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public ResourceMetricDefinition[] Value { get; set; }
	}
	
	/// <summary>
	/// SKU discovery information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuInfo
	{
		
		/// <summary>
		/// Description of the App Service plan scale options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public SkuInfoCapacity Capacity { get; set; }
		
		/// <summary>
		/// Resource type that this SKU applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Description of a SKU for a scalable resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public SkuInfoSku Sku { get; set; }
	}
	
	public class SkuInfoCapacity
	{
		
		/// <summary>
		/// Default number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default")]
		public System.Nullable<System.Int32> Default { get; set; }
		
		/// <summary>
		/// Maximum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Int32> Maximum { get; set; }
		
		/// <summary>
		/// Minimum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Int32> Minimum { get; set; }
		
		/// <summary>
		/// Available scale configurations for an App Service plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaleType")]
		public string ScaleType { get; set; }
	}
	
	public class SkuInfoSku
	{
		
		/// <summary>
		/// Capabilities of the SKU, e.g., is traffic manager enabled?
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public SkuInfoSkuCapabilities[] SkuInfoSkuCapabilities { get; set; }
		
		/// <summary>
		/// Current number of instances assigned to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		/// <summary>
		/// Family code of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="family")]
		public string Family { get; set; }
		
		/// <summary>
		/// Locations of the SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public string[] Locations { get; set; }
		
		/// <summary>
		/// Name of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Size specifier of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
		
		/// <summary>
		/// Description of the App Service plan scale options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuCapacity")]
		public SkuInfoSkuSkuCapacity SkuCapacity { get; set; }
		
		/// <summary>
		/// Service tier of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public string Tier { get; set; }
	}
	
	public class SkuInfoSkuCapabilities
	{
		
		/// <summary>
		/// Name of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Reason of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// Value of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class SkuInfoSkuSkuCapacity
	{
		
		/// <summary>
		/// Default number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default")]
		public System.Nullable<System.Int32> Default { get; set; }
		
		/// <summary>
		/// Maximum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Int32> Maximum { get; set; }
		
		/// <summary>
		/// Minimum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Int32> Minimum { get; set; }
		
		/// <summary>
		/// Available scale configurations for an App Service plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaleType")]
		public string ScaleType { get; set; }
	}
	
	/// <summary>
	/// Collection of SKU information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SkuInfoCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public SkuInfo[] Value { get; set; }
	}
	
	/// <summary>
	/// Collection of stamp capacities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class StampCapacityCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public StampCapacityCollectionValue[] StampCapacityCollectionValue { get; set; }
	}
	
	public class StampCapacityCollectionValue
	{
		
		/// <summary>
		/// Available capacity (# of machines, bytes of storage etc...).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableCapacity")]
		public System.Nullable<System.Int64> AvailableCapacity { get; set; }
		
		/// <summary>
		/// Shared/dedicated workers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeMode")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode ComputeMode { get; set; }
		
		/// <summary>
		/// If <code>true</code>, it includes basic apps.
		///Basic apps are not used for capacity allocation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeFromCapacityAllocation")]
		public System.Nullable<System.Boolean> ExcludeFromCapacityAllocation { get; set; }
		
		/// <summary>
		/// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isApplicableForAllComputeModes")]
		public System.Nullable<System.Boolean> IsApplicableForAllComputeModes { get; set; }
		
		/// <summary>
		/// Is this a linux stamp capacity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isLinux")]
		public System.Nullable<System.Boolean> IsLinux { get; set; }
		
		/// <summary>
		/// Name of the stamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Shared or Dedicated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteMode")]
		public string SiteMode { get; set; }
		
		/// <summary>
		/// Total capacity (# of machines, bytes of storage etc...).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalCapacity")]
		public System.Nullable<System.Int64> TotalCapacity { get; set; }
		
		/// <summary>
		/// Name of the unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
		
		/// <summary>
		/// Size of the machines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSize")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesWorkerSize WorkerSize { get; set; }
		
		/// <summary>
		/// Size ID of machines: 
		///0 - Small
		///1 - Medium
		///2 - Large
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSizeId")]
		public System.Nullable<System.Int32> WorkerSizeId { get; set; }
	}
	
	/// <summary>
	/// Usage of the quota resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Usage
	{
		
		/// <summary>
		/// Usage resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	/// <summary>
	/// Collection of usages.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UsageCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Usage[] Value { get; set; }
	}
	
	/// <summary>
	/// Collection of worker pools.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkerPoolCollection
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public WorkerPoolResource[] Value { get; set; }
	}
	
	/// <summary>
	/// Worker pool of an App Service Environment ARM resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkerPoolResource
	{
		
		/// <summary>
		/// Worker pool of an App Service Environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public WorkerPoolResourceProperties Properties { get; set; }
		
		/// <summary>
		/// Description of a SKU for a scalable resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public WorkerPoolResourceSku Sku { get; set; }
	}
	
	public class WorkerPoolResourceProperties
	{
		
		/// <summary>
		/// Shared or dedicated app hosting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computeMode")]
		public AppServiceEnvironmentResourcePropertiesEnvironmentCapacitiesComputeMode ComputeMode { get; set; }
		
		/// <summary>
		/// Names of all instances in the worker pool (read only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceNames")]
		public string[] InstanceNames { get; set; }
		
		/// <summary>
		/// Number of instances in the worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public System.Nullable<System.Int32> WorkerCount { get; set; }
		
		/// <summary>
		/// VM size of the worker pool instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSize")]
		public string WorkerSize { get; set; }
		
		/// <summary>
		/// Worker size ID for referencing this worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerSizeId")]
		public System.Nullable<System.Int32> WorkerSizeId { get; set; }
	}
	
	public class WorkerPoolResourceSku
	{
		
		/// <summary>
		/// Capabilities of the SKU, e.g., is traffic manager enabled?
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public WorkerPoolResourceSkuCapabilities[] WorkerPoolResourceSkuCapabilities { get; set; }
		
		/// <summary>
		/// Current number of instances assigned to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		/// <summary>
		/// Family code of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="family")]
		public string Family { get; set; }
		
		/// <summary>
		/// Locations of the SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public string[] Locations { get; set; }
		
		/// <summary>
		/// Name of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Size specifier of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
		
		/// <summary>
		/// Description of the App Service plan scale options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuCapacity")]
		public WorkerPoolResourceSkuSkuCapacity SkuCapacity { get; set; }
		
		/// <summary>
		/// Service tier of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public string Tier { get; set; }
	}
	
	public class WorkerPoolResourceSkuCapabilities
	{
		
		/// <summary>
		/// Name of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Reason of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// Value of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class WorkerPoolResourceSkuSkuCapacity
	{
		
		/// <summary>
		/// Default number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default")]
		public System.Nullable<System.Int32> Default { get; set; }
		
		/// <summary>
		/// Maximum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Int32> Maximum { get; set; }
		
		/// <summary>
		/// Minimum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Int32> Minimum { get; set; }
		
		/// <summary>
		/// Available scale configurations for an App Service plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaleType")]
		public string ScaleType { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get all App Service Environments for a subscription.
		/// Description for Get all App Service Environments for a subscription.
		/// AppServiceEnvironments_List subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments
		/// </summary>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironmentCollection> AppServiceEnvironments_ListAsync(string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Web/hostingEnvironments&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironmentCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all App Service Environments in a resource group.
		/// Description for Get all App Service Environments in a resource group.
		/// AppServiceEnvironments_ListByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironmentCollection> AppServiceEnvironments_ListByResourceGroupAsync(string resourceGroupName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironmentCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the properties of an App Service Environment.
		/// Description for Get the properties of an App Service Environment.
		/// AppServiceEnvironments_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironmentResource> AppServiceEnvironments_GetAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironmentResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update an App Service Environment.
		/// Description for Create or update an App Service Environment.
		/// AppServiceEnvironments_CreateOrUpdate subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Configuration details of the App Service Environment.</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironmentResource> AppServiceEnvironments_CreateOrUpdateAsync(string resourceGroupName, string name, string subscriptionId, string api_version, AppServiceEnvironmentResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironmentResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete an App Service Environment.
		/// Description for Delete an App Service Environment.
		/// AppServiceEnvironments_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="forceDelete">Specify <code>true</code> to force the deletion even if the App Service Environment contains resources. The default is <code>false</code>.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		public async Task AppServiceEnvironments_DeleteAsync(string resourceGroupName, string name, bool forceDelete, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&forceDelete="+forceDelete+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update an App Service Environment.
		/// Description for Create or update an App Service Environment.
		/// AppServiceEnvironments_Update subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Configuration details of the App Service Environment.</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironmentResource> AppServiceEnvironments_UpdateAsync(string resourceGroupName, string name, string subscriptionId, string api_version, AppServiceEnvironmentPatchResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironmentResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the used, available, and total worker capacity an App Service Environment.
		/// Description for Get the used, available, and total worker capacity an App Service Environment.
		/// AppServiceEnvironments_ListCapacities subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<StampCapacityCollection> AppServiceEnvironments_ListCapacitiesAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/capacities/compute&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StampCapacityCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get IP addresses assigned to an App Service Environment.
		/// Description for Get IP addresses assigned to an App Service Environment.
		/// AppServiceEnvironments_GetVipInfo subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AddressResponse> AppServiceEnvironments_GetVipInfoAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/capacities/virtualip&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddressResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Move an App Service Environment to a different VNET.
		/// Description for Move an App Service Environment to a different VNET.
		/// AppServiceEnvironments_ChangeVnet subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/changeVirtualNetwork
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Details for the new virtual network.</param>
		/// <returns>OK.</returns>
		public async Task<AppServiceEnvironments_ChangeVnetReturn> AppServiceEnvironments_ChangeVnetAsync(string resourceGroupName, string name, string subscriptionId, string api_version, AppServiceEnvironments_ChangeVnetPostBody requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/changeVirtualNetwork&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_ChangeVnetReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get diagnostic information for an App Service Environment.
		/// Description for Get diagnostic information for an App Service Environment.
		/// AppServiceEnvironments_ListDiagnostics subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<HostingEnvironmentDiagnostics[]> AppServiceEnvironments_ListDiagnosticsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/diagnostics&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<HostingEnvironmentDiagnostics[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a diagnostics item for an App Service Environment.
		/// Description for Get a diagnostics item for an App Service Environment.
		/// AppServiceEnvironments_GetDiagnosticsItem subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="diagnosticsName">Name of the diagnostics item.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<HostingEnvironmentDiagnostics> AppServiceEnvironments_GetDiagnosticsItemAsync(string resourceGroupName, string name, string diagnosticsName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/diagnostics/"+ (diagnosticsName==null? "" : System.Uri.EscapeDataString(diagnosticsName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<HostingEnvironmentDiagnostics>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the network endpoints of all inbound dependencies of an App Service Environment.
		/// Description for Get the network endpoints of all inbound dependencies of an App Service Environment.
		/// AppServiceEnvironments_GetInboundNetworkDependenciesEndpoints subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/inboundNetworkDependenciesEndpoints
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<InboundEnvironmentEndpointCollection> AppServiceEnvironments_GetInboundNetworkDependenciesEndpointsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/inboundNetworkDependenciesEndpoints&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<InboundEnvironmentEndpointCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all multi-role pools.
		/// Description for Get all multi-role pools.
		/// AppServiceEnvironments_ListMultiRolePools subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<WorkerPoolCollection> AppServiceEnvironments_ListMultiRolePoolsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get properties of a multi-role pool.
		/// Description for Get properties of a multi-role pool.
		/// AppServiceEnvironments_GetMultiRolePool subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<WorkerPoolResource> AppServiceEnvironments_GetMultiRolePoolAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update a multi-role pool.
		/// Description for Create or update a multi-role pool.
		/// AppServiceEnvironments_CreateOrUpdateMultiRolePool subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Properties of the multi-role pool.</param>
		/// <returns>OK.</returns>
		public async Task<WorkerPoolResource> AppServiceEnvironments_CreateOrUpdateMultiRolePoolAsync(string resourceGroupName, string name, string subscriptionId, string api_version, WorkerPoolResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update a multi-role pool.
		/// Description for Create or update a multi-role pool.
		/// AppServiceEnvironments_UpdateMultiRolePool subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Properties of the multi-role pool.</param>
		/// <returns>OK.</returns>
		public async Task<WorkerPoolResource> AppServiceEnvironments_UpdateMultiRolePoolAsync(string resourceGroupName, string name, string subscriptionId, string api_version, WorkerPoolResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get metric definitions for a specific instance of a multi-role pool of an App Service Environment.
		/// Description for Get metric definitions for a specific instance of a multi-role pool of an App Service Environment.
		/// AppServiceEnvironments_ListMultiRolePoolInstanceMetricDefinitions subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="instance">Name of the instance in the multi-role pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<ResourceMetricDefinitionCollection> AppServiceEnvironments_ListMultiRolePoolInstanceMetricDefinitionsAsync(string resourceGroupName, string name, string instance, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default/instances/"+ (instance==null? "" : System.Uri.EscapeDataString(instance))+"/metricdefinitions&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResourceMetricDefinitionCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get metric definitions for a multi-role pool of an App Service Environment.
		/// Description for Get metric definitions for a multi-role pool of an App Service Environment.
		/// AppServiceEnvironments_ListMultiRoleMetricDefinitions subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<ResourceMetricDefinitionCollection> AppServiceEnvironments_ListMultiRoleMetricDefinitionsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default/metricdefinitions&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResourceMetricDefinitionCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get available SKUs for scaling a multi-role pool.
		/// Description for Get available SKUs for scaling a multi-role pool.
		/// AppServiceEnvironments_ListMultiRolePoolSkus subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<SkuInfoCollection> AppServiceEnvironments_ListMultiRolePoolSkusAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default/skus&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SkuInfoCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get usage metrics for a multi-role pool of an App Service Environment.
		/// Description for Get usage metrics for a multi-role pool of an App Service Environment.
		/// AppServiceEnvironments_ListMultiRoleUsages subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<UsageCollection> AppServiceEnvironments_ListMultiRoleUsagesAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/multiRolePools/default/usages&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UsageCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all currently running operations on the App Service Environment.
		/// Description for List all currently running operations on the App Service Environment.
		/// AppServiceEnvironments_ListOperations subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironments_ListOperationsReturn[]> AppServiceEnvironments_ListOperationsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_ListOperationsReturn[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get the network endpoints of all outbound dependencies of an App Service Environment.
		/// Description for Get the network endpoints of all outbound dependencies of an App Service Environment.
		/// AppServiceEnvironments_GetOutboundNetworkDependenciesEndpoints subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/outboundNetworkDependenciesEndpoints
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<OutboundEnvironmentEndpointCollection> AppServiceEnvironments_GetOutboundNetworkDependenciesEndpointsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/outboundNetworkDependenciesEndpoints&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OutboundEnvironmentEndpointCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Reboot all machines in an App Service Environment.
		/// Description for Reboot all machines in an App Service Environment.
		/// AppServiceEnvironments_Reboot subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		public async Task AppServiceEnvironments_RebootAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/reboot&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Resume an App Service Environment.
		/// Description for Resume an App Service Environment.
		/// AppServiceEnvironments_Resume subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK.</returns>
		public async Task<AppServiceEnvironments_ResumeReturn> AppServiceEnvironments_ResumeAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/resume&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_ResumeReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all App Service plans in an App Service Environment.
		/// Description for Get all App Service plans in an App Service Environment.
		/// AppServiceEnvironments_ListAppServicePlans subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironments_ListAppServicePlansReturn> AppServiceEnvironments_ListAppServicePlansAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/serverfarms&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_ListAppServicePlansReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all apps in an App Service Environment.
		/// Description for Get all apps in an App Service Environment.
		/// AppServiceEnvironments_ListWebApps subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="propertiesToInclude">Comma separated list of app properties to include.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironments_ListWebAppsReturn> AppServiceEnvironments_ListWebAppsAsync(string resourceGroupName, string name, string propertiesToInclude, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/sites&propertiesToInclude=" + (propertiesToInclude==null? "" : System.Uri.EscapeDataString(propertiesToInclude))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_ListWebAppsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Suspend an App Service Environment.
		/// Description for Suspend an App Service Environment.
		/// AppServiceEnvironments_Suspend subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK.</returns>
		public async Task<AppServiceEnvironments_SuspendReturn> AppServiceEnvironments_SuspendAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/suspend&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_SuspendReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get global usage metrics of an App Service Environment.
		/// Description for Get global usage metrics of an App Service Environment.
		/// AppServiceEnvironments_ListUsages subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="filter">Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<AppServiceEnvironments_ListUsagesReturn> AppServiceEnvironments_ListUsagesAsync(string resourceGroupName, string name, string filter, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/usages&$filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppServiceEnvironments_ListUsagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get all worker pools of an App Service Environment.
		/// Description for Get all worker pools of an App Service Environment.
		/// AppServiceEnvironments_ListWorkerPools subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<WorkerPoolCollection> AppServiceEnvironments_ListWorkerPoolsAsync(string resourceGroupName, string name, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get properties of a worker pool.
		/// Description for Get properties of a worker pool.
		/// AppServiceEnvironments_GetWorkerPool subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<WorkerPoolResource> AppServiceEnvironments_GetWorkerPoolAsync(string resourceGroupName, string name, string workerPoolName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update a worker pool.
		/// Description for Create or update a worker pool.
		/// AppServiceEnvironments_CreateOrUpdateWorkerPool subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Properties of the worker pool.</param>
		/// <returns>OK.</returns>
		public async Task<WorkerPoolResource> AppServiceEnvironments_CreateOrUpdateWorkerPoolAsync(string resourceGroupName, string name, string workerPoolName, string subscriptionId, string api_version, WorkerPoolResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create or update a worker pool.
		/// Description for Create or update a worker pool.
		/// AppServiceEnvironments_UpdateWorkerPool subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <param name="requestBody">Properties of the worker pool.</param>
		/// <returns>OK.</returns>
		public async Task<WorkerPoolResource> AppServiceEnvironments_UpdateWorkerPoolAsync(string resourceGroupName, string name, string workerPoolName, string subscriptionId, string api_version, WorkerPoolResource requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkerPoolResource>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get metric definitions for a specific instance of a worker pool of an App Service Environment.
		/// Description for Get metric definitions for a specific instance of a worker pool of an App Service Environment.
		/// AppServiceEnvironments_ListWorkerPoolInstanceMetricDefinitions subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="instance">Name of the instance in the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<ResourceMetricDefinitionCollection> AppServiceEnvironments_ListWorkerPoolInstanceMetricDefinitionsAsync(string resourceGroupName, string name, string workerPoolName, string instance, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"/instances/"+ (instance==null? "" : System.Uri.EscapeDataString(instance))+"/metricdefinitions&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResourceMetricDefinitionCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get metric definitions for a worker pool of an App Service Environment.
		/// Description for Get metric definitions for a worker pool of an App Service Environment.
		/// AppServiceEnvironments_ListWebWorkerMetricDefinitions subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<ResourceMetricDefinitionCollection> AppServiceEnvironments_ListWebWorkerMetricDefinitionsAsync(string resourceGroupName, string name, string workerPoolName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"/metricdefinitions&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResourceMetricDefinitionCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get available SKUs for scaling a worker pool.
		/// Description for Get available SKUs for scaling a worker pool.
		/// AppServiceEnvironments_ListWorkerPoolSkus subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<SkuInfoCollection> AppServiceEnvironments_ListWorkerPoolSkusAsync(string resourceGroupName, string name, string workerPoolName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"/skus&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SkuInfoCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get usage metrics for a worker pool of an App Service Environment.
		/// Description for Get usage metrics for a worker pool of an App Service Environment.
		/// AppServiceEnvironments_ListWebWorkerUsages subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages
		/// </summary>
		/// <param name="resourceGroupName">Name of the resource group to which the resource belongs.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="name">Name of the App Service Environment.</param>
		/// <param name="workerPoolName">Name of the worker pool.</param>
		/// <param name="subscriptionId">Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).</param>
		/// <param name="api_version">API Version</param>
		/// <returns>OK</returns>
		public async Task<UsageCollection> AppServiceEnvironments_ListWebWorkerUsagesAsync(string resourceGroupName, string name, string workerPoolName, string subscriptionId, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Web/hostingEnvironments/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/workerPools/"+ (workerPoolName==null? "" : System.Uri.EscapeDataString(workerPoolName))+"/usages&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UsageCollection>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class AppServiceEnvironments_ChangeVnetPostBody
	{
		
		/// <summary>
		/// Resource id of the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the Virtual Network (read-only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Subnet within the Virtual Network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnet")]
		public string Subnet { get; set; }
		
		/// <summary>
		/// Resource type of the Virtual Network (read-only).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class AppServiceEnvironments_ChangeVnetReturn
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironments_ChangeVnetReturnValue[] AppServiceEnvironments_ChangeVnetReturnValue { get; set; }
	}
	
	public class AppServiceEnvironments_ChangeVnetReturnValue
	{
		
		/// <summary>
		/// Managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public AppServiceEnvironments_ChangeVnetReturnValueIdentity Identity { get; set; }
		
		/// <summary>
		/// Site resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	public class AppServiceEnvironments_ChangeVnetReturnValueIdentity
	{
		
		/// <summary>
		/// Principal Id of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Tenant of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Type of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AppServiceEnvironments_ChangeVnetReturnValueIdentityType> Type { get; set; }
		
		/// <summary>
		/// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAssignedIdentities")]
		public System.Collections.Generic.Dictionary<string, AppServiceEnvironments_ChangeVnetReturnValueIdentityUserAssignedIdentities> UserAssignedIdentities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironments_ChangeVnetReturnValueIdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SystemAssigned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserAssigned = 2,
	}
	
	public class AppServiceEnvironments_ChangeVnetReturnValueIdentityUserAssignedIdentities
	{
		
		/// <summary>
		/// Client Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Principal Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
	}
	
	public class AppServiceEnvironments_ListOperationsReturn
	{
		
		/// <summary>
		/// Time when operation has started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createdTime")]
		public System.Nullable<System.DateTimeOffset> CreatedTime { get; set; }
		
		/// <summary>
		/// Any errors associate with the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public AppServiceEnvironments_ListOperationsReturnErrors[] AppServiceEnvironments_ListOperationsReturnErrors { get; set; }
		
		/// <summary>
		/// Time when operation will expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationTime")]
		public System.Nullable<System.DateTimeOffset> ExpirationTime { get; set; }
		
		/// <summary>
		/// Applicable only for stamp operation ids.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="geoMasterOperationId")]
		public string GeoMasterOperationId { get; set; }
		
		/// <summary>
		/// Operation ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Time when operation has been updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modifiedTime")]
		public System.Nullable<System.DateTimeOffset> ModifiedTime { get; set; }
		
		/// <summary>
		/// Operation name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The current status of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<AppServiceEnvironments_ListOperationsReturnStatus> Status { get; set; }
	}
	
	public class AppServiceEnvironments_ListOperationsReturnErrors
	{
		
		/// <summary>
		/// Basic error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extendedCode")]
		public string ExtendedCode { get; set; }
		
		/// <summary>
		/// Inner errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="innerErrors")]
		public ErrorEntity[] InnerErrors { get; set; }
		
		/// <summary>
		/// Any details of the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Message template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageTemplate")]
		public string MessageTemplate { get; set; }
		
		/// <summary>
		/// Parameters for the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string[] Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AppServiceEnvironments_ListOperationsReturnStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TimedOut = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 4,
	}
	
	public class AppServiceEnvironments_ResumeReturn
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironments_ResumeReturnValue[] AppServiceEnvironments_ResumeReturnValue { get; set; }
	}
	
	public class AppServiceEnvironments_ResumeReturnValue
	{
		
		/// <summary>
		/// Managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public AppServiceEnvironments_ResumeReturnValueIdentity Identity { get; set; }
		
		/// <summary>
		/// Site resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	public class AppServiceEnvironments_ResumeReturnValueIdentity
	{
		
		/// <summary>
		/// Principal Id of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Tenant of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Type of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppServiceEnvironments_ChangeVnetReturnValueIdentityType Type { get; set; }
		
		/// <summary>
		/// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAssignedIdentities")]
		public System.Collections.Generic.Dictionary<string, AppServiceEnvironments_ResumeReturnValueIdentityUserAssignedIdentities> UserAssignedIdentities { get; set; }
	}
	
	public class AppServiceEnvironments_ResumeReturnValueIdentityUserAssignedIdentities
	{
		
		/// <summary>
		/// Client Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Principal Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
	}
	
	public class AppServiceEnvironments_ListAppServicePlansReturn
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironments_ListAppServicePlansReturnValue[] AppServiceEnvironments_ListAppServicePlansReturnValue { get; set; }
	}
	
	public class AppServiceEnvironments_ListAppServicePlansReturnValue
	{
		
		/// <summary>
		/// AppServicePlan resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
		
		/// <summary>
		/// Description of a SKU for a scalable resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public AppServiceEnvironments_ListAppServicePlansReturnValueSku Sku { get; set; }
	}
	
	public class AppServiceEnvironments_ListAppServicePlansReturnValueSku
	{
		
		/// <summary>
		/// Capabilities of the SKU, e.g., is traffic manager enabled?
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capabilities")]
		public AppServiceEnvironments_ListAppServicePlansReturnValueSkuCapabilities[] AppServiceEnvironments_ListAppServicePlansReturnValueSkuCapabilities { get; set; }
		
		/// <summary>
		/// Current number of instances assigned to the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public System.Nullable<System.Int32> Capacity { get; set; }
		
		/// <summary>
		/// Family code of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="family")]
		public string Family { get; set; }
		
		/// <summary>
		/// Locations of the SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public string[] Locations { get; set; }
		
		/// <summary>
		/// Name of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Size specifier of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
		
		/// <summary>
		/// Description of the App Service plan scale options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skuCapacity")]
		public AppServiceEnvironments_ListAppServicePlansReturnValueSkuSkuCapacity SkuCapacity { get; set; }
		
		/// <summary>
		/// Service tier of the resource SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public string Tier { get; set; }
	}
	
	public class AppServiceEnvironments_ListAppServicePlansReturnValueSkuCapabilities
	{
		
		/// <summary>
		/// Name of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Reason of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// Value of the SKU capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class AppServiceEnvironments_ListAppServicePlansReturnValueSkuSkuCapacity
	{
		
		/// <summary>
		/// Default number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default")]
		public System.Nullable<System.Int32> Default { get; set; }
		
		/// <summary>
		/// Maximum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Int32> Maximum { get; set; }
		
		/// <summary>
		/// Minimum number of workers for this App Service plan SKU.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Int32> Minimum { get; set; }
		
		/// <summary>
		/// Available scale configurations for an App Service plan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaleType")]
		public string ScaleType { get; set; }
	}
	
	public class AppServiceEnvironments_ListWebAppsReturn
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironments_ListWebAppsReturnValue[] AppServiceEnvironments_ListWebAppsReturnValue { get; set; }
	}
	
	public class AppServiceEnvironments_ListWebAppsReturnValue
	{
		
		/// <summary>
		/// Managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public AppServiceEnvironments_ListWebAppsReturnValueIdentity Identity { get; set; }
		
		/// <summary>
		/// Site resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	public class AppServiceEnvironments_ListWebAppsReturnValueIdentity
	{
		
		/// <summary>
		/// Principal Id of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Tenant of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Type of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppServiceEnvironments_ChangeVnetReturnValueIdentityType Type { get; set; }
		
		/// <summary>
		/// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAssignedIdentities")]
		public System.Collections.Generic.Dictionary<string, AppServiceEnvironments_ListWebAppsReturnValueIdentityUserAssignedIdentities> UserAssignedIdentities { get; set; }
	}
	
	public class AppServiceEnvironments_ListWebAppsReturnValueIdentityUserAssignedIdentities
	{
		
		/// <summary>
		/// Client Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Principal Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
	}
	
	public class AppServiceEnvironments_SuspendReturn
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironments_SuspendReturnValue[] AppServiceEnvironments_SuspendReturnValue { get; set; }
	}
	
	public class AppServiceEnvironments_SuspendReturnValue
	{
		
		/// <summary>
		/// Managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="identity")]
		public AppServiceEnvironments_SuspendReturnValueIdentity Identity { get; set; }
		
		/// <summary>
		/// Site resource specific properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public object Properties { get; set; }
	}
	
	public class AppServiceEnvironments_SuspendReturnValueIdentity
	{
		
		/// <summary>
		/// Principal Id of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// Tenant of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tenantId")]
		public string TenantId { get; set; }
		
		/// <summary>
		/// Type of managed service identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppServiceEnvironments_ChangeVnetReturnValueIdentityType Type { get; set; }
		
		/// <summary>
		/// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAssignedIdentities")]
		public System.Collections.Generic.Dictionary<string, AppServiceEnvironments_SuspendReturnValueIdentityUserAssignedIdentities> UserAssignedIdentities { get; set; }
	}
	
	public class AppServiceEnvironments_SuspendReturnValueIdentityUserAssignedIdentities
	{
		
		/// <summary>
		/// Client Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Principal Id of user assigned identity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
	}
	
	public class AppServiceEnvironments_ListUsagesReturn
	{
		
		/// <summary>
		/// Link to next page of resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// Collection of resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AppServiceEnvironments_ListUsagesReturnValue[] AppServiceEnvironments_ListUsagesReturnValue { get; set; }
	}
	
	public class AppServiceEnvironments_ListUsagesReturnValue
	{
		
		/// <summary>
		/// The current value of the resource counter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentValue")]
		public System.Nullable<System.Int64> CurrentValue { get; set; }
		
		/// <summary>
		/// The resource limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int64> Limit { get; set; }
		
		/// <summary>
		/// Localizable string object containing the name and a localized value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public AppServiceEnvironments_ListUsagesReturnValueName Name { get; set; }
		
		/// <summary>
		/// Next reset time for the resource counter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextResetTime")]
		public System.Nullable<System.DateTimeOffset> NextResetTime { get; set; }
		
		/// <summary>
		/// Units of measurement for the quota resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	public class AppServiceEnvironments_ListUsagesReturnValueName
	{
		
		/// <summary>
		/// Localized name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localizedValue")]
		public string LocalizedValue { get; set; }
		
		/// <summary>
		/// Non-localized name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

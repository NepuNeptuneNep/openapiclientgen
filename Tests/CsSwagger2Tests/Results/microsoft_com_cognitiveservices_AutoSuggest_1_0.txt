//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Action
	{
		
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isTopAction")]
		public System.Nullable<System.Boolean> IsTopAction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="result")]
		public Thing[] Result { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceUrl")]
		public string ServiceUrl { get; set; }
	}
	
	/// <summary>
	/// Defines a thing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Thing
	{
		
		/// <summary>
		/// The URL to get more information about the thing represented by this object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Defines an answer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Answer
	{
	}
	
	/// <summary>
	/// The most generic kind of creative work, including books, movies, photographs, software programs, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CreativeWork
	{
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="about")]
		public Thing[] About { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="commentCount")]
		public System.Nullable<System.Int32> CommentCount { get; set; }
		
		/// <summary>
		/// Defines a thing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copyrightHolder")]
		public Thing CopyrightHolder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="copyrightYear")]
		public System.Nullable<System.Int32> CopyrightYear { get; set; }
		
		/// <summary>
		/// Defines a thing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public Thing Creator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="disclaimer")]
		public string Disclaimer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="discussionUrl")]
		public string DiscussionUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="genre")]
		public string[] Genre { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="headLine")]
		public string HeadLine { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isAccessibleForFree")]
		public System.Nullable<System.Boolean> IsAccessibleForFree { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isFamilyFriendly")]
		public System.Nullable<System.Boolean> IsFamilyFriendly { get; set; }
		
		/// <summary>
		/// Defines a thing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mainEntity")]
		public Thing MainEntity { get; set; }
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mentions")]
		public Thing[] Mentions { get; set; }
		
		/// <summary>
		/// The source of the creative work.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public Thing[] Provider { get; set; }
		
		/// <summary>
		/// Text content of this creative work
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// The URL to a thumbnail of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnailUrl")]
		public string ThumbnailUrl { get; set; }
	}
	
	/// <summary>
	/// Defines the error that occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Error
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
		
		/// <summary>
		/// The error code that identifies the category of error.
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(ErrorCode.None)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public ErrorCode Code { get; set; } = ErrorCode.None;
		
		/// <summary>
		/// A description of the error.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// A description that provides additional information about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moreDetails")]
		public string MoreDetails { get; set; }
		
		/// <summary>
		/// The parameter in the request that caused the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameter")]
		public string Parameter { get; set; }
		
		/// <summary>
		/// The parameter's value in the request that was not valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServerError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRequest = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RateLimitExceeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidAuthorization = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientAuthorization = 5,
	}
	
	/// <summary>
	/// The top-level response that represents a failed request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// A list of errors that describe the reasons why the request failed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public Error[] Errors { get; set; }
	}
	
	/// <summary>
	/// Defines the identity of a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Identifiable
	{
		
		/// <summary>
		/// A String identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Defines the query context that Bing used for the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QueryContext
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
		
		/// <summary>
		/// A Boolean value that indicates whether the specified query has adult intent. The value is true if the query has adult intent; otherwise, false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adultIntent")]
		public System.Nullable<System.Boolean> AdultIntent { get; set; }
		
		/// <summary>
		/// The query string to use to force Bing to use the original string. For example, if the query string is "saling downwind", the override query string will be "+saling downwind". Remember to encode the query string which results in "%2Bsaling+downwind". This field is included only if the original query string contains a spelling mistake.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alterationOverrideQuery")]
		public string AlterationOverrideQuery { get; set; }
		
		/// <summary>
		/// The query string used by Bing to perform the query. Bing uses the altered query string if the original query string contained spelling mistakes. For example, if the query string is "saling downwind", the altered query string will be "sailing downwind". This field is included only if the original query string contains a spelling mistake.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alteredQuery")]
		public string AlteredQuery { get; set; }
		
		/// <summary>
		/// A Boolean value that indicates whether Bing requires the user's location to provide accurate results. If you specified the user's location by using the X-MSEdge-ClientIP and X-Search-Location headers, you can ignore this field. For location aware queries, such as "today's weather" or "restaurants near me" that need the user's location to provide accurate results, this field is set to true. For location aware queries that include the location (for example, "Seattle weather"), this field is set to false. This field is also set to false for queries that are not location aware, such as "best sellers".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="askUserForLocation")]
		public System.Nullable<System.Boolean> AskUserForLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isTransactional")]
		public System.Nullable<System.Boolean> IsTransactional { get; set; }
		
		/// <summary>
		/// The query string as specified in the request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="originalQuery")]
		public string OriginalQuery { get; set; }
	}
	
	/// <summary>
	/// Defines a response. All schemas that could be returned at the root of a response should inherit from this
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Response
	{
		
		[System.Runtime.Serialization.DataMember(Name="adaptiveCard")]
		public string AdaptiveCard { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="immediateAction")]
		public Action[] ImmediateAction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="potentialAction")]
		public Action[] PotentialAction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preferredClickthroughUrl")]
		public string PreferredClickthroughUrl { get; set; }
		
		/// <summary>
		/// The URL that returns this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readLink")]
		public string ReadLink { get; set; }
		
		/// <summary>
		/// The URL To Bing's search result for this item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webSearchUrl")]
		public string WebSearchUrl { get; set; }
	}
	
	/// <summary>
	/// Response base
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ResponseBase
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SearchAction
	{
		
		[System.Runtime.Serialization.DataMember(Name="displayText")]
		public string DisplayText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="searchKind")]
		public System.Nullable<SearchActionSearchKind> SearchKind { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SearchActionSearchKind
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WebSearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HistorySearch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DocumentSearch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TagSearch = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LocationSearch = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CustomSearch = 5,
	}
	
	/// <summary>
	/// Defines a search result answer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SearchResultsAnswer
	{
		
		/// <summary>
		/// Defines the query context that Bing used for the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryContext")]
		public QueryContext QueryContext { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Suggestions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="suggestionGroups")]
		public SuggestionsSuggestionGroup[] SuggestionGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class SuggestionsSuggestionGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string _type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue(SuggestionsSuggestionGroupName.Unknown)]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public SuggestionsSuggestionGroupName Name { get; set; } = SuggestionsSuggestionGroupName.Unknown;
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="searchSuggestions")]
		public SearchAction[] SearchSuggestions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum SuggestionsSuggestionGroupName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Web = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StoreApps = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SearchHistory = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PersonalSearchDocuments = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PersonalSearchTags = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Custom = 6,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// The AutoSuggest API lets you send a search query to Bing and get back a list of query suggestions. This section provides technical details about the query parameters and headers that you use to request suggestions and the JSON response objects that contain them.
		/// AutoSuggest Suggestions
		/// </summary>
		/// <param name="cc">A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="mkt">The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive—do not specify both.</param>
		/// <param name="q">The user's search term.</param>
		/// <param name="safeSearch">Filter suggestions for adult content. The following are the possible filter values. Off: Return suggestions with adult text, images, or videos. Moderate: Return suggestion with adult text but not adult images or videos. Strict: Do not return news articles with adult text, images, or videos. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.</param>
		/// <param name="setLang">The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.</param>
		/// <param name="ResponseFormat">The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results.</param>
		/// <returns>Success.</returns>
		public async Task<Suggestions> AutoSuggestAsync(string cc, string mkt, string q, AutoSuggestSafeSearch safeSearch, string setLang, string[] ResponseFormat)
		{
			var requestUri = "Suggestions?cc=" + (cc==null? "" : System.Uri.EscapeDataString(cc))+"&mkt=" + (mkt==null? "" : System.Uri.EscapeDataString(mkt))+"&q=" + (q==null? "" : System.Uri.EscapeDataString(q))+"&safeSearch=" + safeSearch+"&setLang=" + (setLang==null? "" : System.Uri.EscapeDataString(setLang))+"&"+string.Join("&", ResponseFormat.Select(z => $"ResponseFormat={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Suggestions>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum AutoSuggestX_BingApis_SDK
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
	}
	
	public enum AutoSuggestSafeSearch
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Moderate = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Strict = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

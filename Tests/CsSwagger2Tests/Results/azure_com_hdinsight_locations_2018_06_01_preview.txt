//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The billing meters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BillingMeters
	{
		
		/// <summary>
		/// The HDInsight meter guid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meter")]
		public string Meter { get; set; }
		
		/// <summary>
		/// The virtual machine sizes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meterParameter")]
		public string MeterParameter { get; set; }
		
		/// <summary>
		/// The unit of meter, VMHours or CoreHours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// The billing resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BillingResources
	{
		
		/// <summary>
		/// The billing meter information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingMeters")]
		public BillingMeters[] BillingMeters { get; set; }
		
		/// <summary>
		/// The managed disk billing information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskBillingMeters")]
		public DiskBillingMeters[] DiskBillingMeters { get; set; }
		
		/// <summary>
		/// The region or location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	/// <summary>
	/// The disk billing meters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class DiskBillingMeters
	{
		
		/// <summary>
		/// The managed disk meter guid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskRpMeter")]
		public string DiskRpMeter { get; set; }
		
		/// <summary>
		/// The managed disk billing sku, P30 or S30.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The managed disk billing tier, Standard or Premium.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public System.Nullable<DiskBillingMetersTier> Tier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum DiskBillingMetersTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Premium = 1,
	}
	
	/// <summary>
	/// The response for the operation to get regional billingSpecs for a subscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class BillingResponseListResult
	{
		
		/// <summary>
		/// The billing and managed disk billing resources for a region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingResources")]
		public BillingResources[] BillingResources { get; set; }
		
		/// <summary>
		/// The virtual machine filtering mode. Effectively this can enabling or disabling the virtual machine sizes in a particular set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSizeFilters")]
		public VmSizeCompatibilityFilterV2[] VmSizeFilters { get; set; }
		
		/// <summary>
		/// The virtual machine sizes to include or exclude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSizes")]
		public string[] VmSizes { get; set; }
	}
	
	/// <summary>
	/// This class represent a single filter object that defines a multidimensional set. The dimensions of this set are Regions, ClusterFlavors, NodeTypes and ClusterVersions. The constraint should be defined based on the following: FilterMode (Exclude vs Include), VMSizes (the vm sizes in affect of exclusion/inclusion) and the ordering of the Filters. Later filters override previous settings if conflicted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VmSizeCompatibilityFilterV2
	{
		
		/// <summary>
		/// The list of cluster flavors under the effect of the filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterFlavors")]
		public string[] ClusterFlavors { get; set; }
		
		/// <summary>
		/// The list of cluster versions affected in Major.Minor format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterVersions")]
		public string[] ClusterVersions { get; set; }
		
		/// <summary>
		/// The filtering mode. Effectively this can enabling or disabling the VM sizes in a particular set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterMode")]
		public System.Nullable<VmSizeCompatibilityFilterV2FilterMode> FilterMode { get; set; }
		
		/// <summary>
		/// The list of node types affected by the filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodeTypes")]
		public string[] NodeTypes { get; set; }
		
		/// <summary>
		/// The OSType affected, Windows or Linux.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="osType")]
		public string[] OsType { get; set; }
		
		/// <summary>
		/// The list of regions under the effect of the filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regions")]
		public string[] Regions { get; set; }
		
		/// <summary>
		/// The list of virtual machine sizes to include or exclude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSizes")]
		public string[] VmSizes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum VmSizeCompatibilityFilterV2FilterMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exclude = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Include = 1,
	}
	
	/// <summary>
	/// The Get Capabilities operation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CapabilitiesResult
	{
		
		/// <summary>
		/// The capability features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string[] Features { get; set; }
		
		/// <summary>
		/// The regional quota capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public QuotaCapability Quota { get; set; }
		
		/// <summary>
		/// The virtual machine size compatibility features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regions")]
		public System.Collections.Generic.Dictionary<string, RegionsCapability> Regions { get; set; }
		
		/// <summary>
		/// The version capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versions")]
		public System.Collections.Generic.Dictionary<string, VersionsCapability> Versions { get; set; }
		
		/// <summary>
		/// The virtual machine size compatibility filters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSize_filters")]
		public VmSizeCompatibilityFilter[] VmSize_filters { get; set; }
		
		/// <summary>
		/// The virtual machine sizes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSizes")]
		public System.Collections.Generic.Dictionary<string, VmSizesCapability> VmSizes { get; set; }
	}
	
	/// <summary>
	/// The virtual machine type compatibility filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VmSizeCompatibilityFilter
	{
		
		/// <summary>
		/// The list of cluster types available.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ClusterFlavors { get; set; }
		
		/// <summary>
		/// The list of cluster versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ClusterVersions { get; set; }
		
		/// <summary>
		/// The mode for the filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FilterMode { get; set; }
		
		/// <summary>
		/// The list of node types.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] NodeTypes { get; set; }
		
		/// <summary>
		/// The list of regions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
		
		/// <summary>
		/// The list of virtual machine sizes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmsizes")]
		public string[] Vmsizes { get; set; }
	}
	
	/// <summary>
	/// The details about the localizable name of a type of usage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LocalizedName
	{
		
		/// <summary>
		/// The localized name of the used resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localizedValue")]
		public string LocalizedValue { get; set; }
		
		/// <summary>
		/// The name of the used resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The regional quota capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaCapability
	{
		
		/// <summary>
		/// The number of cores used in the subscription.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cores_used")]
		public System.Nullable<System.Int64> Cores_used { get; set; }
		
		/// <summary>
		/// The number of cores that the subscription allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_cores_allowed")]
		public System.Nullable<System.Int64> Max_cores_allowed { get; set; }
		
		/// <summary>
		/// The list of region quota capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionalQuotas")]
		public RegionalQuotaCapability[] RegionalQuotas { get; set; }
	}
	
	/// <summary>
	/// The regional quota capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RegionalQuotaCapability
	{
		
		/// <summary>
		/// The number of cores available in the region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cores_available")]
		public System.Nullable<System.Int64> Cores_available { get; set; }
		
		/// <summary>
		/// The number of cores used in the region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cores_used")]
		public System.Nullable<System.Int64> Cores_used { get; set; }
		
		/// <summary>
		/// The region name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region_name")]
		public string Region_name { get; set; }
	}
	
	/// <summary>
	/// The regions capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RegionsCapability
	{
		
		/// <summary>
		/// The list of region capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available")]
		public string[] Available { get; set; }
	}
	
	/// <summary>
	/// The details about the usage of a particular limited resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Usage
	{
		
		/// <summary>
		/// The current usage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentValue")]
		public System.Nullable<System.Int32> CurrentValue { get; set; }
		
		/// <summary>
		/// The maximum allowed usage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		/// <summary>
		/// The details about the localizable name of a type of usage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public LocalizedName Name { get; set; }
		
		/// <summary>
		/// The type of measurement for usage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// The response for the operation to get regional usages for a subscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class UsagesListResult
	{
		
		/// <summary>
		/// The list of usages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Usage[] Value { get; set; }
	}
	
	/// <summary>
	/// The version properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VersionSpec
	{
		
		/// <summary>
		/// The component version property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="componentVersions")]
		public System.Collections.Generic.Dictionary<string, string> ComponentVersions { get; set; }
		
		/// <summary>
		/// The display name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The friendly name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendlyName")]
		public string FriendlyName { get; set; }
		
		/// <summary>
		/// Whether or not the version is the default version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDefault")]
		public string IsDefault { get; set; }
	}
	
	/// <summary>
	/// The version capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VersionsCapability
	{
		
		/// <summary>
		/// The list of version capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available")]
		public VersionSpec[] Available { get; set; }
	}
	
	/// <summary>
	/// The virtual machine sizes capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VmSizesCapability
	{
		
		/// <summary>
		/// The list of virtual machine size capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available")]
		public string[] Available { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists the billingSpecs for the specified subscription and location.
		/// Locations_ListBillingSpecs subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/locations/{location}/billingSpecs
		/// </summary>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">The Azure location (region) for which to make the request.</param>
		/// <param name="api_version">The HDInsight client API Version.</param>
		/// <returns>OK response definition.</returns>
		public async Task<BillingResponseListResult> Locations_ListBillingSpecsAsync(string subscriptionId, string location, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.HDInsight/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/billingSpecs&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<BillingResponseListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the capabilities for the specified location.
		/// Locations_GetCapabilities subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/locations/{location}/capabilities
		/// </summary>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">The Azure location (region) for which to make the request.</param>
		/// <param name="api_version">The HDInsight client API Version.</param>
		/// <returns>OK response definition.</returns>
		public async Task<CapabilitiesResult> Locations_GetCapabilitiesAsync(string subscriptionId, string location, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.HDInsight/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/capabilities&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CapabilitiesResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the usages for the specified location.
		/// Locations_ListUsages subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/locations/{location}/usages
		/// </summary>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <param name="location">The Azure location (region) for which to make the request.</param>
		/// <param name="api_version">The HDInsight client API Version.</param>
		/// <returns>OK response definition.</returns>
		public async Task<UsagesListResult> Locations_ListUsagesAsync(string subscriptionId, string location, string api_version)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.HDInsight/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/usages&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UsagesListResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Aggregate type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum AggregateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Total = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Minimum = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Last = 5,
	}
	
	/// <summary>
	/// Contains the localized display information for this particular operation / action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Display
	{
		
		/// <summary>
		/// The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The localized friendly name for the operation, as it should be shown to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provider")]
		public string Provider { get; set; }
		
		/// <summary>
		/// The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// Current health status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum HealthStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Healthy = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Warning = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Critical = 3,
	}
	
	/// <summary>
	/// Localizable string.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class LocalizableString
	{
		
		/// <summary>
		/// Localized value of the string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="localizedValue")]
		public string LocalizedValue { get; set; }
		
		/// <summary>
		/// Value of the string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Metric information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Metric
	{
		
		/// <summary>
		/// Metric end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.Nullable<System.DateTimeOffset> EndTime { get; set; }
		
		/// <summary>
		/// Metric unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricUnit")]
		public System.Nullable<MetricMetricUnit> MetricUnit { get; set; }
		
		/// <summary>
		/// List of metric values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricValues")]
		public MetricValue[] MetricValues { get; set; }
		
		/// <summary>
		/// Localizable string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public LocalizableString Name { get; set; }
		
		/// <summary>
		/// Metric start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.Nullable<System.DateTimeOffset> StartTime { get; set; }
		
		/// <summary>
		/// Metric time grain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeGrain")]
		public string TimeGrain { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MetricMetricUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Count = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bytes = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Seconds = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CountPerSecond = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BytesPerSecond = 4,
	}
	
	/// <summary>
	/// Metric value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MetricValue
	{
		
		/// <summary>
		/// Average value of metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="average")]
		public System.Nullable<System.Single> Average { get; set; }
		
		/// <summary>
		/// Count of metric values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Maximum value of metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Single> Maximum { get; set; }
		
		/// <summary>
		/// Minimum value of metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Single> Minimum { get; set; }
		
		/// <summary>
		/// Metric value properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public string Properties { get; set; }
		
		/// <summary>
		/// Timestamp of metric value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeStamp")]
		public System.Nullable<System.DateTimeOffset> TimeStamp { get; set; }
		
		/// <summary>
		/// Total value of metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Single> Total { get; set; }
	}
	
	/// <summary>
	/// Metric availability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MetricAvailability
	{
		
		/// <summary>
		/// Retention of metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retention")]
		public string Retention { get; set; }
		
		/// <summary>
		/// Time grain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeGrain")]
		public string TimeGrain { get; set; }
	}
	
	/// <summary>
	/// Metric definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MetricDefinition
	{
		
		/// <summary>
		/// Metric availabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricAvailabilities")]
		public MetricAvailability[] MetricAvailabilities { get; set; }
		
		/// <summary>
		/// Localizable string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public LocalizableString Name { get; set; }
		
		/// <summary>
		/// Aggregate type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryAggregationType")]
		public AggregateType PrimaryAggregationType { get; set; }
		
		/// <summary>
		/// Metric unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public MetricMetricUnit Unit { get; set; }
	}
	
	/// <summary>
	/// Pageable list of metric definitions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MetricDefinitionList
	{
		
		/// <summary>
		/// URI to the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of metric definitions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public MetricDefinition[] Value { get; set; }
	}
	
	/// <summary>
	/// Pageable list of metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class MetricList
	{
		
		/// <summary>
		/// URI to the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Metric[] Value { get; set; }
	}
	
	/// <summary>
	/// Metric unit.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum MetricUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Count = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bytes = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Seconds = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CountPerSecond = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BytesPerSecond = 4,
	}
	
	/// <summary>
	/// Describes the supported REST operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// Contains the localized display information for this particular operation / action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public Display Display { get; set; }
		
		/// <summary>
		/// The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Pageable list of supported operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationList
	{
		
		/// <summary>
		/// URI to the next page of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of operations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// Base resource object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// Resource ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Resource location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Resource Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Resource tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Resource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Storage service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Service
	{
		
		/// <summary>
		/// Current health status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthStatus")]
		public HealthStatus HealthStatus { get; set; }
		
		/// <summary>
		/// Storage service version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Settings of storage services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WritableServiceSettings
	{
		
		/// <summary>
		/// The HTTP port of the storage service front end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndHttpListenPort")]
		public System.Nullable<System.Int32> FrontEndHttpListenPort { get; set; }
		
		/// <summary>
		/// The HTTPs port of the storage service front end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndHttpsListenPort")]
		public System.Nullable<System.Int32> FrontEndHttpsListenPort { get; set; }
	}
	
	/// <summary>
	/// Storage service settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WritableSettings
	{
		
		/// <summary>
		/// Front end callback threads count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndCallbackThreadsCount")]
		public System.Nullable<System.Int32> FrontEndCallbackThreadsCount { get; set; }
		
		/// <summary>
		/// Interval (in second) of CPU monitor for front end CPU based keep-alive throttling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndCpuBasedKeepAliveThrottlingCpuMonitorIntervalInSeconds")]
		public System.Nullable<System.Int32> FrontEndCpuBasedKeepAliveThrottlingCpuMonitorIntervalInSeconds { get; set; }
		
		/// <summary>
		/// Switch of front end CPU based keep-alive throttling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndCpuBasedKeepAliveThrottlingEnabled")]
		public System.Nullable<System.Boolean> FrontEndCpuBasedKeepAliveThrottlingEnabled { get; set; }
		
		/// <summary>
		/// Threshold (% percentage) of front end CPU based keep-alive throttling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndCpuBasedKeepAliveThrottlingPercentCpuThreshold")]
		public System.Nullable<System.Single> FrontEndCpuBasedKeepAliveThrottlingPercentCpuThreshold { get; set; }
		
		/// <summary>
		/// Threshold (% percentage) of requests to throttle in front end CPU based keep-alive throttling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndCpuBasedKeepAliveThrottlingPercentRequestsToThrottle")]
		public System.Nullable<System.Single> FrontEndCpuBasedKeepAliveThrottlingPercentRequestsToThrottle { get; set; }
		
		/// <summary>
		/// Maximum interval (in millisecond) between memory samples of front end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndMaxMillisecondsBetweenMemorySamples")]
		public System.Nullable<System.Int32> FrontEndMaxMillisecondsBetweenMemorySamples { get; set; }
		
		/// <summary>
		/// Front end memory throttle threshold settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndMemoryThrottleThresholdSettings")]
		public string FrontEndMemoryThrottleThresholdSettings { get; set; }
		
		/// <summary>
		/// Switch of front end memory throttling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndMemoryThrottlingEnabled")]
		public System.Nullable<System.Boolean> FrontEndMemoryThrottlingEnabled { get; set; }
		
		/// <summary>
		/// Front end minimum number of threads in thread pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndMinThreadPoolThreads")]
		public System.Nullable<System.Int32> FrontEndMinThreadPoolThreads { get; set; }
		
		/// <summary>
		/// Threshold of front end thread pool based keep-alive IO completion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndThreadPoolBasedKeepAliveIOCompletionThreshold")]
		public System.Nullable<System.Int32> FrontEndThreadPoolBasedKeepAliveIOCompletionThreshold { get; set; }
		
		/// <summary>
		/// Monitor interval (in seconds) of front end thread pool based keep-alive monitor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndThreadPoolBasedKeepAliveMonitorIntervalInSeconds")]
		public System.Nullable<System.Int32> FrontEndThreadPoolBasedKeepAliveMonitorIntervalInSeconds { get; set; }
		
		/// <summary>
		/// Percentage (%) of front end thread pool based keep-alive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndThreadPoolBasedKeepAlivePercentage")]
		public System.Nullable<System.Single> FrontEndThreadPoolBasedKeepAlivePercentage { get; set; }
		
		/// <summary>
		/// Threshold of front end thread pool based keep-alive worker thread.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndThreadPoolBasedKeepAliveWorkerThreadThreshold")]
		public System.Nullable<System.Int32> FrontEndThreadPoolBasedKeepAliveWorkerThreadThreshold { get; set; }
		
		/// <summary>
		/// Switch of whether front end uses SLA time in availability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frontEndUseSlaTimeInAvailability")]
		public System.Nullable<System.Boolean> FrontEndUseSlaTimeInAvailability { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get the list of support rest operations.
		/// Operations_List providers/Microsoft.Storage.Admin/operations
		/// </summary>
		/// <param name="api_version">REST Api Version.</param>
		/// <returns>OK -- The list of operations has been returned.</returns>
		public async Task<OperationList> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.Storage.Admin/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OperationList>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorDetail
	{
		
		/// <summary>
		/// The error's code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// A human readable error message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Indicates which property in the request is responsible for the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorInfo
	{
		
		/// <summary>
		/// A machine readable error code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// error details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public ErrorDetail[] Details { get; set; }
		
		/// <summary>
		/// Inner error details if they exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="innererror")]
		public string Innererror { get; set; }
		
		/// <summary>
		/// A human readable error message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Contains details when the response code indicates an error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error")]
		public ErrorInfo Error { get; set; }
	}
	
	/// <summary>
	/// REST API operation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Operation
	{
		
		/// <summary>
		/// The object that represents the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display")]
		public object Display { get; set; }
		
		/// <summary>
		/// Operation name: {provider}/{resource}/{operation}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class OperationListResult
	{
		
		/// <summary>
		/// URL to get the next set of operation list results if there are any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// List of Resource Provider operations supported by the Resource Provider resource provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Operation[] Value { get; set; }
	}
	
	/// <summary>
	/// Provisioning status of the workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum ProvisioningState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Accepted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ready = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Created = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleting = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Deleted = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Updating = 10,
	}
	
	/// <summary>
	/// The core properties of ARM resources
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Resource
	{
		
		/// <summary>
		/// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// SKU for the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Sku
	{
		
		/// <summary>
		/// The SKU name.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The SKU tier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tier")]
		public string Tier { get; set; }
	}
	
	/// <summary>
	/// The resource model definition for a ARM tracked top level resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class TrackedResource : Resource
	{
		
		/// <summary>
		/// The geo-location where the resource lives
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Resource tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	/// <summary>
	/// Information about workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class Workspace : TrackedResource
	{
		
		/// <summary>
		/// The workspace properties.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public WorkspaceProperties Properties { get; set; }
		
		/// <summary>
		/// SKU for the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public Sku Sku { get; set; }
	}
	
	/// <summary>
	/// The value which should be used for this field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceCustomBooleanParameter
	{
		
		/// <summary>
		/// Provisioning status of the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<WorkspaceCustomBooleanParameterType> Type { get; set; }
		
		/// <summary>
		/// The value which should be used for this field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public bool Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum WorkspaceCustomBooleanParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bool = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Object = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 2,
	}
	
	/// <summary>
	/// The value which should be used for this field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceCustomObjectParameter
	{
		
		/// <summary>
		/// Provisioning status of the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public WorkspaceCustomBooleanParameterType Type { get; set; }
		
		/// <summary>
		/// The value which should be used for this field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Provisioning status of the workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public enum WorkspaceCustomParameterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bool = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Object = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		String = 2,
	}
	
	/// <summary>
	/// Custom Parameters used for Cluster Creation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceCustomParameters
	{
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amlWorkspaceId")]
		public WorkspaceCustomStringParameter AmlWorkspaceId { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customPrivateSubnetName")]
		public WorkspaceCustomStringParameter CustomPrivateSubnetName { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customPublicSubnetName")]
		public WorkspaceCustomStringParameter CustomPublicSubnetName { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customVirtualNetworkId")]
		public WorkspaceCustomStringParameter CustomVirtualNetworkId { get; set; }
		
		/// <summary>
		/// The value which should be used for this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableNoPublicIp")]
		public WorkspaceCustomBooleanParameter EnableNoPublicIp { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerBackendPoolName")]
		public WorkspaceCustomStringParameter LoadBalancerBackendPoolName { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerId")]
		public WorkspaceCustomStringParameter LoadBalancerId { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relayNamespaceName")]
		public WorkspaceCustomStringParameter RelayNamespaceName { get; set; }
		
		/// <summary>
		/// The value which should be used for this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceTags")]
		public WorkspaceCustomObjectParameter ResourceTags { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageAccountName")]
		public WorkspaceCustomStringParameter StorageAccountName { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageAccountSkuName")]
		public WorkspaceCustomStringParameter StorageAccountSkuName { get; set; }
		
		/// <summary>
		/// The Value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vnetAddressPrefix")]
		public WorkspaceCustomStringParameter VnetAddressPrefix { get; set; }
	}
	
	/// <summary>
	/// The Value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceCustomStringParameter
	{
		
		/// <summary>
		/// Provisioning status of the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public WorkspaceCustomBooleanParameterType Type { get; set; }
		
		/// <summary>
		/// The value which should be used for this field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// List of workspaces.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceListResult
	{
		
		/// <summary>
		/// The URL to use for getting the next set of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextLink")]
		public string NextLink { get; set; }
		
		/// <summary>
		/// The array of workspaces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public Workspace[] Value { get; set; }
	}
	
	/// <summary>
	/// The workspace properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceProperties
	{
		
		/// <summary>
		/// The workspace provider authorizations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorizations")]
		public WorkspaceProviderAuthorization[] Authorizations { get; set; }
		
		/// <summary>
		/// The managed resource group Id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="managedResourceGroupId")]
		public string ManagedResourceGroupId { get; set; }
		
		/// <summary>
		/// Custom Parameters used for Cluster Creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public WorkspaceCustomParameters Parameters { get; set; }
		
		/// <summary>
		/// Provisioning status of the workspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="provisioningState")]
		public ProvisioningState ProvisioningState { get; set; }
		
		/// <summary>
		/// The blob URI where the UI definition file is located.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uiDefinitionUri")]
		public string UiDefinitionUri { get; set; }
	}
	
	/// <summary>
	/// The workspace provider authorization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceProviderAuthorization
	{
		
		/// <summary>
		/// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="principalId")]
		public string PrincipalId { get; set; }
		
		/// <summary>
		/// The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleDefinitionId")]
		public string RoleDefinitionId { get; set; }
	}
	
	/// <summary>
	/// An update to a workspace.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class WorkspaceUpdate
	{
		
		/// <summary>
		/// Resource tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists all of the available RP operations.
		/// Operations_List providers/Microsoft.Databricks/operations
		/// </summary>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <returns>OK. The request has succeeded.</returns>
		public async Task<OperationListResult> Operations_ListAsync(string api_version)
		{
			var requestUri = "providers/Microsoft.Databricks/operations?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OperationListResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets all the workspaces within a subscription.
		/// Workspaces_ListBySubscription subscriptions/{subscriptionId}/providers/Microsoft.Databricks/workspaces
		/// </summary>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <param name="subscriptionId">The ID of the target subscription.</param>
		/// <returns>OK - Returns an array of workspaces.</returns>
		public async Task<WorkspaceListResult> Workspaces_ListBySubscriptionAsync(string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.Databricks/workspaces?api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkspaceListResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets all the workspaces within a resource group.
		/// Workspaces_ListByResourceGroup subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group. The name is case insensitive.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <param name="subscriptionId">The ID of the target subscription.</param>
		/// <returns>OK - Returns an array of workspaces.</returns>
		public async Task<WorkspaceListResult> Workspaces_ListByResourceGroupAsync(string resourceGroupName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Databricks/workspaces&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<WorkspaceListResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the workspace.
		/// Workspaces_Get subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group. The name is case insensitive.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="workspaceName">The name of the workspace.
		/// Min length: 3
		/// Max length: 64
		// </param>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <param name="subscriptionId">The ID of the target subscription.</param>
		/// <returns>OK - Returns the workspace.</returns>
		public async Task<Workspace> Workspaces_GetAsync(string resourceGroupName, string workspaceName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Databricks/workspaces/"+ (workspaceName==null? "" : System.Uri.EscapeDataString(workspaceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Workspace>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new workspace.
		/// Workspaces_CreateOrUpdate subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group. The name is case insensitive.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="workspaceName">The name of the workspace.
		/// Min length: 3
		/// Max length: 64
		// </param>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <param name="subscriptionId">The ID of the target subscription.</param>
		/// <param name="requestBody">Parameters supplied to the create or update a workspace.</param>
		/// <returns>Created - Returns information about the workspace, including provisioning status.</returns>
		public async Task<Workspace> Workspaces_CreateOrUpdateAsync(string resourceGroupName, string workspaceName, string api_version, string subscriptionId, Workspace requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Databricks/workspaces/"+ (workspaceName==null? "" : System.Uri.EscapeDataString(workspaceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Workspace>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the workspace.
		/// Workspaces_Delete subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group. The name is case insensitive.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="workspaceName">The name of the workspace.
		/// Min length: 3
		/// Max length: 64
		// </param>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <param name="subscriptionId">The ID of the target subscription.</param>
		public async Task Workspaces_DeleteAsync(string resourceGroupName, string workspaceName, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Databricks/workspaces/"+ (workspaceName==null? "" : System.Uri.EscapeDataString(workspaceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a workspace.
		/// Workspaces_Update subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}
		/// </summary>
		/// <param name="resourceGroupName">The name of the resource group. The name is case insensitive.
		/// Min length: 1
		/// Max length: 90
		// </param>
		/// <param name="workspaceName">The name of the workspace.
		/// Min length: 3
		/// Max length: 64
		// </param>
		/// <param name="api_version">The API version to use for this operation.</param>
		/// <param name="subscriptionId">The ID of the target subscription.</param>
		/// <param name="requestBody">The update to the workspace.</param>
		/// <returns>Successfully updated the workspace.</returns>
		public async Task<Workspace> Workspaces_UpdateAsync(string resourceGroupName, string workspaceName, string api_version, string subscriptionId, WorkspaceUpdate requestBody)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/resourceGroups/"+ (resourceGroupName==null? "" : System.Uri.EscapeDataString(resourceGroupName))+"/providers/Microsoft.Databricks/workspaces/"+ (workspaceName==null? "" : System.Uri.EscapeDataString(workspaceName))+"&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Workspace>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

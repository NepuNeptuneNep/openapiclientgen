//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The Get Capabilities operation response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class CapabilitiesResult
	{
		
		/// <summary>
		/// The capabilty features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string[] Features { get; set; }
		
		/// <summary>
		/// The regional quota capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quota")]
		public QuotaCapability Quota { get; set; }
		
		/// <summary>
		/// The virtual machine size compatibilty features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regions")]
		public System.Collections.Generic.Dictionary<string, RegionsCapability> Regions { get; set; }
		
		/// <summary>
		/// The version capability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versions")]
		public System.Collections.Generic.Dictionary<string, VersionsCapability> Versions { get; set; }
		
		/// <summary>
		/// The virtual machine size compatibilty filters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSize_filters")]
		public VmSizeCompatibilityFilter[] VmSize_filters { get; set; }
		
		/// <summary>
		/// The virtual machine sizes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmSizes")]
		public System.Collections.Generic.Dictionary<string, VmSizesCapability> VmSizes { get; set; }
	}
	
	/// <summary>
	/// The virtual machine type compatibility filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VmSizeCompatibilityFilter
	{
		
		/// <summary>
		/// The list of cluster types available.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ClusterFlavors { get; set; }
		
		/// <summary>
		/// The list of cluster versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ClusterVersions { get; set; }
		
		/// <summary>
		/// The mode for the filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FilterMode { get; set; }
		
		/// <summary>
		/// The list of node types.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] NodeTypes { get; set; }
		
		/// <summary>
		/// The list of regions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Regions { get; set; }
		
		/// <summary>
		/// The list of virtual machine sizes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vmsizes")]
		public string[] Vmsizes { get; set; }
	}
	
	/// <summary>
	/// The regional quota capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class QuotaCapability
	{
		
		/// <summary>
		/// The list of region quota capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionalQuotas")]
		public RegionalQuotaCapability[] RegionalQuotas { get; set; }
	}
	
	/// <summary>
	/// The regional quota capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RegionalQuotaCapability
	{
		
		/// <summary>
		/// The number of courses available in the region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cores_available")]
		public System.Nullable<System.Int64> Cores_available { get; set; }
		
		/// <summary>
		/// The number of cores used in the region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cores_used")]
		public System.Nullable<System.Int64> Cores_used { get; set; }
		
		/// <summary>
		/// The region name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region_name")]
		public string Region_name { get; set; }
	}
	
	/// <summary>
	/// The regions capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class RegionsCapability
	{
		
		/// <summary>
		/// The list of region capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available")]
		public string[] Available { get; set; }
	}
	
	/// <summary>
	/// The version properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VersionSpec
	{
		
		/// <summary>
		/// The component version property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="componentVersions")]
		public System.Collections.Generic.Dictionary<string, string> ComponentVersions { get; set; }
		
		/// <summary>
		/// The display name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The friendly name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendlyName")]
		public string FriendlyName { get; set; }
		
		/// <summary>
		/// Whether or not the version is the default version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDefault")]
		public string IsDefault { get; set; }
	}
	
	/// <summary>
	/// The version capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VersionsCapability
	{
		
		/// <summary>
		/// The list of version capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available")]
		public VersionSpec[] Available { get; set; }
	}
	
	/// <summary>
	/// The virtual machine sizes capability.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/01")]
	public class VmSizesCapability
	{
		
		/// <summary>
		/// The list of virtual machine size capabilities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="available")]
		public string[] Available { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Gets the capabilities for the specified location.
		/// Location_GetCapabilities subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/locations/{location}/capabilities
		/// </summary>
		/// <param name="location">The location to get capabilities for.</param>
		/// <param name="api_version">The HDInsight client API Version.</param>
		/// <param name="subscriptionId">The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.</param>
		/// <returns>OK response definition.</returns>
		public async Task<CapabilitiesResult> Location_GetCapabilitiesAsync(string location, string api_version, string subscriptionId)
		{
			var requestUri = "subscriptions/"+ (subscriptionId==null? "" : System.Uri.EscapeDataString(subscriptionId))+"/providers/Microsoft.HDInsight/locations/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/capabilities&api-version=" + (api_version==null? "" : System.Uri.EscapeDataString(api_version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CapabilitiesResult>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

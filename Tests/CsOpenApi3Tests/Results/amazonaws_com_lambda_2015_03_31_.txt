//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddLayerVersionPermissionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Statement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidParameterValueException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PolicyLengthExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PreconditionFailedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddPermissionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Statement { get; set; }
	}
	
	/// <summary>
	/// Provides configuration information about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">alias</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AliasConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasRoutingConfiguration RoutingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AliasRoutingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalVersionWeights AdditionalVersionWeights { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdditionalVersionWeights
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCodeSigningConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningConfig CodeSigningConfig { get; set; }
	}
	
	/// <summary>
	/// Details about a <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html">Code signing configuration</a>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeSigningConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CodeSigningConfigId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CodeSigningConfigArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AllowedPublishers AllowedPublishers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningPolicies CodeSigningPolicies { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
	}
	
	/// <summary>
	/// List of signing profiles that can sign a code package. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AllowedPublishers
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SigningProfileVersionArns { get; set; }
	}
	
	/// <summary>
	/// Code signing configuration <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html#config-codesigning-policies">policies</a> specify the validation failure action for signature mismatch or expiry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeSigningPolicies
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningPolicy UntrustedArtifactOnDeployment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CodeSigningPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Warn = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Enforce = 1,
	}
	
	/// <summary>
	/// A mapping between an Amazon Web Services resource and a Lambda function. For details, see <a>CreateEventSourceMapping</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventSourceMappingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UUID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourcePosition StartingPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartingPositionTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BatchSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumBatchingWindowInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelizationFactor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterCriteria FilterCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastProcessingResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StateTransitionReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationConfig DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceAccessConfiguration[] SourceAccessConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedEventSource SelfManagedEventSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRecordAgeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BisectBatchOnFunctionError { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TumblingWindowInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionResponseType[] FunctionResponseTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfig ScalingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventSourcePosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIM_HORIZON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LATEST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AT_TIMESTAMP = 2,
	}
	
	/// <summary>
	///  An object that contains the filters for an event source. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	/// <summary>
	///  A structure within a <code>FilterCriteria</code> object that defines an event filtering pattern. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Pattern { get; set; }
	}
	
	/// <summary>
	/// A configuration object that specifies the destination of an event after Lambda processes it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DestinationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OnSuccess OnSuccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnFailure OnFailure { get; set; }
	}
	
	/// <summary>
	/// A destination for events that were processed successfully.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnSuccess
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Destination { get; set; }
	}
	
	/// <summary>
	/// A destination for events that failed processing.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnFailure
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Destination { get; set; }
	}
	
	/// <summary>
	/// To secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceAccessConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SourceAccessType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string URI { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SourceAccessType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC_AUTH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_SUBNET = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_SECURITY_GROUP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASL_SCRAM_512_AUTH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASL_SCRAM_256_AUTH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIRTUAL_HOST = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLIENT_CERTIFICATE_TLS_AUTH = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ROOT_CA_CERTIFICATE = 7,
	}
	
	/// <summary>
	/// The self-managed Apache Kafka cluster for your event source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelfManagedEventSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Endpoints Endpoints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Endpoints
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FunctionResponseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReportBatchItemFailures = 0,
	}
	
	/// <summary>
	/// Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AmazonManagedKafkaEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConsumerGroupId { get; set; }
	}
	
	/// <summary>
	/// Specific configuration settings for a self-managed Apache Kafka event source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelfManagedKafkaEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConsumerGroupId { get; set; }
	}
	
	/// <summary>
	/// (Amazon SQS only) The scaling configuration for the event source. To remove the configuration, pass an empty value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumConcurrency { get; set; }
	}
	
	/// <summary>
	///  Specific configuration settings for a DocumentDB event source. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentDBEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CollectionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FullDocument FullDocument { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FullDocument
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpdateLookup = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Default = 1,
	}
	
	/// <summary>
	/// Details about a function's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunctionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime Runtime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Handler { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CodeSha256 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigResponse VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeadLetterConfig DeadLetterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentResponse Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TracingConfigResponse TracingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layer[] Layers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StateReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StateReasonCode StateReasonCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LastUpdateStatus LastUpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastUpdateStatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LastUpdateStatusReasonCode LastUpdateStatusReasonCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FileSystemConfig[] FileSystemConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImageConfigResponse ImageConfigResponse { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SigningProfileVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SigningJobArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] Architectures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EphemeralStorage EphemeralStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStartResponse SnapStart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RuntimeVersionConfig RuntimeVersionConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Runtime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nodejs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3")]
		nodejs4_3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs6.10")]
		nodejs6_10 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs8.10")]
		nodejs8_10 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs10.x")]
		nodejs10_x = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs12.x")]
		nodejs12_x = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs14.x")]
		nodejs14_x = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs16.x")]
		nodejs16_x = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java8 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="java8.al2")]
		java8_al2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java11 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python2.7")]
		python2_7 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.6")]
		python3_6 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.7")]
		python3_7 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.8")]
		python3_8 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.9")]
		python3_9 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore1.0")]
		dotnetcore1_0 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.0")]
		dotnetcore2_0 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.1")]
		dotnetcore2_1 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore3.1")]
		dotnetcore3_1 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotnet6 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3-edge")]
		nodejs4_3Minusedge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="go1.x")]
		go1_x = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.5")]
		ruby2_5 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.7")]
		ruby2_7 = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		provided = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="provided.al2")]
		provided_al2 = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs18.x")]
		nodejs18_x = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.10")]
		python3_10 = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java17 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby3.2")]
		ruby3_2 = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.11")]
		python3_11 = 31,
	}
	
	/// <summary>
	/// The VPC security groups and subnets that are attached to a Lambda function.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
	}
	
	/// <summary>
	/// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter queue</a> for failed asynchronous invocations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeadLetterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
	}
	
	/// <summary>
	/// The results of an operation to update or read environment variables. If the operation succeeds, the response contains the environment variables. If it fails, the response contains details about the error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariables Variables { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentError Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentVariables
	{
	}
	
	/// <summary>
	/// Error messages for environment variables that couldn't be applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The function's X-Ray tracing configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TracingConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TracingMode Mode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TracingMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PassThrough = 1,
	}
	
	/// <summary>
	/// An <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Layer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SigningProfileVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SigningJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum State
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StateReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Idle = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Restoring = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EniLimitExceeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientRolePermissions = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidConfiguration = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalError = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetOutOfIPAddresses = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidSubnet = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidSecurityGroup = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImageDeleted = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImageAccessDenied = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidImage = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMSKeyAccessDenied = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMSKeyNotFound = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidStateKMSKey = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DisabledKMSKey = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSIOError = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSMountConnectivityError = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSMountFailure = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSMountTimeout = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRuntime = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidZipFileException = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FunctionError = 23,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LastUpdateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Successful = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LastUpdateStatusReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EniLimitExceeded = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientRolePermissions = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidConfiguration = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InternalError = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SubnetOutOfIPAddresses = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidSubnet = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidSecurityGroup = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImageDeleted = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImageAccessDenied = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidImage = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMSKeyAccessDenied = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMSKeyNotFound = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidStateKMSKey = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DisabledKMSKey = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSIOError = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSMountConnectivityError = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSMountFailure = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFSMountTimeout = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidRuntime = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvalidZipFileException = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FunctionError = 20,
	}
	
	/// <summary>
	/// Details about the connection between a Lambda function and an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html">Amazon EFS file system</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FileSystemConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LocalMountPath { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Zip = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Image = 1,
	}
	
	/// <summary>
	/// Response to a <code>GetFunctionConfiguration</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImageConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ImageConfig ImageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImageConfigError Error { get; set; }
	}
	
	/// <summary>
	/// Configuration values that override the container image Dockerfile settings. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms">Container image settings</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImageConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EntryPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WorkingDirectory { get; set; }
	}
	
	/// <summary>
	/// Error response to <code>GetFunctionConfiguration</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImageConfigError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Architecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		x86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		arm64 = 1,
	}
	
	/// <summary>
	/// The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EphemeralStorage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Size { get; set; }
	}
	
	/// <summary>
	/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">SnapStart</a> setting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapStartResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStartApplyOn ApplyOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStartOptimizationStatus OptimizationStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnapStartApplyOn
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PublishedVersions = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnapStartOptimizationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		On = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Off = 1,
	}
	
	/// <summary>
	/// The ARN of the runtime and any errors that occured.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuntimeVersionConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RuntimeVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RuntimeVersionError Error { get; set; }
	}
	
	/// <summary>
	/// Any error returned when the runtime version information for the function could not be retrieved.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuntimeVersionError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeStorageExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeVerificationFailedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidCodeSignatureException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeSigningConfigNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFunctionUrlConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Cors Cors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FunctionUrlAuthType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_IAM = 1,
	}
	
	/// <summary>
	/// The <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">cross-origin resource sharing (CORS)</a> settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cors
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowCredentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowMethods { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowOrigins { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExposeHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAge { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvokeMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BUFFERED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESPONSE_STREAM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCodeSigningConfigResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInUseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAccountSettingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountLimit AccountLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountUsage AccountUsage { get; set; }
	}
	
	/// <summary>
	/// Limits that are related to concurrency and storage. All file and storage sizes are in bytes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCodeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSizeUnzipped { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSizeZipped { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UnreservedConcurrentExecutions { get; set; }
	}
	
	/// <summary>
	/// The number of functions and amount of storage in use.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountUsage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCodeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FunctionCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCodeSigningConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningConfig CodeSigningConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionCodeLocation Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Concurrency Concurrency { get; set; }
	}
	
	/// <summary>
	/// Details about a function's deployment package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunctionCodeLocation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RepositoryType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResolvedImageUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tags
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Concurrency
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReservedConcurrentExecutions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionCodeSigningConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CodeSigningConfigArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionConcurrencyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ReservedConcurrentExecutions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunctionEventInvokeConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModified { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumEventAgeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationConfig DestinationConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionUrlConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Cors Cors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLayerVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LayerVersionContentOutput Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime[] CompatibleRuntimes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] CompatibleArchitectures { get; set; }
	}
	
	/// <summary>
	/// Details about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LayerVersionContentOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CodeSha256 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SigningProfileVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SigningJobArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLayerVersionPolicyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPolicyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetProvisionedConcurrencyConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RequestedProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AvailableProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProvisionedConcurrencyStatusEnum Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProvisionedConcurrencyStatusEnum
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProvisionedConcurrencyConfigNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRuntimeManagementConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateRuntimeOn UpdateRuntimeOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RuntimeVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateRuntimeOn
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Auto = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Manual = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FunctionUpdate = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvocationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Payload { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestContentException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequestTooLargeException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnsupportedMediaTypeException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2UnexpectedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubnetIPAddressLimitReachedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ENILimitReachedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EFSMountConnectivityException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EFSMountFailureException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EFSMountTimeoutException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EFSIOException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapStartException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapStartTimeoutException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapStartNotReadyException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2ThrottledException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EC2AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidSubnetIDException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidSecurityGroupIDException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidZipFileException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KMSDisabledException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KMSInvalidStateException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KMSAccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KMSNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRuntimeException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotReadyException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecursiveInvocationException
	{
	}
	
	/// <summary>
	/// A success response (<code>202 Accepted</code>) indicates that the request is queued for invocation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeAsyncResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeWithResponseStreamResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeWithResponseStreamResponseEvent EventStream { get; set; }
	}
	
	/// <summary>
	/// An object that includes a chunk of the response payload. When the stream has ended, Lambda includes a <code>InvokeComplete</code> object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeWithResponseStreamResponseEvent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeResponseStreamUpdate PayloadChunk { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeWithResponseStreamCompleteEvent InvokeComplete { get; set; }
	}
	
	/// <summary>
	/// A chunk of the streamed response payload.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeResponseStreamUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Payload { get; set; }
	}
	
	/// <summary>
	/// A response confirming that the event stream is complete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeWithResponseStreamCompleteEvent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAliasesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasConfiguration[] Aliases { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCodeSigningConfigsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningConfig[] CodeSigningConfigs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEventSourceMappingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceMappingConfiguration[] EventSourceMappings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionEventInvokeConfigsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionEventInvokeConfig[] FunctionEventInvokeConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionUrlConfigsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlConfig[] FunctionUrlConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
	}
	
	/// <summary>
	/// Details about a Lambda function URL.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunctionUrlConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Cors Cors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	/// <summary>
	/// A list of Lambda functions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionConfiguration[] Functions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionsByCodeSigningConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FunctionArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLayerVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayerVersionsListItem[] LayerVersions { get; set; }
	}
	
	/// <summary>
	/// Details about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LayerVersionsListItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime[] CompatibleRuntimes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] CompatibleArchitectures { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLayersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayersListItem[] Layers { get; set; }
	}
	
	/// <summary>
	/// Details about an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LayersListItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayerVersionsListItem LatestMatchingVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProvisionedConcurrencyConfigsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProvisionedConcurrencyConfigListItem[] ProvisionedConcurrencyConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
	}
	
	/// <summary>
	/// Details about the provisioned concurrency configuration for a function alias or version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProvisionedConcurrencyConfigListItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RequestedProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AvailableProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProvisionedConcurrencyStatusEnum Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVersionsByFunctionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextMarker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionConfiguration[] Versions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishLayerVersionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LayerVersionContentOutput Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerVersionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime[] CompatibleRuntimes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] CompatibleArchitectures { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutFunctionCodeSigningConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CodeSigningConfigArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutProvisionedConcurrencyConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RequestedProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AvailableProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllocatedProvisionedConcurrentExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ProvisionedConcurrencyStatusEnum Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModified { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutRuntimeManagementConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateRuntimeOn UpdateRuntimeOn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RuntimeVersionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCodeSigningConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningConfig CodeSigningConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFunctionUrlConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionUrl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Cors Cors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddLayerVersionPermissionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StatementId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Action { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Principal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddPermissionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StatementId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Action { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Principal { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceAccount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSourceToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrincipalOrgID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType FunctionUrlAuthType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAliasRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasRoutingConfiguration RoutingConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCodeSigningConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AllowedPublishers AllowedPublishers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningPolicies CodeSigningPolicies { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEventSourceMappingRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BatchSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterCriteria FilterCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumBatchingWindowInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelizationFactor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourcePosition StartingPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartingPositionTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationConfig DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRecordAgeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BisectBatchOnFunctionError { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TumblingWindowInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceAccessConfiguration[] SourceAccessConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedEventSource SelfManagedEventSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionResponseType[] FunctionResponseTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfig ScalingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; set; }
	}
	
	/// <summary>
	/// The code for the Lambda function. You can either specify an object in Amazon S3, upload a .zip file archive deployment package directly, or specify the URI of a container image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FunctionCode
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUri { get; set; }
	}
	
	/// <summary>
	/// The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Environment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariables Variables { get; set; }
	}
	
	/// <summary>
	/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TracingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TracingMode Mode { get; set; }
	}
	
	/// <summary>
	/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Lambda SnapStart</a> setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapStart
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStartApplyOn ApplyOn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFunctionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime Runtime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Handler { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Publish { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeadLetterConfig DeadLetterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Environment Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TracingConfig TracingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Layers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FileSystemConfig[] FileSystemConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImageConfig ImageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CodeSigningConfigArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] Architectures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EphemeralStorage EphemeralStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStart SnapStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateFunctionUrlConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Cors Cors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAliasRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCodeSigningConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventSourceMappingRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFunctionCodeSigningConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFunctionConcurrencyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFunctionEventInvokeConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFunctionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteFunctionUrlConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteLayerVersionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteProvisionedConcurrencyConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndPointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KAFKA_BOOTSTRAP_SERVERS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FunctionVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAccountSettingsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAliasRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCodeSigningConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEventSourceMappingRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionCodeSigningConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionConcurrencyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionEventInvokeConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFunctionUrlConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLayerVersionByArnRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLayerVersionPolicyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLayerVersionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPolicyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetProvisionedConcurrencyConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRuntimeManagementConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InvocationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Event = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestResponse = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DryRun = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tail = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvocationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Payload { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeAsyncRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InvokeArgs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ResponseStreamingInvocationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequestResponse = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DryRun = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvokeWithResponseStreamRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Payload { get; set; }
	}
	
	/// <summary>
	/// A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LayerVersionContentInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAliasesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCodeSigningConfigsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEventSourceMappingsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionEventInvokeConfigsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionUrlConfigsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionsByCodeSigningConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFunctionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLayerVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLayersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListProvisionedConcurrencyConfigsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVersionsByFunctionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishLayerVersionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LayerVersionContentInput Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime[] CompatibleRuntimes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LicenseInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] CompatibleArchitectures { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublishVersionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CodeSha256 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutFunctionCodeSigningConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CodeSigningConfigArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutFunctionConcurrencyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ReservedConcurrentExecutions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutFunctionEventInvokeConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumEventAgeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationConfig DestinationConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutProvisionedConcurrencyConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ProvisionedConcurrentExecutions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutRuntimeManagementConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateRuntimeOn UpdateRuntimeOn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RuntimeVersionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveLayerVersionPermissionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemovePermissionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAliasRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AliasRoutingConfiguration RoutingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCodeSigningConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AllowedPublishers AllowedPublishers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningPolicies CodeSigningPolicies { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEventSourceMappingRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FunctionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BatchSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterCriteria FilterCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumBatchingWindowInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationConfig DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRecordAgeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BisectBatchOnFunctionError { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelizationFactor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceAccessConfiguration[] SourceAccessConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TumblingWindowInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionResponseType[] FunctionResponseTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConfig ScalingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFunctionCodeRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Publish { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DryRun { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture[] Architectures { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFunctionConfigurationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Role { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Handler { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Timeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfig VpcConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Environment Environment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Runtime Runtime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeadLetterConfig DeadLetterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TracingConfig TracingConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Layers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FileSystemConfig[] FileSystemConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImageConfig ImageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EphemeralStorage EphemeralStorage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStart SnapStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFunctionEventInvokeConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumEventAgeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationConfig DestinationConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateFunctionUrlConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Cors Cors { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Adds permissions to the resource-based policy of a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all accounts in an organization, or all Amazon Web Services accounts. </p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>
		/// AddLayerVersionPermission 2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy
		/// </summary>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="VersionNumber">The version number.</param>
		/// <param name="RevisionId">Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.</param>
		public async Task AddLayerVersionPermissionAsync(string LayerName, int VersionNumber, string RevisionId, AddLayerVersionPermissionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions/"+VersionNumber+"/policy&RevisionId=" + (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the permission policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.
		/// GetLayerVersionPolicy 2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy
		/// </summary>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="VersionNumber">The version number.</param>
		/// <returns>Success</returns>
		public async Task<GetLayerVersionPolicyResponse> GetLayerVersionPolicyAsync(string LayerName, int VersionNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions/"+VersionNumber+"/policy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLayerVersionPolicyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Grants an Amazon Web Service, Amazon Web Services account, or Amazon Web Services organization permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function. Note: Lambda does not support adding policies to version $LATEST.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. To grant permission to an organization defined in Organizations, specify the organization ID as the <code>PrincipalOrgID</code>. For Amazon Web Services, the principal is a domain-style identifier that the service defines, such as <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For Amazon Web Services, you can also specify the ARN of the associated resource as the <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This operation adds a statement to a resource-based permissions policy for the function. For more information about function policies, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">Using resource-based policies for Lambda</a>.</p>
		/// AddPermission 2015-03-31/functions/{FunctionName}/policy
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">Specify a version or alias to add permissions to a published version of the function.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task AddPermissionAsync(string FunctionName, string Qualifier, AddPermissionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/policy&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">resource-based IAM policy</a> for a function, version, or alias.
		/// GetPolicy 2015-03-31/functions/{FunctionName}/policy
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Qualifier">Specify a version or alias to get the policy for that resource.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<GetPolicyResponse> GetPolicyAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/policy&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPolicyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>
		/// CreateAlias 2015-03-31/functions/{FunctionName}/aliases
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		public async Task CreateAliasAsync(string FunctionName, CreateAliasPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/aliases";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">aliases</a> for a Lambda function.
		/// ListAliases 2015-03-31/functions/{FunctionName}/aliases
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="FunctionVersion">Specify a function version to only list aliases that invoke that version.
		/// Min length: 1
		/// Max length: 1024
		// </param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">Limit the number of aliases returned.
		/// Minimum: 1
		/// Maximum: 10000
		// </param>
		/// <returns>Success</returns>
		public async Task<ListAliasesResponse> ListAliasesAsync(string FunctionName, string FunctionVersion, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/aliases&FunctionVersion=" + (FunctionVersion==null? "" : System.Uri.EscapeDataString(FunctionVersion))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAliasesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a code signing configuration. A <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html">code signing configuration</a> defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail).
		/// CreateCodeSigningConfig 2020-04-22/code-signing-configs/
		/// </summary>
		public async Task CreateCodeSigningConfigAsync(CreateCodeSigningConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-04-22/code-signing-configs/";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuring-codesigning.html">code signing configurations</a>. A request returns up to 10,000 configurations per call. You can use the <code>MaxItems</code> parameter to return fewer configurations per call.
		/// ListCodeSigningConfigs 2020-04-22/code-signing-configs/
		/// </summary>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">Maximum number of items to return.
		/// Minimum: 1
		/// Maximum: 10000
		// </param>
		/// <returns>Success</returns>
		public async Task<ListCodeSigningConfigsResponse> ListCodeSigningConfigsAsync(string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-04-22/code-signing-configs/?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListCodeSigningConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a mapping between an event source and an Lambda function. Lambda reads items from the event source and invokes the function.</p> <p>For details about how to configure different event sources, see the following topics. </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping"> Amazon Kinesis</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource"> Amazon SQS</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html"> Amazon MSK</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html"> Apache Kafka</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html"> Amazon DocumentDB</a> </p> </li> </ul> <p>The following error handling options are available only for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> – If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> – Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> – Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> – Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> – Process multiple batches from each shard concurrently.</p> </li> </ul> <p>For information about which configuration parameters apply to each event source, see the following topics.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-params"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-params"> Amazon Kinesis</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#services-sqs-params"> Amazon SQS</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-params"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-parms"> Amazon MSK</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka.html#services-kafka-parms"> Apache Kafka</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html#docdb-configuration"> Amazon DocumentDB</a> </p> </li> </ul>
		/// CreateEventSourceMapping 2015-03-31/event-source-mappings/
		/// </summary>
		public async Task CreateEventSourceMappingAsync(CreateEventSourceMappingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/event-source-mappings/";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists event source mappings. Specify an <code>EventSourceArn</code> to show only event source mappings for a single event source.
		/// ListEventSourceMappings 2015-03-31/event-source-mappings/
		/// </summary>
		/// <param name="EventSourceArn"><p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> – The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> – The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> – The ARN of the queue.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> – The ARN of the cluster.</p> </li> <li> <p> <b>Amazon MQ</b> – The ARN of the broker.</p> </li> <li> <p> <b>Amazon DocumentDB</b> – The ARN of the DocumentDB change stream.</p> </li> </ul></param>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Marker">A pagination token returned by a previous call.</param>
		/// <param name="MaxItems">The maximum number of event source mappings to return. Note that ListEventSourceMappings returns a maximum of 100 items in each response, even if you set the number higher.
		/// Minimum: 1
		/// Maximum: 10000
		// </param>
		/// <returns>Success</returns>
		public async Task<ListEventSourceMappingsResponse> ListEventSourceMappingsAsync(string EventSourceArn, string FunctionName, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/event-source-mappings/?EventSourceArn=" + (EventSourceArn==null? "" : System.Uri.EscapeDataString(EventSourceArn))+"&FunctionName=" + (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEventSourceMappingsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a Lambda function. To create a function, you need a <a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html">deployment package</a> and an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role">execution role</a>. The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p> <p>If the deployment package is a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html">container image</a>, then you set the package type to <code>Image</code>. For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties.</p> <p>If the deployment package is a <a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip">.zip file archive</a>, then you set the package type to <code>Zip</code>. For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties. The code in the deployment package must be compatible with the target instruction set architecture of the function (<code>x86-64</code> or <code>arm64</code>). If you do not specify the architecture, then the default value is <code>x86-64</code>.</p> <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html">Lambda function states</a>.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set of signing profiles, which define the trusted publishers for this function.</p> <p>If another Amazon Web Services account or an Amazon Web Service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based Identity and Access Management (IAM) policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other Amazon Web Services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html">Invoking Lambda functions</a>.</p>
		/// CreateFunction 2015-03-31/functions
		/// </summary>
		public async Task CreateFunctionAsync(CreateFunctionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Lambda function URL with the specified configuration parameters. A function URL is a dedicated HTTP(S) endpoint that you can use to invoke your function.
		/// CreateFunctionUrlConfig 2021-10-31/functions/{FunctionName}/url
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task CreateFunctionUrlConfigAsync(string FunctionName, string Qualifier, CreateFunctionUrlConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/url&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Lambda function URL. When you delete a function URL, you can't recover it. Creating a new function URL results in a different URL address.
		/// DeleteFunctionUrlConfig 2021-10-31/functions/{FunctionName}/url
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteFunctionUrlConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/url&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about a Lambda function URL.
		/// GetFunctionUrlConfig 2021-10-31/functions/{FunctionName}/url
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<GetFunctionUrlConfigResponse> GetFunctionUrlConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/url&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFunctionUrlConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the configuration for a Lambda function URL.
		/// UpdateFunctionUrlConfig 2021-10-31/functions/{FunctionName}/url
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateFunctionUrlConfigResponse> UpdateFunctionUrlConfigAsync(string FunctionName, string Qualifier, UpdateFunctionUrlConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/url&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateFunctionUrlConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">alias</a>.
		/// DeleteAlias 2015-03-31/functions/{FunctionName}/aliases/{Name}
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Name">The name of the alias.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteAliasAsync(string FunctionName, string Name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/aliases/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">alias</a>.
		/// GetAlias 2015-03-31/functions/{FunctionName}/aliases/{Name}
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Name">The name of the alias.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<AliasConfiguration> GetAliasAsync(string FunctionName, string Name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/aliases/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AliasConfiguration>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the configuration of a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html">alias</a>.
		/// UpdateAlias 2015-03-31/functions/{FunctionName}/aliases/{Name}
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Name">The name of the alias.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<AliasConfiguration> UpdateAliasAsync(string FunctionName, string Name, UpdateAliasPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/aliases/"+ (Name==null? "" : System.Uri.EscapeDataString(Name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AliasConfiguration>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the code signing configuration. You can delete the code signing configuration only if no function is using it.
		/// DeleteCodeSigningConfig 2020-04-22/code-signing-configs/{CodeSigningConfigArn}
		/// </summary>
		/// <param name="CodeSigningConfigArn">The The Amazon Resource Name (ARN) of the code signing configuration.
		/// Max length: 200
		// </param>
		public async Task DeleteCodeSigningConfigAsync(string CodeSigningConfigArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-04-22/code-signing-configs/"+ (CodeSigningConfigArn==null? "" : System.Uri.EscapeDataString(CodeSigningConfigArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about the specified code signing configuration.
		/// GetCodeSigningConfig 2020-04-22/code-signing-configs/{CodeSigningConfigArn}
		/// </summary>
		/// <param name="CodeSigningConfigArn">The The Amazon Resource Name (ARN) of the code signing configuration. 
		/// Max length: 200
		// </param>
		/// <returns>Success</returns>
		public async Task<GetCodeSigningConfigResponse> GetCodeSigningConfigAsync(string CodeSigningConfigArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-04-22/code-signing-configs/"+ (CodeSigningConfigArn==null? "" : System.Uri.EscapeDataString(CodeSigningConfigArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCodeSigningConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update the code signing configuration. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function.
		/// UpdateCodeSigningConfig 2020-04-22/code-signing-configs/{CodeSigningConfigArn}
		/// </summary>
		/// <param name="CodeSigningConfigArn">The The Amazon Resource Name (ARN) of the code signing configuration.
		/// Max length: 200
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateCodeSigningConfigResponse> UpdateCodeSigningConfigAsync(string CodeSigningConfigArn, UpdateCodeSigningConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-04-22/code-signing-configs/"+ (CodeSigningConfigArn==null? "" : System.Uri.EscapeDataString(CodeSigningConfigArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateCodeSigningConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p> <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely deleted for several seconds.</p>
		/// DeleteEventSourceMapping 2015-03-31/event-source-mappings/{UUID}
		/// </summary>
		/// <param name="UUID">The identifier of the event source mapping.</param>
		public async Task DeleteEventSourceMappingAsync(string UUID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/event-source-mappings/"+ (UUID==null? "" : System.Uri.EscapeDataString(UUID));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.
		/// GetEventSourceMapping 2015-03-31/event-source-mappings/{UUID}
		/// </summary>
		/// <param name="UUID">The identifier of the event source mapping.</param>
		/// <returns>Success</returns>
		public async Task<EventSourceMappingConfiguration> GetEventSourceMappingAsync(string UUID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/event-source-mappings/"+ (UUID==null? "" : System.Uri.EscapeDataString(UUID));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<EventSourceMappingConfiguration>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.</p> <p>For details about how to configure different event sources, see the following topics. </p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping"> Amazon Kinesis</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource"> Amazon SQS</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html"> Amazon MSK</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html"> Apache Kafka</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html"> Amazon DocumentDB</a> </p> </li> </ul> <p>The following error handling options are available only for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> – If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> – Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> – Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> – Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> – Process multiple batches from each shard concurrently.</p> </li> </ul> <p>For information about which configuration parameters apply to each event source, see the following topics.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-params"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-params"> Amazon Kinesis</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#services-sqs-params"> Amazon SQS</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-params"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-parms"> Amazon MSK</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kafka.html#services-kafka-parms"> Apache Kafka</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html#docdb-configuration"> Amazon DocumentDB</a> </p> </li> </ul>
		/// UpdateEventSourceMapping 2015-03-31/event-source-mappings/{UUID}
		/// </summary>
		/// <param name="UUID">The identifier of the event source mapping.</param>
		public async Task UpdateEventSourceMappingAsync(string UUID, UpdateEventSourceMappingPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/event-source-mappings/"+ (UUID==null? "" : System.Uri.EscapeDataString(UUID));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted. This doesn't require the user to have explicit permissions for <a>DeleteAlias</a>.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For Amazon Web Services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>
		/// DeleteFunction 2015-03-31/functions/{FunctionName}
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function or version.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:1</code> (with version).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">Specify a version to delete. You can't delete a version that an alias references.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteFunctionAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about the function or function version, with a link to download the deployment package that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.
		/// GetFunction 2015-03-31/functions/{FunctionName}
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Qualifier">Specify a version or alias to get details about a published version of the function.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<GetFunctionResponse> GetFunctionAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFunctionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the code signing configuration from the function.
		/// DeleteFunctionCodeSigningConfig 2020-06-30/functions/{FunctionName}/code-signing-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		public async Task DeleteFunctionCodeSigningConfigAsync(string FunctionName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-06-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/code-signing-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the code signing configuration for the specified function.
		/// GetFunctionCodeSigningConfig 2020-06-30/functions/{FunctionName}/code-signing-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<GetFunctionCodeSigningConfigResponse> GetFunctionCodeSigningConfigAsync(string FunctionName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-06-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/code-signing-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFunctionCodeSigningConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update the code signing configuration for the function. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function.
		/// PutFunctionCodeSigningConfig 2020-06-30/functions/{FunctionName}/code-signing-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<PutFunctionCodeSigningConfigResponse> PutFunctionCodeSigningConfigAsync(string FunctionName, PutFunctionCodeSigningConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-06-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/code-signing-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutFunctionCodeSigningConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a concurrent execution limit from a function.
		/// DeleteFunctionConcurrency 2017-10-31/functions/{FunctionName}/concurrency
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		public async Task DeleteFunctionConcurrencyAsync(string FunctionName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2017-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/concurrency";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren't configured with a per-function limit. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-scaling.html">Lambda function scaling</a>.</p>
		/// PutFunctionConcurrency 2017-10-31/functions/{FunctionName}/concurrency
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<Concurrency> PutFunctionConcurrencyAsync(string FunctionName, PutFunctionConcurrencyPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2017-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/concurrency";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Concurrency>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>
		/// DeleteFunctionEventInvokeConfig 2019-09-25/functions/{FunctionName}/event-invoke-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">A version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteFunctionEventInvokeConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-25/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/event-invoke-config&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>
		/// GetFunctionEventInvokeConfig 2019-09-25/functions/{FunctionName}/event-invoke-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">A version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<FunctionEventInvokeConfig> GetFunctionEventInvokeConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-25/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/event-invoke-config&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FunctionEventInvokeConfig>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Configures options for <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html">asynchronous invocation</a> on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p> <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.</p> <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations">destination</a>. You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.</p>
		/// PutFunctionEventInvokeConfig 2019-09-25/functions/{FunctionName}/event-invoke-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">A version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<FunctionEventInvokeConfig> PutFunctionEventInvokeConfigAsync(string FunctionName, string Qualifier, PutFunctionEventInvokeConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-25/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/event-invoke-config&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FunctionEventInvokeConfig>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>
		/// UpdateFunctionEventInvokeConfig 2019-09-25/functions/{FunctionName}/event-invoke-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">A version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<FunctionEventInvokeConfig> UpdateFunctionEventInvokeConfigAsync(string FunctionName, string Qualifier, UpdateFunctionEventInvokeConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-25/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/event-invoke-config&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FunctionEventInvokeConfig>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.
		/// DeleteLayerVersion 2018-10-31/layers/{LayerName}/versions/{VersionNumber}
		/// </summary>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="VersionNumber">The version number.</param>
		public async Task DeleteLayerVersionAsync(string LayerName, int VersionNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions/"+VersionNumber;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.
		/// GetLayerVersion 2018-10-31/layers/{LayerName}/versions/{VersionNumber}
		/// </summary>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="VersionNumber">The version number.</param>
		/// <returns>Success</returns>
		public async Task<GetLayerVersionResponse> GetLayerVersionAsync(string LayerName, int VersionNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions/"+VersionNumber;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLayerVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the provisioned concurrency configuration for a function.
		/// DeleteProvisionedConcurrencyConfig 2019-09-30/functions/{FunctionName}/provisioned-concurrency#Qualifier
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteProvisionedConcurrencyConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/provisioned-concurrency#Qualifier&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the provisioned concurrency configuration for a function's alias or version.
		/// GetProvisionedConcurrencyConfig 2019-09-30/functions/{FunctionName}/provisioned-concurrency#Qualifier
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<GetProvisionedConcurrencyConfigResponse> GetProvisionedConcurrencyConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/provisioned-concurrency#Qualifier&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetProvisionedConcurrencyConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a provisioned concurrency configuration to a function's alias or version.
		/// PutProvisionedConcurrencyConfig 2019-09-30/functions/{FunctionName}/provisioned-concurrency#Qualifier
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">The version number or alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task PutProvisionedConcurrencyConfigAsync(string FunctionName, string Qualifier, PutProvisionedConcurrencyConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/provisioned-concurrency#Qualifier&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves details about your account's <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limits</a> and usage in an Amazon Web Services Region.
		/// GetAccountSettings 2016-08-19/account-settings/
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAccountSettingsResponse> GetAccountSettingsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2016-08-19/account-settings/";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAccountSettingsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a function, use <a>PutFunctionConcurrency</a>.
		/// GetFunctionConcurrency 2019-09-30/functions/{FunctionName}/concurrency
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<GetFunctionConcurrencyResponse> GetFunctionConcurrencyAsync(string FunctionName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/concurrency";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFunctionConcurrencyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>
		/// GetFunctionConfiguration 2015-03-31/functions/{FunctionName}/configuration
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Qualifier">Specify a version or alias to get details about a published version of the function.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<FunctionConfiguration> GetFunctionConfigurationAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/configuration&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FunctionConfiguration>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modify the version-specific settings of a Lambda function.</p> <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can't modify the function, but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the update is complete and the function is processing events with the new configuration. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html">Lambda function states</a>.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can't modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an Amazon Web Services account or Amazon Web Service, use <a>AddPermission</a>.</p>
		/// UpdateFunctionConfiguration 2015-03-31/functions/{FunctionName}/configuration
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<FunctionConfiguration> UpdateFunctionConfigurationAsync(string FunctionName, UpdateFunctionConfigurationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/configuration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FunctionConfiguration>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.
		/// GetLayerVersionByArn 2018-10-31/layers#find=LayerVersion&Arn
		/// </summary>
		/// <param name="Arn">The ARN of the layer version.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<GetLayerVersionResponse> GetLayerVersionByArnAsync(string Arn, GetLayerVersionByArnFind find, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers#find=LayerVersion&Arn?Arn=" + (Arn==null? "" : System.Uri.EscapeDataString(Arn))+"&find=" + find;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLayerVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the runtime management configuration for a function's version. If the runtime update mode is <b>Manual</b>, this includes the ARN of the runtime version and the runtime update mode. If the runtime update mode is <b>Auto</b> or <b>Function update</b>, this includes the runtime update mode and <code>null</code> is returned for the ARN. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html">Runtime updates</a>.
		/// GetRuntimeManagementConfig 2021-07-20/functions/{FunctionName}/runtime-management-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Qualifier">Specify a version of the function. This can be <code>$LATEST</code> or a published version number. If no value is specified, the configuration for the <code>$LATEST</code> version is returned.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<GetRuntimeManagementConfigResponse> GetRuntimeManagementConfigAsync(string FunctionName, string Qualifier, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-07-20/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/runtime-management-config&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetRuntimeManagementConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the runtime management configuration for a function's version. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html">Runtime updates</a>.
		/// PutRuntimeManagementConfig 2021-07-20/functions/{FunctionName}/runtime-management-config
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Qualifier">Specify a version of the function. This can be <code>$LATEST</code> or a published version number. If no value is specified, the configuration for the <code>$LATEST</code> version is returned.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<PutRuntimeManagementConfigResponse> PutRuntimeManagementConfigAsync(string FunctionName, string Qualifier, PutRuntimeManagementConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-07-20/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/runtime-management-config&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutRuntimeManagementConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html">synchronous invocation</a>, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href="https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html">execution log</a> and <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html">trace</a>.</p> <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-retries.html">Error handling and automatic retries in Lambda</a>.</p> <p>For <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html">asynchronous invocation</a>, Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq">dead-letter queue</a>.</p> <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html">quota</a> errors, or issues with your function's code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if running the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might disconnect during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html">lambda:InvokeFunction</a> action. For details on how to set up permissions for cross-account invocations, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html#permissions-resource-xaccountinvoke">Granting function access to other accounts</a>.</p>
		/// Invoke 2015-03-31/functions/{FunctionName}/invocations
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Qualifier">Specify a version or alias to invoke a published version of the function.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<InvocationResponse> InvokeAsync(string FunctionName, string Qualifier, InvokePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/invocations&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<InvocationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>
		/// Invoke 2014-11-13/functions/{FunctionName}/invoke-async/
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		public async Task InvokeAsync(string FunctionName, InvokePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2014-11-13/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/invoke-async/";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Configure your Lambda functions to stream response payloads back to clients. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html">Configuring a Lambda function to stream responses</a>.</p> <p>This operation requires permission for the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html">lambda:InvokeFunction</a> action. For details on how to set up permissions for cross-account invocations, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html#permissions-resource-xaccountinvoke">Granting function access to other accounts</a>.</p>
		/// InvokeWithResponseStream 2021-11-15/functions/{FunctionName}/response-streaming-invocations
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Qualifier">The alias name.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<InvokeWithResponseStreamResponse> InvokeWithResponseStreamAsync(string FunctionName, string Qualifier, InvokeWithResponseStreamPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-11-15/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/response-streaming-invocations&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<InvokeWithResponseStreamResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves a list of configurations for asynchronous invocation for a function.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>
		/// ListFunctionEventInvokeConfigs 2019-09-25/functions/{FunctionName}/event-invoke-config/list
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">The maximum number of configurations to return.
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<ListFunctionEventInvokeConfigsResponse> ListFunctionEventInvokeConfigsAsync(string FunctionName, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-25/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/event-invoke-config/list&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFunctionEventInvokeConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of Lambda function URLs for the specified function.
		/// ListFunctionUrlConfigs 2021-10-31/functions/{FunctionName}/urls
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">The maximum number of function URLs to return in the response. Note that <code>ListFunctionUrlConfigs</code> returns a maximum of 50 items in each response, even if you set the number higher.
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<ListFunctionUrlConfigsResponse> ListFunctionUrlConfigsAsync(string FunctionName, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-10-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/urls&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFunctionUrlConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version.</p> <note> <p>The <code>ListFunctions</code> operation returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode, RuntimeVersionConfig) for a function or version, use <a>GetFunction</a>.</p> </note>
		/// ListFunctions 2015-03-31/functions/
		/// </summary>
		/// <param name="MasterRegion">For Lambda@Edge functions, the Amazon Web Services Region of the master function. For example, <code>us-east-1</code> filters the list of functions to include only Lambda@Edge functions replicated from a master function in US East (N. Virginia). If specified, you must set <code>FunctionVersion</code> to <code>ALL</code>.</param>
		/// <param name="FunctionVersion">Set to <code>ALL</code> to include entries for all published versions of each function.</param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">The maximum number of functions to return in the response. Note that <code>ListFunctions</code> returns a maximum of 50 items in each response, even if you set the number higher.
		/// Minimum: 1
		/// Maximum: 10000
		// </param>
		/// <returns>Success</returns>
		public async Task<ListFunctionsResponse> ListFunctionsAsync(string MasterRegion, FunctionVersion FunctionVersion, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/?MasterRegion=" + (MasterRegion==null? "" : System.Uri.EscapeDataString(MasterRegion))+"&FunctionVersion=" + FunctionVersion+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFunctionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the functions that use the specified code signing configuration. You can use this method prior to deleting a code signing configuration, to verify that no functions are using it.
		/// ListFunctionsByCodeSigningConfig 2020-04-22/code-signing-configs/{CodeSigningConfigArn}/functions
		/// </summary>
		/// <param name="CodeSigningConfigArn">The The Amazon Resource Name (ARN) of the code signing configuration.
		/// Max length: 200
		// </param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">Maximum number of items to return.
		/// Minimum: 1
		/// Maximum: 10000
		// </param>
		/// <returns>Success</returns>
		public async Task<ListFunctionsByCodeSigningConfigResponse> ListFunctionsByCodeSigningConfigAsync(string CodeSigningConfigArn, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2020-04-22/code-signing-configs/"+ (CodeSigningConfigArn==null? "" : System.Uri.EscapeDataString(CodeSigningConfigArn))+"/functions&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListFunctionsByCodeSigningConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the versions of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. Versions that have been deleted aren't listed. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime identifier</a> to list only versions that indicate that they're compatible with that runtime. Specify a compatible architecture to include only layer versions that are compatible with that architecture.
		/// ListLayerVersions 2018-10-31/layers/{LayerName}/versions
		/// </summary>
		/// <param name="CompatibleRuntime"><p>A runtime identifier. For example, <code>go1.x</code>.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p></param>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Marker">A pagination token returned by a previous call.</param>
		/// <param name="MaxItems">The maximum number of versions to return.
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <param name="CompatibleArchitecture">The compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html">instruction set architecture</a>.</param>
		/// <returns>Success</returns>
		public async Task<ListLayerVersionsResponse> ListLayerVersionsAsync(ListLayerVersionsCompatibleRuntime CompatibleRuntime, string LayerName, string Marker, int MaxItems, Architecture CompatibleArchitecture, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions?CompatibleRuntime=" + CompatibleRuntime+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems+"&CompatibleArchitecture=" + CompatibleArchitecture;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListLayerVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same layer name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>
		/// PublishLayerVersion 2018-10-31/layers/{LayerName}/versions
		/// </summary>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		public async Task PublishLayerVersionAsync(string LayerName, PublishLayerVersionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html">Lambda layers</a> and shows information about the latest version of each. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime identifier</a> to list only layers that indicate that they're compatible with that runtime. Specify a compatible architecture to include only layers that are compatible with that <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html">instruction set architecture</a>.
		/// ListLayers 2018-10-31/layers
		/// </summary>
		/// <param name="CompatibleRuntime"><p>A runtime identifier. For example, <code>go1.x</code>.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p></param>
		/// <param name="Marker">A pagination token returned by a previous call.</param>
		/// <param name="MaxItems">The maximum number of layers to return.
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <param name="CompatibleArchitecture">The compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html">instruction set architecture</a>.</param>
		/// <returns>Success</returns>
		public async Task<ListLayersResponse> ListLayersAsync(ListLayersCompatibleRuntime CompatibleRuntime, string Marker, int MaxItems, Architecture CompatibleArchitecture, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers?CompatibleRuntime=" + CompatibleRuntime+"&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems+"&CompatibleArchitecture=" + CompatibleArchitecture;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListLayersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves a list of provisioned concurrency configurations for a function.
		/// ListProvisionedConcurrencyConfigs 2019-09-30/functions/{FunctionName}/provisioned-concurrency#List=ALL
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">Specify a number to limit the number of configurations returned.
		/// Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Success</returns>
		public async Task<ListProvisionedConcurrencyConfigsResponse> ListProvisionedConcurrencyConfigsAsync(string FunctionName, string Marker, int MaxItems, FunctionVersion List, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2019-09-30/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/provisioned-concurrency#List=ALL&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems+"&List=" + List;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListProvisionedConcurrencyConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>. You can also view tags with <a>GetFunction</a>.
		/// ListTags 2017-03-31/tags/{ARN}
		/// </summary>
		/// <param name="ARN">The function's Amazon Resource Name (ARN). Note: Lambda does not support adding tags to aliases or versions.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsResponse> ListTagsAsync(string ARN, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2017-03-31/tags/"+ (ARN==null? "" : System.Uri.EscapeDataString(ARN));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to a function.
		/// TagResource 2017-03-31/tags/{ARN}
		/// </summary>
		/// <param name="ARN">The function's Amazon Resource Name (ARN).</param>
		public async Task TagResourceAsync(string ARN, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2017-03-31/tags/"+ (ARN==null? "" : System.Uri.EscapeDataString(ARN));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">versions</a>, with the version-specific configuration of each. Lambda returns up to 50 versions per call.
		/// ListVersionsByFunction 2015-03-31/functions/{FunctionName}/versions
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 170
		// </param>
		/// <param name="Marker">Specify the pagination token that's returned by a previous request to retrieve the next page of results.</param>
		/// <param name="MaxItems">The maximum number of versions to return. Note that <code>ListVersionsByFunction</code> returns a maximum of 50 items in each response, even if you set the number higher.
		/// Minimum: 1
		/// Maximum: 10000
		// </param>
		/// <returns>Success</returns>
		public async Task<ListVersionsByFunctionResponse> ListVersionsByFunctionAsync(string FunctionName, string Marker, int MaxItems, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/versions&Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker))+"&MaxItems="+MaxItems;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListVersionsByFunctionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn't change.</p> <p>Lambda doesn't publish a version if the function's configuration and code haven't changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>
		/// PublishVersion 2015-03-31/functions/{FunctionName}/versions
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		public async Task PublishVersionAsync(string FunctionName, PublishVersionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/versions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a statement from the permissions policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.
		/// RemoveLayerVersionPermission 2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}
		/// </summary>
		/// <param name="LayerName">The name or Amazon Resource Name (ARN) of the layer.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="VersionNumber">The version number.</param>
		/// <param name="StatementId">The identifier that was specified when the statement was added.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RevisionId">Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.</param>
		public async Task RemoveLayerVersionPermissionAsync(string LayerName, int VersionNumber, string StatementId, string RevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2018-10-31/layers/"+ (LayerName==null? "" : System.Uri.EscapeDataString(LayerName))+"/versions/"+VersionNumber+"/policy/"+ (StatementId==null? "" : System.Uri.EscapeDataString(StatementId))+"&RevisionId=" + (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Revokes function-use permission from an Amazon Web Service or another Amazon Web Services account. You can get the ID of the statement from the output of <a>GetPolicy</a>.
		/// RemovePermission 2015-03-31/functions/{FunctionName}/policy/{StatementId}
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function, version, or alias.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <param name="StatementId">Statement ID of the permission to remove.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="Qualifier">Specify a version or alias to remove permissions from a published version of the function.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="RevisionId">Update the policy only if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.</param>
		public async Task RemovePermissionAsync(string FunctionName, string StatementId, string Qualifier, string RevisionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/policy/"+ (StatementId==null? "" : System.Uri.EscapeDataString(StatementId))+"&Qualifier=" + (Qualifier==null? "" : System.Uri.EscapeDataString(Qualifier))+"&RevisionId=" + (RevisionId==null? "" : System.Uri.EscapeDataString(RevisionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> from a function.
		/// UntagResource 2017-03-31/tags/{ARN}#tagKeys
		/// </summary>
		/// <param name="ARN">The function's Amazon Resource Name (ARN).</param>
		/// <param name="tagKeys">A list of tag keys to remove from the function.</param>
		public async Task UntagResourceAsync(string ARN, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2017-03-31/tags/"+ (ARN==null? "" : System.Uri.EscapeDataString(ARN))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a Lambda function's code. If code signing is enabled for the function, the code package must be signed by a trusted publisher. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html">Configuring code signing for Lambda</a>.</p> <p>If the function's package type is <code>Image</code>, then you must specify the code package in <code>ImageUri</code> as the URI of a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html">container image</a> in the Amazon ECR registry.</p> <p>If the function's package type is <code>Zip</code>, then you must specify the deployment package as a <a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip">.zip file archive</a>. Enter the Amazon S3 bucket and key of the code .zip file location. You can also provide the function code inline using the <code>ZipFile</code> field.</p> <p>The code in the deployment package must be compatible with the target instruction set architecture of the function (<code>x86-64</code> or <code>arm64</code>).</p> <p>The function's code is locked when you publish a version. You can't modify the code of a published version, only the unpublished version.</p> <note> <p>For a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if you update the image tag to a new image, Lambda does not automatically update the function.</p> </note>
		/// UpdateFunctionCode 2015-03-31/functions/{FunctionName}/code
		/// </summary>
		/// <param name="FunctionName"><p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task<FunctionConfiguration> UpdateFunctionCodeAsync(string FunctionName, UpdateFunctionCodePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2015-03-31/functions/"+ (FunctionName==null? "" : System.Uri.EscapeDataString(FunctionName))+"/code";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<FunctionConfiguration>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class AddLayerVersionPermissionPostBody
	{
		
		/// <summary>
		/// An identifier that distinguishes the policy from others on the same layer version.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ([a-zA-Z0-9-_]+)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([a-zA-Z0-9-_]+)")]
		public string StatementId { get; set; }
		
		/// <summary>
		/// The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.
		/// Required
		/// Max length: 22
		/// Pattern: lambda:GetLayerVersion
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(22)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"lambda:GetLayerVersion")]
		public string Action { get; set; }
		
		/// <summary>
		/// An account ID, or <code>*</code> to grant layer usage permission to all accounts in an organization, or all Amazon Web Services accounts (if <code>organizationId</code> is not specified). For the last case, make sure that you really do want all Amazon Web Services accounts to have usage permission to this layer. 
		/// Required
		/// Pattern: \d{12}|\*|arn:(aws[a-zA-Z-]*):iam::\d{12}:root
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}|\*|arn:(aws[a-zA-Z-]*):iam::\d{12}:root")]
		public string Principal { get; set; }
		
		/// <summary>
		/// With the principal set to <code>*</code>, grant permission to all accounts in the specified organization.
		/// Max length: 34
		/// Pattern: o-[a-z0-9]{10,32}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"o-[a-z0-9]{10,32}")]
		public string OrganizationId { get; set; }
	}
	
	public class AddPermissionPostBody
	{
		
		/// <summary>
		/// A statement identifier that differentiates the statement from others in the same policy.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ([a-zA-Z0-9-_]+)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([a-zA-Z0-9-_]+)")]
		public string StatementId { get; set; }
		
		/// <summary>
		/// The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or <code>lambda:GetFunction</code>.
		/// Required
		/// Pattern: (lambda:[*]|lambda:[a-zA-Z]+|[*])
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(lambda:[*]|lambda:[a-zA-Z]+|[*])")]
		public string Action { get; set; }
		
		/// <summary>
		/// The Amazon Web Service or Amazon Web Services account that invokes the function. If you specify a service, use <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function through that service.
		/// Required
		/// Pattern: [^\s]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[^\s]+")]
		public string Principal { get; set; }
		
		/// <summary>
		/// <p>For Amazon Web Services, the ARN of the Amazon Web Services resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.</p> <p>Note that Lambda configures the comparison using the <code>StringLike</code> operator.</p>
		/// Pattern: arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)")]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// For Amazon Web Service, the ID of the Amazon Web Services account that owns the resource. Use this together with <code>SourceArn</code> to ensure that the specified account owns the resource. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.
		/// Max length: 12
		/// Pattern: \d{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{12}")]
		public string SourceAccount { get; set; }
		
		/// <summary>
		/// For Alexa Smart Home functions, a token that the invoker must supply.
		/// Min length: 0
		/// Max length: 256
		/// Pattern: [a-zA-Z0-9._\-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9._\-]+")]
		public string EventSourceToken { get; set; }
		
		/// <summary>
		/// Update the policy only if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// The identifier for your organization in Organizations. Use this to grant permissions to all the Amazon Web Services accounts under this organization.
		/// Min length: 12
		/// Max length: 34
		/// Pattern: ^o-[a-z0-9]{10,32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^o-[a-z0-9]{10,32}$")]
		public string PrincipalOrgID { get; set; }
		
		/// <summary>
		/// The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html">Security and auth model for Lambda function URLs</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType FunctionUrlAuthType { get; set; }
	}
	
	public class CreateAliasPostBody
	{
		
		/// <summary>
		/// The name of the alias.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// Pattern: (?!^[0-9]+$)([a-zA-Z0-9-_]+)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(?!^[0-9]+$)([a-zA-Z0-9-_]+)")]
		public string Name { get; set; }
		
		/// <summary>
		/// The function version that the alias invokes.
		/// Required
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: (\$LATEST|[0-9]+)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(\$LATEST|[0-9]+)")]
		public string FunctionVersion { get; set; }
		
		/// <summary>
		/// A description of the alias.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateAliasPostBodyRoutingConfig RoutingConfig { get; set; }
	}
	
	public class CreateAliasPostBodyRoutingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalVersionWeights AdditionalVersionWeights { get; set; }
	}
	
	public class CreateCodeSigningConfigPostBody
	{
		
		/// <summary>
		/// Descriptive name for this code signing configuration.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// List of signing profiles that can sign a code package. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateCodeSigningConfigPostBodyAllowedPublishers AllowedPublishers { get; set; }
		
		/// <summary>
		/// Code signing configuration <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html#config-codesigning-policies">policies</a> specify the validation failure action for signature mismatch or expiry.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateCodeSigningConfigPostBodyCodeSigningPolicies CodeSigningPolicies { get; set; }
	}
	
	public class CreateCodeSigningConfigPostBodyAllowedPublishers
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SigningProfileVersionArns { get; set; }
	}
	
	public class CreateCodeSigningConfigPostBodyCodeSigningPolicies
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningPolicy UntrustedArtifactOnDeployment { get; set; }
	}
	
	public class CreateEventSourceMappingPostBody
	{
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> – The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> – The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> – The ARN of the queue.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> – The ARN of the cluster.</p> </li> <li> <p> <b>Amazon MQ</b> – The ARN of the broker.</p> </li> <li> <p> <b>Amazon DocumentDB</b> – The ARN of the DocumentDB change stream.</p> </li> </ul>
		/// Pattern: arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)")]
		public string EventSourceArn { get; set; }
		
		/// <summary>
		/// <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.</p>
		/// Required
		/// Min length: 1
		/// Max length: 140
		/// Pattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(140)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?")]
		public string FunctionName { get; set; }
		
		/// <summary>
		/// <p>When true, the event source mapping is active. When false, Lambda pauses polling and invocation.</p> <p>Default: True</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// <p>The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).</p> <ul> <li> <p> <b>Amazon Kinesis</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Self-managed Apache Kafka</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon MQ (ActiveMQ and RabbitMQ)</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>DocumentDB</b> – Default 100. Max 10,000.</p> </li> </ul>
		/// Minimum: 1
		/// Maximum: 10000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 10000)]
		public System.Nullable<System.Int32> BatchSize { get; set; }
		
		/// <summary>
		///  An object that contains the filters for an event source. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodyFilterCriteria FilterCriteria { get; set; }
		
		/// <summary>
		/// <p>The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function. You can configure <code>MaximumBatchingWindowInSeconds</code> to any value from 0 seconds to 300 seconds in increments of seconds.</p> <p>For streams and Amazon SQS event sources, the default batching window is 0 seconds. For Amazon MSK, Self-managed Apache Kafka, Amazon MQ, and DocumentDB event sources, the default batching window is 500 ms. Note that because you can only change <code>MaximumBatchingWindowInSeconds</code> in increments of seconds, you cannot revert back to the 500 ms default batching window after you have changed it. To restore the default batching window, you must create a new event source mapping.</p> <p>Related setting: For streams and Amazon SQS event sources, when you set <code>BatchSize</code> to a value greater than 10, you must set <code>MaximumBatchingWindowInSeconds</code> to at least 1.</p>
		/// Minimum: 0
		/// Maximum: 300
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 300)]
		public System.Nullable<System.Int32> MaximumBatchingWindowInSeconds { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) The number of batches to process from each shard concurrently.
		/// Minimum: 1
		/// Maximum: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 10)]
		public System.Nullable<System.Int32> ParallelizationFactor { get; set; }
		
		/// <summary>
		/// The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Stream event sources. <code>AT_TIMESTAMP</code> is supported only for Amazon Kinesis streams, Amazon DocumentDB, Amazon MSK, and self-managed Apache Kafka.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventSourcePosition StartingPosition { get; set; }
		
		/// <summary>
		/// With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start reading. <code>StartingPositionTimestamp</code> cannot be in the future.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> StartingPositionTimestamp { get; set; }
		
		/// <summary>
		/// A configuration object that specifies the destination of an event after Lambda processes it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodyDestinationConfig DestinationConfig { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is infinite (-1).
		/// Minimum: -1
		/// Maximum: 604800
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(-1, 604800)]
		public System.Nullable<System.Int32> MaximumRecordAgeInSeconds { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BisectBatchOnFunctionError { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.
		/// Minimum: -1
		/// Maximum: 10000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(-1, 10000)]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window.
		/// Minimum: 0
		/// Maximum: 900
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 900)]
		public System.Nullable<System.Int32> TumblingWindowInSeconds { get; set; }
		
		/// <summary>
		/// The name of the Kafka topic.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public string[] Topics { get; set; }
		
		/// <summary>
		///  (MQ) The name of the Amazon MQ broker destination queue to consume. 
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public string[] Queues { get; set; }
		
		/// <summary>
		/// An array of authentication protocols or VPC components required to secure your event source.
		/// Minimum items: 0
		/// Maximum items: 22
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(22)]
		public SourceAccessConfiguration[] SourceAccessConfigurations { get; set; }
		
		/// <summary>
		/// The self-managed Apache Kafka cluster for your event source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodySelfManagedEventSource SelfManagedEventSource { get; set; }
		
		/// <summary>
		/// (Kinesis, DynamoDB Streams, and Amazon SQS) A list of current response type enums applied to the event source mapping.
		/// Minimum items: 0
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public FunctionResponseType[] FunctionResponseTypes { get; set; }
		
		/// <summary>
		/// Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodyAmazonManagedKafkaEventSourceConfig AmazonManagedKafkaEventSourceConfig { get; set; }
		
		/// <summary>
		/// Specific configuration settings for a self-managed Apache Kafka event source.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodySelfManagedKafkaEventSourceConfig SelfManagedKafkaEventSourceConfig { get; set; }
		
		/// <summary>
		/// (Amazon SQS only) The scaling configuration for the event source. To remove the configuration, pass an empty value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodyScalingConfig ScalingConfig { get; set; }
		
		/// <summary>
		///  Specific configuration settings for a DocumentDB event source. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEventSourceMappingPostBodyDocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodyFilterCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodyDestinationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OnSuccess OnSuccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnFailure OnFailure { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodySelfManagedEventSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Endpoints Endpoints { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodyAmazonManagedKafkaEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConsumerGroupId { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodySelfManagedKafkaEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConsumerGroupId { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodyScalingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumConcurrency { get; set; }
	}
	
	public class CreateEventSourceMappingPostBodyDocumentDBEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CollectionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FullDocument FullDocument { get; set; }
	}
	
	public class CreateFunctionPostBody
	{
		
		/// <summary>
		/// <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
		/// Required
		/// Min length: 1
		/// Max length: 140
		/// Pattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(140)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?")]
		public string FunctionName { get; set; }
		
		/// <summary>
		/// <p>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<CreateFunctionPostBodyRuntime> Runtime { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the function's execution role.
		/// Required
		/// Pattern: arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+")]
		public string Role { get; set; }
		
		/// <summary>
		/// The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html">Lambda programming model</a>.
		/// Max length: 128
		/// Pattern: [^\s]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[^\s]+")]
		public string Handler { get; set; }
		
		/// <summary>
		/// The code for the Lambda function. You can either specify an object in Amazon S3, upload a .zip file archive deployment package directly, or specify the URI of a container image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyCode Code { get; set; }
		
		/// <summary>
		/// A description of the function.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html">Lambda execution environment</a>.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Timeout { get; set; }
		
		/// <summary>
		/// The amount of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
		/// Minimum: 128
		/// Maximum: 10240
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(128, 10240)]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		/// <summary>
		/// Set to true to publish the first version of the function during creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Publish { get; set; }
		
		/// <summary>
		/// The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyVpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// The type of deployment package. Set to <code>Image</code> for container image and set to <code>Zip</code> for .zip file archive.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		/// <summary>
		/// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter queue</a> for failed asynchronous invocations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyDeadLetterConfig DeadLetterConfig { get; set; }
		
		/// <summary>
		/// A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyEnvironment Environment { get; set; }
		
		/// <summary>
		/// The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption">environment variables</a>. When <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html">Lambda SnapStart</a> is activated, Lambda also uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda uses a default service key.
		/// Pattern: (arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()")]
		public string KMSKeyArn { get; set; }
		
		/// <summary>
		/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyTracingConfig TracingConfig { get; set; }
		
		/// <summary>
		/// A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to apply to the function.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Layers { get; set; }
		
		/// <summary>
		/// Connection settings for an Amazon EFS file system.
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public FileSystemConfig[] FileSystemConfigs { get; set; }
		
		/// <summary>
		/// Configuration values that override the container image Dockerfile settings. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms">Container image settings</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyImageConfig ImageConfig { get; set; }
		
		/// <summary>
		/// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
		/// Max length: 200
		/// Pattern: arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:code-signing-config:csc-[a-z0-9]{17}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:code-signing-config:csc-[a-z0-9]{17}")]
		public string CodeSigningConfigArn { get; set; }
		
		/// <summary>
		/// The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Architecture[] Architectures { get; set; }
		
		/// <summary>
		/// The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodyEphemeralStorage EphemeralStorage { get; set; }
		
		/// <summary>
		/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Lambda SnapStart</a> setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionPostBodySnapStart SnapStart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreateFunctionPostBodyRuntime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nodejs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3")]
		nodejs4_3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs6.10")]
		nodejs6_10 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs8.10")]
		nodejs8_10 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs10.x")]
		nodejs10_x = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs12.x")]
		nodejs12_x = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs14.x")]
		nodejs14_x = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs16.x")]
		nodejs16_x = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java8 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="java8.al2")]
		java8_al2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java11 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python2.7")]
		python2_7 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.6")]
		python3_6 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.7")]
		python3_7 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.8")]
		python3_8 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.9")]
		python3_9 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore1.0")]
		dotnetcore1_0 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.0")]
		dotnetcore2_0 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.1")]
		dotnetcore2_1 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore3.1")]
		dotnetcore3_1 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotnet6 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3-edge")]
		nodejs4_3Minusedge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="go1.x")]
		go1_x = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.5")]
		ruby2_5 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.7")]
		ruby2_7 = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		provided = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="provided.al2")]
		provided_al2 = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs18.x")]
		nodejs18_x = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.10")]
		python3_10 = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java17 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby3.2")]
		ruby3_2 = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.11")]
		python3_11 = 31,
	}
	
	public class CreateFunctionPostBodyCode
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUri { get; set; }
	}
	
	public class CreateFunctionPostBodyVpcConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class CreateFunctionPostBodyDeadLetterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
	}
	
	public class CreateFunctionPostBodyEnvironment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariables Variables { get; set; }
	}
	
	public class CreateFunctionPostBodyTracingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TracingMode Mode { get; set; }
	}
	
	public class CreateFunctionPostBodyImageConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EntryPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WorkingDirectory { get; set; }
	}
	
	public class CreateFunctionPostBodyEphemeralStorage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class CreateFunctionPostBodySnapStart
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStartApplyOn ApplyOn { get; set; }
	}
	
	public class CreateFunctionUrlConfigPostBody
	{
		
		/// <summary>
		/// The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html">Security and auth model for Lambda function URLs</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		/// <summary>
		/// The <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">cross-origin resource sharing (CORS)</a> settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateFunctionUrlConfigPostBodyCors Cors { get; set; }
		
		/// <summary>
		/// <p>Use one of the following options:</p> <ul> <li> <p> <code>BUFFERED</code> – This is the default option. Lambda invokes your function using the <code>Invoke</code> API operation. Invocation results are available when the payload is complete. The maximum payload size is 6 MB.</p> </li> <li> <p> <code>RESPONSE_STREAM</code> – Your function streams payload results as they become available. Lambda invokes your function using the <code>InvokeWithResponseStream</code> API operation. The maximum response payload size is 20 MB, however, you can <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html">request a quota increase</a>.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	public class CreateFunctionUrlConfigPostBodyCors
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowCredentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowMethods { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowOrigins { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExposeHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAge { get; set; }
	}
	
	public class UpdateFunctionUrlConfigPutBody
	{
		
		/// <summary>
		/// The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html">Security and auth model for Lambda function URLs</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FunctionUrlAuthType AuthType { get; set; }
		
		/// <summary>
		/// The <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">cross-origin resource sharing (CORS)</a> settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionUrlConfigPutBodyCors Cors { get; set; }
		
		/// <summary>
		/// <p>Use one of the following options:</p> <ul> <li> <p> <code>BUFFERED</code> – This is the default option. Lambda invokes your function using the <code>Invoke</code> API operation. Invocation results are available when the payload is complete. The maximum payload size is 6 MB.</p> </li> <li> <p> <code>RESPONSE_STREAM</code> – Your function streams payload results as they become available. Lambda invokes your function using the <code>InvokeWithResponseStream</code> API operation. The maximum response payload size is 20 MB, however, you can <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html">request a quota increase</a>.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InvokeMode InvokeMode { get; set; }
	}
	
	public class UpdateFunctionUrlConfigPutBodyCors
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowCredentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowMethods { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AllowOrigins { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ExposeHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxAge { get; set; }
	}
	
	public class UpdateAliasPutBody
	{
		
		/// <summary>
		/// The function version that the alias invokes.
		/// Min length: 1
		/// Max length: 1024
		/// Pattern: (\$LATEST|[0-9]+)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(\$LATEST|[0-9]+)")]
		public string FunctionVersion { get; set; }
		
		/// <summary>
		/// A description of the alias.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAliasPutBodyRoutingConfig RoutingConfig { get; set; }
		
		/// <summary>
		/// Only update the alias if the revision ID matches the ID that's specified. Use this option to avoid modifying an alias that has changed since you last read it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	public class UpdateAliasPutBodyRoutingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalVersionWeights AdditionalVersionWeights { get; set; }
	}
	
	public class UpdateCodeSigningConfigPutBody
	{
		
		/// <summary>
		/// Descriptive name for this code signing configuration.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// List of signing profiles that can sign a code package. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateCodeSigningConfigPutBodyAllowedPublishers AllowedPublishers { get; set; }
		
		/// <summary>
		/// Code signing configuration <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html#config-codesigning-policies">policies</a> specify the validation failure action for signature mismatch or expiry.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateCodeSigningConfigPutBodyCodeSigningPolicies CodeSigningPolicies { get; set; }
	}
	
	public class UpdateCodeSigningConfigPutBodyAllowedPublishers
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SigningProfileVersionArns { get; set; }
	}
	
	public class UpdateCodeSigningConfigPutBodyCodeSigningPolicies
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CodeSigningPolicy UntrustedArtifactOnDeployment { get; set; }
	}
	
	public class UpdateEventSourceMappingPutBody
	{
		
		/// <summary>
		/// <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.</p>
		/// Min length: 1
		/// Max length: 140
		/// Pattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(140)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?")]
		public string FunctionName { get; set; }
		
		/// <summary>
		/// <p>When true, the event source mapping is active. When false, Lambda pauses polling and invocation.</p> <p>Default: True</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// <p>The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).</p> <ul> <li> <p> <b>Amazon Kinesis</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Self-managed Apache Kafka</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon MQ (ActiveMQ and RabbitMQ)</b> – Default 100. Max 10,000.</p> </li> <li> <p> <b>DocumentDB</b> – Default 100. Max 10,000.</p> </li> </ul>
		/// Minimum: 1
		/// Maximum: 10000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 10000)]
		public System.Nullable<System.Int32> BatchSize { get; set; }
		
		/// <summary>
		///  An object that contains the filters for an event source. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEventSourceMappingPutBodyFilterCriteria FilterCriteria { get; set; }
		
		/// <summary>
		/// <p>The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function. You can configure <code>MaximumBatchingWindowInSeconds</code> to any value from 0 seconds to 300 seconds in increments of seconds.</p> <p>For streams and Amazon SQS event sources, the default batching window is 0 seconds. For Amazon MSK, Self-managed Apache Kafka, Amazon MQ, and DocumentDB event sources, the default batching window is 500 ms. Note that because you can only change <code>MaximumBatchingWindowInSeconds</code> in increments of seconds, you cannot revert back to the 500 ms default batching window after you have changed it. To restore the default batching window, you must create a new event source mapping.</p> <p>Related setting: For streams and Amazon SQS event sources, when you set <code>BatchSize</code> to a value greater than 10, you must set <code>MaximumBatchingWindowInSeconds</code> to at least 1.</p>
		/// Minimum: 0
		/// Maximum: 300
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 300)]
		public System.Nullable<System.Int32> MaximumBatchingWindowInSeconds { get; set; }
		
		/// <summary>
		/// A configuration object that specifies the destination of an event after Lambda processes it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEventSourceMappingPutBodyDestinationConfig DestinationConfig { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is infinite (-1).
		/// Minimum: -1
		/// Maximum: 604800
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(-1, 604800)]
		public System.Nullable<System.Int32> MaximumRecordAgeInSeconds { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> BisectBatchOnFunctionError { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.
		/// Minimum: -1
		/// Maximum: 10000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(-1, 10000)]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) The number of batches to process from each shard concurrently.
		/// Minimum: 1
		/// Maximum: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 10)]
		public System.Nullable<System.Int32> ParallelizationFactor { get; set; }
		
		/// <summary>
		/// An array of authentication protocols or VPC components required to secure your event source.
		/// Minimum items: 0
		/// Maximum items: 22
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(22)]
		public SourceAccessConfiguration[] SourceAccessConfigurations { get; set; }
		
		/// <summary>
		/// (Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window.
		/// Minimum: 0
		/// Maximum: 900
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 900)]
		public System.Nullable<System.Int32> TumblingWindowInSeconds { get; set; }
		
		/// <summary>
		/// (Kinesis, DynamoDB Streams, and Amazon SQS) A list of current response type enums applied to the event source mapping.
		/// Minimum items: 0
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public FunctionResponseType[] FunctionResponseTypes { get; set; }
		
		/// <summary>
		/// (Amazon SQS only) The scaling configuration for the event source. To remove the configuration, pass an empty value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEventSourceMappingPutBodyScalingConfig ScalingConfig { get; set; }
		
		/// <summary>
		///  Specific configuration settings for a DocumentDB event source. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEventSourceMappingPutBodyDocumentDBEventSourceConfig DocumentDBEventSourceConfig { get; set; }
	}
	
	public class UpdateEventSourceMappingPutBodyFilterCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	public class UpdateEventSourceMappingPutBodyDestinationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OnSuccess OnSuccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnFailure OnFailure { get; set; }
	}
	
	public class UpdateEventSourceMappingPutBodyScalingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumConcurrency { get; set; }
	}
	
	public class UpdateEventSourceMappingPutBodyDocumentDBEventSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CollectionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FullDocument FullDocument { get; set; }
	}
	
	public class PutFunctionCodeSigningConfigPutBody
	{
		
		/// <summary>
		/// The The Amazon Resource Name (ARN) of the code signing configuration.
		/// Required
		/// Max length: 200
		/// Pattern: arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:code-signing-config:csc-[a-z0-9]{17}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:code-signing-config:csc-[a-z0-9]{17}")]
		public string CodeSigningConfigArn { get; set; }
	}
	
	public class PutFunctionConcurrencyPutBody
	{
		
		/// <summary>
		/// The number of simultaneous executions to reserve for the function.
		/// Required
		/// Minimum: 0
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public int ReservedConcurrentExecutions { get; set; }
	}
	
	public class PutFunctionEventInvokeConfigPutBody
	{
		
		/// <summary>
		/// The maximum number of times to retry when the function returns an error.
		/// Minimum: 0
		/// Maximum: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2)]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		/// <summary>
		/// The maximum age of a request that Lambda sends to a function for processing.
		/// Minimum: 60
		/// Maximum: 21600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(60, 21600)]
		public System.Nullable<System.Int32> MaximumEventAgeInSeconds { get; set; }
		
		/// <summary>
		/// A configuration object that specifies the destination of an event after Lambda processes it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutFunctionEventInvokeConfigPutBodyDestinationConfig DestinationConfig { get; set; }
	}
	
	public class PutFunctionEventInvokeConfigPutBodyDestinationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OnSuccess OnSuccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnFailure OnFailure { get; set; }
	}
	
	public class UpdateFunctionEventInvokeConfigPostBody
	{
		
		/// <summary>
		/// The maximum number of times to retry when the function returns an error.
		/// Minimum: 0
		/// Maximum: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 2)]
		public System.Nullable<System.Int32> MaximumRetryAttempts { get; set; }
		
		/// <summary>
		/// The maximum age of a request that Lambda sends to a function for processing.
		/// Minimum: 60
		/// Maximum: 21600
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(60, 21600)]
		public System.Nullable<System.Int32> MaximumEventAgeInSeconds { get; set; }
		
		/// <summary>
		/// A configuration object that specifies the destination of an event after Lambda processes it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionEventInvokeConfigPostBodyDestinationConfig DestinationConfig { get; set; }
	}
	
	public class UpdateFunctionEventInvokeConfigPostBodyDestinationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OnSuccess OnSuccess { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnFailure OnFailure { get; set; }
	}
	
	public class PutProvisionedConcurrencyConfigPutBody
	{
		
		/// <summary>
		/// The amount of provisioned concurrency to allocate for the version or alias.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int ProvisionedConcurrentExecutions { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the function's execution role.
		/// Pattern: arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+")]
		public string Role { get; set; }
		
		/// <summary>
		/// The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html">Lambda programming model</a>.
		/// Max length: 128
		/// Pattern: [^\s]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[^\s]+")]
		public string Handler { get; set; }
		
		/// <summary>
		/// A description of the function.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html">Lambda execution environment</a>.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Timeout { get; set; }
		
		/// <summary>
		/// The amount of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
		/// Minimum: 128
		/// Maximum: 10240
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(128, 10240)]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		/// <summary>
		/// The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodyVpcConfig VpcConfig { get; set; }
		
		/// <summary>
		/// A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodyEnvironment Environment { get; set; }
		
		/// <summary>
		/// <p>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<UpdateFunctionConfigurationPutBodyRuntime> Runtime { get; set; }
		
		/// <summary>
		/// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter queue</a> for failed asynchronous invocations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodyDeadLetterConfig DeadLetterConfig { get; set; }
		
		/// <summary>
		/// The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption">environment variables</a>. When <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html">Lambda SnapStart</a> is activated, Lambda also uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda uses a default service key.
		/// Pattern: (arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()")]
		public string KMSKeyArn { get; set; }
		
		/// <summary>
		/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodyTracingConfig TracingConfig { get; set; }
		
		/// <summary>
		/// Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] Layers { get; set; }
		
		/// <summary>
		/// Connection settings for an Amazon EFS file system.
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public FileSystemConfig[] FileSystemConfigs { get; set; }
		
		/// <summary>
		/// Configuration values that override the container image Dockerfile settings. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms">Container image settings</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodyImageConfig ImageConfig { get; set; }
		
		/// <summary>
		/// The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodyEphemeralStorage EphemeralStorage { get; set; }
		
		/// <summary>
		/// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Lambda SnapStart</a> setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateFunctionConfigurationPutBodySnapStart SnapStart { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBodyVpcConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBodyEnvironment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariables Variables { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateFunctionConfigurationPutBodyRuntime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nodejs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3")]
		nodejs4_3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs6.10")]
		nodejs6_10 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs8.10")]
		nodejs8_10 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs10.x")]
		nodejs10_x = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs12.x")]
		nodejs12_x = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs14.x")]
		nodejs14_x = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs16.x")]
		nodejs16_x = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java8 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="java8.al2")]
		java8_al2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java11 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python2.7")]
		python2_7 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.6")]
		python3_6 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.7")]
		python3_7 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.8")]
		python3_8 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.9")]
		python3_9 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore1.0")]
		dotnetcore1_0 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.0")]
		dotnetcore2_0 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.1")]
		dotnetcore2_1 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore3.1")]
		dotnetcore3_1 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotnet6 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3-edge")]
		nodejs4_3Minusedge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="go1.x")]
		go1_x = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.5")]
		ruby2_5 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.7")]
		ruby2_7 = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		provided = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="provided.al2")]
		provided_al2 = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs18.x")]
		nodejs18_x = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.10")]
		python3_10 = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java17 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby3.2")]
		ruby3_2 = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.11")]
		python3_11 = 31,
	}
	
	public class UpdateFunctionConfigurationPutBodyDeadLetterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBodyTracingConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TracingMode Mode { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBodyImageConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EntryPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Command { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WorkingDirectory { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBodyEphemeralStorage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class UpdateFunctionConfigurationPutBodySnapStart
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapStartApplyOn ApplyOn { get; set; }
	}
	
	public enum GetLayerVersionByArnFind
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LayerVersion = 0,
	}
	
	public class PutRuntimeManagementConfigPutBody
	{
		
		/// <summary>
		/// <p>Specify the runtime update mode.</p> <ul> <li> <p> <b>Auto (default)</b> - Automatically update to the most recent and secure runtime version using a <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase">Two-phase runtime version rollout</a>. This is the best choice for most customers to ensure they always benefit from runtime updates.</p> </li> <li> <p> <b>Function update</b> - Lambda updates the runtime of your function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.</p> </li> <li> <p> <b>Manual</b> - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback">Roll back a runtime version</a>.</p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateRuntimeOn UpdateRuntimeOn { get; set; }
		
		/// <summary>
		/// <p>The ARN of the runtime version you want the function to use.</p> <note> <p>This is only required if you're using the <b>Manual</b> runtime update mode.</p> </note>
		/// Min length: 26
		/// Max length: 2048
		/// Pattern: ^arn:(aws[a-zA-Z-]*):lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}::runtime:.+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(26)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^arn:(aws[a-zA-Z-]*):lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}::runtime:.+$")]
		public string RuntimeVersionArn { get; set; }
	}
	
	public class InvokePostBody
	{
		
		/// <summary>
		/// <p>The JSON that you want to provide to your Lambda function as input.</p> <p>You can enter the JSON directly. For example, <code>--payload '{ "key": "value" }'</code>. You can also specify a file path. For example, <code>--payload file://payload.json</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Payload { get; set; }
	}
	
	public class InvokeWithResponseStreamPostBody
	{
		
		/// <summary>
		/// <p>The JSON that you want to provide to your Lambda function as input.</p> <p>You can enter the JSON directly. For example, <code>--payload '{ "key": "value" }'</code>. You can also specify a file path. For example, <code>--payload file://payload.json</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Payload { get; set; }
	}
	
	public enum ListLayerVersionsCompatibleRuntime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nodejs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3")]
		nodejs4_3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs6.10")]
		nodejs6_10 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs8.10")]
		nodejs8_10 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs10.x")]
		nodejs10_x = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs12.x")]
		nodejs12_x = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs14.x")]
		nodejs14_x = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs16.x")]
		nodejs16_x = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java8 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="java8.al2")]
		java8_al2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java11 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python2.7")]
		python2_7 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.6")]
		python3_6 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.7")]
		python3_7 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.8")]
		python3_8 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.9")]
		python3_9 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore1.0")]
		dotnetcore1_0 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.0")]
		dotnetcore2_0 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.1")]
		dotnetcore2_1 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore3.1")]
		dotnetcore3_1 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotnet6 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3-edge")]
		nodejs4_3Minusedge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="go1.x")]
		go1_x = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.5")]
		ruby2_5 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.7")]
		ruby2_7 = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		provided = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="provided.al2")]
		provided_al2 = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs18.x")]
		nodejs18_x = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.10")]
		python3_10 = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java17 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby3.2")]
		ruby3_2 = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.11")]
		python3_11 = 31,
	}
	
	public class PublishLayerVersionPostBody
	{
		
		/// <summary>
		/// The description of the version.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PublishLayerVersionPostBodyContent Content { get; set; }
		
		/// <summary>
		/// <p>A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p>
		/// Maximum items: 15
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(15)]
		public Runtime[] CompatibleRuntimes { get; set; }
		
		/// <summary>
		/// <p>The layer's software license. It can be any of the following:</p> <ul> <li> <p>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		public string LicenseInfo { get; set; }
		
		/// <summary>
		/// A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html">instruction set architectures</a>.
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public Architecture[] CompatibleArchitectures { get; set; }
	}
	
	public class PublishLayerVersionPostBodyContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3ObjectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
	}
	
	public enum ListLayersCompatibleRuntime
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nodejs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3")]
		nodejs4_3 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs6.10")]
		nodejs6_10 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs8.10")]
		nodejs8_10 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs10.x")]
		nodejs10_x = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs12.x")]
		nodejs12_x = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs14.x")]
		nodejs14_x = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs16.x")]
		nodejs16_x = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java8 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="java8.al2")]
		java8_al2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java11 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python2.7")]
		python2_7 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.6")]
		python3_6 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.7")]
		python3_7 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.8")]
		python3_8 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.9")]
		python3_9 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore1.0")]
		dotnetcore1_0 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.0")]
		dotnetcore2_0 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore2.1")]
		dotnetcore2_1 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dotnetcore3.1")]
		dotnetcore3_1 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotnet6 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs4.3-edge")]
		nodejs4_3Minusedge = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="go1.x")]
		go1_x = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.5")]
		ruby2_5 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby2.7")]
		ruby2_7 = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		provided = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="provided.al2")]
		provided_al2 = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs18.x")]
		nodejs18_x = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.10")]
		python3_10 = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java17 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ruby3.2")]
		ruby3_2 = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="python3.11")]
		python3_11 = 31,
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// A list of tags to apply to the function.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class PublishVersionPostBody
	{
		
		/// <summary>
		/// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. You can get the hash for the version that you uploaded from the output of <a>UpdateFunctionCode</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CodeSha256 { get; set; }
		
		/// <summary>
		/// A description for the version to override the description in the function configuration.
		/// Min length: 0
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string Description { get; set; }
		
		/// <summary>
		/// Only update the function if the revision ID matches the ID that's specified. Use this option to avoid publishing a version if the function configuration has changed since you last updated it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
	}
	
	public class UpdateFunctionCodePutBody
	{
		
		/// <summary>
		/// The base64-encoded contents of the deployment package. Amazon Web Services SDK and CLI clients handle the encoding for you. Use only with a function defined with a .zip file archive deployment package.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ZipFile { get; set; }
		
		/// <summary>
		/// An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account. Use only with a function defined with a .zip file archive deployment package.
		/// Min length: 3
		/// Max length: 63
		/// Pattern: ^[0-9A-Za-z\.\-_]*(?<!\.)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9A-Za-z\.\-_]*(?<!\.)$")]
		public string S3Bucket { get; set; }
		
		/// <summary>
		/// The Amazon S3 key of the deployment package. Use only with a function defined with a .zip file archive deployment package.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string S3Key { get; set; }
		
		/// <summary>
		/// For versioned objects, the version of the deployment package object to use.
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string S3ObjectVersion { get; set; }
		
		/// <summary>
		/// URI of a container image in the Amazon ECR registry. Do not use for a function defined with a .zip file archive.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ImageUri { get; set; }
		
		/// <summary>
		/// Set to true to publish a new version of the function after updating the code. This has the same effect as calling <a>PublishVersion</a> separately.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Publish { get; set; }
		
		/// <summary>
		/// Set to true to validate the request parameters and access permissions without modifying the function code.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DryRun { get; set; }
		
		/// <summary>
		/// Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string RevisionId { get; set; }
		
		/// <summary>
		/// The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public Architecture[] Architectures { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

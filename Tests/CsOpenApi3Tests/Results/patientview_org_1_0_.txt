//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApiKey
	{
		
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public System.Nullable<System.Boolean> Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiryDate")]
		public System.Nullable<System.DateTimeOffset> ExpiryDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaseGroup
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupType")]
		public Lookup GroupType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastImportDate")]
		public System.Nullable<System.DateTimeOffset> LastImportDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parentCodes")]
		public string[] ParentCodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shortName")]
		public string ShortName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visible")]
		public System.Nullable<System.Boolean> Visible { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visibleToJoin")]
		public System.Nullable<System.Boolean> VisibleToJoin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Lookup
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="descriptionFriendly")]
		public string DescriptionFriendly { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayOrder")]
		public System.Nullable<System.Int64> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookupType")]
		public LookupType LookupType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LookupType
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<LookupTypeType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LookupTypeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MENU = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CODE_STANDARD = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CODE_TYPE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FEATURE_TYPE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELATIONSHIP_TYPE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDENTIFIER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_POINT_TYPE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATISTIC_TYPE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEWS_TYPE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GENDER = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_CROHNSLOCATION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_CROHNSPROXIMALTERMINALILEUM = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_CROHNSPERIANAL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_CROHNSBEHAVIOUR = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_UCEXTENT = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_EGIMCOMPLICATION = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_SURGERYMAINPROCEDURE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_SMOKINGSTATUS = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IBD_FAMILYHISTORY = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINK_TYPE = 21,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Category
	{
		
		[System.Runtime.Serialization.DataMember(Name="friendlyDescription")]
		public string FriendlyDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hidden")]
		public System.Nullable<System.Boolean> Hidden { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="icd10Description")]
		public string Icd10Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number")]
		public System.Nullable<System.Int32> Number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Code
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="codeCategories")]
		public CodeCategory[] CodeCategories { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="codeType")]
		public Lookup CodeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayOrder")]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalStandards")]
		public CodeExternalStandard[] ExternalStandards { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fullDescription")]
		public string FullDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hideFromPatients")]
		public System.Nullable<System.Boolean> HideFromPatients { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Link[] Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="patientFriendlyName")]
		public string PatientFriendlyName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="removedExternally")]
		public System.Nullable<System.Boolean> RemovedExternally { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceType")]
		public System.Nullable<CodeSourceType> SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="standardType")]
		public Lookup StandardType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeCategory
	{
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public Category Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeExternalStandard
	{
		
		[System.Runtime.Serialization.DataMember(Name="codeString")]
		public string CodeString { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalStandard")]
		public ExternalStandard ExternalStandard { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExternalStandard
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Link
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayOrder")]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="linkType")]
		public Lookup LinkType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CodeSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATIENTVIEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NHS_CHOICES = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactPoint
	{
		
		[System.Runtime.Serialization.DataMember(Name="contactPointType")]
		public ContactPointType ContactPointType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactPointType
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookupType")]
		public LookupType LookupType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<ContactPointTypeValue> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactPointTypeValue
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIT_WEB_ADDRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRUST_WEB_ADDRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PV_ADMIN_NAME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PV_ADMIN_PHONE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PV_ADMIN_EMAIL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIT_ENQUIRIES_PHONE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIT_ENQUIRIES_EMAIL = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPOINTMENT_PHONE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPOINTMENT_EMAIL = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUT_OF_HOURS_INFO = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credentials
	{
		
		[System.Runtime.Serialization.DataMember(Name="apiKey")]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Entry_long_Map_string_List_FhirObservation_
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public Entry_string_List_FhirObservation_[] Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Entry_string_List_FhirObservation_
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public FhirObservation[] Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirObservation
	{
		
		[System.Runtime.Serialization.DataMember(Name="applies")]
		public System.Nullable<System.DateTimeOffset> Applies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bodySite")]
		public string BodySite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="comments")]
		public string Comments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="comparator")]
		public string Comparator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="diagram")]
		public string Diagram { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="temporaryUuid")]
		public string TemporaryUuid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Group
	{
		
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address3")]
		public string Address3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="childGroups")]
		public Group[] ChildGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactPoints")]
		public ContactPoint[] ContactPoints { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirResourceId")]
		public string FhirResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupFeatures")]
		public GroupFeature[] GroupFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupType")]
		public Lookup GroupType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastImportDate")]
		public System.Nullable<System.DateTimeOffset> LastImportDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Link[] Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public Location[] Locations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parentGroups")]
		public Group[] ParentGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postcode")]
		public string Postcode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sftpUser")]
		public string SftpUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shortName")]
		public string ShortName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visible")]
		public System.Nullable<System.Boolean> Visible { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visibleToJoin")]
		public System.Nullable<System.Boolean> VisibleToJoin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupFeature
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feature")]
		public Feature Feature { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Feature
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Location
	{
		
		[System.Runtime.Serialization.DataMember(Name="address")]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="web")]
		public string Web { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirAllergy
	{
		
		[System.Runtime.Serialization.DataMember(Name="confidenceLevel")]
		public string ConfidenceLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="infoSource")]
		public string InfoSource { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reaction")]
		public string Reaction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recordedDate")]
		public System.Nullable<System.DateTimeOffset> RecordedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="substance")]
		public string Substance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirCondition
	{
		
		[System.Runtime.Serialization.DataMember(Name="asserter")]
		public string Asserter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.Nullable<System.DateTimeOffset> Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fullDescription")]
		public string FullDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Link[] Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public string Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirContact
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="system")]
		public string System { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="use")]
		public string Use { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirEncounter
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.Nullable<System.DateTimeOffset> Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encounterType")]
		public string EncounterType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Link[] Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="observations")]
		public FhirObservation[] Observations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="procedures")]
		public FhirProcedure[] Procedures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirProcedure
	{
		
		[System.Runtime.Serialization.DataMember(Name="bodySite")]
		public string BodySite { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirIdentifier
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirObservationPage
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Entry_long_Map_string_List_FhirObservation_[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalElements")]
		public System.Nullable<System.Int64> TotalElements { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalPages")]
		public System.Nullable<System.Int64> TotalPages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirPatient
	{
		
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address3")]
		public string Address3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address4")]
		public string Address4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public FhirContact[] Contacts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dateOfBirth")]
		public System.Nullable<System.DateTimeOffset> DateOfBirth { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dateOfBirthNoTime")]
		public string DateOfBirthNoTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forename")]
		public string Forename { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public string Gender { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupCode")]
		public string GroupCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifiers")]
		public FhirIdentifier[] Identifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postcode")]
		public string Postcode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="practitioners")]
		public FhirPractitioner[] Practitioners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surname")]
		public string Surname { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FhirPractitioner
	{
		
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address3")]
		public string Address3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="address4")]
		public string Address4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="allowInviteGp")]
		public System.Nullable<System.Boolean> AllowInviteGp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public FhirContact[] Contacts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public string Gender { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupCode")]
		public string GroupCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inviteDate")]
		public System.Nullable<System.DateTimeOffset> InviteDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="postcode")]
		public string Postcode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupRole
	{
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="role")]
		public Role Role { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Role
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public System.Nullable<RoleName> Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visible")]
		public System.Nullable<System.Boolean> Visible { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RoleName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATIENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIT_ADMIN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STAFF_ADMIN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISEASE_GROUP_ADMIN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPECIALTY_ADMIN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GLOBAL_ADMIN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GP_ADMIN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMBER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIT_ADMIN_API = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORTER = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ObservationHeading
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="decimalPlaces")]
		public System.Nullable<System.Int64> DecimalPlaces { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="defaultPanel")]
		public System.Nullable<System.Int64> DefaultPanel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="defaultPanelOrder")]
		public System.Nullable<System.Int64> DefaultPanelOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="heading")]
		public string Heading { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="infoLink")]
		public string InfoLink { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxGraph")]
		public System.Nullable<System.Double> MaxGraph { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minGraph")]
		public System.Nullable<System.Double> MinGraph { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="normalRange")]
		public string NormalRange { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="observationHeadingGroups")]
		public ObservationHeadingGroup[] ObservationHeadingGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ObservationHeadingGroup
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="panel")]
		public System.Nullable<System.Int64> Panel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="panelOrder")]
		public System.Nullable<System.Int64> PanelOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Patient
	{
		
		[System.Runtime.Serialization.DataMember(Name="diagnosisCodes")]
		public Code[] DiagnosisCodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirAllergies")]
		public FhirAllergy[] FhirAllergies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirConditions")]
		public FhirCondition[] FhirConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirEncounters")]
		public FhirEncounter[] FhirEncounters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirObservations")]
		public FhirObservation[] FhirObservations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirPatient")]
		public FhirPatient FhirPatient { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fhirPractitioners")]
		public FhirPractitioner[] FhirPractitioners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PatientManagement
	{
		
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public FhirCondition Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="encounters")]
		public FhirEncounter[] Encounters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupCode")]
		public string GroupCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="observations")]
		public FhirObservation[] Observations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="patient")]
		public FhirPatient Patient { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="practitioners")]
		public FhirPractitioner[] Practitioners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Route
	{
		
		[System.Runtime.Serialization.DataMember(Name="controller")]
		public string Controller { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayOrder")]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookup")]
		public Lookup Lookup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="templateUrl")]
		public string TemplateUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UUID
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember(Name="apiKey")]
		public ApiKey ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="canSwitchUser")]
		public System.Nullable<System.Boolean> CanSwitchUser { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="changePassword")]
		public System.Nullable<System.Boolean> ChangePassword { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactNumber")]
		public string ContactNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentLogin")]
		public System.Nullable<System.DateTimeOffset> CurrentLogin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentLoginIpAddress")]
		public string CurrentLoginIpAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dateOfBirth")]
		public System.Nullable<System.DateTimeOffset> DateOfBirth { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dummy")]
		public System.Nullable<System.Boolean> Dummy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emailVerified")]
		public System.Nullable<System.Boolean> EmailVerified { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forename")]
		public string Forename { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupRoles")]
		public GroupRole[] GroupRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hideSecretWordNotification")]
		public System.Nullable<System.Boolean> HideSecretWordNotification { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifiers")]
		public string[] Identifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastLogin")]
		public System.Nullable<System.DateTimeOffset> LastLogin { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastLoginIpAddress")]
		public string LastLoginIpAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestDataReceivedBy")]
		public BaseGroup LatestDataReceivedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestDataReceivedDate")]
		public System.Nullable<System.DateTimeOffset> LatestDataReceivedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="locked")]
		public System.Nullable<System.Boolean> Locked { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="picture")]
		public string Picture { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleDescription")]
		public string RoleDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretWordIsSet")]
		public System.Nullable<System.Boolean> SecretWordIsSet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surname")]
		public string Surname { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userFeatures")]
		public UserFeature[] UserFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserFeature
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feature")]
		public Feature Feature { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdate")]
		public System.Nullable<System.DateTimeOffset> LastUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="optInDate")]
		public System.Nullable<System.DateTimeOffset> OptInDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="optInHidden")]
		public System.Nullable<System.Boolean> OptInHidden { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="optInStatus")]
		public System.Nullable<System.Boolean> OptInStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="optOutHidden")]
		public System.Nullable<System.Boolean> OptOutHidden { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserToken
	{
		
		[System.Runtime.Serialization.DataMember(Name="auditActions")]
		public string[] AuditActions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="checkSecretWord")]
		public System.Nullable<System.Boolean> CheckSecretWord { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expiration")]
		public System.Nullable<System.DateTimeOffset> Expiration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalStandards")]
		public ExternalStandard[] ExternalStandards { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupFeatures")]
		public Feature[] GroupFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="groupMessagingEnabled")]
		public System.Nullable<System.Boolean> GroupMessagingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mustSetSecretWord")]
		public System.Nullable<System.Boolean> MustSetSecretWord { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="patientFeatures")]
		public Feature[] PatientFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="patientMessagingFeatureTypes")]
		public string[] PatientMessagingFeatureTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="patientRoles")]
		public Role[] PatientRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="routes")]
		public Route[] Routes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretWord")]
		public string SecretWord { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretWordChoices")]
		public string SecretWordChoices { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretWordIndexes")]
		public string[] SecretWordIndexes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretWordSalt")]
		public string SecretWordSalt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secretWordToken")]
		public string SecretWordToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="securityRoles")]
		public Role[] SecurityRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="shouldEnterCondition")]
		public System.Nullable<System.Boolean> ShouldEnterCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="staffFeatures")]
		public Feature[] StaffFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="staffRoles")]
		public Role[] StaffRoles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userFeatures")]
		public Feature[] UserFeatures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userGroups")]
		public BaseGroup[] UserGroups { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Log In
		/// Authenticate using username and password, returns token, which must be added to X-Auth-Token in header of all future requests
		/// LogIn auth/login
		/// </summary>
		/// <param name="requestBody">credentials</param>
		/// <returns>Description was not specified</returns>
		public async Task LogInAsync(Credentials requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "auth/login";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Log Out
		/// Log Out
		/// LogOut auth/logout/{token}
		/// </summary>
		/// <param name="token">token</param>
		/// <returns>Description was not specified</returns>
		public async Task LogOutAsync(string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "auth/logout/"+ (token==null? "" : System.Uri.EscapeDataString(token));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Basic User Information
		/// Once logged in and have a token, get basic user information including group role membership
		/// GetBasicUserInformation auth/{token}/basicuserinformation
		/// </summary>
		/// <param name="token">token</param>
		/// <returns>OK</returns>
		public async Task GetBasicUserInformationAsync(string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "auth/"+ (token==null? "" : System.Uri.EscapeDataString(token))+"/basicuserinformation";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Basic Patient Information
		/// Given a User ID, get basic patient information for a user from clinical data stored in FHIR
		/// GetBasicPatientDetails patient/{userId}/basic
		/// </summary>
		/// <param name="userId">userId</param>
		/// <returns>OK</returns>
		public async Task GetBasicPatientDetailsAsync(long userId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patient/"+userId+"/basic";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getPatientManagementDiagnoses
		/// getPatientManagementDiagnoses
		/// GetPatientManagementDiagnoses patientmanagement/diagnoses
		/// </summary>
		/// <returns>OK</returns>
		public async Task<Code[]> GetPatientManagementDiagnosesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patientmanagement/diagnoses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Code[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getPatientManagementLookupTypes
		/// getPatientManagementLookupTypes
		/// GetPatientManagementLookupTypes patientmanagement/lookuptypes
		/// </summary>
		/// <returns>OK</returns>
		public async Task<LookupType[]> GetPatientManagementLookupTypesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patientmanagement/lookuptypes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<LookupType[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// validatePatientManagement
		/// validatePatientManagement
		/// ValidatePatientManagement patientmanagement/validate
		/// </summary>
		/// <param name="requestBody">patientManagement</param>
		/// <returns>Description was not specified</returns>
		public async Task ValidatePatientManagementAsync(PatientManagement requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patientmanagement/validate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// getPatientManagement
		/// getPatientManagement
		/// GetPatientManagement patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}
		/// </summary>
		/// <param name="userId">userId</param>
		/// <param name="groupId">groupId</param>
		/// <param name="identifierId">identifierId</param>
		/// <returns>OK</returns>
		public async Task<PatientManagement> GetPatientManagementAsync(long userId, long groupId, long identifierId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patientmanagement/"+userId+"/group/"+groupId+"/identifier/"+identifierId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatientManagement>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// savePatientManagement
		/// savePatientManagement
		/// SavePatientManagement patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}
		/// </summary>
		/// <param name="userId">userId</param>
		/// <param name="groupId">groupId</param>
		/// <param name="identifierId">identifierId</param>
		/// <param name="requestBody">patientManagement</param>
		/// <returns>Description was not specified</returns>
		public async Task SavePatientManagementAsync(long userId, long groupId, long identifierId, PatientManagement requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patientmanagement/"+userId+"/group/"+groupId+"/identifier/"+identifierId;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// savePatientManagementSurgeries
		/// savePatientManagementSurgeries
		/// SavePatientManagementSurgeries patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries
		/// </summary>
		/// <param name="userId">userId</param>
		/// <param name="groupId">groupId</param>
		/// <param name="identifierId">identifierId</param>
		/// <param name="requestBody">patientManagement</param>
		/// <returns>Description was not specified</returns>
		public async Task SavePatientManagementSurgeriesAsync(long userId, long groupId, long identifierId, PatientManagement requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "patientmanagement/"+userId+"/group/"+groupId+"/identifier/"+identifierId+"/surgeries";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Available Observations Types For a User
		/// Given a User ID retrieve a list of available observation types for that user (where they have observation data).
		/// GetAvailableObservationHeadings user/{userId}/availableobservationheadings
		/// </summary>
		/// <param name="userId">userId</param>
		/// <returns>OK</returns>
		public async Task<ObservationHeading[]> GetAvailableObservationHeadingsAsync(long userId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/"+userId+"/availableobservationheadings";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ObservationHeading[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Observations of Multiple Types For a User
		/// Given a User ID and search parameters, retrieve a page of observations.
		/// GetObservationsByCodes user/{userId}/observations
		/// </summary>
		/// <param name="userId">userId</param>
		/// <param name="code">code</param>
		/// <param name="limit">limit</param>
		/// <param name="offset">offset</param>
		/// <param name="orderDirection">orderDirection</param>
		/// <returns>OK</returns>
		public async Task GetObservationsByCodesAsync(long userId, string[] code, long limit, long offset, string orderDirection, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/"+userId+"/observations?"+string.Join("&", code.Select(z => $"code={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&offset="+offset+"&orderDirection=" + (orderDirection==null? "" : System.Uri.EscapeDataString(orderDirection));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Observations of a Certain Type For a User
		/// Given a User ID and observation code, retrieve all observations.
		/// GetObservationsByCode user/{userId}/observations/{code}
		/// </summary>
		/// <param name="userId">userId</param>
		/// <param name="code">code</param>
		/// <returns>OK</returns>
		public async Task GetObservationsByCodeAsync(long userId, string code, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/"+userId+"/observations/"+ (code==null? "" : System.Uri.EscapeDataString(code));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get patient entered Observations of a Certain Type For a User
		/// Given a User ID and observation code, retrieve patient entered observations.
		/// GetPatientEnteredObservationsByCode user/{userId}/observations/{code}/patiententered
		/// </summary>
		/// <param name="userId">userId</param>
		/// <param name="code">code</param>
		/// <returns>OK</returns>
		public async Task GetPatientEnteredObservationsByCodeAsync(long userId, string code, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/"+userId+"/observations/"+ (code==null? "" : System.Uri.EscapeDataString(code))+"/patiententered";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Available Patient Entered Observations Types For a User
		/// Given a User ID retrieve a list of available observation types for that user (where they have patient entered observation data).
		/// GetPatientEnteredObservationHeadings user/{userId}/patiententeredobservationheadings
		/// </summary>
		/// <param name="userId">userId</param>
		/// <returns>OK</returns>
		public async Task<ObservationHeading[]> GetPatientEnteredObservationHeadingsAsync(long userId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/"+userId+"/patiententeredobservationheadings";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ObservationHeading[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

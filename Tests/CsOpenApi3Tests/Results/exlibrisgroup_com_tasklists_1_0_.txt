//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve Printouts
		/// This API returns a list of Printouts.
		/// GetSlashalmawsSlashv1Slashtask_listsSlashprintouts almaws/v1/task-lists/printouts
		/// </summary>
		/// <param name="letter">Printout Name. Optional. </param>
		/// <param name="status">Printout status. Optional. Valid values are: Printed, Pending, Canceled.</param>
		/// <param name="printer_id">Printout Printer</param>
		/// <param name="printout_id">A list of Printout IDs (for example: 123,456,778) from 1 to the limit of 100 Optional. Use of this option overrides all of the filtering parameters</param>
		/// <param name="limit">Limits the number of results. Optional. Valid values are 0-100. Default value: 10.</param>
		/// <param name="offset">Offset of the results returned. Optional. Default value: 0, which means that the first results will be returned.</param>
		/// <returns>OK - This method returns an object based on rest_printouts.xsd. See [here](/alma/apis/docs/xsd/rest_printouts.xsd)</returns>
		public async Task<GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturn> GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsAsync(string letter, string status, string printer_id, string printout_id, int limit, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/printouts?letter=" + (letter==null? "" : System.Uri.EscapeDataString(letter))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&printer_id=" + (printer_id==null? "" : System.Uri.EscapeDataString(printer_id))+"&printout_id=" + (printout_id==null? "" : System.Uri.EscapeDataString(printout_id))+"&limit="+limit+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Act on Printouts
		/// This API performs an action on printouts: mark as printed or canceled. 10,000 records can be handled in one requests. Only printouts which were updated will be returned.
		/// PostSlashalmawsSlashv1Slashtask_listsSlashprintouts almaws/v1/task-lists/printouts
		/// </summary>
		/// <param name="letter">Printout Name. Optional. </param>
		/// <param name="status">Printout status. Optional. Valid values are: Printed, Pending, Canceled.</param>
		/// <param name="printer_id">Printout Printer</param>
		/// <param name="printout_id">A list of Printout IDs (for example: 123,456,778) from 1 to the limit of 100 Optional. Use of this option overrides all of the filtering parameters</param>
		/// <param name="op">The operation to perform on the printout. Currently, the options are: 'mark_as_printed','mark_as_canceled'</param>
		/// <returns>OK - This method returns an object based on rest_printouts.xsd. See [here](/alma/apis/docs/xsd/rest_printouts.xsd)</returns>
		public async Task PostSlashalmawsSlashv1Slashtask_listsSlashprintoutsAsync(string letter, string status, string printer_id, string printout_id, string op, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/printouts?letter=" + (letter==null? "" : System.Uri.EscapeDataString(letter))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&printer_id=" + (printer_id==null? "" : System.Uri.EscapeDataString(printer_id))+"&printout_id=" + (printout_id==null? "" : System.Uri.EscapeDataString(printout_id))+"&op=" + (op==null? "" : System.Uri.EscapeDataString(op));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a Printout
		/// This Web service returns a Printout given a Printout ID.
		/// GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsSlashprintout_id almaws/v1/task-lists/printouts/{printout_id}
		/// </summary>
		/// <param name="printout_id">The Printout ID</param>
		/// <returns>OK - This method returns an object based on rest_printout.xsd. See [here](/alma/apis/docs/xsd/rest_printout.xsd)</returns>
		public async Task GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsSlashprintout_idAsync(string printout_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/printouts/"+ (printout_id==null? "" : System.Uri.EscapeDataString(printout_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Printout Service
		/// This API operates on an printout. given a Printout ID.
		/// PostSlashalmawsSlashv1Slashtask_listsSlashprintoutsSlashprintout_id almaws/v1/task-lists/printouts/{printout_id}
		/// </summary>
		/// <param name="printout_id">The Printout ID</param>
		/// <param name="op">The operation to perform on the printout. Currently, the options are 'mark_as_printed','mark_as_canceled'</param>
		/// <returns>OK - This method returns an object based on rest_printout.xsd. See [here](/alma/apis/docs/xsd/rest_printout.xsd)</returns>
		public async Task PostSlashalmawsSlashv1Slashtask_listsSlashprintoutsSlashprintout_idAsync(string printout_id, string op, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/printouts/"+ (printout_id==null? "" : System.Uri.EscapeDataString(printout_id))+"&op=" + (op==null? "" : System.Uri.EscapeDataString(op));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Requested Resources
		/// This API returns a list of requested resources to be picked from the shelf in Alma
		/// GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resources almaws/v1/task-lists/requested-resources
		/// </summary>
		/// <param name="library">The library of the given circulation desk or department where the resources are located. Mandatory.</param>
		/// <param name="circ_desk">The circulation desk where the action is being performed. Mandatory.</param>
		/// <param name="location">The location code. Optional.</param>
		/// <param name="order_by">The order in which to retrieve the results: location/call_number (default).</param>
		/// <param name="direction">The order direction in which to retrieve the results. Optional.</param>
		/// <param name="pickup_inst">The pickup institution. Optional.</param>
		/// <param name="reported">Show reported results: Y/N. Optional.</param>
		/// <param name="printed">Show printed results: Y/N. Optional.</param>
		/// <param name="limit">Limits the number of results. Optional. Valid values are 0-100. Default value: 10.</param>
		/// <param name="offset">Offset of the results returned. Optional. Default value: 0, which means that the first results will be returned.</param>
		/// <returns>OK - This method returns an object based on rest_requested_resources.xsd. See [here](/alma/apis/docs/xsd/rest_requested_resources.xsd)</returns>
		public async Task<GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturn> GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesAsync(string library, string circ_desk, string location, string order_by, string direction, string pickup_inst, string reported, string printed, int limit, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/requested-resources?library=" + (library==null? "" : System.Uri.EscapeDataString(library))+"&circ_desk=" + (circ_desk==null? "" : System.Uri.EscapeDataString(circ_desk))+"&location=" + (location==null? "" : System.Uri.EscapeDataString(location))+"&order_by=" + (order_by==null? "" : System.Uri.EscapeDataString(order_by))+"&direction=" + (direction==null? "" : System.Uri.EscapeDataString(direction))+"&pickup_inst=" + (pickup_inst==null? "" : System.Uri.EscapeDataString(pickup_inst))+"&reported=" + (reported==null? "" : System.Uri.EscapeDataString(reported))+"&printed=" + (printed==null? "" : System.Uri.EscapeDataString(printed))+"&limit="+limit+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Act on Requested Resources
		/// This API performs an action on requested resources that are on the shelf in Alma
		/// PostSlashalmawsSlashv1Slashtask_listsSlashrequested_resources almaws/v1/task-lists/requested-resources
		/// </summary>
		/// <param name="library">The library of the given circulation desk or department where the resources are located. Mandatory.</param>
		/// <param name="circ_desk">The circulation desk where the action is being performed. Mandatory.</param>
		/// <param name="op">Operation to be preformed on the list of given requests. Currently the only supported action is 'mark_reported'. Mandatory.</param>
		/// <param name="location">The location code. Optional.</param>
		/// <param name="pickup_inst">The pickup institution. Optional.</param>
		/// <param name="reported">Show reported results: Y/N. Optional.</param>
		/// <param name="printed">Show printed results: Y/N. Optional.</param>
		/// <returns>OK - This method returns an object based on rest_requested_resources.xsd. See [here](/alma/apis/docs/xsd/rest_requested_resources.xsd)</returns>
		public async Task PostSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesAsync(string library, string circ_desk, string op, string location, string pickup_inst, string reported, string printed, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/requested-resources?library=" + (library==null? "" : System.Uri.EscapeDataString(library))+"&circ_desk=" + (circ_desk==null? "" : System.Uri.EscapeDataString(circ_desk))+"&op=" + (op==null? "" : System.Uri.EscapeDataString(op))+"&location=" + (location==null? "" : System.Uri.EscapeDataString(location))+"&pickup_inst=" + (pickup_inst==null? "" : System.Uri.EscapeDataString(pickup_inst))+"&reported=" + (reported==null? "" : System.Uri.EscapeDataString(reported))+"&printed=" + (printed==null? "" : System.Uri.EscapeDataString(printed));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Lending Requests
		/// This API returns a list of lending requests in Alma
		/// GetSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requests almaws/v1/task-lists/rs/lending-requests
		/// </summary>
		/// <param name="library">The resource sharing library for which lending requests should be retrieved. Mandatory. List of possible libraries can be retrieved using the [GET /almaws/v1/conf/libraries API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4Dp4I8TKv6CAxBlD4LyRaVE=/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <param name="status">The status of lending requests to retrieve. Optional. List of possible statuses can be retrieved using the [GET almaws/v1/conf/code-tables/MandatoryLendingWorkflowSteps API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed) and the  [GET almaws/v1/conf/code-tables/OptionalLendingWorkflowSteps API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <param name="printed">The 'printed' value of lending requests to retrieve. Optional. Possible values: Y, N.</param>
		/// <param name="reported">The 'reported' value of lending requests to retrieve. Optional. Possible values: Y, N.</param>
		/// <param name="partner">The partner value. Only lending requests from this partner should be retrieved. Optional. List of possible partners can be retrieved using the [GET almaws/v1/partners API](https://developers.exlibrisgroup.com/alma/apis/partners/GET/gwPcGly021piAVNPLaef7suP1zfa6Lui/8883ef41-c3b8-4792-9ff8-cb6b729d6e07).</param>
		/// <param name="requested_format">Requested format of the resource. Optional. List of possible formats can be retrieved using the [GET almaws/v1/conf/code-tables/RequestFormats API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <param name="supplied_format">Supplied Format of the resource. Optional. List of possible formats can be retrieved using the [GET almaws/v1/conf/code-tables/RequestFormats API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <returns>OK - This method returns an object based on rest_user_resource_sharing_requests.xsd. See [here](/alma/apis/docs/xsd/rest_user_resource_sharing_requests.xsd)</returns>
		public async Task<GetSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requestsReturn> GetSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requestsAsync(string library, string status, string printed, string reported, string partner, string requested_format, string supplied_format, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/rs/lending-requests?library=" + (library==null? "" : System.Uri.EscapeDataString(library))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&printed=" + (printed==null? "" : System.Uri.EscapeDataString(printed))+"&reported=" + (reported==null? "" : System.Uri.EscapeDataString(reported))+"&partner=" + (partner==null? "" : System.Uri.EscapeDataString(partner))+"&requested_format=" + (requested_format==null? "" : System.Uri.EscapeDataString(requested_format))+"&supplied_format=" + (supplied_format==null? "" : System.Uri.EscapeDataString(supplied_format));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requestsReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Act on Lending Requests
		/// This API preforms the requested action on a list (specified by given filters) of lending requests in Alma
		/// PostSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requests almaws/v1/task-lists/rs/lending-requests
		/// </summary>
		/// <param name="library">The resource sharing library from which lending requests should be retrieved. Mandatory. List of possible libraries can be retrieved using the [GET /almaws/v1/conf/libraries API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4Dp4I8TKv6CAxBlD4LyRaVE=/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <param name="op">Operation to be preformed on the list of given requests. Currently the only supported action is 'mark_reported'. Mandatory.</param>
		/// <param name="status">The status of lending requests to retrieve. Optional. List of possible statuses can be retrieved using the [GET almaws/v1/conf/code-tables/MandatoryLendingWorkflowSteps API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).and the  [GET almaws/v1/conf/code-tables/OptionalLendingWorkflowSteps API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <param name="printed">The 'printed' value of lending requests to retrieve. Optional. Possible values: Y, N.</param>
		/// <param name="reported">The 'reported' value of lending requests to retrieve. Optional. Possible values: Y, N.</param>
		/// <param name="partner">The partner value. Only lending requests from this partner should be. Optional. List of possible partners can be retrieved using the [GET almaws/v1/partners API](https://developers.exlibrisgroup.com/alma/apis/partners/GET/gwPcGly021piAVNPLaef7suP1zfa6Lui/8883ef41-c3b8-4792-9ff8-cb6b729d6e07).</param>
		/// <param name="requested_format">Requested format of the resource. Optional. List of possible formats can be retrieved using the [GET almaws/v1/conf/code-tables/RequestFormats API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <param name="supplied_format">Supplied Format of the resource. Optional. List of possible formats can be retrieved using the [GET almaws/v1/conf/code-tables/RequestFormats API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4K7cQ0vuYHLS4NSgDGmcRpRYqx5hIMRTng9SIKO5Vof+/37088dc9-c685-4641-bc7f-60b5ca7cabed).</param>
		/// <returns>OK - This method returns an object based on rest_user_resource_sharing_request.xsd. See [here](/alma/apis/docs/xsd/rest_user_resource_sharing_request.xsd)</returns>
		public async Task PostSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requestsAsync(string library, string op, string status, string printed, string reported, string partner, string requested_format, string supplied_format, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/rs/lending-requests?library=" + (library==null? "" : System.Uri.EscapeDataString(library))+"&op=" + (op==null? "" : System.Uri.EscapeDataString(op))+"&status=" + (status==null? "" : System.Uri.EscapeDataString(status))+"&printed=" + (printed==null? "" : System.Uri.EscapeDataString(printed))+"&reported=" + (reported==null? "" : System.Uri.EscapeDataString(reported))+"&partner=" + (partner==null? "" : System.Uri.EscapeDataString(partner))+"&requested_format=" + (requested_format==null? "" : System.Uri.EscapeDataString(requested_format))+"&supplied_format=" + (supplied_format==null? "" : System.Uri.EscapeDataString(supplied_format));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GET Task-lists Test API
		/// This API is used to test if the API key was configured correctly.It returns a short XML (no schema available - the output is subject to changes) with the following structure:<test>GET - OK - institutionCode: 01ABC_INST</test>
		/// GetSlashalmawsSlashv1Slashtask_listsSlashtest almaws/v1/task-lists/test
		/// </summary>
		/// <returns>OK</returns>
		public async Task<string> GetSlashalmawsSlashv1Slashtask_listsSlashtestAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/test";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				return jsonReader.ReadAsString();
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// POST Task-lists Test API
		/// This API is used to test if the API key was configured correctly, including read/write permissions.It returns a short XML (no schema available - the output is subject to changes) with the following structure:<test>POST - OK</test>
		/// PostSlashalmawsSlashv1Slashtask_listsSlashtest almaws/v1/task-lists/test
		/// </summary>
		/// <returns>OK</returns>
		public async Task<string> PostSlashalmawsSlashv1Slashtask_listsSlashtestAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "almaws/v1/task-lists/test";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				return jsonReader.ReadAsString();
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturn
	{
		
		/// <summary>
		/// printout object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="printout")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintout[] GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintout { get; set; }
		
		/// <summary>
		/// The total number of printouts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_record_count")]
		public System.Nullable<System.Int32> Total_record_count { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintout
	{
		
		/// <summary>
		/// The time that the letter has been send to the Printout Queue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.Nullable<System.DateTimeOffset> Date { get; set; }
		
		/// <summary>
		/// The printout id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Letter Html body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="letter")]
		public string Letter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// The printer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="printer")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintoutPrinter Printer { get; set; }
		
		/// <summary>
		/// The printout name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="printout")]
		public string Printout { get; set; }
		
		/// <summary>
		/// The size of the letter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
		
		/// <summary>
		/// The user who printed the letter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Status of the printout (Pending/Printed/Canceled).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintoutStatus Status { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintoutPrinter
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashprintoutsReturnPrintoutStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturn
	{
		
		/// <summary>
		/// Requested resource object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requested_resource")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resource[] GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resource { get; set; }
		
		/// <summary>
		/// The total number of requested resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_record_count")]
		public System.Nullable<System.Int32> Total_record_count { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resource
	{
		
		/// <summary>
		/// Location of the requested resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocation Location { get; set; }
		
		/// <summary>
		/// Requests for resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequest[] GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequest { get; set; }
		
		/// <summary>
		/// Metadata about the requested resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource_metadata")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceResource_metadata Resource_metadata { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocation
	{
		
		/// <summary>
		/// Call number of the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="call_number")]
		public string Call_number { get; set; }
		
		/// <summary>
		/// Copies of resource in a specific location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copy")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationCopy[] GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationCopy { get; set; }
		
		/// <summary>
		/// Holding pid, a unique holding id that the resource is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holding_id")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationHolding_id Holding_id { get; set; }
		
		/// <summary>
		/// Library of the requested resource. See [Get libraries API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4Dp4I8TKv6CAxBlD4LyRaVE=/37088dc9-c685-4641-bc7f-60b5ca7cabed).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="library")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationLibrary Library { get; set; }
		
		/// <summary>
		/// The location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shelving_location")]
		public string Shelving_location { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationCopy
	{
		
		/// <summary>
		/// Alternative call number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternative_call_number")]
		public string Alternative_call_number { get; set; }
		
		/// <summary>
		/// The item's barcode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="barcode")]
		public string Barcode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="base_status")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationCopyBase_status Base_status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// The resource's pid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pid")]
		public string Pid { get; set; }
		
		/// <summary>
		/// The item's storage location id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storage_location_id")]
		public string Storage_location_id { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationCopyBase_status
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationHolding_id
	{
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceLocationLibrary
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequest
	{
		
		/// <summary>
		/// The related note of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comment")]
		public string Comment { get; set; }
		
		/// <summary>
		/// The destination will be a library in most cases. However, it may at times be: A circulation desk (when the pickup location is a reading room) A Home/Office code, where the request is for personal delivery A Work Order department
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestDestination Destination { get; set; }
		
		/// <summary>
		/// The identifier of the request in Alma.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// Indication whether the request is printed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="printed")]
		public System.Nullable<System.Boolean> Printed { get; set; }
		
		/// <summary>
		/// Indication whether the request is reported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reported")]
		public System.Nullable<System.Boolean> Reported { get; set; }
		
		/// <summary>
		/// Deprecated - use request_time instead. The request date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_date")]
		public System.Nullable<System.DateOnly> Request_date { get; set; }
		
		/// <summary>
		/// The sub type of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_sub_type")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestRequest_sub_type Request_sub_type { get; set; }
		
		/// <summary>
		/// The creation date and exact time of the request. Output parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_time")]
		public System.Nullable<System.DateTimeOffset> Request_time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_type")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestRequest_type Request_type { get; set; }
		
		/// <summary>
		/// A description of the requester.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requester")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestRequester Requester { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestDestination
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestRequest_sub_type
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestRequest_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOKING")]
		BOOKING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIGITIZATION")]
		DIGITIZATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HOLD")]
		HOLD = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOVE")]
		MOVE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WORK_ORDER")]
		WORK_ORDER = 4,
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceRequestRequester
	{
		
		[System.Runtime.Serialization.DataMember(Name="desc")]
		public string Desc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceResource_metadata
	{
		
		/// <summary>
		/// An entity primarily responsible for making the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		/// <summary>
		/// ISBN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isbn")]
		public string Isbn { get; set; }
		
		/// <summary>
		/// ISSN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issn")]
		public string Issn { get; set; }
		
		/// <summary>
		/// The MMS id of the resource. See [GET BIB API](https://developers.exlibrisgroup.com/alma/apis/bibs/GET/gwPcGly021om4RTvtjbPleCklCGxeYAf3JPdiJpJhUA=/af2fb69d-64f4-42bc-bb05-d8a0ae56936e).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mms_id")]
		public GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceResource_metadataMms_id Mms_id { get; set; }
		
		/// <summary>
		/// Place of publication.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publication_place")]
		public string Publication_place { get; set; }
		
		/// <summary>
		/// The year associated with the publication of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publication_year")]
		public string Publication_year { get; set; }
		
		/// <summary>
		/// An entity responsible for making the resource available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publisher")]
		public string Publisher { get; set; }
		
		/// <summary>
		/// The resource title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrequested_resourcesReturnRequested_resourceResource_metadataMms_id
	{
		
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetSlashalmawsSlashv1Slashtask_listsSlashrsSlashlending_requestsReturn
	{
		
		/// <summary>
		/// The total number of resource sharing requests in the given list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_record_count")]
		public System.Nullable<System.Int64> Total_record_count { get; set; }
		
		/// <summary>
		/// UserResourceSharingRequest object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_resource_sharing_request")]
		public string[] User_resource_sharing_request { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

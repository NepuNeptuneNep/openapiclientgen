//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Address
	{
		
		/// <summary>
		/// Name of city.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Name of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_name")]
		public string Contact_name { get; set; }
		
		/// <summary>
		/// country code according to ISO 3166-1 alpha-2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Address field that holds a sublocality, such as a county
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="county")]
		public string County { get; set; }
		
		/// <summary>
		/// Email address of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Fax number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// Unique identifier for the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Latitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		/// <summary>
		/// Line 1 of the address e.g. number, street, suite, apt #, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line1")]
		public string Line1 { get; set; }
		
		/// <summary>
		/// Line 2 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line2")]
		public string Line2 { get; set; }
		
		/// <summary>
		/// Line 3 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line3")]
		public string Line3 { get; set; }
		
		/// <summary>
		/// Line 4 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line4")]
		public string Line4 { get; set; }
		
		/// <summary>
		/// Longitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		/// <summary>
		/// The name of the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Additional notes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// Phone number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// Zip code or equivalent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Salutation of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		/// <summary>
		/// Name of state
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Street number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_number")]
		public string Street_number { get; set; }
		
		/// <summary>
		/// The address string. Some APIs don't provide structured address data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="string")]
		public string String { get; set; }
		
		/// <summary>
		/// The type of address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AddressType> Type { get; set; }
		
		/// <summary>
		/// Website of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AddressType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="primary")]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="secondary")]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="home")]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="office")]
		office = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="shipping")]
		shipping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="billing")]
		billing = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BadRequestResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BankAccount
	{
		
		/// <summary>
		/// The name which you used in opening your bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The type of bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public System.Nullable<BankAccountAccount_type> Account_type { get; set; }
		
		/// <summary>
		/// A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_code")]
		public string Bank_code { get; set; }
		
		/// <summary>
		/// The name of the bank
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_name")]
		public string Bank_name { get; set; }
		
		/// <summary>
		/// The Bank Identifier Code (BIC).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bic")]
		public string Bic { get; set; }
		
		/// <summary>
		/// A branch identifier is a unique identifier for a branch of a bank or financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="branch_identifier")]
		public string Branch_identifier { get; set; }
		
		/// <summary>
		/// A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bsb_number")]
		public string Bsb_number { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public System.Nullable<BankAccountCurrency> Currency { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
		
		/// <summary>
		/// A routing number is a nine-digit code used to identify a financial institution in the United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum BankAccountAccount_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bank_account")]
		bank_account = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="credit_card")]
		credit_card = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum BankAccountCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNKNOWN_CURRENCY")]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AED")]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AFN")]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALL")]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AMD")]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ANG")]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AOA")]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ARS")]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUD")]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWG")]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AZN")]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BAM")]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BBD")]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BDT")]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BGN")]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BHD")]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIF")]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BMD")]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BND")]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOB")]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOV")]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BRL")]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BSD")]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BTN")]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BWP")]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BYR")]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BZD")]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CAD")]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CDF")]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHE")]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHF")]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHW")]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLF")]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLP")]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CNY")]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COP")]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COU")]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CRC")]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUC")]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUP")]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CVE")]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CZK")]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DJF")]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DKK")]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOP")]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DZD")]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EGP")]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ERN")]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ETB")]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EUR")]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FJD")]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FKP")]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GBP")]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEL")]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GHS")]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GIP")]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GMD")]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GNF")]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GTQ")]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GYD")]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HKD")]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HNL")]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HRK")]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HTG")]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HUF")]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDR")]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ILS")]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INR")]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IQD")]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IRR")]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ISK")]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JMD")]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOD")]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JPY")]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KES")]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KGS")]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KHR")]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KMF")]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KPW")]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KRW")]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KWD")]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KYD")]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KZT")]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAK")]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LBP")]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LKR")]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LRD")]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LSL")]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LTL")]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LVL")]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LYD")]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MAD")]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MDL")]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MGA")]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MKD")]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MMK")]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MNT")]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOP")]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MRO")]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MUR")]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MVR")]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MWK")]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MXN")]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MXV")]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MYR")]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MZN")]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NAD")]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NGN")]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NIO")]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOK")]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NPR")]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NZD")]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OMR")]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAB")]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PEN")]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PGK")]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PHP")]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PKR")]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PLN")]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PYG")]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QAR")]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RON")]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RSD")]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUB")]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RWF")]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAR")]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SBD")]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCR")]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SDG")]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEK")]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SGD")]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SHP")]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SLL")]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SOS")]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SRD")]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SSP")]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STD")]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SVC")]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SYP")]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SZL")]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="THB")]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TJS")]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TMT")]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TND")]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOP")]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRC")]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRY")]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TTD")]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TWD")]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TZS")]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UAH")]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UGX")]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USD")]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USN")]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USS")]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UYI")]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UYU")]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UZS")]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VEF")]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VND")]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VUV")]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WST")]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XAF")]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XAG")]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XAU")]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBA")]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBB")]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBC")]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBD")]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XCD")]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XDR")]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XOF")]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XPD")]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XPF")]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XPT")]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XTS")]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XXX")]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="YER")]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZAR")]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZMK")]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZMW")]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BTC")]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ETH")]
		ETH = 182,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Benefit
	{
		
		/// <summary>
		/// The amount deducted for benefit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_deduction")]
		public System.Nullable<System.Double> Employee_deduction { get; set; }
		
		/// <summary>
		/// The amount of employer contribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_contribution")]
		public System.Nullable<System.Double> Employer_contribution { get; set; }
		
		/// <summary>
		/// The name of the benefit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Compensation
	{
		
		/// <summary>
		/// An array of employee benefits for the pay period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="benefits")]
		public Benefit[] Benefits { get; set; }
		
		/// <summary>
		/// An array of employee deductions for the pay period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deductions")]
		public Deduction[] Deductions { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The employee's gross pay. Only available when payroll has been processed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gross_pay")]
		public System.Nullable<System.Double> Gross_pay { get; set; }
		
		/// <summary>
		/// The employee's net pay. Only available when payroll has been processed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="net_pay")]
		public System.Nullable<System.Double> Net_pay { get; set; }
		
		/// <summary>
		/// An array of employer and employee taxes for the pay period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taxes")]
		public Tax[] Taxes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Deduction
	{
		
		/// <summary>
		/// The amount deducted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// The name of the deduction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Tax
	{
		
		/// <summary>
		/// The amount of the tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// Paid by employer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer")]
		public System.Nullable<System.Boolean> Employer { get; set; }
		
		/// <summary>
		/// The name of the tax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateDepartmentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnifiedId
	{
		
		/// <summary>
		/// The unique identifier of the resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateEmployeeResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateHrisCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateTimeOffRequestResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum Currency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNKNOWN_CURRENCY")]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AED")]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AFN")]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALL")]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AMD")]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ANG")]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AOA")]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ARS")]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUD")]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWG")]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AZN")]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BAM")]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BBD")]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BDT")]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BGN")]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BHD")]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIF")]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BMD")]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BND")]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOB")]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOV")]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BRL")]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BSD")]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BTN")]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BWP")]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BYR")]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BZD")]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CAD")]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CDF")]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHE")]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHF")]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHW")]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLF")]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLP")]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CNY")]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COP")]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COU")]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CRC")]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUC")]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUP")]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CVE")]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CZK")]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DJF")]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DKK")]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOP")]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DZD")]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EGP")]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ERN")]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ETB")]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EUR")]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FJD")]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FKP")]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GBP")]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEL")]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GHS")]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GIP")]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GMD")]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GNF")]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GTQ")]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GYD")]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HKD")]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HNL")]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HRK")]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HTG")]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HUF")]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDR")]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ILS")]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INR")]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IQD")]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IRR")]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ISK")]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JMD")]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOD")]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JPY")]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KES")]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KGS")]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KHR")]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KMF")]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KPW")]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KRW")]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KWD")]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KYD")]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KZT")]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAK")]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LBP")]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LKR")]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LRD")]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LSL")]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LTL")]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LVL")]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LYD")]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MAD")]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MDL")]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MGA")]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MKD")]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MMK")]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MNT")]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOP")]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MRO")]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MUR")]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MVR")]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MWK")]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MXN")]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MXV")]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MYR")]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MZN")]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NAD")]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NGN")]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NIO")]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOK")]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NPR")]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NZD")]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OMR")]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAB")]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PEN")]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PGK")]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PHP")]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PKR")]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PLN")]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PYG")]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QAR")]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RON")]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RSD")]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUB")]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RWF")]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAR")]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SBD")]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCR")]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SDG")]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEK")]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SGD")]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SHP")]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SLL")]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SOS")]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SRD")]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SSP")]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STD")]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SVC")]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SYP")]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SZL")]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="THB")]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TJS")]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TMT")]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TND")]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOP")]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRC")]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRY")]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TTD")]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TWD")]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TZS")]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UAH")]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UGX")]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USD")]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USN")]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USS")]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UYI")]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UYU")]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UZS")]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VEF")]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VND")]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VUV")]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WST")]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XAF")]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XAG")]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XAU")]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBA")]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBB")]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBC")]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XBD")]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XCD")]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XDR")]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XOF")]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XPD")]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XPF")]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XPT")]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XTS")]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XXX")]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="YER")]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZAR")]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZMK")]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZMW")]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BTC")]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ETH")]
		ETH = 182,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomField
	{
		
		/// <summary>
		/// More information about the custom field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Unique identifier for the custom field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the custom field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// When custom mappings are configured on the resource, the result is included here.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomMappings
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteDepartmentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteEmployeeResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteHrisCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteTimeOffRequestResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Department
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Department name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Parent ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Email
	{
		
		/// <summary>
		/// Email address
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Email1 { get; set; }
		
		/// <summary>
		/// Unique identifier for the email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Email type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<EmailType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="primary")]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="secondary")]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="work")]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="personal")]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="billing")]
		billing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Employee
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_accounts")]
		public BankAccount[] Bank_accounts { get; set; }
		
		/// <summary>
		/// The date of birth of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="birthday")]
		public System.Nullable<System.DateOnly> Birthday { get; set; }
		
		/// <summary>
		/// The unique identifier of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compensations")]
		public EmployeeCompensation[] Compensations { get; set; }
		
		/// <summary>
		/// Country code according to ISO 3166-1 alpha-2.
		/// Max length: 2
		/// Min length: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_of_birth")]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public string Country_of_birth { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The date the person deceased.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deceased_on")]
		public System.Nullable<System.DateOnly> Deceased_on { get; set; }
		
		/// <summary>
		/// Flag to indicate if the object is deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// The department the person is currently in. [Deprecated](https://developers.apideck.com/changelog) in favor of the dedicated department_id and department_name field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department")]
		public string Department { get; set; }
		
		/// <summary>
		/// Unique identifier of the department ID this employee belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department_id")]
		public string Department_id { get; set; }
		
		/// <summary>
		/// Name of the department this employee belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department_name")]
		public string Department_name { get; set; }
		
		/// <summary>
		/// A description of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Indicate the employee's dietary preference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dietary_preference")]
		public string Dietary_preference { get; set; }
		
		/// <summary>
		/// Direct reports is an array of ids that reflect the individuals in an organizational hierarchy who are directly supervised by this specific employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direct_reports")]
		public string[] Direct_reports { get; set; }
		
		/// <summary>
		/// The name used to display the employee, often a combination of their first and last names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		public string Display_name { get; set; }
		
		/// <summary>
		/// The division the person is currently in. Usually a collection of departments or teams or regions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="division")]
		public string Division { get; set; }
		
		/// <summary>
		/// Unique identifier of the division this employee belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="division_id")]
		public string Division_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// An Employee Number, Employee ID or Employee Code, is a unique number that has been assigned to each individual staff member within a company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_number")]
		public string Employee_number { get; set; }
		
		/// <summary>
		/// An End Date is the date that the employee ended working at the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_end_date")]
		public string Employment_end_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="employment_role")]
		public EmployeeEmployment_role Employment_role { get; set; }
		
		/// <summary>
		/// A Start Date is the date that the employee started working at the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_start_date")]
		public string Employment_start_date { get; set; }
		
		/// <summary>
		/// The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_status")]
		public System.Nullable<EmployeeEmployment_status> Employment_status { get; set; }
		
		/// <summary>
		/// The ethnicity of the employee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ethnicity")]
		public string Ethnicity { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Indicate the employee's food allergies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="food_allergies")]
		public string[] Food_allergies { get; set; }
		
		/// <summary>
		/// The gender represents the gender identity of a person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public System.Nullable<EmployeeGender> Gender { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The initials of the person, usually derived from their first, middle, and last names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="initials")]
		public string Initials { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public EmployeeJob[] Jobs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="languages")]
		public string[] Languages { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The reason because the employment ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="leaving_reason")]
		public System.Nullable<EmployeeLeaving_reason> Leaving_reason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manager")]
		public EmployeeManager Manager { get; set; }
		
		/// <summary>
		/// The marital status of the employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marital_status")]
		public string Marital_status { get; set; }
		
		/// <summary>
		/// Middle name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nationalities")]
		public string[] Nationalities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="partner")]
		public Person Partner { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// The URL of the photo of a person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="photo_url")]
		public string Photo_url { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferred_language")]
		public string Preferred_language { get; set; }
		
		/// <summary>
		/// The name the employee prefers to be addressed by, which may be different from their legal name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferred_name")]
		public string Preferred_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="probation_period")]
		public EmployeeProbation_period Probation_period { get; set; }
		
		/// <summary>
		/// The preferred pronouns of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pronouns")]
		public string Pronouns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="record_url")]
		public string Record_url { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// A formal salutation for the person. For example, 'Mr', 'Mrs'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="social_links")]
		public SocialLink[] Social_links { get; set; }
		
		/// <summary>
		/// A unique identifier assigned by the government. This field is considered sensitive information and may be subject to special security and privacy restrictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_security_number")]
		public string Social_security_number { get; set; }
		
		/// <summary>
		/// When the employee is imported as a new hire, this field indicates what system (e.g. the name of the ATS) this employee was imported from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Unique identifier of the employee in the system this employee was imported from (e.g. the ID in the ATS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_id")]
		public string Source_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_code")]
		public string Tax_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tax_id")]
		public string Tax_id { get; set; }
		
		/// <summary>
		/// The team the person is currently in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="team")]
		public Team Team { get; set; }
		
		/// <summary>
		/// The time zone related to the resource. The value is a string containing a standard time zone identifier, e.g. Europe/London.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		/// <summary>
		/// Indicates if the employee works from a remote location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="works_remote")]
		public System.Nullable<System.Boolean> Works_remote { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeeCompensation
	{
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// The date on which a change to an employee's compensation takes effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effective_date")]
		public string Effective_date { get; set; }
		
		/// <summary>
		/// The FLSA status for this compensation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flsa_status")]
		public System.Nullable<EmployeeCompensationFlsa_status> Flsa_status { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID of the job to which the compensation belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job_id")]
		public string Job_id { get; set; }
		
		/// <summary>
		/// Frequency of employee compensation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_frequency")]
		public System.Nullable<EmployeeCompensationPayment_frequency> Payment_frequency { get; set; }
		
		/// <summary>
		/// Unit of measurement for employee compensation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_unit")]
		public System.Nullable<EmployeeCompensationPayment_unit> Payment_unit { get; set; }
		
		/// <summary>
		/// The amount paid per payment unit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rate")]
		public System.Nullable<System.Double> Rate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeCompensationFlsa_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="exempt")]
		exempt = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="salaried-nonexempt")]
		salariedMinusnonexempt = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nonexempt")]
		nonexempt = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="owner")]
		owner = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeCompensationPayment_frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="weekly")]
		weekly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="biweekly")]
		biweekly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="monthly")]
		monthly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pro-rata")]
		proMinusrata = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeCompensationPayment_unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hour")]
		hour = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="week")]
		week = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="month")]
		month = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="year")]
		year = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="paycheck")]
		paycheck = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 5,
	}
	
	public class EmployeeEmployment_role
	{
		
		/// <summary>
		/// The work schedule of the employee.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_type")]
		public System.Nullable<EmployeeEmployment_roleSub_type> Sub_type { get; set; }
		
		/// <summary>
		/// The type of employment relationship the employee has with the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<EmployeeEmployment_roleType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeEmployment_roleSub_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="full_time")]
		full_time = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="part_time")]
		part_time = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hourly")]
		hourly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeEmployment_roleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="contractor")]
		contractor = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="employee")]
		employee = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="freelance")]
		freelance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="temp")]
		temp = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="internship")]
		internship = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeEmployment_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="active")]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inactive")]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="terminated")]
		terminated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeGender
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="male")]
		male = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="female")]
		female = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unisex")]
		unisex = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="not_specified")]
		not_specified = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeeJob
	{
		
		/// <summary>
		/// The rate of pay for the employee in their current job role.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compensation_rate")]
		public System.Nullable<System.Double> Compensation_rate { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The date on which the employee leaves or is expected to leave their current job role.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The date on which the employee was hired by the organization
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hired_at")]
		public System.Nullable<System.DateOnly> Hired_at { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Indicates whether this the employee's primary job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_primary")]
		public System.Nullable<System.Boolean> Is_primary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="location")]
		public Address Location { get; set; }
		
		/// <summary>
		/// Unit of measurement for employee compensation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payment_unit")]
		public EmployeeCompensationPayment_unit Payment_unit { get; set; }
		
		/// <summary>
		/// The position and responsibilities of the person within the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
		
		/// <summary>
		/// The date on which the employee starts working in their current job role.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeeLeaving_reason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="dismissed")]
		dismissed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="resigned")]
		resigned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="redundancy")]
		redundancy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
	}
	
	public class EmployeeManager
	{
		
		/// <summary>
		/// The email address of the manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_status")]
		public EmployeeEmployment_status Employment_status { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The name of the manager, often a combination of their first and last names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Person
	{
		
		/// <summary>
		/// Date of birth
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="birthday")]
		public System.Nullable<System.DateOnly> Birthday { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Date of death
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deceased_on")]
		public System.Nullable<System.DateOnly> Deceased_on { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The gender represents the gender identity of a person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public EmployeeGender Gender { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Initials of the person
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="initials")]
		public string Initials { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Middle name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PhoneNumber
	{
		
		/// <summary>
		/// The area code of the phone number, e.g. 323
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="area_code")]
		public string Area_code { get; set; }
		
		/// <summary>
		/// The country code of the phone number, e.g. +1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The extension of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extension")]
		public string Extension { get; set; }
		
		/// <summary>
		/// Unique identifier of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The phone number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Number { get; set; }
		
		/// <summary>
		/// The type of phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PhoneNumberType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PhoneNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="primary")]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="secondary")]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="home")]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="work")]
		work = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="office")]
		office = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mobile")]
		mobile = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="assistant")]
		assistant = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fax")]
		fax = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="direct-dial-in")]
		directMinusdialMinusin = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="personal")]
		personal = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 10,
	}
	
	public class EmployeeProbation_period
	{
		
		/// <summary>
		/// The date that the employee ended their probation period at the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// The date that the employee started their probation period at the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SocialLink
	{
		
		/// <summary>
		/// Unique identifier of the social link
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Type of the social link, e.g. twitter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// URL of the social link, e.g. https://www.twitter.com/apideck
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// The team the person is currently in.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Team
	{
		
		/// <summary>
		/// The unique identifier of the team.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the team.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeeList
	{
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeePayroll
	{
		
		/// <summary>
		/// The date on which employees will be paid for the payroll.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="check_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Check_date { get; set; }
		
		/// <summary>
		/// The unique identifier of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// An array of compensations for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compensations")]
		public Compensation[] Compensations { get; set; }
		
		/// <summary>
		/// ID of the employee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The end date, inclusive, of the pay period.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether or not the payroll has been successfully processed. Note that processed payrolls cannot be updated.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processed")]
		public System.Nullable<System.Boolean> Processed { get; set; }
		
		/// <summary>
		/// The date the payroll was processed.
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Processed_date { get; set; }
		
		/// <summary>
		/// The start date, inclusive, of the pay period.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totals")]
		public PayrollTotals Totals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PayrollTotals
	{
		
		/// <summary>
		/// The total check amount for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="check_amount")]
		public System.Nullable<System.Double> Check_amount { get; set; }
		
		/// <summary>
		/// The total company debit for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_debit")]
		public System.Nullable<System.Double> Company_debit { get; set; }
		
		/// <summary>
		/// The total amount of employee deducted benefits for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_benefit_deductions")]
		public System.Nullable<System.Double> Employee_benefit_deductions { get; set; }
		
		/// <summary>
		/// The total amount of employee paid taxes for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_taxes")]
		public System.Nullable<System.Double> Employee_taxes { get; set; }
		
		/// <summary>
		/// The total amount of company contributed benefits for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_benefit_contributions")]
		public System.Nullable<System.Double> Employer_benefit_contributions { get; set; }
		
		/// <summary>
		/// The total amount of employer paid taxes for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employer_taxes")]
		public System.Nullable<System.Double> Employer_taxes { get; set; }
		
		/// <summary>
		/// The gross pay amount for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gross_pay")]
		public System.Nullable<System.Double> Gross_pay { get; set; }
		
		/// <summary>
		/// The net pay amount for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="net_pay")]
		public System.Nullable<System.Double> Net_pay { get; set; }
		
		/// <summary>
		/// The total tax debit for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_debit")]
		public System.Nullable<System.Double> Tax_debit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeeSchedules
	{
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public Employee Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="schedules")]
		public Schedule[] Schedules { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Schedule
	{
		
		/// <summary>
		/// The end date, inclusive, of the schedule period.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The start date, inclusive, of the schedule period.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="work_pattern")]
		public ScheduleWork_pattern Work_pattern { get; set; }
	}
	
	public class ScheduleWork_pattern
	{
		
		[System.Runtime.Serialization.DataMember(Name="even_weeks")]
		public ScheduleWork_patternEven_weeks Even_weeks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="odd_weeks")]
		public ScheduleWork_patternOdd_weeks Odd_weeks { get; set; }
	}
	
	public class ScheduleWork_patternEven_weeks
	{
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_friday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_friday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_monday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_monday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_saturday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_saturday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_sunday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_sunday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_thursday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_thursday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_tuesday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_tuesday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_wednesday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_wednesday { get; set; }
	}
	
	public class ScheduleWork_patternOdd_weeks
	{
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_friday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_friday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_monday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_monday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_saturday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_saturday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_sunday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_sunday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_thursday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_thursday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_tuesday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_tuesday { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 24
		/// Pattern: ^(\d{1,2})(\.\d{1,2})?$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours_wednesday")]
		[System.ComponentModel.DataAnnotations.Range(0, 24)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(\d{1,2})(\.\d{1,2})?$")]
		public System.Nullable<System.Double> Hours_wednesday { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeesFilter
	{
		
		/// <summary>
		/// Company ID to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// ID of the department to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department_id")]
		public string Department_id { get; set; }
		
		/// <summary>
		/// Email to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Employee number to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_number")]
		public string Employee_number { get; set; }
		
		/// <summary>
		/// Employment status to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_status")]
		public EmployeeEmployment_status Employment_status { get; set; }
		
		/// <summary>
		/// First Name to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last Name to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Manager id to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manager_id")]
		public string Manager_id { get; set; }
		
		/// <summary>
		/// Job title to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EmployeesSort
	{
		
		/// <summary>
		/// The field on which to sort the Employees
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<EmployeesSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<EmployeesSortDirection> Direction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeesSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="first_name")]
		first_name = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="last_name")]
		last_name = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="created_at")]
		created_at = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="updated_at")]
		updated_at = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmployeesSortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="asc")]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="desc")]
		desc = 1,
	}
	
	/// <summary>
	/// The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EmploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="active")]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inactive")]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="terminated")]
		terminated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
	}
	
	/// <summary>
	/// The gender represents the gender identity of a person.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum Gender
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="male")]
		male = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="female")]
		female = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="unisex")]
		unisex = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="not_specified")]
		not_specified = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetDepartmentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Department Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetDepartmentsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Department[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Links to navigate to previous or next pages through the API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Links
	{
		
		/// <summary>
		/// Link to navigate to the current page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	/// <summary>
	/// Response metadata
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Meta
	{
		
		/// <summary>
		/// Cursors to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursors")]
		public MetaCursors Cursors { get; set; }
		
		/// <summary>
		/// Number of items returned in the data property of the response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items_on_page")]
		public System.Nullable<System.Int32> Items_on_page { get; set; }
	}
	
	public class MetaCursors
	{
		
		/// <summary>
		/// Cursor to navigate to the current page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the next page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the previous page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEmployeePayrollResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EmployeePayroll Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEmployeePayrollsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EmployeePayroll[] Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEmployeeResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Employee Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEmployeeSchedulesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EmployeeSchedules Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEmployeesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Employee[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetHrisCompaniesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public HrisCompany[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class HrisCompany
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// An Company Number, Company ID or Company Code, is a unique number that has been assigned to each company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_number")]
		public string Company_number { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="debtor_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Debtor_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Display_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="legal_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Legal_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<HrisCompanyStatus> Status { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subdomain")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Subdomain { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum HrisCompanyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="active")]
		active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="inactive")]
		inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="trial")]
		trial = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Website
	{
		
		/// <summary>
		/// Unique identifier for the website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The type of website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<WebsiteType> Type { get; set; }
		
		/// <summary>
		/// The website URL
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum WebsiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="primary")]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="secondary")]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="work")]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="personal")]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetHrisCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public HrisCompany Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetHrisJobResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public HrisJob Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class HrisJob
	{
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Department name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department")]
		public string Department { get; set; }
		
		/// <summary>
		/// Id of the employee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employment_status")]
		public EmployeeEmployment_status Employment_status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public System.Nullable<System.DateOnly> End_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Indicates whether this the employee's primary job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_primary")]
		public System.Nullable<System.Boolean> Is_primary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="location")]
		public HrisJobLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		public System.Nullable<System.DateOnly> Start_date { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class HrisJobLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetHrisJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public HrisJobs Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class HrisJobs
	{
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public Employee Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public HrisJob[] Jobs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetPayrollResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Payroll Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Payroll
	{
		
		/// <summary>
		/// The date on which employees will be paid for the payroll.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="check_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Check_date { get; set; }
		
		/// <summary>
		/// The unique identifier of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// An array of compensations for the payroll.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compensations")]
		public Compensation[] Compensations { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The end date, inclusive, of the pay period.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether or not the payroll has been successfully processed. Note that processed payrolls cannot be updated.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="processed")]
		public System.Nullable<System.Boolean> Processed { get; set; }
		
		/// <summary>
		/// The date the payroll was processed.
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Processed_date { get; set; }
		
		/// <summary>
		/// The start date, inclusive, of the pay period.
		/// Required
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totals")]
		public PayrollTotals Totals { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetPayrollsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Payroll[] Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetTimeOffRequestResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public TimeOffRequest Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TimeOffRequest
	{
		
		/// <summary>
		/// The amount of time off requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		/// <summary>
		/// The date the request was approved
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approval_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Approval_date { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The user who created the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Description of the time off request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// ID of the employee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// The end date of the time off request.
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// A unique identifier for an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public TimeOffRequestNotes Notes { get; set; }
		
		/// <summary>
		/// ID of the policy
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy_id")]
		public string Policy_id { get; set; }
		
		/// <summary>
		/// The date the request was made.
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Request_date { get; set; }
		
		/// <summary>
		/// The type of request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_type")]
		public System.Nullable<TimeOffRequestRequest_type> Request_type { get; set; }
		
		/// <summary>
		/// The start date of the time off request.
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
		
		/// <summary>
		/// The status of the time off request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<TimeOffRequestStatus> Status { get; set; }
		
		/// <summary>
		/// The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="units")]
		public System.Nullable<TimeOffRequestUnits> Units { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	public class TimeOffRequestNotes
	{
		
		[System.Runtime.Serialization.DataMember(Name="employee")]
		public string Employee { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="manager")]
		public string Manager { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TimeOffRequestRequest_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="vacation")]
		vacation = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sick")]
		sick = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="personal")]
		personal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="jury_duty")]
		jury_duty = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="volunteer")]
		volunteer = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bereavement")]
		bereavement = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TimeOffRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="requested")]
		requested = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="approved")]
		approved = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="declined")]
		declined = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cancelled")]
		cancelled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="deleted")]
		deleted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum TimeOffRequestUnits
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="days")]
		days = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hours")]
		hours = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetTimeOffRequestsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public TimeOffRequest[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum HrisEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="*")]
		_ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.created")]
		hris_employee_created = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.updated")]
		hris_employee_updated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.terminated")]
		hris_employee_terminated = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.deleted")]
		hris_employee_deleted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.company.created")]
		hris_company_created = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.company.updated")]
		hris_company_updated = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.company.deleted")]
		hris_company_deleted = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class HrisWebhookEvent : WebhookEvent
	{
		
		[System.Runtime.Serialization.DataMember(Name="event_type")]
		public System.Nullable<HrisWebhookEventEvent_type> Event_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum HrisWebhookEventEvent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="*")]
		_ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.created")]
		hris_employee_created = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.updated")]
		hris_employee_updated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.terminated")]
		hris_employee_terminated = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.employee.deleted")]
		hris_employee_deleted = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.company.created")]
		hris_company_created = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.company.updated")]
		hris_company_updated = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris.company.deleted")]
		hris_company_deleted = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotFoundResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotImplementedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PassThroughQuery
	{
		
		/// <summary>
		/// All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="example_downstream_property")]
		public string Example_downstream_property { get; set; }
	}
	
	/// <summary>
	/// Frequency of employee compensation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PaymentFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="weekly")]
		weekly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="biweekly")]
		biweekly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="monthly")]
		monthly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pro-rata")]
		proMinusrata = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PaymentRequiredResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	/// <summary>
	/// Unit of measurement for employee compensation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PaymentUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hour")]
		hour = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="week")]
		week = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="month")]
		month = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="year")]
		year = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="paycheck")]
		paycheck = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="other")]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PayrollsFilter
	{
		
		/// <summary>
		/// Return payrolls whose pay period is before the end date
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// Return payrolls whose pay period is after the start date
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
	}
	
	/// <summary>
	/// The direction in which to sort the results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum SortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="asc")]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="desc")]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TimeOffRequestsFilter
	{
		
		/// <summary>
		/// Employee ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_id")]
		public string Employee_id { get; set; }
		
		/// <summary>
		/// End date
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string End_date { get; set; }
		
		/// <summary>
		/// Start date
		/// Pattern: ^\d{4}-\d{2}-\d{2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_date")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}$")]
		public string Start_date { get; set; }
		
		/// <summary>
		/// Time off request status to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="time_off_request_status")]
		public TimeOffRequestStatus Time_off_request_status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TooManyRequestsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public TooManyRequestsResponseDetail Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	public class TooManyRequestsResponseDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnauthorizedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnexpectedErrorResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnprocessableResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateDepartmentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateEmployeeResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateHrisCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateTimeOffRequestResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WebhookEvent
	{
		
		/// <summary>
		/// Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumer_id")]
		public string Consumer_id { get; set; }
		
		/// <summary>
		/// The service provider's ID of the entity that triggered this event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity_id")]
		public string Entity_id { get; set; }
		
		/// <summary>
		/// The type entity that triggered this event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity_type")]
		public string Entity_type { get; set; }
		
		/// <summary>
		/// The url to retrieve entity detail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entity_url")]
		public string Entity_url { get; set; }
		
		/// <summary>
		/// Unique reference to this request event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_id")]
		public string Event_id { get; set; }
		
		/// <summary>
		/// The current count this request event has been attempted
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution_attempt")]
		public System.Nullable<System.Double> Execution_attempt { get; set; }
		
		/// <summary>
		/// ISO Datetime for when the original event occurred
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="occurred_at")]
		public string Occurred_at { get; set; }
		
		/// <summary>
		/// Service provider identifier
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service_id")]
		public string Service_id { get; set; }
		
		/// <summary>
		/// Name of Apideck Unified API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unified_api")]
		public System.Nullable<WebhookEventUnified_api> Unified_api { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum WebhookEventUnified_api
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accounting")]
		accounting = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ats")]
		ats = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="calendar")]
		calendar = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm")]
		crm = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="csp")]
		csp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="customer-support")]
		customerMinussupport = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ecommerce")]
		ecommerce = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email")]
		email = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-marketing")]
		emailMinusmarketing = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="expense-management")]
		expenseMinusmanagement = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="file-storage")]
		fileMinusstorage = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="form")]
		form = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hris")]
		hris = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lead")]
		lead = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="payroll")]
		payroll = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pos")]
		pos = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="procurement")]
		procurement = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="project-management")]
		projectMinusmanagement = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="script")]
		script = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sms")]
		sms = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="spreadsheet")]
		spreadsheet = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="team-messaging")]
		teamMinusmessaging = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="issue-tracking")]
		issueMinustracking = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="time-registration")]
		timeMinusregistration = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="transactional-email")]
		transactionalMinusemail = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="vault")]
		vault = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="data-warehouse")]
		dataMinuswarehouse = 26,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List Companies
		/// List Companies
		/// CompaniesAll hris/companies
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Companies</returns>
		public async Task<GetHrisCompaniesResponse> CompaniesAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/companies?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetHrisCompaniesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Company
		/// Create Company
		/// CompaniesAdd hris/companies
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task CompaniesAddAsync(bool raw, HrisCompany requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/companies?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Company
		/// Delete Company
		/// CompaniesDelete hris/companies/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Companies</returns>
		public async Task<DeleteHrisCompanyResponse> CompaniesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/companies/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteHrisCompanyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Company
		/// Get Company
		/// CompaniesOne hris/companies/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Company</returns>
		public async Task<GetHrisCompanyResponse> CompaniesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/companies/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetHrisCompanyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Company
		/// Update Company
		/// CompaniesUpdate hris/companies/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Companies</returns>
		public async Task<UpdateHrisCompanyResponse> CompaniesUpdateAsync(string id, bool raw, HrisCompany requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/companies/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateHrisCompanyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List Departments
		/// List Departments
		/// DepartmentsAll hris/departments
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Departments</returns>
		public async Task<GetDepartmentsResponse> DepartmentsAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/departments?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetDepartmentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Department
		/// Create Department
		/// DepartmentsAdd hris/departments
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task DepartmentsAddAsync(bool raw, Department requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/departments?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Department
		/// Delete Department
		/// DepartmentsDelete hris/departments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Departments</returns>
		public async Task<DeleteDepartmentResponse> DepartmentsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/departments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteDepartmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Department
		/// Get Department
		/// DepartmentsOne hris/departments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Departments</returns>
		public async Task<GetDepartmentResponse> DepartmentsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/departments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetDepartmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Department
		/// Update Department
		/// DepartmentsUpdate hris/departments/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Departments</returns>
		public async Task<UpdateDepartmentResponse> DepartmentsUpdateAsync(string id, bool raw, Department requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/departments/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateDepartmentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List Employees
		/// Apideck operates as a stateless Unified API, which means that the list endpoint only provides a portion of the employee model. This is due to the fact that most HRIS systems do not readily provide all data in every call. However, you can access the complete employee model through an employee detail call.
		/// EmployeesAll hris/employees
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Employees</returns>
		public async Task<GetEmployeesResponse> EmployeesAllAsync(bool raw, string cursor, int limit, EmployeesFilter filter, EmployeesSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/employees?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEmployeesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Employee
		/// Create Employee
		/// EmployeesAdd hris/employees
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task EmployeesAddAsync(bool raw, Employee requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/employees?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Employee
		/// Delete Employee
		/// EmployeesDelete hris/employees/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Employees</returns>
		public async Task<DeleteEmployeeResponse> EmployeesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/employees/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteEmployeeResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Employee
		/// Get Employee
		/// EmployeesOne hris/employees/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Employees</returns>
		public async Task<GetEmployeeResponse> EmployeesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/employees/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEmployeeResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Employee
		/// Update Employee
		/// EmployeesUpdate hris/employees/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Employees</returns>
		public async Task<UpdateEmployeeResponse> EmployeesUpdateAsync(string id, bool raw, Employee requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/employees/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateEmployeeResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List Payroll
		/// List Payroll
		/// PayrollsAll hris/payrolls
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Payrolls</returns>
		public async Task<GetPayrollsResponse> PayrollsAllAsync(bool raw, PayrollsFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/payrolls?raw="+raw+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetPayrollsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Employee Payrolls
		/// List payrolls for employee
		/// EmployeePayrollsAll hris/payrolls/employees/{employee_id}
		/// </summary>
		/// <param name="employee_id">ID of the employee you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>EmployeePayrolls</returns>
		public async Task<GetEmployeePayrollsResponse> EmployeePayrollsAllAsync(string employee_id, bool raw, PayrollsFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/payrolls/employees/"+ (employee_id==null? "" : System.Uri.EscapeDataString(employee_id))+"&raw="+raw+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEmployeePayrollsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Employee Payroll
		/// Get payroll for employee
		/// EmployeePayrollsOne hris/payrolls/employees/{employee_id}/payrolls/{payroll_id}
		/// </summary>
		/// <param name="payroll_id">ID of the payroll you are acting upon.</param>
		/// <param name="employee_id">ID of the employee you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Payrolls</returns>
		public async Task<GetEmployeePayrollResponse> EmployeePayrollsOneAsync(string payroll_id, string employee_id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/payrolls/employees/"+ (employee_id==null? "" : System.Uri.EscapeDataString(employee_id))+"/payrolls/"+ (payroll_id==null? "" : System.Uri.EscapeDataString(payroll_id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEmployeePayrollResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Payroll
		/// Get Payroll
		/// PayrollsOne hris/payrolls/{payroll_id}
		/// </summary>
		/// <param name="payroll_id">ID of the payroll you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Payrolls</returns>
		public async Task<GetPayrollResponse> PayrollsOneAsync(string payroll_id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/payrolls/"+ (payroll_id==null? "" : System.Uri.EscapeDataString(payroll_id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetPayrollResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Employee Schedules
		/// List schedules for employee, a schedule is a work pattern, not the actual worked hours, for an employee.
		/// EmployeeSchedulesAll hris/schedules/employees/{employee_id}
		/// </summary>
		/// <param name="employee_id">ID of the employee you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>EmployeeSchedules</returns>
		public async Task<GetEmployeeSchedulesResponse> EmployeeSchedulesAllAsync(string employee_id, bool raw, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/schedules/employees/"+ (employee_id==null? "" : System.Uri.EscapeDataString(employee_id))+"&raw="+raw+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEmployeeSchedulesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Time Off Requests
		/// List Time Off Requests
		/// TimeOffRequestsAll hris/time-off-requests
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20</param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>TimeOffRequests</returns>
		public async Task<GetTimeOffRequestsResponse> TimeOffRequestsAllAsync(bool raw, string cursor, int limit, TimeOffRequestsFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/time-off-requests?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetTimeOffRequestsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Time Off Request
		/// Create Time Off Request
		/// TimeOffRequestsAdd hris/time-off-requests
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task TimeOffRequestsAddAsync(bool raw, TimeOffRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/time-off-requests?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Time Off Request
		/// Delete Time Off Request
		/// TimeOffRequestsDelete hris/time-off-requests/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>TimeOffRequests</returns>
		public async Task<DeleteTimeOffRequestResponse> TimeOffRequestsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/time-off-requests/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteTimeOffRequestResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get Time Off Request
		/// Get Time Off Request
		/// TimeOffRequestsOne hris/time-off-requests/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>TimeOffRequests</returns>
		public async Task<GetTimeOffRequestResponse> TimeOffRequestsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/time-off-requests/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetTimeOffRequestResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Time Off Request
		/// Update Time Off Request
		/// TimeOffRequestsUpdate hris/time-off-requests/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>TimeOffRequests</returns>
		public async Task<UpdateTimeOffRequestResponse> TimeOffRequestsUpdateAsync(string id, bool raw, TimeOffRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hris/time-off-requests/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateTimeOffRequestResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

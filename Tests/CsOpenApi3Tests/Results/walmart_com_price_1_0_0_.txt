//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CapProgramResponse
	{
		
		/// <summary>
		/// A unique ID that a user or seller uses for a marketplace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="martId")]
		public string MartId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusInfo")]
		public CapProgramResponseStatusInfo StatusInfo { get; set; }
	}
	
	public class CapProgramResponseStatusInfo
	{
		
		/// <summary>
		/// A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyEnrolled")]
		public System.Nullable<System.Boolean> SubsidyEnrolled { get; set; }
		
		/// <summary>
		/// A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyPreference")]
		public System.Nullable<System.Boolean> SubsidyPreference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cause
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// This is applicable only for promotions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComparisonPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public System.Nullable<ComparisonPriceCurrency> Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonPriceCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrentPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeedId
	{
		
		[System.Runtime.Serialization.DataMember(Name="additionalAttributes")]
		public string AdditionalAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public string Errors { get; set; }
		
		/// <summary>
		/// A unique ID, returned from the Bulk Upload API, used for tracking the feed file
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedId")]
		public string FeedId1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeedItemsHeaderRequestDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mart")]
		public string Mart { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="processMode")]
		public string ProcessMode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sellingChannel")]
		public string SellingChannel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subset")]
		public string Subset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeedItemsRequestDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="maximumSellerAllowedPrice")]
		public System.Nullable<System.Double> MaximumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimumSellerAllowedPrice")]
		public System.Nullable<System.Double> MinimumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeedUploadRequestDTO
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeedUploadRequestDTOItem[] FeedUploadRequestDTOItem { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FeedUploadRequestDTOItemFeedHeader ItemFeedHeader { get; set; }
	}
	
	public class FeedUploadRequestDTOItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeedUploadRequestDTOItemStrategy Strategy { get; set; }
	}
	
	public class FeedUploadRequestDTOItemStrategy
	{
		
		[System.Runtime.Serialization.DataMember(Name="maximumSellerAllowedPrice")]
		public System.Nullable<System.Double> MaximumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimumSellerAllowedPrice")]
		public System.Nullable<System.Double> MinimumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	public class FeedUploadRequestDTOItemFeedHeader
	{
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mart")]
		public string Mart { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="processMode")]
		public string ProcessMode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sellingChannel")]
		public string SellingChannel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subset")]
		public string Subset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FeedUploadResponseDTO
	{
		
		[System.Runtime.Serialization.DataMember(Name="feedId")]
		public string FeedId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GatewayError
	{
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public System.Nullable<GatewayErrorCategory> Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="causes")]
		public GatewayErrorCauses[] GatewayErrorCauses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="component")]
		public string Component { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorIdentifiers")]
		public System.Collections.Generic.Dictionary<string, object> ErrorIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gatewayErrorCategory")]
		public System.Nullable<GatewayErrorGatewayErrorCategory> GatewayErrorCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="info")]
		public string Info { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceName")]
		public string ServiceName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<GatewayErrorSeverity> Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GatewayErrorCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUEST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA = 3,
	}
	
	public class GatewayErrorCauses
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GatewayErrorGatewayErrorCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_DATA_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL_DATA_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM_ERROR = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GatewayErrorSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemPriceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public ItemPriceResponseErrors[] ItemPriceResponseErrors { get; set; }
		
		/// <summary>
		/// Marketplace name. Example: Walmart-US
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mart")]
		public string Mart { get; set; }
		
		/// <summary>
		/// A message of acknowledgement for a price update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public System.Nullable<System.Int32> StatusCode { get; set; }
	}
	
	public class ItemPriceResponseErrors
	{
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public GatewayErrorCategory Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="causes")]
		public ItemPriceResponseErrorsCauses[] ItemPriceResponseErrorsCauses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="component")]
		public string Component { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorIdentifiers")]
		public System.Collections.Generic.Dictionary<string, object> ErrorIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gatewayErrorCategory")]
		public GatewayErrorGatewayErrorCategory GatewayErrorCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="info")]
		public string Info { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceName")]
		public string ServiceName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public GatewayErrorSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ItemPriceResponseErrorsCauses
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Price
	{
		
		[System.Runtime.Serialization.DataMember(Name="definitions")]
		public string Definitions { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offerId")]
		public string OfferId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pricing")]
		public PricePricing[] PricePricing { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replaceAll")]
		public System.Nullable<PriceReplaceAll> ReplaceAll { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	public class PricePricing
	{
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comparisonPrice")]
		public PricePricingComparisonPrice ComparisonPrice { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comparisonPriceType")]
		public System.Nullable<PricePricingComparisonPriceType> ComparisonPriceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPrice")]
		public PricePricingCurrentPrice CurrentPrice { get; set; }
		
		/// <summary>
		/// This is applicable only for both promotions and price
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPriceType")]
		public PricePricingCurrentPriceType CurrentPriceType { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectiveDate")]
		public System.Nullable<System.DateTimeOffset> EffectiveDate { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		/// <summary>
		/// Represent promo placement. This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceDisplayCodes")]
		public System.Nullable<PricePricingPriceDisplayCodes> PriceDisplayCodes { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processMode")]
		public System.Nullable<PricePricingProcessMode> ProcessMode { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoId")]
		public string PromoId { get; set; }
	}
	
	public class PricePricingComparisonPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PricePricingComparisonPriceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASE = 0,
	}
	
	public class PricePricingCurrentPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PricePricingCurrentPriceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDUCED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLEARANCE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PricePricingPriceDisplayCodes
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CART = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHECKOUT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PricePricingProcessMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPSERT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PriceReplaceAll
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="false")]
		_false = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pricing
	{
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comparisonPrice")]
		public PricingComparisonPrice ComparisonPrice { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comparisonPriceType")]
		public PricePricingComparisonPriceType ComparisonPriceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPrice")]
		public PricingCurrentPrice CurrentPrice { get; set; }
		
		/// <summary>
		/// This is applicable only for both promotions and price
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPriceType")]
		public PricePricingCurrentPriceType CurrentPriceType { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectiveDate")]
		public System.Nullable<System.DateTimeOffset> EffectiveDate { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		/// <summary>
		/// Represent promo placement. This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceDisplayCodes")]
		public PricePricingPriceDisplayCodes PriceDisplayCodes { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processMode")]
		public PricePricingProcessMode ProcessMode { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoId")]
		public string PromoId { get; set; }
	}
	
	public class PricingComparisonPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	public class PricingCurrentPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepricerEntityCollectionResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollections")]
		public RepricerEntityCollectionResponseStrategyCollections[] RepricerEntityCollectionResponseStrategyCollections { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalElements")]
		public System.Nullable<System.Int32> TotalElements { get; set; }
	}
	
	public class RepricerEntityCollectionResponseStrategyCollections
	{
		
		[System.Runtime.Serialization.DataMember(Name="assignedCount")]
		public System.Nullable<System.Int32> AssignedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategies[] RepricerEntityCollectionResponseStrategyCollectionsStrategies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollectionId")]
		public string StrategyCollectionId { get; set; }
	}
	
	public class RepricerEntityCollectionResponseStrategyCollectionsStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public System.Nullable<RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType> AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<RepricerEntityCollectionResponseStrategyCollectionsStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENTAGE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepricerEntityCollectionResponseStrategyCollectionsStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepricerEntityDeleteResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepricerEntityGetResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="assignedCount")]
		public System.Nullable<System.Int32> AssignedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public RepricerEntityGetResponseStrategies[] RepricerEntityGetResponseStrategies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollectionId")]
		public string StrategyCollectionId { get; set; }
	}
	
	public class RepricerEntityGetResponseStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<RepricerEntityGetResponseStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepricerEntityGetResponseStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepricerEntityRequest
	{
		
		/// <summary>
		/// Status of item on promotions to be enable on repricer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		/// <summary>
		/// Status of the Strategy Collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Name of the Strategy Collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		/// <summary>
		/// Strategies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public RepricerEntityRequestStrategies[] RepricerEntityRequestStrategies { get; set; }
	}
	
	public class RepricerEntityRequestStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<RepricerEntityRequestStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepricerEntityRequestStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepricerEntityResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public RepricerEntityResponseStrategies[] RepricerEntityResponseStrategies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollectionId")]
		public string StrategyCollectionId { get; set; }
	}
	
	public class RepricerEntityResponseStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<RepricerEntityResponseStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepricerEntityResponseStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepricerStrategyType
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<RepricerStrategyTypeStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepricerStrategyTypeStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StatusInfo
	{
		
		/// <summary>
		/// A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyEnrolled")]
		public System.Nullable<System.Boolean> SubsidyEnrolled { get; set; }
		
		/// <summary>
		/// A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyPreference")]
		public System.Nullable<System.Boolean> SubsidyPreference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StrategyDetailsRequestDTO
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StrategyDetailsRequestDTOStrategy Strategy { get; set; }
	}
	
	public class StrategyDetailsRequestDTOStrategy
	{
		
		[System.Runtime.Serialization.DataMember(Name="maximumSellerAllowedPrice")]
		public System.Nullable<System.Double> MaximumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimumSellerAllowedPrice")]
		public System.Nullable<System.Double> MinimumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Set up CAP SKU All
		/// This API helps Sellers to completely opt-in or opt-out from CAP program.
		/// 
		/// If the subsidyEnrolled value = "true", the Seller enrolls in the CAP program. All eligible SKUs (current and future) are by default opt-in. Seller should use the SKU opt-in/opt-out API to opt-out individual items.
		/// 
		/// If the subsidyEnrolled value = "false", the Seller stops participating in the CAP program and all eligible SKUs (current and future) are opt-out of the CAP program.
		/// OptCapProgramInPrice v3/cppreference
		/// </summary>
		/// <param name="requestBody">Request fields</param>
		/// <returns>Successful Operation</returns>
		public async Task<OptCapProgramInPriceReturn> OptCapProgramInPriceAsync(OptCapProgramInPricePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/cppreference";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<OptCapProgramInPriceReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Update a price
		/// Updates the regular price for a given item.
		/// UpdatePrice v3/price
		/// </summary>
		/// <param name="requestBody">The request body consists of a Feed file attached to the request.</param>
		/// <returns>Successful Operation</returns>
		public async Task<UpdatePriceReturn> UpdatePriceAsync(UpdatePricePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/price";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdatePriceReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List of Repricer Strategies
		/// Get the list of strategies
		/// GetStrategies v3/repricer/strategies
		/// </summary>
		/// <returns>Successful Operation</returns>
		public async Task<GetStrategiesReturn> GetStrategiesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/repricer/strategies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetStrategiesReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create Repricer Strategy
		/// Creates a new strategy for the seller
		/// CreateStrategy v3/repricer/strategy
		/// </summary>
		/// <param name="requestBody">The request body will have the strategy related information</param>
		/// <returns>Successful Operation</returns>
		public async Task<CreateStrategyReturn> CreateStrategyAsync(CreateStrategyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/repricer/strategy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateStrategyReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Repricer Strategy
		/// Deletes the strategy
		/// DeleteStrategy v3/repricer/strategy/{strategyCollectionId}
		/// </summary>
		/// <param name="strategyCollectionId">Automatically added</param>
		/// <returns>Successful Operation</returns>
		public async Task<DeleteStrategyReturn> DeleteStrategyAsync(string strategyCollectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/repricer/strategy/"+ (strategyCollectionId==null? "" : System.Uri.EscapeDataString(strategyCollectionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteStrategyReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update Repricer Strategy
		/// Updates the existing strategy
		/// UpdateStrategy v3/repricer/strategy/{strategyCollectionId}
		/// </summary>
		/// <param name="strategyCollectionId">Automatically added</param>
		/// <param name="requestBody">The request body will have the strategy related information</param>
		/// <returns>Successful Operation</returns>
		public async Task<UpdateStrategyReturn> UpdateStrategyAsync(string strategyCollectionId, UpdateStrategyPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/repricer/strategy/"+ (strategyCollectionId==null? "" : System.Uri.EscapeDataString(strategyCollectionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateStrategyReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Assign/Unassign items to/from Repricer Strategy
		/// Add/Remove one or more items from a strategy
		/// GetRepricerFeed v3/repricerFeeds
		/// </summary>
		/// <returns>Successful Operation</returns>
		public async Task<GetRepricerFeedReturn> GetRepricerFeedAsync(GetRepricerFeedPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v3/repricerFeeds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetRepricerFeedReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class OptCapProgramInPricePostBody
	{
		
		/// <summary>
		/// A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyEnrolled")]
		public System.Nullable<System.Boolean> SubsidyEnrolled { get; set; }
		
		/// <summary>
		/// A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyPreference")]
		public System.Nullable<System.Boolean> SubsidyPreference { get; set; }
	}
	
	public class OptCapProgramInPriceReturn
	{
		
		/// <summary>
		/// A unique ID that a user or seller uses for a marketplace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="martId")]
		public string MartId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusInfo")]
		public OptCapProgramInPriceReturnStatusInfo StatusInfo { get; set; }
	}
	
	public class OptCapProgramInPriceReturnStatusInfo
	{
		
		/// <summary>
		/// A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyEnrolled")]
		public System.Nullable<System.Boolean> SubsidyEnrolled { get; set; }
		
		/// <summary>
		/// A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subsidyPreference")]
		public System.Nullable<System.Boolean> SubsidyPreference { get; set; }
	}
	
	public enum PriceBulkUploadsFeedType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPT_SELLER_ELIGIBILITY = 1,
	}
	
	public class UpdatePricePutBody
	{
		
		[System.Runtime.Serialization.DataMember(Name="definitions")]
		public string Definitions { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offerId")]
		public string OfferId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pricing")]
		public UpdatePricePutBodyPricing[] UpdatePricePutBodyPricing { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replaceAll")]
		public System.Nullable<UpdatePricePutBodyReplaceAll> ReplaceAll { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	public class UpdatePricePutBodyPricing
	{
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comparisonPrice")]
		public UpdatePricePutBodyPricingComparisonPrice ComparisonPrice { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comparisonPriceType")]
		public PricePricingComparisonPriceType ComparisonPriceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPrice")]
		public UpdatePricePutBodyPricingCurrentPrice CurrentPrice { get; set; }
		
		/// <summary>
		/// This is applicable only for both promotions and price
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currentPriceType")]
		public PricePricingCurrentPriceType CurrentPriceType { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectiveDate")]
		public System.Nullable<System.DateTimeOffset> EffectiveDate { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		/// <summary>
		/// Represent promo placement. This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priceDisplayCodes")]
		public PricePricingPriceDisplayCodes PriceDisplayCodes { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processMode")]
		public PricePricingProcessMode ProcessMode { get; set; }
		
		/// <summary>
		/// This is applicable only for promotions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoId")]
		public string PromoId { get; set; }
	}
	
	public class UpdatePricePutBodyPricingComparisonPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	public class UpdatePricePutBodyPricingCurrentPrice
	{
		
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Double> Amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public ComparisonPriceCurrency Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdatePricePutBodyReplaceAll
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="false")]
		_false = 1,
	}
	
	public class UpdatePriceReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public UpdatePriceReturnErrors[] UpdatePriceReturnErrors { get; set; }
		
		/// <summary>
		/// Marketplace name. Example: Walmart-US
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mart")]
		public string Mart { get; set; }
		
		/// <summary>
		/// A message of acknowledgement for a price update
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public System.Nullable<System.Int32> StatusCode { get; set; }
	}
	
	public class UpdatePriceReturnErrors
	{
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public GatewayErrorCategory Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="causes")]
		public UpdatePriceReturnErrorsCauses[] UpdatePriceReturnErrorsCauses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="component")]
		public string Component { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errorIdentifiers")]
		public System.Collections.Generic.Dictionary<string, object> ErrorIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gatewayErrorCategory")]
		public GatewayErrorGatewayErrorCategory GatewayErrorCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="info")]
		public string Info { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceName")]
		public string ServiceName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public GatewayErrorSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class UpdatePriceReturnErrorsCauses
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetStrategiesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollections")]
		public GetStrategiesReturnStrategyCollections[] GetStrategiesReturnStrategyCollections { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalElements")]
		public System.Nullable<System.Int32> TotalElements { get; set; }
	}
	
	public class GetStrategiesReturnStrategyCollections
	{
		
		[System.Runtime.Serialization.DataMember(Name="assignedCount")]
		public System.Nullable<System.Int32> AssignedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public GetStrategiesReturnStrategyCollectionsStrategies[] GetStrategiesReturnStrategyCollectionsStrategies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollectionId")]
		public string StrategyCollectionId { get; set; }
	}
	
	public class GetStrategiesReturnStrategyCollectionsStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<GetStrategiesReturnStrategyCollectionsStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetStrategiesReturnStrategyCollectionsStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	public class CreateStrategyPostBody
	{
		
		/// <summary>
		/// Status of item on promotions to be enable on repricer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		/// <summary>
		/// Status of the Strategy Collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Name of the Strategy Collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		/// <summary>
		/// Strategies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public CreateStrategyPostBodyStrategies[] CreateStrategyPostBodyStrategies { get; set; }
	}
	
	public class CreateStrategyPostBodyStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<CreateStrategyPostBodyStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreateStrategyPostBodyStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	public class CreateStrategyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public CreateStrategyReturnStrategies[] CreateStrategyReturnStrategies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollectionId")]
		public string StrategyCollectionId { get; set; }
	}
	
	public class CreateStrategyReturnStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<CreateStrategyReturnStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreateStrategyReturnStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	public class DeleteStrategyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	public class UpdateStrategyPutBody
	{
		
		/// <summary>
		/// Status of item on promotions to be enable on repricer
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		/// <summary>
		/// Status of the Strategy Collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Name of the Strategy Collection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		/// <summary>
		/// Strategies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public UpdateStrategyPutBodyStrategies[] UpdateStrategyPutBodyStrategies { get; set; }
	}
	
	public class UpdateStrategyPutBodyStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<UpdateStrategyPutBodyStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateStrategyPutBodyStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	public class UpdateStrategyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="enableRepricerForPromotion")]
		public System.Nullable<System.Boolean> EnableRepricerForPromotion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategies")]
		public UpdateStrategyReturnStrategies[] UpdateStrategyReturnStrategies { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyCollectionId")]
		public string StrategyCollectionId { get; set; }
	}
	
	public class UpdateStrategyReturnStrategies
	{
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentType")]
		public RepricerEntityCollectionResponseStrategyCollectionsStrategiesAdjustmentType AdjustmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="adjustmentValue")]
		public System.Nullable<System.Double> AdjustmentValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="strategyType")]
		public System.Nullable<UpdateStrategyReturnStrategiesStrategyType> StrategyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpdateStrategyReturnStrategiesStrategyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Buy Box Price")]
		Buy_Box_Price = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="External Price")]
		External_Price = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Competitive Price")]
		Competitive_Price = 2,
	}
	
	public class GetRepricerFeedPostBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GetRepricerFeedPostBodyItem[] GetRepricerFeedPostBodyItem { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GetRepricerFeedPostBodyItemFeedHeader ItemFeedHeader { get; set; }
	}
	
	public class GetRepricerFeedPostBodyItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public GetRepricerFeedPostBodyItemStrategy Strategy { get; set; }
	}
	
	public class GetRepricerFeedPostBodyItemStrategy
	{
		
		[System.Runtime.Serialization.DataMember(Name="maximumSellerAllowedPrice")]
		public System.Nullable<System.Double> MaximumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimumSellerAllowedPrice")]
		public System.Nullable<System.Double> MinimumSellerAllowedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="repricerStrategy")]
		public string RepricerStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	public class GetRepricerFeedPostBodyItemFeedHeader
	{
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mart")]
		public string Mart { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="processMode")]
		public string ProcessMode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sellingChannel")]
		public string SellingChannel { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subset")]
		public string Subset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class GetRepricerFeedReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="feedId")]
		public string FeedId { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

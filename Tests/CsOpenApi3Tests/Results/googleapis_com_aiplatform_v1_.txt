//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Video embedding response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionEmbedVideoResponse
	{
		
		/// <summary>
		/// The embedding vector for the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoEmbeddings")]
		public string[] VideoEmbeddings { get; set; }
	}
	
	/// <summary>
	/// Details for filtered input text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionFilteredText
	{
		
		/// <summary>
		/// Confidence level
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public System.Nullable<CloudAiLargeModelsVisionFilteredTextCategory> Category { get; set; }
		
		/// <summary>
		/// Filtered category
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<CloudAiLargeModelsVisionFilteredTextConfidence> Confidence { get; set; }
		
		/// <summary>
		/// Input prompt
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prompt")]
		public string Prompt { get; set; }
		
		/// <summary>
		/// Score for category
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiLargeModelsVisionFilteredTextCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RAI_CATEGORY_UNSPECIFIED")]
		RAI_CATEGORY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OBSCENE")]
		OBSCENE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEXUALLY_EXPLICIT")]
		SEXUALLY_EXPLICIT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDENTITY_ATTACK")]
		IDENTITY_ATTACK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIOLENCE_ABUSE")]
		VIOLENCE_ABUSE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CSAI")]
		CSAI = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SPII")]
		SPII = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CELEBRITY")]
		CELEBRITY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FACE_IMG")]
		FACE_IMG = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WATERMARK_IMG")]
		WATERMARK_IMG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEMORIZATION_IMG")]
		MEMORIZATION_IMG = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CSAI_IMG")]
		CSAI_IMG = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PORN_IMG")]
		PORN_IMG = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIOLENCE_IMG")]
		VIOLENCE_IMG = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHILD_IMG")]
		CHILD_IMG = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOXIC")]
		TOXIC = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SENSITIVE_WORD")]
		SENSITIVE_WORD = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PERSON_IMG")]
		PERSON_IMG = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ICA_IMG")]
		ICA_IMG = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEXUAL_IMG")]
		SEXUAL_IMG = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IU_IMG")]
		IU_IMG = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RACY_IMG")]
		RACY_IMG = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PEDO_IMG")]
		PEDO_IMG = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEATH_HARM_TRAGEDY")]
		DEATH_HARM_TRAGEDY = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HEALTH")]
		HEALTH = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FIREARMS_WEAPONS")]
		FIREARMS_WEAPONS = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RELIGIOUS_BELIEF")]
		RELIGIOUS_BELIEF = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ILLICIT_DRUGS")]
		ILLICIT_DRUGS = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WAR_CONFLICT")]
		WAR_CONFLICT = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="POLITICS")]
		POLITICS = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HATE_SYMBOL_IMG")]
		HATE_SYMBOL_IMG = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHILD_TEXT")]
		CHILD_TEXT = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DANGEROUS_CONTENT")]
		DANGEROUS_CONTENT = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECITATION_TEXT")]
		RECITATION_TEXT = 33,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiLargeModelsVisionFilteredTextConfidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_UNSPECIFIED")]
		CONFIDENCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_LOW")]
		CONFIDENCE_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_MEDIUM")]
		CONFIDENCE_MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_HIGH")]
		CONFIDENCE_HIGH = 3,
	}
	
	/// <summary>
	/// Generate video response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionGenerateVideoResponse
	{
		
		/// <summary>
		/// The generates samples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generatedSamples")]
		public CloudAiLargeModelsVisionMedia[] GeneratedSamples { get; set; }
		
		/// <summary>
		/// Returns if any videos were filtered due to RAI policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiMediaFilteredCount")]
		public System.Nullable<System.Int32> RaiMediaFilteredCount { get; set; }
		
		/// <summary>
		/// Returns rai failure reasons if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiMediaFilteredReasons")]
		public string[] RaiMediaFilteredReasons { get; set; }
		
		/// <summary>
		/// Details for filtered input text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiTextFilteredReason")]
		public CloudAiLargeModelsVisionFilteredText RaiTextFilteredReason { get; set; }
	}
	
	/// <summary>
	/// Media.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionMedia
	{
		
		/// <summary>
		/// Image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public CloudAiLargeModelsVisionImage Image { get; set; }
		
		/// <summary>
		/// Video
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="video")]
		public CloudAiLargeModelsVisionVideo Video { get; set; }
	}
	
	/// <summary>
	/// Image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionImage
	{
		
		/// <summary>
		/// Image encoding, encoded as "image/png" or "image/jpg".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public string Encoding { get; set; }
		
		/// <summary>
		/// Raw bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// RAI scores for generated image returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageRaiScores")]
		public CloudAiLargeModelsVisionImageRAIScores ImageRaiScores { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="raiInfo")]
		public CloudAiLargeModelsVisionRaiInfo RaiInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="semanticFilterResponse")]
		public CloudAiLargeModelsVisionSemanticFilterResponse SemanticFilterResponse { get; set; }
		
		/// <summary>
		/// Path to another storage (typically Google Cloud Storage).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// RAI scores for generated image returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionImageRAIScores
	{
		
		/// <summary>
		/// Agile watermark score for image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agileWatermarkDetectionScore")]
		public System.Nullable<System.Double> AgileWatermarkDetectionScore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionRaiInfo
	{
		
		/// <summary>
		/// List of rai categories' information to return
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiCategories")]
		public string[] RaiCategories { get; set; }
		
		/// <summary>
		/// List of rai scores mapping to the rai categories. Rounded to 1 decimal place.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public double[] Scores { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionSemanticFilterResponse
	{
		
		/// <summary>
		/// Class labels of the bounding boxes that failed the semantic filtering. Bounding box coordinates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namedBoundingBoxes")]
		public CloudAiLargeModelsVisionNamedBoundingBox[] NamedBoundingBoxes { get; set; }
		
		/// <summary>
		/// This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passedSemanticFilter")]
		public System.Nullable<System.Boolean> PassedSemanticFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionNamedBoundingBox
	{
		
		[System.Runtime.Serialization.DataMember(Name="classes")]
		public string[] Classes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="entities")]
		public string[] Entities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public double[] Scores { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="x1")]
		public System.Nullable<System.Single> X1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="x2")]
		public System.Nullable<System.Single> X2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="y1")]
		public System.Nullable<System.Single> Y1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="y2")]
		public System.Nullable<System.Single> Y2 { get; set; }
	}
	
	/// <summary>
	/// Video
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionVideo
	{
		
		/// <summary>
		/// Path to another storage (typically Google Cloud Storage).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// Raw bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="video")]
		public string Video { get; set; }
	}
	
	/// <summary>
	/// Generate media content response
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionMediaGenerateContentResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="response")]
		public CloudAiNlLlmProtoServiceGenerateMultiModalResponse Response { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceGenerateMultiModalResponse
	{
		
		/// <summary>
		/// Possible candidate responses to the conversation up until this point.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidates")]
		public CloudAiNlLlmProtoServiceCandidate[] Candidates { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="debugMetadata")]
		public CloudAiNlLlmProtoServiceMessageMetadata DebugMetadata { get; set; }
		
		/// <summary>
		/// Content filter results for a prompt sent in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promptFeedback")]
		public CloudAiNlLlmProtoServicePromptFeedback PromptFeedback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reportingMetrics")]
		public IntelligenceCloudAutomlXpsReportingMetrics ReportingMetrics { get; set; }
		
		/// <summary>
		/// Usage metadata about response(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageMetadata")]
		public CloudAiNlLlmProtoServiceUsageMetadata UsageMetadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceCandidate
	{
		
		/// <summary>
		/// A collection of source attributions for a piece of content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="citationMetadata")]
		public CloudAiNlLlmProtoServiceCitationMetadata CitationMetadata { get; set; }
		
		/// <summary>
		/// The content of a single message from a participant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public CloudAiNlLlmProtoServiceContent Content { get; set; }
		
		/// <summary>
		/// A string that describes the filtering behavior in more detail. Only filled when reason is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finishMessage")]
		public string FinishMessage { get; set; }
		
		/// <summary>
		/// The reason why the model stopped generating tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finishReason")]
		public System.Nullable<CloudAiNlLlmProtoServiceCandidateFinishReason> FinishReason { get; set; }
		
		/// <summary>
		/// Index of the candidate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
		
		/// <summary>
		/// Safety ratings of the generated content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyRatings")]
		public CloudAiNlLlmProtoServiceSafetyRating[] SafetyRatings { get; set; }
	}
	
	/// <summary>
	/// A collection of source attributions for a piece of content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceCitationMetadata
	{
		
		/// <summary>
		/// List of citations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="citations")]
		public CloudAiNlLlmProtoServiceCitation[] Citations { get; set; }
	}
	
	/// <summary>
	/// Source attributions for content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceCitation
	{
		
		/// <summary>
		/// End index into the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public System.Nullable<System.Int32> EndIndex { get; set; }
		
		/// <summary>
		/// License of the attribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicationDate")]
		public GoogleTypeDate PublicationDate { get; set; }
		
		/// <summary>
		/// Start index into the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
		
		/// <summary>
		/// Title of the attribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Url reference of the attribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// The content of a single message from a participant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceContent
	{
		
		/// <summary>
		/// The parts of the message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parts")]
		public CloudAiNlLlmProtoServicePart[] Parts { get; set; }
		
		/// <summary>
		/// The role of the current conversation participant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// A single part of a message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServicePart
	{
		
		/// <summary>
		/// Represents file data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileData")]
		public CloudAiNlLlmProtoServicePartFileData FileData { get; set; }
		
		/// <summary>
		/// Function call details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionCall")]
		public CloudAiNlLlmProtoServiceFunctionCall FunctionCall { get; set; }
		
		/// <summary>
		/// Function response details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionResponse")]
		public CloudAiNlLlmProtoServiceFunctionResponse FunctionResponse { get; set; }
		
		/// <summary>
		/// Represents arbitrary blob data input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineData")]
		public CloudAiNlLlmProtoServicePartBlob InlineData { get; set; }
		
		/// <summary>
		/// Text input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Metadata describes the input video content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoMetadata")]
		public CloudAiNlLlmProtoServicePartVideoMetadata VideoMetadata { get; set; }
	}
	
	/// <summary>
	/// Represents file data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServicePartFileData
	{
		
		/// <summary>
		/// Inline data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileUri")]
		public string FileUri { get; set; }
		
		/// <summary>
		/// The mime type corresponding to this input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Function call details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceFunctionCall
	{
		
		/// <summary>
		/// The function parameters and values in JSON format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public System.Collections.Generic.Dictionary<string, object> Args { get; set; }
		
		/// <summary>
		/// Required. The name of the function to call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Function response details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceFunctionResponse
	{
		
		/// <summary>
		/// Required. The name of the function to call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The function response in JSON object format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// Represents arbitrary blob data input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServicePartBlob
	{
		
		/// <summary>
		/// Inline data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// The mime type corresponding to this input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Represents file data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalFileData")]
		public CloudAiNlLlmProtoServicePartFileData OriginalFileData { get; set; }
	}
	
	/// <summary>
	/// Metadata describes the input video content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServicePartVideoMetadata
	{
		
		/// <summary>
		/// The end offset of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOffset")]
		public string EndOffset { get; set; }
		
		/// <summary>
		/// The start offset of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOffset")]
		public string StartOffset { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiNlLlmProtoServiceCandidateFinishReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_UNSPECIFIED")]
		FINISH_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_STOP")]
		FINISH_REASON_STOP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_MAX_TOKENS")]
		FINISH_REASON_MAX_TOKENS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_SAFETY")]
		FINISH_REASON_SAFETY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_RECITATION")]
		FINISH_REASON_RECITATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_OTHER")]
		FINISH_REASON_OTHER = 5,
	}
	
	/// <summary>
	/// Safety rating corresponding to the generated content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceSafetyRating
	{
		
		/// <summary>
		/// Indicates whether the content was filtered out because of this rating.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blocked")]
		public System.Nullable<System.Boolean> Blocked { get; set; }
		
		/// <summary>
		/// Harm category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public System.Nullable<CloudAiNlLlmProtoServiceSafetyRatingCategory> Category { get; set; }
		
		/// <summary>
		/// Harm probability levels in the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="probability")]
		public System.Nullable<CloudAiNlLlmProtoServiceSafetyRatingProbability> Probability { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiNlLlmProtoServiceSafetyRatingCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_CATEGORY_UNSPECIFIED")]
		HARM_CATEGORY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_CATEGORY_HATE_SPEECH")]
		HARM_CATEGORY_HATE_SPEECH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_CATEGORY_DANGEROUS_CONTENT")]
		HARM_CATEGORY_DANGEROUS_CONTENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_CATEGORY_HARASSMENT")]
		HARM_CATEGORY_HARASSMENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_CATEGORY_SEXUALLY_EXPLICIT")]
		HARM_CATEGORY_SEXUALLY_EXPLICIT = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiNlLlmProtoServiceSafetyRatingProbability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_PROBABILITY_UNSPECIFIED")]
		HARM_PROBABILITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEGLIGIBLE")]
		NEGLIGIBLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOW")]
		LOW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEDIUM")]
		MEDIUM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HIGH")]
		HIGH = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceMessageMetadata
	{
		
		/// <summary>
		/// LINT.IfChange This metadata contains additional information required for debugging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputFilterInfo")]
		public LearningServingLlmMessageMetadata InputFilterInfo { get; set; }
		
		/// <summary>
		/// Holds the final routing decision, by storing the model_config_id. And individual scores each model got.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelRoutingDecision")]
		public LearningGenaiRootRoutingDecision ModelRoutingDecision { get; set; }
		
		/// <summary>
		/// Filter metadata of the output messages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputFilterInfo")]
		public LearningServingLlmMessageMetadata[] OutputFilterInfo { get; set; }
	}
	
	/// <summary>
	/// LINT.IfChange This metadata contains additional information required for debugging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningServingLlmMessageMetadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="classifierSummary")]
		public LearningGenaiRootClassifierOutputSummary ClassifierSummary { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentStreamTextLength")]
		public System.Nullable<System.UInt32> CurrentStreamTextLength { get; set; }
		
		/// <summary>
		/// Whether the corresponding message has been deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// Metadata for filters that triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterMeta")]
		public LearningGenaiRootFilterMetadata[] FilterMeta { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finalMessageScore")]
		public LearningGenaiRootScore FinalMessageScore { get; set; }
		
		/// <summary>
		/// NOT YET IMPLEMENTED.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finishReason")]
		public System.Nullable<LearningServingLlmMessageMetadataFinishReason> FinishReason { get; set; }
		
		/// <summary>
		/// Applies to Response message only. Indicates whether the message is a fallback and the response would have otherwise been empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isFallback")]
		public System.Nullable<System.Boolean> IsFallback { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="langidResult")]
		public NlpSaftLangIdResult LangidResult { get; set; }
		
		/// <summary>
		/// Detected language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The LM prefix used to generate this response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lmPrefix")]
		public string LmPrefix { get; set; }
		
		/// <summary>
		/// The original text generated by LLM. This is the raw output for debugging purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalText")]
		public string OriginalText { get; set; }
		
		/// <summary>
		/// NOT YET IMPLEMENTED. Applies to streaming only. Number of tokens decoded / emitted by the model as part of this stream. This may be different from token_count, which contains number of tokens returned in this response after any response rewriting / truncation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="perStreamDecodedTokenCount")]
		public System.Nullable<System.Int32> PerStreamDecodedTokenCount { get; set; }
		
		/// <summary>
		/// Results of running RAI on the query or this response candidate. One output per rai_config. It will be populated regardless of whether the threshold is exceeded or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiOutputs")]
		public LearningGenaiRootRAIOutput[] RaiOutputs { get; set; }
		
		/// <summary>
		/// The recitation result for one input
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recitationResult")]
		public LearningGenaiRecitationRecitationResult RecitationResult { get; set; }
		
		/// <summary>
		/// NOT YET IMPLEMENTED. Number of tokens returned as part of this candidate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnTokenCount")]
		public System.Nullable<System.Int32> ReturnTokenCount { get; set; }
		
		/// <summary>
		/// All the different scores for a message are logged here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public LearningGenaiRootScore[] Scores { get; set; }
		
		/// <summary>
		/// Whether the response is terminated during streaming return. Only used for streaming requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="streamTerminated")]
		public System.Nullable<System.Boolean> StreamTerminated { get; set; }
		
		/// <summary>
		/// NOT YET IMPLEMENTED. Aggregated number of total tokens decoded so far. For streaming, this is sum of all the tokens decoded so far i.e. aggregated count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDecodedTokenCount")]
		public System.Nullable<System.Int32> TotalDecodedTokenCount { get; set; }
		
		/// <summary>
		/// Translated user-prompt used for RAI post processing. This is for internal processing only. We will translate in pre-processor and pass the translated text to the post processor using this field. It will be empty if non of the signals requested need translation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="translatedUserPrompts")]
		public string[] TranslatedUserPrompts { get; set; }
		
		/// <summary>
		/// The RAI results for a given text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexRaiResult")]
		public CloudAiNlLlmProtoServiceRaiResult VertexRaiResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootClassifierOutputSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public LearningGenaiRootMetricOutput[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ruleOutput")]
		public LearningGenaiRootRuleOutput RuleOutput { get; set; }
		
		/// <summary>
		/// outputs of all matching rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleOutputs")]
		public LearningGenaiRootRuleOutput[] RuleOutputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootMetricOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="debug")]
		public string Debug { get; set; }
		
		/// <summary>
		/// Name of the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numericValue")]
		public System.Nullable<System.Double> NumericValue { get; set; }
		
		/// <summary>
		/// Wire-format for a Status object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UtilStatusProto Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// Wire-format for a Status object
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UtilStatusProto
	{
		
		/// <summary>
		/// The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalCode")]
		public System.Nullable<System.Int32> CanonicalCode { get; set; }
		
		/// <summary>
		/// Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// Detail message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// This is proto2's version of MessageSet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messageSet")]
		public Proto2BridgeMessageSet MessageSet { get; set; }
		
		/// <summary>
		/// The following are usually only present when code != 0 Space to which this status belongs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="space")]
		public string Space { get; set; }
	}
	
	/// <summary>
	/// This is proto2's version of MessageSet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Proto2BridgeMessageSet
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRuleOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="decision")]
		public System.Nullable<LearningGenaiRootRuleOutputDecision> Decision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LearningGenaiRootRuleOutputDecision
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NO_MATCH")]
		NO_MATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MATCH")]
		MATCH = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootFilterMetadata
	{
		
		/// <summary>
		/// Filter confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<LearningGenaiRootFilterMetadataConfidence> Confidence { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="debugInfo")]
		public LearningGenaiRootFilterMetadataFilterDebugInfo DebugInfo { get; set; }
		
		/// <summary>
		/// A fallback message chosen by the applied filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fallback")]
		public string Fallback { get; set; }
		
		/// <summary>
		/// Additional info for the filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="info")]
		public string Info { get; set; }
		
		/// <summary>
		/// Name of the filter that triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Filter reason.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public System.Nullable<LearningGenaiRootFilterMetadataReason> Reason { get; set; }
		
		/// <summary>
		/// The input query or generated response that is getting filtered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LearningGenaiRootFilterMetadataConfidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_CONFIDENCE_UNKNOWN")]
		FILTER_CONFIDENCE_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_CONFIDENCE_VERY_LOW")]
		FILTER_CONFIDENCE_VERY_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_CONFIDENCE_LOW")]
		FILTER_CONFIDENCE_LOW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_CONFIDENCE_MEDIUM")]
		FILTER_CONFIDENCE_MEDIUM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_CONFIDENCE_HIGH")]
		FILTER_CONFIDENCE_HIGH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_CONFIDENCE_VERY_HIGH")]
		FILTER_CONFIDENCE_VERY_HIGH = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootFilterMetadataFilterDebugInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="classifierOutput")]
		public LearningGenaiRootClassifierOutput ClassifierOutput { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="defaultMetadata")]
		public string DefaultMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="languageFilterResult")]
		public LearningServingLlmLanguageFilterResult LanguageFilterResult { get; set; }
		
		/// <summary>
		/// This is per harm.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiOutput")]
		public LearningGenaiRootRAIOutput RaiOutput { get; set; }
		
		/// <summary>
		/// The RAI results for a given text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiResult")]
		public CloudAiNlLlmProtoServiceRaiResult RaiResult { get; set; }
		
		/// <summary>
		/// An RAI signal for a single category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiSignal")]
		public CloudAiNlLlmProtoServiceRaiSignal RaiSignal { get; set; }
		
		/// <summary>
		/// The recitation result for one stream input
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="streamRecitationResult")]
		public LanguageLabsAidaTrustRecitationProtoStreamRecitationResult StreamRecitationResult { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="takedownResult")]
		public LearningGenaiRootTakedownResult TakedownResult { get; set; }
		
		/// <summary>
		/// A model can generate multiple signals and this captures all the generated signals for a single message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="toxicityResult")]
		public LearningGenaiRootToxicityResult ToxicityResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootClassifierOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="ruleOutput")]
		public LearningGenaiRootRuleOutput RuleOutput { get; set; }
		
		/// <summary>
		/// outputs of all matching rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleOutputs")]
		public LearningGenaiRootRuleOutput[] RuleOutputs { get; set; }
		
		/// <summary>
		/// DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public LearningGenaiRootClassifierState State { get; set; }
	}
	
	/// <summary>
	/// DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootClassifierState
	{
		
		[System.Runtime.Serialization.DataMember(Name="dataProviderOutput")]
		public LearningGenaiRootDataProviderOutput[] DataProviderOutput { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metricOutput")]
		public LearningGenaiRootMetricOutput[] MetricOutput { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootDataProviderOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Wire-format for a Status object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public UtilStatusProto Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningServingLlmLanguageFilterResult
	{
		
		/// <summary>
		/// False when query or response should be filtered out due to unsupported language.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		/// <summary>
		/// Language of the query or response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguage")]
		public string DetectedLanguage { get; set; }
		
		/// <summary>
		/// Probability of the language predicted as returned by LangID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectedLanguageProbability")]
		public System.Nullable<System.Single> DetectedLanguageProbability { get; set; }
	}
	
	/// <summary>
	/// This is per harm.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRAIOutput
	{
		
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="harm")]
		public LearningGenaiRootHarm Harm { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootHarm
	{
		
		/// <summary>
		/// Please do not use, this is still under development.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextualDangerous")]
		public System.Nullable<System.Boolean> ContextualDangerous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="csam")]
		public System.Nullable<System.Boolean> Csam { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fringe")]
		public System.Nullable<System.Boolean> Fringe { get; set; }
		
		/// <summary>
		/// Harm type for images
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="grailImageHarmType")]
		public LearningGenaiRootHarmGrailImageHarmType GrailImageHarmType { get; set; }
		
		/// <summary>
		/// Harm type for text
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="grailTextHarmType")]
		public LearningGenaiRootHarmGrailTextHarmType GrailTextHarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageCsam")]
		public System.Nullable<System.Boolean> ImageCsam { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imagePedo")]
		public System.Nullable<System.Boolean> ImagePedo { get; set; }
		
		/// <summary>
		/// Image signals
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imagePorn")]
		public System.Nullable<System.Boolean> ImagePorn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageViolence")]
		public System.Nullable<System.Boolean> ImageViolence { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pqc")]
		public System.Nullable<System.Boolean> Pqc { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="safetycat")]
		public LearningGenaiRootHarmSafetyCatCategories Safetycat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="spii")]
		public LearningGenaiRootHarmSpiiFilter Spii { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="threshold")]
		public System.Nullable<System.Double> Threshold { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="videoFrameCsam")]
		public System.Nullable<System.Boolean> VideoFrameCsam { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="videoFramePedo")]
		public System.Nullable<System.Boolean> VideoFramePedo { get; set; }
		
		/// <summary>
		/// Video frame signals
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoFramePorn")]
		public System.Nullable<System.Boolean> VideoFramePorn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="videoFrameViolence")]
		public System.Nullable<System.Boolean> VideoFrameViolence { get; set; }
	}
	
	/// <summary>
	/// Harm type for images
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootHarmGrailImageHarmType
	{
		
		[System.Runtime.Serialization.DataMember(Name="imageHarmType")]
		public string[] ImageHarmType { get; set; }
	}
	
	/// <summary>
	/// Harm type for text
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootHarmGrailTextHarmType
	{
		
		[System.Runtime.Serialization.DataMember(Name="harmType")]
		public string[] HarmType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootHarmSafetyCatCategories
	{
		
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public string[] Categories { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootHarmSpiiFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="usBankRoutingMicr")]
		public System.Nullable<System.Boolean> UsBankRoutingMicr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usEmployerIdentificationNumber")]
		public System.Nullable<System.Boolean> UsEmployerIdentificationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usSocialSecurityNumber")]
		public System.Nullable<System.Boolean> UsSocialSecurityNumber { get; set; }
	}
	
	/// <summary>
	/// The RAI results for a given text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceRaiResult
	{
		
		/// <summary>
		/// The recitation result for one input
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="aidaRecitationResult")]
		public LanguageLabsAidaTrustRecitationProtoRecitationResult AidaRecitationResult { get; set; }
		
		/// <summary>
		/// Use `triggered_blocklist`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blocked")]
		public System.Nullable<System.Boolean> Blocked { get; set; }
		
		/// <summary>
		/// The error codes indicate which RAI filters block the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCodes")]
		public int[] ErrorCodes { get; set; }
		
		/// <summary>
		/// Whether the text should be filtered and not shown to the end user. This is determined based on a combination of `triggered_recitation`, `triggered_blocklist`, `language_filter_result`, and `triggered_safety_filter`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filtered")]
		public System.Nullable<System.Boolean> Filtered { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="languageFilterResult")]
		public LearningServingLlmLanguageFilterResult LanguageFilterResult { get; set; }
		
		/// <summary>
		/// The RAI signals for the text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiSignals")]
		public CloudAiNlLlmProtoServiceRaiSignal[] RaiSignals { get; set; }
		
		/// <summary>
		/// Whether the text triggered the blocklist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggeredBlocklist")]
		public System.Nullable<System.Boolean> TriggeredBlocklist { get; set; }
		
		/// <summary>
		/// Whether the text should be blocked by the recitation result from Aida recitation checker. It is determined from aida_recitation_result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggeredRecitation")]
		public System.Nullable<System.Boolean> TriggeredRecitation { get; set; }
		
		/// <summary>
		/// Whether the text triggered the safety filter. Currently, this is due to CSAI triggering or one of four categories (derogatory, sexual, toxic, violent) having a score over the filter threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="triggeredSafetyFilter")]
		public System.Nullable<System.Boolean> TriggeredSafetyFilter { get; set; }
	}
	
	/// <summary>
	/// The recitation result for one input
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LanguageLabsAidaTrustRecitationProtoRecitationResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="dynamicSegmentResults")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResult[] DynamicSegmentResults { get; set; }
		
		/// <summary>
		/// The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recitationAction")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction RecitationAction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainingSegmentResults")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResult[] TrainingSegmentResults { get; set; }
	}
	
	/// <summary>
	/// The recitation result for each segment in a given input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LanguageLabsAidaTrustRecitationProtoSegmentResult
	{
		
		/// <summary>
		/// The dataset the segment came from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionDataset")]
		public System.Nullable<LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset> AttributionDataset { get; set; }
		
		/// <summary>
		/// human-friendly string that contains information from doc_attribution which could be shown by clients
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayAttributionMessage")]
		public string DisplayAttributionMessage { get; set; }
		
		/// <summary>
		/// The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id:28
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="docAttribution")]
		public LanguageLabsAidaTrustRecitationProtoDocAttribution DocAttribution { get; set; }
		
		/// <summary>
		/// number of documents that contained this segment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="docOccurrences")]
		public System.Nullable<System.Int32> DocOccurrences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public System.Nullable<System.Int32> EndIndex { get; set; }
		
		/// <summary>
		/// The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawText")]
		public string RawText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="segmentRecitationAction")]
		public System.Nullable<LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction> SegmentRecitationAction { get; set; }
		
		/// <summary>
		/// The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATASET_UNSPECIFIED")]
		DATASET_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WIKIPEDIA")]
		WIKIPEDIA = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WEBDOCS")]
		WEBDOCS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WEBDOCS_FINETUNE")]
		WEBDOCS_FINETUNE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_MIRROR")]
		GITHUB_MIRROR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOKS_FULL_VIEW")]
		BOOKS_FULL_VIEW = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOKS_PRIVATE")]
		BOOKS_PRIVATE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GNEWS")]
		GNEWS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ULM_DOCJOINS")]
		ULM_DOCJOINS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ULM_DOCJOINS_DEDUPED")]
		ULM_DOCJOINS_DEDUPED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_FC")]
		MEENA_FC = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PODCAST")]
		PODCAST = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AQUA")]
		AQUA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WEB_ASR")]
		WEB_ASR = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BARD_GOLDEN")]
		BARD_GOLDEN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMMON_SENSE_REASONING")]
		COMMON_SENSE_REASONING = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MATH")]
		MATH = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MATH_REASONING")]
		MATH_REASONING = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLEAN_ARXIV")]
		CLEAN_ARXIV = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMDA_FACTUALITY_E2E_QUERY_GENERATION")]
		LAMDA_FACTUALITY_E2E_QUERY_GENERATION = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION")]
		LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MASSIVE_FORUM_THREAD_SCORED_BARD")]
		MASSIVE_FORUM_THREAD_SCORED_BARD = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MASSIVE_FORUM_THREAD_SCORED_LONG_200")]
		MASSIVE_FORUM_THREAD_SCORED_LONG_200 = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MASSIVE_FORUM_THREAD_SCORED_LONG_500")]
		MASSIVE_FORUM_THREAD_SCORED_LONG_500 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOCUMENT_CHUNKS")]
		DOCUMENT_CHUNKS = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN")]
		MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_RESEARCH_PHASE_GOOGLERS")]
		MEENA_RESEARCH_PHASE_GOOGLERS = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_RESPONSE_SAFETY_HUMAN_GEN")]
		MEENA_RESPONSE_SAFETY_HUMAN_GEN = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST")]
		MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2")]
		MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST")]
		MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMDA_FACTUALITY_TRIGGER")]
		LAMDA_FACTUALITY_TRIGGER = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST")]
		LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMDA_SSI_DISCRIMINATIVE")]
		LAMDA_SSI_DISCRIMINATIVE = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ASSISTANT_PERSONALITY_SAFETY")]
		ASSISTANT_PERSONALITY_SAFETY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PODCAST_FINETUNE_DIALOG")]
		PODCAST_FINETUNE_DIALOG = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WORLD_QUERY_GENERATOR")]
		WORLD_QUERY_GENERATOR = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="C4_JOINED_DOCJOINS")]
		C4_JOINED_DOCJOINS = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HOL4_THEORIES")]
		HOL4_THEORIES = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HOL_LIGHT_THEORIES")]
		HOL_LIGHT_THEORIES = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HOLSTEPS")]
		HOLSTEPS = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ISABELLE_STEP")]
		ISABELLE_STEP = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ISABELLE_THEORIES")]
		ISABELLE_THEORIES = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LEAN_MATHLIB_THEORIES")]
		LEAN_MATHLIB_THEORIES = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LEAN_STEP")]
		LEAN_STEP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MIZAR_THEORIES")]
		MIZAR_THEORIES = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COQ_STEP")]
		COQ_STEP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COQ_THEORIES")]
		COQ_THEORIES = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AMPS_KHAN")]
		AMPS_KHAN = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AMPS_MATHEMATICA")]
		AMPS_MATHEMATICA = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODEY_CODE")]
		CODEY_CODE = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODE_QA_SE")]
		CODE_QA_SE = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODE_QA_SO")]
		CODE_QA_SO = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODE_QA_FT_FORMAT")]
		CODE_QA_FT_FORMAT = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODE_QA_FT_KNOWLEDGE")]
		CODE_QA_FT_KNOWLEDGE = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODE_QA_GITHUB_FILTERED_CODE")]
		CODE_QA_GITHUB_FILTERED_CODE = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BARD_PERSONALITY_GOLDEN")]
		BARD_PERSONALITY_GOLDEN = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ULM_DOCJOINS_WITH_URLS_EN")]
		ULM_DOCJOINS_WITH_URLS_EN = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ULM_DOCJOINS_WITH_URLS_I18N")]
		ULM_DOCJOINS_WITH_URLS_I18N = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MTV5_GITHUB")]
		GOODALL_MTV5_GITHUB = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MTV5_BOOKS")]
		GOODALL_MTV5_BOOKS = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MTV5_C4")]
		GOODALL_MTV5_C4 = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MTV5_WIKIPEDIA")]
		GOODALL_MTV5_WIKIPEDIA = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MW_TOP_100B")]
		GOODALL_MW_TOP_100B = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MW_STACK_EXCHANGE")]
		GOODALL_MW_STACK_EXCHANGE = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MW_TOP_0_10B")]
		GOODALL_MW_TOP_0_10B = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOODALL_MW_TOP_10B_20B")]
		GOODALL_MW_TOP_10B_20B = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CODEY_NOTEBOOK_LM_PRETRAINING")]
		CODEY_NOTEBOOK_LM_PRETRAINING = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERTEX_SAFE_FLAN")]
		VERTEX_SAFE_FLAN = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_MIRROR_V1_0_1")]
		GITHUB_MIRROR_V1_0_1 = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_MIRROR_V2_1_0")]
		GITHUB_MIRROR_V2_1_0 = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMS_WIKIPEDIA_LANG_FILTERED")]
		CMS_WIKIPEDIA_LANG_FILTERED = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMS_STACKOVERFLOW_MULTILINGUAL")]
		CMS_STACKOVERFLOW_MULTILINGUAL = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMS_STACKEXCHANGE")]
		CMS_STACKEXCHANGE = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBMED")]
		PUBMED = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_EN_TOP10B_GCC")]
		GEMINI_DOCJOINS_EN_TOP10B_GCC = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC")]
		GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC")]
		GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC")]
		GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_I18N_TOP10B_GCC")]
		GEMINI_DOCJOINS_I18N_TOP10B_GCC = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC")]
		GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC")]
		GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SIMPLIFIED_HTML_V1_GCC")]
		SIMPLIFIED_HTML_V1_GCC = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC")]
		GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMS_GITHUB_V4")]
		CMS_GITHUB_V4 = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_HTML_V4")]
		GITHUB_HTML_V4 = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_OTHER_V4")]
		GITHUB_OTHER_V4 = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_LONG_TAIL_V4")]
		GITHUB_LONG_TAIL_V4 = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CMS_GITHUB_MULTIFILE_V4")]
		CMS_GITHUB_MULTIFILE_V4 = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GITHUB_DIFFS_WITH_COMMIT_MESSAGE")]
		GITHUB_DIFFS_WITH_COMMIT_MESSAGE = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ULM_ARXIV")]
		ULM_ARXIV = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY")]
		NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY")]
		NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QUORA")]
		QUORA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PODCASTS_ROBOTSTXT")]
		PODCASTS_ROBOTSTXT = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMBINED_REDDIT")]
		COMBINED_REDDIT = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CANARIES_SHUFFLED")]
		CANARIES_SHUFFLED = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX")]
		CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TECHDOCS_DATA_SOURCE")]
		TECHDOCS_DATA_SOURCE = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCIENCE_PDF_70M_DOCS_FILTERED")]
		SCIENCE_PDF_70M_DOCS_FILTERED = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED")]
		GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_WIKIPEDIA_DIFFS")]
		GEMINI_V1_WIKIPEDIA_DIFFS = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523")]
		GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523 = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523")]
		GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523 = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523")]
		GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523 = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523")]
		GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523 = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523")]
		GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523 = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523")]
		GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523 = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523")]
		GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523 = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_SIMPLIFIED_HTML_V2_GCC")]
		GEMINI_V1_SIMPLIFIED_HTML_V2_GCC = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2")]
		GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2 = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_CMS_STACKEXCHANGE_DECONT")]
		GEMINI_V1_CMS_STACKEXCHANGE_DECONT = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_QUORA")]
		GEMINI_V1_QUORA = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_COMBINED_REDDIT")]
		GEMINI_V1_COMBINED_REDDIT = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS")]
		GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_PUBMED")]
		GEMINI_V1_PUBMED = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_WEB_MATH_V2")]
		GEMINI_V1_WEB_MATH_V2 = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7")]
		GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7 = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2")]
		GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2 = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_GITHUB_HTML_CSS_XML_V4")]
		GEMINI_V1_GITHUB_HTML_CSS_XML_V4 = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_GITHUB_OTHER_V4")]
		GEMINI_V1_GITHUB_OTHER_V4 = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_GITHUB_LONG_TAIL_V4")]
		GEMINI_V1_GITHUB_LONG_TAIL_V4 = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE")]
		GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_ULM_ARXIV_SSTABLE")]
		GEMINI_V1_ULM_ARXIV_SSTABLE = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_PODCASTS_ROBOTSTXT")]
		GEMINI_V1_PODCASTS_ROBOTSTXT = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC")]
		GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_GITHUB_TECHDOCS_V2")]
		GEMINI_V1_GITHUB_TECHDOCS_V2 = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN")]
		GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN")]
		GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_STEM_BOOKS_650K_TEXT")]
		GEMINI_V1_STEM_BOOKS_650K_TEXT = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX")]
		GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR")]
		GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX")]
		GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE")]
		GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_SECURITY_DOCS")]
		DUET_CLOUD_SECURITY_DOCS = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_GITHUB_CODE_SNIPPETS")]
		DUET_GITHUB_CODE_SNIPPETS = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_GITHUB_FILES")]
		DUET_GITHUB_FILES = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_GOBYEXAMPLE")]
		DUET_GOBYEXAMPLE = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_GOLANG_DOCS")]
		DUET_GOLANG_DOCS = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES")]
		DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_DEVSITE_DOCS")]
		DUET_DEVSITE_DOCS = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_BLOG_POSTS")]
		DUET_CLOUD_BLOG_POSTS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_PODCAST_EPISODES")]
		DUET_CLOUD_PODCAST_EPISODES = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_YOUTUBE_VIDEOS")]
		DUET_YOUTUBE_VIDEOS = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_SKILLS_BOOST")]
		DUET_CLOUD_SKILLS_BOOST = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_DOCS")]
		DUET_CLOUD_DOCS = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED")]
		DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN")]
		DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_GOOGLESQL_GENERATION")]
		DUET_GOOGLESQL_GENERATION = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_CLOUD_IX_PROMPTS")]
		DUET_CLOUD_IX_PROMPTS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DUET_RAD")]
		DUET_RAD = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BARD_ARCADE_GITHUB")]
		BARD_ARCADE_GITHUB = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K")]
		MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_ASSISTANT_PALM24B_FILTERED_400K")]
		MOBILE_ASSISTANT_PALM24B_FILTERED_400K = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GENESIS_NEWS_INSIGHTS")]
		GENESIS_NEWS_INSIGHTS = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_SECURITY_PRETRAINING")]
		CLOUD_SECURITY_PRETRAINING = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_SECURITY_FINETUNING")]
		CLOUD_SECURITY_FINETUNING = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LABS_AQA_DSCOUT")]
		LABS_AQA_DSCOUT = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LABS_AQA_TAILWIND")]
		LABS_AQA_TAILWIND = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LABS_AQA_DELEWARE")]
		LABS_AQA_DELEWARE = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_FT_URL")]
		GEMINI_MULTIMODAL_FT_URL = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_FT_YT")]
		GEMINI_MULTIMODAL_FT_YT = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_FT_SHUTTERSTOCK")]
		GEMINI_MULTIMODAL_FT_SHUTTERSTOCK = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_FT_NONE")]
		GEMINI_MULTIMODAL_FT_NONE = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_FT_OTHER")]
		GEMINI_MULTIMODAL_FT_OTHER = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_FT_INK")]
		GEMINI_MULTIMODAL_FT_INK = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_MULTIMODAL_IT")]
		GEMINI_MULTIMODAL_IT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_SHUTTERSTOCK")]
		GEMINI_IT_SHUTTERSTOCK = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_M3W")]
		GEMINI_IT_M3W = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_HEDGING")]
		GEMINI_IT_HEDGING = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_DSCOUT_FACTUALITY")]
		GEMINI_IT_DSCOUT_FACTUALITY = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_AQUAMUSE")]
		GEMINI_IT_AQUAMUSE = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_SHOTGUN")]
		GEMINI_IT_SHOTGUN = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_ACI_BENCH")]
		GEMINI_IT_ACI_BENCH = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_SPIDER_FILTERED")]
		GEMINI_IT_SPIDER_FILTERED = 182,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_TAB_SUM_BQ")]
		GEMINI_IT_TAB_SUM_BQ = 183,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_QA_WITH_URL")]
		GEMINI_IT_QA_WITH_URL = 184,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_CODE_INSTRUCT")]
		GEMINI_IT_CODE_INSTRUCT = 185,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_MED_PALM")]
		GEMINI_IT_MED_PALM = 186,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_TASK_ORIENTED_DIALOG")]
		GEMINI_IT_TASK_ORIENTED_DIALOG = 187,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT")]
		GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT = 188,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_EITL_GEN")]
		GEMINI_IT_EITL_GEN = 189,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_HITL_GEN")]
		GEMINI_IT_HITL_GEN = 190,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_MECH")]
		GEMINI_IT_MECH = 191,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_TABLE_GEN")]
		GEMINI_IT_TABLE_GEN = 192,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_NIMBUS_DECIBEL")]
		GEMINI_IT_NIMBUS_DECIBEL = 193,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMIT_BRIDGE_SUFFIX_FT")]
		GEMIT_BRIDGE_SUFFIX_FT = 194,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_CLOUD_CODE_IF")]
		GEMINI_IT_CLOUD_CODE_IF = 195,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_CLOUD_EUR_LEX_JSON")]
		GEMINI_IT_CLOUD_EUR_LEX_JSON = 196,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_CLOUD_OASST")]
		GEMINI_IT_CLOUD_OASST = 197,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_CLOUD_SELF_INSTRUCT")]
		GEMINI_IT_CLOUD_SELF_INSTRUCT = 198,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_IT_CLOUD_UCS_AQUAMUSE")]
		GEMINI_IT_CLOUD_UCS_AQUAMUSE = 199,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII")]
		GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII = 200,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT")]
		GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT = 201,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED = 202,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED = 203,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT = 204,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT = 205,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED = 206,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED = 207,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT = 208,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT = 209,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED = 210,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED = 211,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT = 212,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT = 213,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED = 214,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED")]
		GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED = 215,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_QUORA_COMPLIANT")]
		GEMINI_V2_QUORA_COMPLIANT = 216,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_FORUMS_V2_COMPLIANT")]
		GEMINI_V2_FORUMS_V2_COMPLIANT = 217,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT")]
		GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT = 218,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT")]
		GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT = 219,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT")]
		GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT = 220,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CODEWEB_V1_COMPLIANT")]
		GEMINI_V2_CODEWEB_V1_COMPLIANT = 221,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_LEETCODE_GCC_PII")]
		GEMINI_V2_LEETCODE_GCC_PII = 222,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CODE_CONTESTS_COMPLIANT")]
		GEMINI_V2_CODE_CONTESTS_COMPLIANT = 223,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS")]
		GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS = 224,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT")]
		GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT = 225,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT")]
		GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT = 226,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT")]
		GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT = 227,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT")]
		GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT = 228,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT")]
		GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT = 229,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_DIFFS_COMPLIANT")]
		GEMINI_V2_GITHUB_DIFFS_COMPLIANT = 230,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT")]
		GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT = 231,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2 = 232,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX")]
		GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX = 233,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ARXIV_2023_COMPLIANT")]
		GEMINI_V2_ARXIV_2023_COMPLIANT = 234,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_FORMAL_COMPLIANT")]
		GEMINI_V2_FORMAL_COMPLIANT = 235,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT")]
		GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT = 236,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_PUBMED_COMPLIANT")]
		GEMINI_V2_PUBMED_COMPLIANT = 237,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_WEB_MATH_V3_COMPLIANT")]
		GEMINI_V2_WEB_MATH_V3_COMPLIANT = 238,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_SCIENCEWEB_V0_GCC_PII")]
		GEMINI_V2_SCIENCEWEB_V0_GCC_PII = 239,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT")]
		GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT = 240,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2 = 241,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2 = 242,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2 = 243,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2 = 244,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2 = 245,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2 = 246,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2 = 247,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2")]
		GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2 = 248,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CHESS_COMPLIANT")]
		GEMINI_V2_CHESS_COMPLIANT = 249,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT")]
		GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT = 250,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT")]
		GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT = 251,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT")]
		GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT = 252,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_PODCASTS_COMPLIANT")]
		GEMINI_V2_PODCASTS_COMPLIANT = 253,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT")]
		GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT = 254,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT")]
		GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT = 255,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT")]
		GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT = 256,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT")]
		GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT = 257,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED = 258,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT = 259,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED = 260,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 261,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 262,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 263,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 264,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 265,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 266,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 267,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED = 268,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT = 269,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 270,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 271,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 272,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 273,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 274,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 275,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 276,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 277,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 278,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 279,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 280,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 281,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 282,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 283,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 284,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 285,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 286,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED")]
		GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED = 287,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT = 288,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT = 289,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT = 290,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT = 291,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT = 292,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT = 293,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT = 294,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT = 295,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT = 296,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT = 297,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT = 298,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT")]
		GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT = 299,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX")]
		GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX = 300,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5")]
		GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5 = 301,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5")]
		GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5 = 302,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5")]
		GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5 = 303,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5")]
		GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5 = 304,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5")]
		GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5 = 305,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT")]
		GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT = 306,
	}
	
	/// <summary>
	/// The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id:28
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LanguageLabsAidaTrustRecitationProtoDocAttribution
	{
		
		[System.Runtime.Serialization.DataMember(Name="amarnaId")]
		public string AmarnaId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arxivId")]
		public string ArxivId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bibkey")]
		public string Bibkey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bookTitle")]
		public string BookTitle { get; set; }
		
		/// <summary>
		/// The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bookVolumeId")]
		public string BookVolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="category")]
		public System.Nullable<LanguageLabsAidaTrustRecitationProtoDocAttributionCategory> Category { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="conversationId")]
		public string ConversationId { get; set; }
		
		/// <summary>
		/// The dataset this document comes from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset Dataset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filepath")]
		public string Filepath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="geminiId")]
		public string GeminiId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gnewsArticleTitle")]
		public string GnewsArticleTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="goodallExampleId")]
		public string GoodallExampleId { get; set; }
		
		/// <summary>
		/// Whether the document is opted out.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isOptOut")]
		public System.Nullable<System.Boolean> IsOptOut { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isPrompt")]
		public System.Nullable<System.Boolean> IsPrompt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lamdaExampleId")]
		public string LamdaExampleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meenaConversationId")]
		public string MeenaConversationId { get; set; }
		
		/// <summary>
		/// Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="naturalLanguageCode")]
		public string NaturalLanguageCode { get; set; }
		
		/// <summary>
		/// True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noAttribution")]
		public System.Nullable<System.Boolean> NoAttribution { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="podcastUtteranceId")]
		public string PodcastUtteranceId { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicationDate")]
		public GoogleTypeDate PublicationDate { get; set; }
		
		/// <summary>
		/// This field is for opt-out experiment only, MUST never be used during actual production/serving. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualityScoreExperimentOnly")]
		public System.Nullable<System.Double> QualityScoreExperimentOnly { get; set; }
		
		/// <summary>
		/// Github repository
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repo")]
		public string Repo { get; set; }
		
		/// <summary>
		/// URL of a webdoc
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeId")]
		public string VolumeId { get; set; }
		
		/// <summary>
		/// Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wikipediaArticleTitle")]
		public string WikipediaArticleTitle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LanguageLabsAidaTrustRecitationProtoDocAttributionCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CATEGORY_UNSPECIFIED")]
		CATEGORY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CATEGORY_NEWS")]
		CATEGORY_NEWS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CATEGORY_NON_NEWS_WEBDOC")]
		CATEGORY_NON_NEWS_WEBDOC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CATEGORY_UNKNOWN_MISSING_SIGNAL")]
		CATEGORY_UNKNOWN_MISSING_SIGNAL = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTION_UNSPECIFIED")]
		ACTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CITE")]
		CITE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCK")]
		BLOCK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NO_ACTION")]
		NO_ACTION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXEMPT_FOUND_IN_PROMPT")]
		EXEMPT_FOUND_IN_PROMPT = 4,
	}
	
	/// <summary>
	/// An RAI signal for a single category.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceRaiSignal
	{
		
		/// <summary>
		/// The confidence level for the RAI category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<CloudAiNlLlmProtoServiceRaiSignalConfidence> Confidence { get; set; }
		
		/// <summary>
		/// Whether the category is flagged as being present. Currently, this is set to true if score >= 0.5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="flagged")]
		public System.Nullable<System.Boolean> Flagged { get; set; }
		
		/// <summary>
		/// The RAI category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="raiCategory")]
		public System.Nullable<CloudAiNlLlmProtoServiceRaiSignalRaiCategory> RaiCategory { get; set; }
		
		/// <summary>
		/// The score for the category, in the range [0.0, 1.0].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiNlLlmProtoServiceRaiSignalConfidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_UNSPECIFIED")]
		CONFIDENCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_NONE")]
		CONFIDENCE_NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_LOW")]
		CONFIDENCE_LOW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_MEDIUM")]
		CONFIDENCE_MEDIUM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIDENCE_HIGH")]
		CONFIDENCE_HIGH = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiNlLlmProtoServiceRaiSignalRaiCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RAI_CATEGORY_UNSPECIFIED")]
		RAI_CATEGORY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOXIC")]
		TOXIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEXUALLY_EXPLICIT")]
		SEXUALLY_EXPLICIT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HATE_SPEECH")]
		HATE_SPEECH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIOLENT")]
		VIOLENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PROFANITY")]
		PROFANITY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARASSMENT")]
		HARASSMENT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEATH_HARM_TRAGEDY")]
		DEATH_HARM_TRAGEDY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FIREARMS_WEAPONS")]
		FIREARMS_WEAPONS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBLIC_SAFETY")]
		PUBLIC_SAFETY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HEALTH")]
		HEALTH = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RELIGIOUS_BELIEF")]
		RELIGIOUS_BELIEF = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ILLICIT_DRUGS")]
		ILLICIT_DRUGS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WAR_CONFLICT")]
		WAR_CONFLICT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="POLITICS")]
		POLITICS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINANCE")]
		FINANCE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LEGAL")]
		LEGAL = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CSAI")]
		CSAI = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FRINGE")]
		FRINGE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="THREAT")]
		THREAT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEVERE_TOXICITY")]
		SEVERE_TOXICITY = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOXICITY")]
		TOXICITY = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEXUAL")]
		SEXUAL = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INSULT")]
		INSULT = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEROGATORY")]
		DEROGATORY = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDENTITY_ATTACK")]
		IDENTITY_ATTACK = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIOLENCE_ABUSE")]
		VIOLENCE_ABUSE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OBSCENE")]
		OBSCENE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DRUGS")]
		DRUGS = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CSAM")]
		CSAM = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SPII")]
		SPII = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DANGEROUS_CONTENT")]
		DANGEROUS_CONTENT = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DANGEROUS_CONTENT_SEVERITY")]
		DANGEROUS_CONTENT_SEVERITY = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INSULT_SEVERITY")]
		INSULT_SEVERITY = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEROGATORY_SEVERITY")]
		DEROGATORY_SEVERITY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEXUAL_SEVERITY")]
		SEXUAL_SEVERITY = 35,
	}
	
	/// <summary>
	/// The recitation result for one stream input
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LanguageLabsAidaTrustRecitationProtoStreamRecitationResult
	{
		
		/// <summary>
		/// The recitation result against the given dynamic data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamicSegmentResults")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResult[] DynamicSegmentResults { get; set; }
		
		/// <summary>
		/// Last index of input text fully checked for recitation in the entire streaming context. Would return `-1` if no Input was checked for recitation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullyCheckedTextIndex")]
		public System.Nullable<System.Int32> FullyCheckedTextIndex { get; set; }
		
		/// <summary>
		/// The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recitationAction")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction RecitationAction { get; set; }
		
		/// <summary>
		/// The recitation result against model training data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingSegmentResults")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResult[] TrainingSegmentResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootTakedownResult
	{
		
		/// <summary>
		/// False when query or response should be taken down by any of the takedown rules, true otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="regexTakedownResult")]
		public LearningGenaiRootRegexTakedownResult RegexTakedownResult { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requestResponseTakedownResult")]
		public LearningGenaiRootRequestResponseTakedownResult RequestResponseTakedownResult { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="similarityTakedownResult")]
		public LearningGenaiRootSimilarityTakedownResult SimilarityTakedownResult { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRegexTakedownResult
	{
		
		/// <summary>
		/// False when query or response should be taken down due to match with a blocked regex, true otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		/// <summary>
		/// Regex used to decide that query or response should be taken down. Empty when query or response is kept.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="takedownRegex")]
		public string TakedownRegex { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRequestResponseTakedownResult
	{
		
		/// <summary>
		/// False when response has to be taken down per above config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		/// <summary>
		/// Regex used to match the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestTakedownRegex")]
		public string RequestTakedownRegex { get; set; }
		
		/// <summary>
		/// Regex used to decide that response should be taken down. Empty when response is kept.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseTakedownRegex")]
		public string ResponseTakedownRegex { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootSimilarityTakedownResult
	{
		
		/// <summary>
		/// False when query or response should be taken down by any of the takedown rules, true otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		/// <summary>
		/// List of similar phrases with score. Set only if allowed=false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scoredPhrases")]
		public LearningGenaiRootScoredSimilarityTakedownPhrase[] ScoredPhrases { get; set; }
	}
	
	/// <summary>
	/// Proto containing the results from the Universal Sentence Encoder / Other models
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootScoredSimilarityTakedownPhrase
	{
		
		/// <summary>
		/// Each SimilarityTakedownPhrase treats a logical group of blocked and allowed phrases together along with a corresponding punt If the closest matching response is of the allowed type, we allow the response If the closest matching response is of the blocked type, we block the response. eg: Blocked phrase - "All lives matter"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phrase")]
		public LearningGenaiRootSimilarityTakedownPhrase Phrase { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="similarityScore")]
		public System.Nullable<System.Single> SimilarityScore { get; set; }
	}
	
	/// <summary>
	/// Each SimilarityTakedownPhrase treats a logical group of blocked and allowed phrases together along with a corresponding punt If the closest matching response is of the allowed type, we allow the response If the closest matching response is of the blocked type, we block the response. eg: Blocked phrase - "All lives matter"
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootSimilarityTakedownPhrase
	{
		
		[System.Runtime.Serialization.DataMember(Name="blockedPhrase")]
		public string BlockedPhrase { get; set; }
	}
	
	/// <summary>
	/// A model can generate multiple signals and this captures all the generated signals for a single message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootToxicityResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="signals")]
		public LearningGenaiRootToxicitySignal[] Signals { get; set; }
	}
	
	/// <summary>
	/// Proto to capture a signal generated by the toxicity model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootToxicitySignal
	{
		
		[System.Runtime.Serialization.DataMember(Name="allowed")]
		public System.Nullable<System.Boolean> Allowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="label")]
		public System.Nullable<LearningGenaiRootToxicitySignalLabel> Label { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LearningGenaiRootToxicitySignalLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LABEL_UNSPECIFIED")]
		LABEL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_SENSITIVE")]
		NOT_SENSITIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SENSITIVE")]
		SENSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACCIDENTS_DISASTERS")]
		ACCIDENTS_DISASTERS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADULT")]
		ADULT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMPUTER_SECURITY")]
		COMPUTER_SECURITY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONTROVERSIAL_SOCIAL_ISSUES")]
		CONTROVERSIAL_SOCIAL_ISSUES = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEATH_TRAGEDY")]
		DEATH_TRAGEDY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DRUGS")]
		DRUGS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDENTITY_ETHNICITY")]
		IDENTITY_ETHNICITY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINANCIAL_HARDSHIP")]
		FINANCIAL_HARDSHIP = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FIREARMS_WEAPONS")]
		FIREARMS_WEAPONS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HEALTH")]
		HEALTH = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INSULT")]
		INSULT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LEGAL")]
		LEGAL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MENTAL_HEALTH")]
		MENTAL_HEALTH = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="POLITICS")]
		POLITICS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RELIGION_BELIEFS")]
		RELIGION_BELIEFS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAFETY")]
		SAFETY = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SELF_HARM")]
		SELF_HARM = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SPECIAL_NEEDS")]
		SPECIAL_NEEDS = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TERRORISM")]
		TERRORISM = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOXIC")]
		TOXIC = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TROUBLED_RELATIONSHIP")]
		TROUBLED_RELATIONSHIP = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIOLENCE_ABUSE")]
		VIOLENCE_ABUSE = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VULGAR")]
		VULGAR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WAR_CONFLICT")]
		WAR_CONFLICT = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LearningGenaiRootFilterMetadataReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_UNKNOWN")]
		FILTER_REASON_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_NOT_FILTERED")]
		FILTER_REASON_NOT_FILTERED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_SENSITIVE")]
		FILTER_REASON_SENSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RECITATION")]
		FILTER_REASON_RECITATION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_LANGUAGE")]
		FILTER_REASON_LANGUAGE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_TAKEDOWN")]
		FILTER_REASON_TAKEDOWN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_CLASSIFIER")]
		FILTER_REASON_CLASSIFIER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_EMPTY_RESPONSE")]
		FILTER_REASON_EMPTY_RESPONSE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_SIMILARITY_TAKEDOWN")]
		FILTER_REASON_SIMILARITY_TAKEDOWN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_UNSAFE")]
		FILTER_REASON_UNSAFE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_PAIRWISE_CLASSIFIER")]
		FILTER_REASON_PAIRWISE_CLASSIFIER = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_CODEY")]
		FILTER_REASON_CODEY = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_URL")]
		FILTER_REASON_URL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_EMAIL")]
		FILTER_REASON_EMAIL = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_SAFETY_CAT")]
		FILTER_REASON_SAFETY_CAT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_REQUEST_RESPONSE_TAKEDOWN")]
		FILTER_REASON_REQUEST_RESPONSE_TAKEDOWN = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_PQC")]
		FILTER_REASON_RAI_PQC = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_ATLAS")]
		FILTER_REASON_ATLAS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_CSAM")]
		FILTER_REASON_RAI_CSAM = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_FRINGE")]
		FILTER_REASON_RAI_FRINGE = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_SPII")]
		FILTER_REASON_RAI_SPII = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_IMAGE_VIOLENCE")]
		FILTER_REASON_RAI_IMAGE_VIOLENCE = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_IMAGE_PORN")]
		FILTER_REASON_RAI_IMAGE_PORN = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_IMAGE_CSAM")]
		FILTER_REASON_RAI_IMAGE_CSAM = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_IMAGE_PEDO")]
		FILTER_REASON_RAI_IMAGE_PEDO = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_VIDEO_FRAME_VIOLENCE")]
		FILTER_REASON_RAI_VIDEO_FRAME_VIOLENCE = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_VIDEO_FRAME_PORN")]
		FILTER_REASON_RAI_VIDEO_FRAME_PORN = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_VIDEO_FRAME_CSAM")]
		FILTER_REASON_RAI_VIDEO_FRAME_CSAM = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_VIDEO_FRAME_PEDO")]
		FILTER_REASON_RAI_VIDEO_FRAME_PEDO = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_CONTEXTUAL_DANGEROUS")]
		FILTER_REASON_RAI_CONTEXTUAL_DANGEROUS = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_RAI_SAFETYCAT")]
		FILTER_REASON_RAI_SAFETYCAT = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_TOXICITY")]
		FILTER_REASON_TOXICITY = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_ATLAS_PRICING")]
		FILTER_REASON_ATLAS_PRICING = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_ATLAS_BILLING")]
		FILTER_REASON_ATLAS_BILLING = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_ATLAS_NON_ENGLISH_QUESTION")]
		FILTER_REASON_ATLAS_NON_ENGLISH_QUESTION = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_ATLAS_NOT_RELATED_TO_GCP")]
		FILTER_REASON_ATLAS_NOT_RELATED_TO_GCP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER_REASON_ATLAS_AWS_AZURE_RELATED")]
		FILTER_REASON_ATLAS_AWS_AZURE_RELATED = 36,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootScore
	{
		
		/// <summary>
		/// The type used for final weights calculation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="calculationType")]
		public LearningGenaiRootCalculationType CalculationType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="internalMetadata")]
		public LearningGenaiRootInternalMetadata InternalMetadata { get; set; }
		
		/// <summary>
		/// The type of score that bundled with a threshold, and will not be attending the final score calculation. How each score type uses the threshold can be implementation details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thresholdType")]
		public LearningGenaiRootThresholdType ThresholdType { get; set; }
		
		/// <summary>
		/// Results of RandomSamplingParams::top_k_logprob_per_decoding_step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokensAndLogprobPerDecodingStep")]
		public LearningGenaiRootTokensAndLogProbPerDecodingStep TokensAndLogprobPerDecodingStep { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// The type used for final weights calculation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootCalculationType
	{
		
		[System.Runtime.Serialization.DataMember(Name="scoreType")]
		public System.Nullable<LearningGenaiRootCalculationTypeScoreType> ScoreType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weights")]
		public System.Nullable<System.Double> Weights { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LearningGenaiRootCalculationTypeScoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_UNKNOWN")]
		TYPE_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_SAFE")]
		TYPE_SAFE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_POLICY")]
		TYPE_POLICY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_GENERATION")]
		TYPE_GENERATION = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootInternalMetadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="scoredTokens")]
		public LearningGenaiRootScoredToken[] ScoredTokens { get; set; }
	}
	
	/// <summary>
	/// A token with its own score.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootScoredToken
	{
		
		/// <summary>
		/// Each end_token_score is a logprob for how well the completion would end at a particular token. See http://google3/labs/language/aida/config/proto/model_config.proto;l=376;rcl=573039459
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTokenScore")]
		public System.Nullable<System.Single> EndTokenScore { get; set; }
		
		/// <summary>
		/// Each score is the logprob for the token in model response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Single> Score { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
	}
	
	/// <summary>
	/// The type of score that bundled with a threshold, and will not be attending the final score calculation. How each score type uses the threshold can be implementation details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootThresholdType
	{
		
		[System.Runtime.Serialization.DataMember(Name="scoreType")]
		public LearningGenaiRootCalculationTypeScoreType ScoreType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="threshold")]
		public System.Nullable<System.Double> Threshold { get; set; }
	}
	
	/// <summary>
	/// Results of RandomSamplingParams::top_k_logprob_per_decoding_step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootTokensAndLogProbPerDecodingStep
	{
		
		/// <summary>
		/// Length = total number of decoding steps. The chosen candidates may or may not be in top_candidates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chosenCandidates")]
		public LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate[] ChosenCandidates { get; set; }
		
		/// <summary>
		/// Length = total number of decoding steps.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topCandidates")]
		public LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidates[] TopCandidates { get; set; }
	}
	
	/// <summary>
	/// A candidate at a decoding step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate
	{
		
		/// <summary>
		/// The candidate's log probability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logProbability")]
		public System.Nullable<System.Single> LogProbability { get; set; }
		
		/// <summary>
		/// The candidate’s token value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
	}
	
	/// <summary>
	/// Candidates with top log probabilities at each decoding step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidates
	{
		
		/// <summary>
		/// Sorted by log probability in descending order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidates")]
		public LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate[] Candidates { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LearningServingLlmMessageMetadataFinishReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNSPECIFIED")]
		UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RETURN")]
		RETURN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STOP")]
		STOP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MAX_TOKENS")]
		MAX_TOKENS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FILTER")]
		FILTER = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NlpSaftLangIdResult
	{
		
		/// <summary>
		/// The version of the model used to create these annotations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersion")]
		public System.Nullable<NlpSaftLangIdResultModelVersion> ModelVersion { get; set; }
		
		/// <summary>
		/// This field stores the n-best list of possible BCP 47 language code strings for a given input sorted in descending order according to each code's respective probability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public NlpSaftLanguageSpan[] Predictions { get; set; }
		
		/// <summary>
		/// This field stores language predictions of subspans of the input, when available. Each LanguageSpanSequence is a sequence of LanguageSpans. A particular sequence of LanguageSpans has an associated probability, and need not necessarily cover the entire input. If no language could be predicted for any span, then this field may be empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spanPredictions")]
		public NlpSaftLanguageSpanSequence[] SpanPredictions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum NlpSaftLangIdResultModelVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERSION_UNSPECIFIED")]
		VERSION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_20181017")]
		INDEXING_20181017 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_20191206")]
		INDEXING_20191206 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_20200313")]
		INDEXING_20200313 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEXING_20210618")]
		INDEXING_20210618 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STANDARD_20220516")]
		STANDARD_20220516 = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NlpSaftLanguageSpan
	{
		
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		/// <summary>
		/// A BCP 47 language code for this span.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="locales")]
		public NlpSaftLangIdLocalesResult Locales { get; set; }
		
		/// <summary>
		/// A probability associated with this prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="probability")]
		public System.Nullable<System.Single> Probability { get; set; }
		
		/// <summary>
		/// Start and end byte offsets, inclusive, within the given input string. A value of -1 implies that this field is not set. Both fields must either be set with a nonnegative value or both are unset. If both are unset then this LanguageSpan applies to the entire input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NlpSaftLangIdLocalesResult
	{
		
		/// <summary>
		/// List of locales in which the text would be considered acceptable. Sorted in descending order according to each locale's respective likelihood. For example, if a Portuguese text is acceptable in both Brazil and Portugal, but is more strongly associated with Brazil, then the predictions would be ["pt-BR", "pt-PT"], in that order. May be empty, indicating that the model did not predict any acceptable locales.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public NlpSaftLangIdLocalesResultLocale[] Predictions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NlpSaftLangIdLocalesResultLocale
	{
		
		/// <summary>
		/// A BCP 47 language code that includes region information. For example, "pt-BR" or "pt-PT". This field will always be populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NlpSaftLanguageSpanSequence
	{
		
		/// <summary>
		/// A sequence of LanguageSpan objects, each assigning a language to a subspan of the input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageSpans")]
		public NlpSaftLanguageSpan[] LanguageSpans { get; set; }
		
		/// <summary>
		/// The probability of this sequence of LanguageSpans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="probability")]
		public System.Nullable<System.Single> Probability { get; set; }
	}
	
	/// <summary>
	/// The recitation result for one input
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRecitationRecitationResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="dynamicSegmentResults")]
		public LearningGenaiRecitationSegmentResult[] DynamicSegmentResults { get; set; }
		
		/// <summary>
		/// The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recitationAction")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction RecitationAction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainingSegmentResults")]
		public LearningGenaiRecitationSegmentResult[] TrainingSegmentResults { get; set; }
	}
	
	/// <summary>
	/// The recitation result for each segment in a given input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRecitationSegmentResult
	{
		
		/// <summary>
		/// The dataset the segment came from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionDataset")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset AttributionDataset { get; set; }
		
		/// <summary>
		/// human-friendly string that contains information from doc_attribution which could be shown by clients
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayAttributionMessage")]
		public string DisplayAttributionMessage { get; set; }
		
		/// <summary>
		/// The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 28
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="docAttribution")]
		public LearningGenaiRecitationDocAttribution DocAttribution { get; set; }
		
		/// <summary>
		/// number of documents that contained this segment
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="docOccurrences")]
		public System.Nullable<System.Int32> DocOccurrences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public System.Nullable<System.Int32> EndIndex { get; set; }
		
		/// <summary>
		/// The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawText")]
		public string RawText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="segmentRecitationAction")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultSegmentRecitationAction SegmentRecitationAction { get; set; }
		
		/// <summary>
		/// The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
	}
	
	/// <summary>
	/// The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 28
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRecitationDocAttribution
	{
		
		[System.Runtime.Serialization.DataMember(Name="amarnaId")]
		public string AmarnaId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arxivId")]
		public string ArxivId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="author")]
		public string Author { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bibkey")]
		public string Bibkey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bookTitle")]
		public string BookTitle { get; set; }
		
		/// <summary>
		/// The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bookVolumeId")]
		public string BookVolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="conversationId")]
		public string ConversationId { get; set; }
		
		/// <summary>
		/// The dataset this document comes from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public LanguageLabsAidaTrustRecitationProtoSegmentResultAttributionDataset Dataset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filepath")]
		public string Filepath { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="geminiId")]
		public string GeminiId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gnewsArticleTitle")]
		public string GnewsArticleTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="goodallExampleId")]
		public string GoodallExampleId { get; set; }
		
		/// <summary>
		/// Whether the document is opted out.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isOptOut")]
		public System.Nullable<System.Boolean> IsOptOut { get; set; }
		
		/// <summary>
		/// When true, this attribution came from the user's prompt.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isPrompt")]
		public System.Nullable<System.Boolean> IsPrompt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lamdaExampleId")]
		public string LamdaExampleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meenaConversationId")]
		public string MeenaConversationId { get; set; }
		
		/// <summary>
		/// Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="naturalLanguageCode")]
		public string NaturalLanguageCode { get; set; }
		
		/// <summary>
		/// True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noAttribution")]
		public System.Nullable<System.Boolean> NoAttribution { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="podcastUtteranceId")]
		public string PodcastUtteranceId { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicationDate")]
		public GoogleTypeDate PublicationDate { get; set; }
		
		/// <summary>
		/// This field is for opt-out experiment only, MUST never be used during actual production/serving. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="qualityScoreExperimentOnly")]
		public System.Nullable<System.Double> QualityScoreExperimentOnly { get; set; }
		
		/// <summary>
		/// Github repository
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repo")]
		public string Repo { get; set; }
		
		/// <summary>
		/// URL of a webdoc
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeId")]
		public string VolumeId { get; set; }
		
		/// <summary>
		/// Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wikipediaArticleTitle")]
		public string WikipediaArticleTitle { get; set; }
	}
	
	/// <summary>
	/// Holds the final routing decision, by storing the model_config_id. And individual scores each model got.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRoutingDecision
	{
		
		/// <summary>
		/// Debug metadata about the routing decision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public LearningGenaiRootRoutingDecisionMetadata Metadata { get; set; }
		
		/// <summary>
		/// The selected model to route traffic to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelConfigId")]
		public string ModelConfigId { get; set; }
	}
	
	/// <summary>
	/// Debug metadata about the routing decision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRoutingDecisionMetadata
	{
		
		/// <summary>
		/// If we are routing using scored based configuration, then the metadata about that is available in this proto.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scoreBasedRoutingMetadata")]
		public LearningGenaiRootRoutingDecisionMetadataScoreBased ScoreBasedRoutingMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tokenLengthBasedRoutingMetadata")]
		public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased TokenLengthBasedRoutingMetadata { get; set; }
	}
	
	/// <summary>
	/// If we are routing using scored based configuration, then the metadata about that is available in this proto.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRoutingDecisionMetadataScoreBased
	{
		
		[System.Runtime.Serialization.DataMember(Name="matchedRule")]
		public LearningGenaiRootScoreBasedRoutingConfigRule MatchedRule { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="score")]
		public LearningGenaiRootScore Score { get; set; }
		
		/// <summary>
		/// No rules were matched & therefore used the default fallback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usedDefaultFallback")]
		public System.Nullable<System.Boolean> UsedDefaultFallback { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootScoreBasedRoutingConfigRule
	{
		
		[System.Runtime.Serialization.DataMember(Name="equalOrGreaterThan")]
		public LearningGenaiRootScore EqualOrGreaterThan { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lessThan")]
		public LearningGenaiRootScore LessThan { get; set; }
		
		/// <summary>
		/// This model_config_id points to ModelConfig::id which allows us to find the ModelConfig to route to. This is part of the banks specified in the ModelBankConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelConfigId")]
		public string ModelConfigId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
	{
		
		[System.Runtime.Serialization.DataMember(Name="modelInputTokenMetadata")]
		public LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata[] ModelInputTokenMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelMaxTokenMetadata")]
		public LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata[] ModelMaxTokenMetadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata
	{
		
		/// <summary>
		/// The length computed by backends using the formatter & tokenizer specific to the model
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="computedInputTokenLength")]
		public System.Nullable<System.Int32> ComputedInputTokenLength { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxNumInputTokens")]
		public System.Nullable<System.Int32> MaxNumInputTokens { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxNumOutputTokens")]
		public System.Nullable<System.Int32> MaxNumOutputTokens { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
	}
	
	/// <summary>
	/// Content filter results for a prompt sent in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServicePromptFeedback
	{
		
		/// <summary>
		/// Blocked reason.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockReason")]
		public System.Nullable<CloudAiNlLlmProtoServicePromptFeedbackBlockReason> BlockReason { get; set; }
		
		/// <summary>
		/// A readable block reason message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockReasonMessage")]
		public string BlockReasonMessage { get; set; }
		
		/// <summary>
		/// Safety ratings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyRatings")]
		public CloudAiNlLlmProtoServiceSafetyRating[] SafetyRatings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudAiNlLlmProtoServicePromptFeedbackBlockReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCKED_REASON_UNSPECIFIED")]
		BLOCKED_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAFETY")]
		SAFETY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OTHER")]
		OTHER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IntelligenceCloudAutomlXpsReportingMetrics
	{
		
		/// <summary>
		/// The effective time training used. If set, this is used for quota management and billing. Deprecated. AutoML BE doesn't use this. Don't set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="effectiveTrainingDuration")]
		public string EffectiveTrainingDuration { get; set; }
		
		/// <summary>
		/// One entry per metric name. The values must be aggregated per metric name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricEntries")]
		public IntelligenceCloudAutomlXpsMetricEntry[] MetricEntries { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IntelligenceCloudAutomlXpsMetricEntry
	{
		
		/// <summary>
		/// For billing metrics that are using legacy sku's, set the legacy billing metric id here. This will be sent to Chemist as the "cloudbilling.googleapis.com/argentum_metric_id" label. Otherwise leave empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="argentumMetricId")]
		public string ArgentumMetricId { get; set; }
		
		/// <summary>
		/// A double value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// A signed 64-bit integer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="int64Value")]
		public string Int64Value { get; set; }
		
		/// <summary>
		/// The metric name defined in the service configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricName")]
		public string MetricName { get; set; }
		
		/// <summary>
		/// Billing system labels for this (metric, value) pair.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="systemLabels")]
		public IntelligenceCloudAutomlXpsMetricEntryLabel[] SystemLabels { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class IntelligenceCloudAutomlXpsMetricEntryLabel
	{
		
		/// <summary>
		/// The name of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelName")]
		public string LabelName { get; set; }
		
		/// <summary>
		/// The value of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelValue")]
		public string LabelValue { get; set; }
	}
	
	/// <summary>
	/// Usage metadata about response(s).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiNlLlmProtoServiceUsageMetadata
	{
		
		/// <summary>
		/// Number of tokens in the response(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidatesTokenCount")]
		public System.Nullable<System.Int32> CandidatesTokenCount { get; set; }
		
		/// <summary>
		/// Number of tokens in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promptTokenCount")]
		public System.Nullable<System.Int32> PromptTokenCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalTokenCount")]
		public System.Nullable<System.Int32> TotalTokenCount { get; set; }
	}
	
	/// <summary>
	/// Video reasoning response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionReasonVideoResponse
	{
		
		/// <summary>
		/// Generated text responses. The generated responses for different segments within the same video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responses")]
		public CloudAiLargeModelsVisionReasonVideoResponseTextResponse[] Responses { get; set; }
	}
	
	/// <summary>
	/// Contains text that is the response of the video captioning.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionReasonVideoResponseTextResponse
	{
		
		/// <summary>
		/// For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativeTemporalPartition")]
		public CloudAiLargeModelsVisionRelativeTemporalPartition RelativeTemporalPartition { get; set; }
		
		/// <summary>
		/// Text information
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	/// <summary>
	/// For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudAiLargeModelsVisionRelativeTemporalPartition
	{
		
		/// <summary>
		/// End time offset of the partition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOffset")]
		public string EndOffset { get; set; }
		
		/// <summary>
		/// Start time offset of the partition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOffset")]
		public string StartOffset { get; set; }
	}
	
	/// <summary>
	/// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleApiHttpBody
	{
		
		/// <summary>
		/// The HTTP Content-Type header value specifying the content type of the body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// The HTTP request/response body as raw binary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Application specific response metadata. Must be set in the first response for streaming APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extensions")]
		public string[] Extensions { get; set; }
	}
	
	/// <summary>
	/// Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ActiveLearningConfig
	{
		
		/// <summary>
		/// Max number of human labeled DataItems.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDataItemCount")]
		public string MaxDataItemCount { get; set; }
		
		/// <summary>
		/// Max percent of total DataItems for human labeling.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDataItemPercentage")]
		public System.Nullable<System.Int32> MaxDataItemPercentage { get; set; }
		
		/// <summary>
		/// Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleConfig")]
		public GoogleCloudAiplatformV1SampleConfig SampleConfig { get; set; }
		
		/// <summary>
		/// CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingConfig")]
		public GoogleCloudAiplatformV1TrainingConfig TrainingConfig { get; set; }
	}
	
	/// <summary>
	/// Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SampleConfig
	{
		
		/// <summary>
		/// The percentage of data needed to be labeled in each following batch (except the first batch).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="followingBatchSamplePercentage")]
		public System.Nullable<System.Int32> FollowingBatchSamplePercentage { get; set; }
		
		/// <summary>
		/// The percentage of data needed to be labeled in the first batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="initialBatchSamplePercentage")]
		public System.Nullable<System.Int32> InitialBatchSamplePercentage { get; set; }
		
		/// <summary>
		/// Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleStrategy")]
		public System.Nullable<GoogleCloudAiplatformV1SampleConfigSampleStrategy> SampleStrategy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SampleConfigSampleStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAMPLE_STRATEGY_UNSPECIFIED")]
		SAMPLE_STRATEGY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNCERTAINTY")]
		UNCERTAINTY = 1,
	}
	
	/// <summary>
	/// CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TrainingConfig
	{
		
		/// <summary>
		/// The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeoutTrainingMilliHours")]
		public string TimeoutTrainingMilliHours { get; set; }
	}
	
	/// <summary>
	/// Request message for MetadataService.AddContextArtifactsAndExecutions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest
	{
		
		/// <summary>
		/// The resource names of the Artifacts to attribute to the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifacts")]
		public string[] Artifacts { get; set; }
		
		/// <summary>
		/// The resource names of the Executions to associate with the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public string[] Executions { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.AddContextArtifactsAndExecutions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse
	{
	}
	
	/// <summary>
	/// Request message for MetadataService.AddContextChildren.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddContextChildrenRequest
	{
		
		/// <summary>
		/// The resource names of the child Contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childContexts")]
		public string[] ChildContexts { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.AddContextChildren.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddContextChildrenResponse
	{
	}
	
	/// <summary>
	/// Request message for MetadataService.AddExecutionEvents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddExecutionEventsRequest
	{
		
		/// <summary>
		/// The Events to create and add.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public GoogleCloudAiplatformV1Event[] Events { get; set; }
	}
	
	/// <summary>
	/// An edge describing the relationship between an Artifact and an Execution in a lineage graph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Event
	{
		
		/// <summary>
		/// Required. The relative resource name of the Artifact in the Event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifact")]
		public string Artifact { get; set; }
		
		/// <summary>
		/// Output only. Time the Event occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// Output only. The relative resource name of the Execution in the Event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution")]
		public string Execution { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to annotate Events. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Event (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Required. The type of the Event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudAiplatformV1EventType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1EventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_UNSPECIFIED")]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INPUT")]
		INPUT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUTPUT")]
		OUTPUT = 2,
	}
	
	/// <summary>
	/// Response message for MetadataService.AddExecutionEvents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddExecutionEventsResponse
	{
	}
	
	/// <summary>
	/// Request message for VizierService.AddTrialMeasurement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AddTrialMeasurementRequest
	{
		
		/// <summary>
		/// A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="measurement")]
		public GoogleCloudAiplatformV1Measurement Measurement { get; set; }
	}
	
	/// <summary>
	/// A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Measurement
	{
		
		/// <summary>
		/// Output only. Time that the Trial has been running at the point of this Measurement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="elapsedDuration")]
		public string ElapsedDuration { get; set; }
		
		/// <summary>
		/// Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudAiplatformV1MeasurementMetric[] Metrics { get; set; }
		
		/// <summary>
		/// Output only. The number of steps the machine learning model has been trained for. Must be non-negative.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stepCount")]
		public string StepCount { get; set; }
	}
	
	/// <summary>
	/// A message representing a metric in the measurement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MeasurementMetric
	{
		
		/// <summary>
		/// Output only. The ID of the Metric. The Metric should be defined in StudySpec's Metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricId")]
		public string MetricId { get; set; }
		
		/// <summary>
		/// Output only. The value for this metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Annotation
	{
		
		/// <summary>
		/// References an API call. It contains more information about long running operation and Jobs that are triggered by the API call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSource")]
		public GoogleCloudAiplatformV1UserActionReference AnnotationSource { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Annotation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Annotation: * "aiplatform.googleapis.com/annotation_set_name": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * "aiplatform.googleapis.com/payload_schema": output only, its value is the payload_schema's title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the Annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The schema of the payload can be found in payload_schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public object Payload { get; set; }
		
		/// <summary>
		/// Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payloadSchemaUri")]
		public string PayloadSchemaUri { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Annotation was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// References an API call. It contains more information about long running operation and Jobs that are triggered by the API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UserActionReference
	{
		
		/// <summary>
		/// For API calls that start a LabelingJob. Resource name of the LabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataLabelingJob")]
		public string DataLabelingJob { get; set; }
		
		/// <summary>
		/// The method name of the API RPC call. For example, "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public string Method { get; set; }
		
		/// <summary>
		/// For API calls that return a long running operation. Resource name of the long running operation. Format: `projects/{project}/locations/{location}/operations/{operation}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
	}
	
	/// <summary>
	/// Identifies a concept with which DataItems may be annotated with.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AnnotationSpec
	{
		
		/// <summary>
		/// Output only. Timestamp when this AnnotationSpec was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of the AnnotationSpec. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the AnnotationSpec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when AnnotationSpec was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Instance of a general artifact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Artifact
	{
		
		/// <summary>
		/// Output only. Timestamp when this Artifact was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the Artifact
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// User provided display name of the Artifact. May be up to 128 Unicode characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Artifact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaTitle")]
		public string SchemaTitle { get; set; }
		
		/// <summary>
		/// The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaVersion")]
		public string SchemaVersion { get; set; }
		
		/// <summary>
		/// The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1ArtifactState> State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Artifact was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ArtifactState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PENDING")]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LIVE")]
		LIVE = 2,
	}
	
	/// <summary>
	/// Metadata information for NotebookService.AssignNotebookRuntime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AssignNotebookRuntimeOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// A human-readable message that shows the intermediate progress details of NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="progressMessage")]
		public string ProgressMessage { get; set; }
	}
	
	/// <summary>
	/// Generic Metadata shared by all operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GenericOperationMetadata
	{
		
		/// <summary>
		/// Output only. Time when the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard Google Cloud error details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialFailures")]
		public GoogleRpcStatus[] PartialFailures { get; set; }
		
		/// <summary>
		/// Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Request message for NotebookService.AssignNotebookRuntime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AssignNotebookRuntimeRequest
	{
		
		/// <summary>
		/// A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntime")]
		public GoogleCloudAiplatformV1NotebookRuntime NotebookRuntime { get; set; }
		
		/// <summary>
		/// Optional. User specified ID for the notebook runtime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeId")]
		public string NotebookRuntimeId { get; set; }
		
		/// <summary>
		/// Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeTemplate")]
		public string NotebookRuntimeTemplate { get; set; }
	}
	
	/// <summary>
	/// A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NotebookRuntime
	{
		
		/// <summary>
		/// Output only. Timestamp when this NotebookRuntime was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The description of the NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expirationTime")]
		public string ExpirationTime { get; set; }
		
		/// <summary>
		/// Output only. The health state of the NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthState")]
		public System.Nullable<GoogleCloudAiplatformV1NotebookRuntimeHealthState> HealthState { get; set; }
		
		/// <summary>
		/// Output only. Whether NotebookRuntime is upgradable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isUpgradable")]
		public System.Nullable<System.Boolean> IsUpgradable { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output only, its value is the Compute Engine instance id. * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or "vertex"; if absent, it should be "vertex". This is to describe the entry service, either BigQuery or Vertex.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkTags")]
		public string[] NetworkTags { get; set; }
		
		/// <summary>
		/// Points to a NotebookRuntimeTemplateRef.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeTemplateRef")]
		public GoogleCloudAiplatformV1NotebookRuntimeTemplateRef NotebookRuntimeTemplateRef { get; set; }
		
		/// <summary>
		/// Output only. The type of the notebook runtime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeType")]
		public System.Nullable<GoogleCloudAiplatformV1NotebookRuntimeNotebookRuntimeType> NotebookRuntimeType { get; set; }
		
		/// <summary>
		/// Output only. The proxy endpoint used to access the NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxyUri")]
		public string ProxyUri { get; set; }
		
		/// <summary>
		/// Notebook Reservation Affinity for consuming Zonal reservation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reservationAffinity")]
		public GoogleCloudAiplatformV1NotebookReservationAffinity ReservationAffinity { get; set; }
		
		/// <summary>
		/// Output only. The runtime (instance) state of the NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeState")]
		public System.Nullable<GoogleCloudAiplatformV1NotebookRuntimeRuntimeState> RuntimeState { get; set; }
		
		/// <summary>
		/// Required. The user email of the NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeUser")]
		public string RuntimeUser { get; set; }
		
		/// <summary>
		/// Output only. The service account that the NotebookRuntime workload runs as.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this NotebookRuntime was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Output only. The VM os image version of NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1NotebookRuntimeHealthState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HEALTH_STATE_UNSPECIFIED")]
		HEALTH_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HEALTHY")]
		HEALTHY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNHEALTHY")]
		UNHEALTHY = 2,
	}
	
	/// <summary>
	/// Points to a NotebookRuntimeTemplateRef.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NotebookRuntimeTemplateRef
	{
		
		/// <summary>
		/// Immutable. A resource name of the NotebookRuntimeTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeTemplate")]
		public string NotebookRuntimeTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1NotebookRuntimeNotebookRuntimeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED")]
		NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USER_DEFINED")]
		USER_DEFINED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ONE_CLICK")]
		ONE_CLICK = 2,
	}
	
	/// <summary>
	/// Notebook Reservation Affinity for consuming Zonal reservation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NotebookReservationAffinity
	{
		
		/// <summary>
		/// Required. Specifies the type of reservation from which this instance can consume resources: RESERVATION_ANY (default), RESERVATION_SPECIFIC, or RESERVATION_NONE. See Consuming reserved instances for examples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consumeReservationType")]
		public System.Nullable<GoogleCloudAiplatformV1NotebookReservationAffinityConsumeReservationType> ConsumeReservationType { get; set; }
		
		/// <summary>
		/// Optional. Corresponds to the label key of a reservation resource. To target a RESERVATION_SPECIFIC by name, use compute.googleapis.com/reservation-name as the key and specify the name of your reservation as its value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Optional. Corresponds to the label values of a reservation resource. This must be the full path name of Reservation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1NotebookReservationAffinityConsumeReservationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESERVATION_AFFINITY_TYPE_UNSPECIFIED")]
		RESERVATION_AFFINITY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESERVATION_NONE")]
		RESERVATION_NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESERVATION_ANY")]
		RESERVATION_ANY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESERVATION_SPECIFIC")]
		RESERVATION_SPECIFIC = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1NotebookRuntimeRuntimeState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUNTIME_STATE_UNSPECIFIED")]
		RUNTIME_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUNNING")]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BEING_STARTED")]
		BEING_STARTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BEING_STOPPED")]
		BEING_STOPPED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STOPPED")]
		STOPPED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BEING_UPGRADED")]
		BEING_UPGRADED = 5,
	}
	
	/// <summary>
	/// Attribution that explains a particular prediction output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Attribution
	{
		
		/// <summary>
		/// Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approximationError")]
		public System.Nullable<System.Double> ApproximationError { get; set; }
		
		/// <summary>
		/// Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model's predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baselineOutputValue")]
		public System.Nullable<System.Double> BaselineOutputValue { get; set; }
		
		/// <summary>
		/// Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature's input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureAttributions")]
		public object FeatureAttributions { get; set; }
		
		/// <summary>
		/// Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceOutputValue")]
		public System.Nullable<System.Double> InstanceOutputValue { get; set; }
		
		/// <summary>
		/// Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputDisplayName")]
		public string OutputDisplayName { get; set; }
		
		/// <summary>
		/// Output only. The index that locates the explained prediction output. If the prediction output is a scalar value, output_index is not populated. If the prediction output has multiple dimensions, the length of the output_index list is the same as the number of dimensions of the output. The i-th element in output_index is the element index of the i-th dimension of the output vector. Indices start from 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputIndex")]
		public int[] OutputIndex { get; set; }
		
		/// <summary>
		/// Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputName")]
		public string OutputName { get; set; }
	}
	
	/// <summary>
	/// A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AutomaticResources
	{
		
		/// <summary>
		/// Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxReplicaCount")]
		public System.Nullable<System.Int32> MaxReplicaCount { get; set; }
		
		/// <summary>
		/// Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minReplicaCount")]
		public System.Nullable<System.Int32> MinReplicaCount { get; set; }
	}
	
	/// <summary>
	/// The metric specification that defines the target resource utilization (CPU utilization, accelerator's duty cycle, and so on) for calculating the desired replica count.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AutoscalingMetricSpec
	{
		
		/// <summary>
		/// Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricName")]
		public string MetricName { get; set; }
		
		/// <summary>
		/// The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public System.Nullable<System.Int32> Target { get; set; }
	}
	
	/// <summary>
	/// The storage details for Avro input content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1AvroSource
	{
		
		/// <summary>
		/// The Google Cloud Storage location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1GcsSource GcsSource { get; set; }
	}
	
	/// <summary>
	/// The Google Cloud Storage location for the input content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GcsSource
	{
		
		/// <summary>
		/// Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uris")]
		public string[] Uris { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform batch create Features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreService.BatchCreateFeatures.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateFeaturesRequest
	{
		
		/// <summary>
		/// Required. The request message specifying the Features to create. All Features must be created under the same parent EntityType. The `parent` field in each child request message can be omitted. If `parent` is set in a child request, then the value must match the `parent` value in this request message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleCloudAiplatformV1CreateFeatureRequest[] Requests { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreService.CreateFeature. Request message for FeatureRegistryService.CreateFeature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateFeatureRequest
	{
		
		/// <summary>
		/// Feature Metadata information. For example, color is a feature that describes an apple.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feature")]
		public GoogleCloudAiplatformV1Feature Feature { get; set; }
		
		/// <summary>
		/// Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureId")]
		public string FeatureId { get; set; }
		
		/// <summary>
		/// Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// Feature Metadata information. For example, color is a feature that describes an apple.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Feature
	{
		
		/// <summary>
		/// Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the Feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableMonitoring")]
		public System.Nullable<System.Boolean> DisableMonitoring { get; set; }
		
		/// <summary>
		/// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoringStatsAnomalies")]
		public GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly[] MonitoringStatsAnomalies { get; set; }
		
		/// <summary>
		/// Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueType")]
		public System.Nullable<GoogleCloudAiplatformV1FeatureValueType> ValueType { get; set; }
		
		/// <summary>
		/// Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionColumnName")]
		public string VersionColumnName { get; set; }
	}
	
	/// <summary>
	/// A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly
	{
		
		/// <summary>
		/// Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureStatsAnomaly")]
		public GoogleCloudAiplatformV1FeatureStatsAnomaly FeatureStatsAnomaly { get; set; }
		
		/// <summary>
		/// Output only. The objective for each stats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objective")]
		public System.Nullable<GoogleCloudAiplatformV1FeatureMonitoringStatsAnomalyObjective> Objective { get; set; }
	}
	
	/// <summary>
	/// Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureStatsAnomaly
	{
		
		/// <summary>
		/// This is the threshold used when detecting anomalies. The threshold can be changed by user, so this one might be different from ThresholdConfig.value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anomalyDetectionThreshold")]
		public System.Nullable<System.Double> AnomalyDetectionThreshold { get; set; }
		
		/// <summary>
		/// Path of the anomaly file for current feature values in Cloud Storage bucket. Format: gs:////anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anomalyUri")]
		public string AnomalyUri { get; set; }
		
		/// <summary>
		/// Deviation from the current stats to baseline stats. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distributionDeviation")]
		public System.Nullable<System.Double> DistributionDeviation { get; set; }
		
		/// <summary>
		/// The end timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of the data used to generate stats (e.g. timestamp we take snapshots for feature values).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Feature importance score, only populated when cross-feature monitoring is enabled. For now only used to represent feature attribution score within range [0, 1] for ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
		
		/// <summary>
		/// The start timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate the monitoring intervals, so it always equals to (end_time - monitoring_interval).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statsUri")]
		public string StatsUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1FeatureMonitoringStatsAnomalyObjective
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OBJECTIVE_UNSPECIFIED")]
		OBJECTIVE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMPORT_FEATURE_ANALYSIS")]
		IMPORT_FEATURE_ANALYSIS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SNAPSHOT_ANALYSIS")]
		SNAPSHOT_ANALYSIS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1FeatureValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VALUE_TYPE_UNSPECIFIED")]
		VALUE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOL")]
		BOOL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOL_ARRAY")]
		BOOL_ARRAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOUBLE")]
		DOUBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOUBLE_ARRAY")]
		DOUBLE_ARRAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INT64")]
		INT64 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INT64_ARRAY")]
		INT64_ARRAY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STRING")]
		STRING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STRING_ARRAY")]
		STRING_ARRAY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BYTES")]
		BYTES = 9,
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.BatchCreateFeatures.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateFeaturesResponse
	{
		
		/// <summary>
		/// The Features created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public GoogleCloudAiplatformV1Feature[] Features { get; set; }
	}
	
	/// <summary>
	/// Request message for TensorboardService.BatchCreateTensorboardRuns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest
	{
		
		/// <summary>
		/// Required. The request message specifying the TensorboardRuns to create. A maximum of 1000 TensorboardRuns can be created in a batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleCloudAiplatformV1CreateTensorboardRunRequest[] Requests { get; set; }
	}
	
	/// <summary>
	/// Request message for TensorboardService.CreateTensorboardRun.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateTensorboardRunRequest
	{
		
		/// <summary>
		/// Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardRun")]
		public GoogleCloudAiplatformV1TensorboardRun TensorboardRun { get; set; }
		
		/// <summary>
		/// Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardRunId")]
		public string TensorboardRunId { get; set; }
	}
	
	/// <summary>
	/// TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardRun
	{
		
		/// <summary>
		/// Output only. Timestamp when this TensorboardRun was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of this TensorboardRun.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this TensorboardRun was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.BatchCreateTensorboardRuns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse
	{
		
		/// <summary>
		/// The created TensorboardRuns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardRuns")]
		public GoogleCloudAiplatformV1TensorboardRun[] TensorboardRuns { get; set; }
	}
	
	/// <summary>
	/// Request message for TensorboardService.BatchCreateTensorboardTimeSeries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest
	{
		
		/// <summary>
		/// Required. The request message specifying the TensorboardTimeSeries to create. A maximum of 1000 TensorboardTimeSeries can be created in a batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requests")]
		public GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest[] Requests { get; set; }
	}
	
	/// <summary>
	/// Request message for TensorboardService.CreateTensorboardTimeSeries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest
	{
		
		/// <summary>
		/// Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// TensorboardTimeSeries maps to times series produced in training runs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardTimeSeries")]
		public GoogleCloudAiplatformV1TensorboardTimeSeries TensorboardTimeSeries { get; set; }
		
		/// <summary>
		/// Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardTimeSeriesId")]
		public string TensorboardTimeSeriesId { get; set; }
	}
	
	/// <summary>
	/// TensorboardTimeSeries maps to times series produced in training runs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardTimeSeries
	{
		
		/// <summary>
		/// Output only. Timestamp when this TensorboardTimeSeries was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of this TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Describes metadata for a TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata Metadata { get; set; }
		
		/// <summary>
		/// Output only. Name of the TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Data of the current plugin, with the size limited to 65KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pluginData")]
		public string PluginData { get; set; }
		
		/// <summary>
		/// Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pluginName")]
		public string PluginName { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this TensorboardTimeSeries was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Required. Immutable. Type of TensorboardTimeSeries value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueType")]
		public System.Nullable<GoogleCloudAiplatformV1TensorboardTimeSeriesValueType> ValueType { get; set; }
	}
	
	/// <summary>
	/// Describes metadata for a TensorboardTimeSeries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
	{
		
		/// <summary>
		/// Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxBlobSequenceLength")]
		public string MaxBlobSequenceLength { get; set; }
		
		/// <summary>
		/// Output only. Max step index of all data points within a TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxStep")]
		public string MaxStep { get; set; }
		
		/// <summary>
		/// Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxWallTime")]
		public string MaxWallTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1TensorboardTimeSeriesValueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VALUE_TYPE_UNSPECIFIED")]
		VALUE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCALAR")]
		SCALAR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TENSOR")]
		TENSOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOB_SEQUENCE")]
		BLOB_SEQUENCE = 3,
	}
	
	/// <summary>
	/// Response message for TensorboardService.BatchCreateTensorboardTimeSeries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse
	{
		
		/// <summary>
		/// The created TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardTimeSeries")]
		public GoogleCloudAiplatformV1TensorboardTimeSeries[] TensorboardTimeSeries { get; set; }
	}
	
	/// <summary>
	/// A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchDedicatedResources
	{
		
		/// <summary>
		/// Specification of a single machine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineSpec")]
		public GoogleCloudAiplatformV1MachineSpec MachineSpec { get; set; }
		
		/// <summary>
		/// Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxReplicaCount")]
		public System.Nullable<System.Int32> MaxReplicaCount { get; set; }
		
		/// <summary>
		/// Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startingReplicaCount")]
		public System.Nullable<System.Int32> StartingReplicaCount { get; set; }
	}
	
	/// <summary>
	/// Specification of a single machine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MachineSpec
	{
		
		/// <summary>
		/// The number of accelerators to attach to the machine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="acceleratorCount")]
		public System.Nullable<System.Int32> AcceleratorCount { get; set; }
		
		/// <summary>
		/// Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="acceleratorType")]
		public System.Nullable<GoogleCloudAiplatformV1MachineSpecAcceleratorType> AcceleratorType { get; set; }
		
		/// <summary>
		/// Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineType")]
		public string MachineType { get; set; }
		
		/// <summary>
		/// Immutable. The topology of the TPUs. Corresponds to the TPU topologies available from GKE. (Example: tpu_topology: "2x2x1").
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tpuTopology")]
		public string TpuTopology { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1MachineSpecAcceleratorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACCELERATOR_TYPE_UNSPECIFIED")]
		ACCELERATOR_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_TESLA_K80")]
		NVIDIA_TESLA_K80 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_TESLA_P100")]
		NVIDIA_TESLA_P100 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_TESLA_V100")]
		NVIDIA_TESLA_V100 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_TESLA_P4")]
		NVIDIA_TESLA_P4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_TESLA_T4")]
		NVIDIA_TESLA_T4 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_TESLA_A100")]
		NVIDIA_TESLA_A100 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_A100_80GB")]
		NVIDIA_A100_80GB = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NVIDIA_L4")]
		NVIDIA_L4 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TPU_V2")]
		TPU_V2 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TPU_V3")]
		TPU_V3 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TPU_V4_POD")]
		TPU_V4_POD = 11,
	}
	
	/// <summary>
	/// Request message for ModelService.BatchImportEvaluatedAnnotations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest
	{
		
		/// <summary>
		/// Required. Evaluated annotations resource to be imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedAnnotations")]
		public GoogleCloudAiplatformV1EvaluatedAnnotation[] EvaluatedAnnotations { get; set; }
	}
	
	/// <summary>
	/// True positive, false positive, or false negative. EvaluatedAnnotation is only available under ModelEvaluationSlice with slice of `annotationSpec` dimension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1EvaluatedAnnotation
	{
		
		/// <summary>
		/// Output only. The data item payload that the Model predicted this EvaluatedAnnotation on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemPayload")]
		public object DataItemPayload { get; set; }
		
		/// <summary>
		/// Annotations of model error analysis results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorAnalysisAnnotations")]
		public GoogleCloudAiplatformV1ErrorAnalysisAnnotation[] ErrorAnalysisAnnotations { get; set; }
		
		/// <summary>
		/// Output only. ID of the EvaluatedDataItemView under the same ancestor ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and predictions on data_item_payload.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedDataItemViewId")]
		public string EvaluatedDataItemViewId { get; set; }
		
		/// <summary>
		/// Explanations of predictions. Each element of the explanations indicates the explanation for one explanation Method. The attributions list in the EvaluatedAnnotationExplanation.explanation object corresponds to the predictions list. For example, the second element in the attributions list explains the second element in the predictions list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanations")]
		public GoogleCloudAiplatformV1EvaluatedAnnotationExplanation[] Explanations { get; set; }
		
		/// <summary>
		/// Output only. The ground truth Annotations, i.e. the Annotations that exist in the test data the Model is evaluated on. For true positive, there is one and only one ground truth annotation, which matches the only prediction in predictions. For false positive, there are zero or more ground truth annotations that are similar to the only prediction in predictions, but not enough for a match. For false negative, there is one and only one ground truth annotation, which doesn't match any predictions created by the model. The schema of the ground truth is stored in ModelEvaluation.annotation_schema_uri
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groundTruths")]
		public string[] GroundTruths { get; set; }
		
		/// <summary>
		/// Output only. The model predicted annotations. For true positive, there is one and only one prediction, which matches the only one ground truth annotation in ground_truths. For false positive, there is one and only one prediction, which doesn't match any ground truth annotation of the corresponding data_item_view_id. For false negative, there are zero or more predictions which are similar to the only ground truth annotation in ground_truths but not enough for a match. The schema of the prediction is stored in ModelEvaluation.annotation_schema_uri
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public string[] Predictions { get; set; }
		
		/// <summary>
		/// Output only. Type of the EvaluatedAnnotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudAiplatformV1EvaluatedAnnotationType> Type { get; set; }
	}
	
	/// <summary>
	/// Model error analysis for each annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ErrorAnalysisAnnotation
	{
		
		/// <summary>
		/// Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributedItems")]
		public GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem[] AttributedItems { get; set; }
		
		/// <summary>
		/// The outlier score of this annotated item. Usually defined as the min of all distances from attributed items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outlierScore")]
		public System.Nullable<System.Double> OutlierScore { get; set; }
		
		/// <summary>
		/// The threshold used to determine if this annotation is an outlier or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outlierThreshold")]
		public System.Nullable<System.Double> OutlierThreshold { get; set; }
		
		/// <summary>
		/// The query type used for finding the attributed items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryType")]
		public System.Nullable<GoogleCloudAiplatformV1ErrorAnalysisAnnotationQueryType> QueryType { get; set; }
	}
	
	/// <summary>
	/// Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem
	{
		
		/// <summary>
		/// The unique ID for each annotation. Used by FE to allocate the annotation in DB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationResourceName")]
		public string AnnotationResourceName { get; set; }
		
		/// <summary>
		/// The distance of this item to the annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Double> Distance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ErrorAnalysisAnnotationQueryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="QUERY_TYPE_UNSPECIFIED")]
		QUERY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALL_SIMILAR")]
		ALL_SIMILAR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAME_CLASS_SIMILAR")]
		SAME_CLASS_SIMILAR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAME_CLASS_DISSIMILAR")]
		SAME_CLASS_DISSIMILAR = 3,
	}
	
	/// <summary>
	/// Explanation result of the prediction produced by the Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1EvaluatedAnnotationExplanation
	{
		
		/// <summary>
		/// Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanation")]
		public GoogleCloudAiplatformV1Explanation Explanation { get; set; }
		
		/// <summary>
		/// Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationType")]
		public string ExplanationType { get; set; }
	}
	
	/// <summary>
	/// Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Explanation
	{
		
		/// <summary>
		/// Output only. Feature attributions grouped by predicted outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. If users set ExplanationParameters.top_k, the attributions are sorted by instance_output_value in descending order. If ExplanationParameters.output_indices is specified, the attributions are stored by Attribution.output_index in the same order as they appear in the output_indices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributions")]
		public GoogleCloudAiplatformV1Attribution[] Attributions { get; set; }
		
		/// <summary>
		/// Output only. List of the nearest neighbors for example-based explanations. For models deployed with the examples explanations feature enabled, the attributions field is empty and instead the neighbors field is populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighbors")]
		public GoogleCloudAiplatformV1Neighbor[] Neighbors { get; set; }
	}
	
	/// <summary>
	/// Neighbors for example-based explanations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Neighbor
	{
		
		/// <summary>
		/// Output only. The neighbor distance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighborDistance")]
		public System.Nullable<System.Double> NeighborDistance { get; set; }
		
		/// <summary>
		/// Output only. The neighbor id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighborId")]
		public string NeighborId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1EvaluatedAnnotationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EVALUATED_ANNOTATION_TYPE_UNSPECIFIED")]
		EVALUATED_ANNOTATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRUE_POSITIVE")]
		TRUE_POSITIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FALSE_POSITIVE")]
		FALSE_POSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FALSE_NEGATIVE")]
		FALSE_NEGATIVE = 3,
	}
	
	/// <summary>
	/// Response message for ModelService.BatchImportEvaluatedAnnotations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse
	{
		
		/// <summary>
		/// Output only. Number of EvaluatedAnnotations imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedEvaluatedAnnotationsCount")]
		public System.Nullable<System.Int32> ImportedEvaluatedAnnotationsCount { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.BatchImportModelEvaluationSlices
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest
	{
		
		/// <summary>
		/// Required. Model evaluation slice resource to be imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelEvaluationSlices")]
		public GoogleCloudAiplatformV1ModelEvaluationSlice[] ModelEvaluationSlices { get; set; }
	}
	
	/// <summary>
	/// A collection of metrics calculated by comparing Model's predictions on a slice of the test data against ground truth annotations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationSlice
	{
		
		/// <summary>
		/// Output only. Timestamp when this ModelEvaluationSlice was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public object Metrics { get; set; }
		
		/// <summary>
		/// Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricsSchemaUri")]
		public string MetricsSchemaUri { get; set; }
		
		/// <summary>
		/// Aggregated explanation metrics for a Model over a set of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelExplanation")]
		public GoogleCloudAiplatformV1ModelExplanation ModelExplanation { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the ModelEvaluationSlice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Definition of a slice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slice")]
		public GoogleCloudAiplatformV1ModelEvaluationSliceSlice Slice { get; set; }
	}
	
	/// <summary>
	/// Aggregated explanation metrics for a Model over a set of instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelExplanation
	{
		
		/// <summary>
		/// Output only. Aggregated attributions explaining the Model's prediction outputs over the set of instances. The attributions are grouped by outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. The baselineOutputValue, instanceOutputValue and featureAttributions fields are averaged over the test data. NOTE: Currently AutoML tabular classification Models produce only one attribution, which averages attributions over all the classes it predicts. Attribution.approximation_error is not populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAttributions")]
		public GoogleCloudAiplatformV1Attribution[] MeanAttributions { get; set; }
	}
	
	/// <summary>
	/// Definition of a slice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationSliceSlice
	{
		
		/// <summary>
		/// Output only. The dimension of the slice. Well-known dimensions are: * `annotationSpec`: This slice is on the test data that has either ground truth or prediction with AnnotationSpec.display_name equals to value. * `slice`: This slice is a user customized slice defined by its SliceSpec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimension")]
		public string Dimension { get; set; }
		
		/// <summary>
		/// Specification for how the data should be sliced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sliceSpec")]
		public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec SliceSpec { get; set; }
		
		/// <summary>
		/// Output only. The value of the dimension in this slice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Specification for how the data should be sliced.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec
	{
		
		/// <summary>
		/// Mapping configuration for this SliceSpec. The key is the name of the feature. By default, the key will be prefixed by "instance" as a dictionary prefix for Vertex Batch Predictions output format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configs")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig> Configs { get; set; }
	}
	
	/// <summary>
	/// Specification message containing the config for this SliceSpec. When `kind` is selected as `value` and/or `range`, only a single slice will be computed. When `all_values` is present, a separate slice will be computed for each possible label/value for the corresponding key in `config`. Examples, with feature zip_code with values 12345, 23334, 88888 and feature country with values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": { "value": { "float_value": 12345.0 } } } A single slice for any data with zip_code 12345 in the dataset. Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } } A single slice containing data where the zip_codes between 12345 and 20000 For this example, data with the zip_code of 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000 } }, "country": { "value": { "string_value": "US" } } } A single slice containing data where the zip_codes between 10000 and 20000 has the country "US". For this example, data with the zip_code of 12345 and country "US" will be in this slice. Example 4: { "country": {"all_values": { "value": true } } } Three slices are computed, one for each unique country in the dataset. Example 5: { "country": { "all_values": { "value": true } }, "zip_code": { "value": { "float_value": 12345.0 } } } Three slices are computed, one for each unique country in the dataset where the zip_code is also 12345. For this example, data with zip_code 12345 and country "US" will be in one slice, zip_code 12345 and country "Canada" in another slice, and zip_code 12345 and country "Mexico" in another slice, totaling 3 slices.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig
	{
		
		/// <summary>
		/// If all_values is set to true, then all possible labels of the keyed feature will have another slice computed. Example: `{"all_values":{"value":true}}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allValues")]
		public System.Nullable<System.Boolean> AllValues { get; set; }
		
		/// <summary>
		/// A range of values for slice(s). `low` is inclusive, `high` is exclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="range")]
		public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange Range { get; set; }
		
		/// <summary>
		/// Single value that supports strings and floats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue Value { get; set; }
	}
	
	/// <summary>
	/// A range of values for slice(s). `low` is inclusive, `high` is exclusive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange
	{
		
		/// <summary>
		/// Exclusive high value for the range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="high")]
		public System.Nullable<System.Single> High { get; set; }
		
		/// <summary>
		/// Inclusive low value for the range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="low")]
		public System.Nullable<System.Single> Low { get; set; }
	}
	
	/// <summary>
	/// Single value that supports strings and floats.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue
	{
		
		/// <summary>
		/// Float type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="floatValue")]
		public System.Nullable<System.Single> FloatValue { get; set; }
		
		/// <summary>
		/// String type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// Response message for ModelService.BatchImportModelEvaluationSlices
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse
	{
		
		/// <summary>
		/// Output only. List of imported ModelEvaluationSlice.name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedModelEvaluationSlices")]
		public string[] ImportedModelEvaluationSlices { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for MigrationService.BatchMigrateResources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// Partial results that reflect the latest migration operation progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialResults")]
		public GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult[] PartialResults { get; set; }
	}
	
	/// <summary>
	/// Represents a partial result in batch migration operation for one MigrateResourceRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult
	{
		
		/// <summary>
		/// Migrated dataset resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Migrated model resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public GoogleCloudAiplatformV1MigrateResourceRequest Request { get; set; }
	}
	
	/// <summary>
	/// Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceRequest
	{
		
		/// <summary>
		/// Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateAutomlDatasetConfig")]
		public GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig MigrateAutomlDatasetConfig { get; set; }
		
		/// <summary>
		/// Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateAutomlModelConfig")]
		public GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig MigrateAutomlModelConfig { get; set; }
		
		/// <summary>
		/// Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateDataLabelingDatasetConfig")]
		public GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig MigrateDataLabelingDatasetConfig { get; set; }
		
		/// <summary>
		/// Config for migrating version in ml.googleapis.com to Vertex AI's Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateMlEngineModelVersionConfig")]
		public GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig MigrateMlEngineModelVersionConfig { get; set; }
	}
	
	/// <summary>
	/// Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig
	{
		
		/// <summary>
		/// Required. Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// Required. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetDisplayName")]
		public string DatasetDisplayName { get; set; }
	}
	
	/// <summary>
	/// Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig
	{
		
		/// <summary>
		/// Required. Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Optional. Display name of the model in Vertex AI. System will pick a display name if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDisplayName")]
		public string ModelDisplayName { get; set; }
	}
	
	/// <summary>
	/// Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig
	{
		
		/// <summary>
		/// Required. Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// Optional. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetDisplayName")]
		public string DatasetDisplayName { get; set; }
		
		/// <summary>
		/// Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateDataLabelingAnnotatedDatasetConfigs")]
		public GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig[] MigrateDataLabelingAnnotatedDatasetConfigs { get; set; }
	}
	
	/// <summary>
	/// Config for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig
	{
		
		/// <summary>
		/// Required. Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatedDataset")]
		public string AnnotatedDataset { get; set; }
	}
	
	/// <summary>
	/// Config for migrating version in ml.googleapis.com to Vertex AI's Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig
	{
		
		/// <summary>
		/// Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Required. Display name of the model in Vertex AI. System will pick a display name if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDisplayName")]
		public string ModelDisplayName { get; set; }
		
		/// <summary>
		/// Required. Full resource name of ml engine model version. Format: `projects/{project}/models/{model}/versions/{version}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersion")]
		public string ModelVersion { get; set; }
	}
	
	/// <summary>
	/// Request message for MigrationService.BatchMigrateResources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchMigrateResourcesRequest
	{
		
		/// <summary>
		/// Required. The request messages specifying the resources to migrate. They must be in the same location as the destination. Up to 50 resources can be migrated in one batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateResourceRequests")]
		public GoogleCloudAiplatformV1MigrateResourceRequest[] MigrateResourceRequests { get; set; }
	}
	
	/// <summary>
	/// Response message for MigrationService.BatchMigrateResources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchMigrateResourcesResponse
	{
		
		/// <summary>
		/// Successfully migrated resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migrateResourceResponses")]
		public GoogleCloudAiplatformV1MigrateResourceResponse[] MigrateResourceResponses { get; set; }
	}
	
	/// <summary>
	/// Describes a successfully migrated resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigrateResourceResponse
	{
		
		/// <summary>
		/// Migrated Dataset's resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migratableResource")]
		public GoogleCloudAiplatformV1MigratableResource MigratableResource { get; set; }
		
		/// <summary>
		/// Migrated Model's resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
	}
	
	/// <summary>
	/// Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigratableResource
	{
		
		/// <summary>
		/// Represents one Dataset in automl.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automlDataset")]
		public GoogleCloudAiplatformV1MigratableResourceAutomlDataset AutomlDataset { get; set; }
		
		/// <summary>
		/// Represents one Model in automl.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automlModel")]
		public GoogleCloudAiplatformV1MigratableResourceAutomlModel AutomlModel { get; set; }
		
		/// <summary>
		/// Represents one Dataset in datalabeling.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataLabelingDataset")]
		public GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset DataLabelingDataset { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastMigrateTime")]
		public string LastMigrateTime { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this MigratableResource was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// Represents one model Version in ml.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mlEngineModelVersion")]
		public GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion MlEngineModelVersion { get; set; }
	}
	
	/// <summary>
	/// Represents one Dataset in automl.googleapis.com.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigratableResourceAutomlDataset
	{
		
		/// <summary>
		/// Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// The Dataset's display name in automl.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetDisplayName")]
		public string DatasetDisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents one Model in automl.googleapis.com.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigratableResourceAutomlModel
	{
		
		/// <summary>
		/// Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// The Model's display name in automl.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDisplayName")]
		public string ModelDisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents one Dataset in datalabeling.googleapis.com.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset
	{
		
		/// <summary>
		/// The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataLabelingAnnotatedDatasets")]
		public GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset[] DataLabelingAnnotatedDatasets { get; set; }
		
		/// <summary>
		/// Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// The Dataset's display name in datalabeling.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetDisplayName")]
		public string DatasetDisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents one AnnotatedDataset in datalabeling.googleapis.com.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset
	{
		
		/// <summary>
		/// Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatedDataset")]
		public string AnnotatedDataset { get; set; }
		
		/// <summary>
		/// The AnnotatedDataset's display name in datalabeling.googleapis.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotatedDatasetDisplayName")]
		public string AnnotatedDatasetDisplayName { get; set; }
	}
	
	/// <summary>
	/// Represents one model Version in ml.googleapis.com.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion
	{
		
		/// <summary>
		/// The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// Full resource name of ml engine model Version. Format: `projects/{project}/models/{model}/versions/{version}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchPredictionJob
	{
		
		/// <summary>
		/// Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completionStats")]
		public GoogleCloudAiplatformV1CompletionStats CompletionStats { get; set; }
		
		/// <summary>
		/// Output only. Time when the BatchPredictionJob was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dedicatedResources")]
		public GoogleCloudAiplatformV1BatchDedicatedResources DedicatedResources { get; set; }
		
		/// <summary>
		/// For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableContainerLogging")]
		public System.Nullable<System.Boolean> DisableContainerLogging { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of this BatchPredictionJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Specification of Model explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationSpec")]
		public GoogleCloudAiplatformV1ExplanationSpec ExplanationSpec { get; set; }
		
		/// <summary>
		/// Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generateExplanation")]
		public System.Nullable<System.Boolean> GenerateExplanation { get; set; }
		
		/// <summary>
		/// Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudAiplatformV1BatchPredictionJobInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// Configuration defining how to transform batch prediction input instances to the instances that the Model accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceConfig")]
		public GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig InstanceConfig { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Manual batch tuning parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manualBatchTuningParameters")]
		public GoogleCloudAiplatformV1ManualBatchTuningParameters ManualBatchTuningParameters { get; set; }
		
		/// <summary>
		/// The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelParameters")]
		public object ModelParameters { get; set; }
		
		/// <summary>
		/// Output only. The version ID of the Model that produces the predictions via this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersionId")]
		public string ModelVersionId { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the BatchPredictionJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputConfig")]
		public GoogleCloudAiplatformV1BatchPredictionJobOutputConfig OutputConfig { get; set; }
		
		/// <summary>
		/// Further describes this job's output. Supplements output_config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputInfo")]
		public GoogleCloudAiplatformV1BatchPredictionJobOutputInfo OutputInfo { get; set; }
		
		/// <summary>
		/// Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialFailures")]
		public GoogleRpcStatus[] PartialFailures { get; set; }
		
		/// <summary>
		/// Statistics information about resource consumption.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesConsumed")]
		public GoogleCloudAiplatformV1ResourcesConsumed ResourcesConsumed { get; set; }
		
		/// <summary>
		/// The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1BatchPredictionJobState> State { get; set; }
		
		/// <summary>
		/// Contains model information necessary to perform batch prediction without requiring a full model import.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unmanagedContainerModel")]
		public GoogleCloudAiplatformV1UnmanagedContainerModel UnmanagedContainerModel { get; set; }
		
		/// <summary>
		/// Output only. Time when the BatchPredictionJob was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CompletionStats
	{
		
		/// <summary>
		/// Output only. The number of entities for which any error was encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedCount")]
		public string FailedCount { get; set; }
		
		/// <summary>
		/// Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="incompleteCount")]
		public string IncompleteCount { get; set; }
		
		/// <summary>
		/// Output only. The number of entities that had been processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulCount")]
		public string SuccessfulCount { get; set; }
		
		/// <summary>
		/// Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulForecastPointCount")]
		public string SuccessfulForecastPointCount { get; set; }
	}
	
	/// <summary>
	/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1EncryptionSpec
	{
		
		/// <summary>
		/// Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kmsKeyName")]
		public string KmsKeyName { get; set; }
	}
	
	/// <summary>
	/// Specification of Model explanation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationSpec
	{
		
		/// <summary>
		/// Metadata describing the Model's input and output for explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1ExplanationMetadata Metadata { get; set; }
		
		/// <summary>
		/// Parameters to configure explaining for Model's predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1ExplanationParameters Parameters { get; set; }
	}
	
	/// <summary>
	/// Metadata describing the Model's input and output for explanation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadata
	{
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureAttributionsSchemaUri")]
		public string FeatureAttributionsSchemaUri { get; set; }
		
		/// <summary>
		/// Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ExplanationMetadataInputMetadata> Inputs { get; set; }
		
		/// <summary>
		/// Name of the source to generate embeddings for example based explanations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latentSpaceSource")]
		public string LatentSpaceSource { get; set; }
		
		/// <summary>
		/// Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputs")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata> Outputs { get; set; }
	}
	
	/// <summary>
	/// Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadataInputMetadata
	{
		
		/// <summary>
		/// Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="denseShapeTensorName")]
		public string DenseShapeTensorName { get; set; }
		
		/// <summary>
		/// A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, Vertex AI broadcasts to the same shape as the encoded tensor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encodedBaselines")]
		public string[] EncodedBaselines { get; set; }
		
		/// <summary>
		/// Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encodedTensorName")]
		public string EncodedTensorName { get; set; }
		
		/// <summary>
		/// Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encoding")]
		public System.Nullable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding> Encoding { get; set; }
		
		/// <summary>
		/// Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureValueDomain")]
		public GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain FeatureValueDomain { get; set; }
		
		/// <summary>
		/// Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupName")]
		public string GroupName { get; set; }
		
		/// <summary>
		/// A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexFeatureMapping")]
		public string[] IndexFeatureMapping { get; set; }
		
		/// <summary>
		/// Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indicesTensorName")]
		public string IndicesTensorName { get; set; }
		
		/// <summary>
		/// Baseline inputs for this feature. If no baseline is specified, Vertex AI chooses the baseline for this feature. If multiple baselines are specified, Vertex AI returns the average attributions across them in Attribution.feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputBaselines")]
		public string[] InputBaselines { get; set; }
		
		/// <summary>
		/// Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputTensorName")]
		public string InputTensorName { get; set; }
		
		/// <summary>
		/// Modality of the feature. Valid values are: numeric, image. Defaults to numeric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modality")]
		public string Modality { get; set; }
		
		/// <summary>
		/// Visualization configurations for image explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visualization")]
		public GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization Visualization { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENCODING_UNSPECIFIED")]
		ENCODING_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IDENTITY")]
		IDENTITY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BAG_OF_FEATURES")]
		BAG_OF_FEATURES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BAG_OF_FEATURES_SPARSE")]
		BAG_OF_FEATURES_SPARSE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDICATOR")]
		INDICATOR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMBINED_EMBEDDING")]
		COMBINED_EMBEDDING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONCAT_EMBEDDING")]
		CONCAT_EMBEDDING = 6,
	}
	
	/// <summary>
	/// Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain
	{
		
		/// <summary>
		/// The maximum permissible value for this feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public System.Nullable<System.Single> MaxValue { get; set; }
		
		/// <summary>
		/// The minimum permissible value for this feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public System.Nullable<System.Single> MinValue { get; set; }
		
		/// <summary>
		/// If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalMean")]
		public System.Nullable<System.Single> OriginalMean { get; set; }
		
		/// <summary>
		/// If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalStddev")]
		public System.Nullable<System.Single> OriginalStddev { get; set; }
	}
	
	/// <summary>
	/// Visualization configurations for image explanation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization
	{
		
		/// <summary>
		/// Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 62.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clipPercentLowerbound")]
		public System.Nullable<System.Single> ClipPercentLowerbound { get; set; }
		
		/// <summary>
		/// Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clipPercentUpperbound")]
		public System.Nullable<System.Single> ClipPercentUpperbound { get; set; }
		
		/// <summary>
		/// The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="colorMap")]
		public System.Nullable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap> ColorMap { get; set; }
		
		/// <summary>
		/// How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overlayType")]
		public System.Nullable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType> OverlayType { get; set; }
		
		/// <summary>
		/// Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="polarity")]
		public System.Nullable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity> Polarity { get; set; }
		
		/// <summary>
		/// Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COLOR_MAP_UNSPECIFIED")]
		COLOR_MAP_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PINK_GREEN")]
		PINK_GREEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIRIDIS")]
		VIRIDIS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RED")]
		RED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GREEN")]
		GREEN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RED_GREEN")]
		RED_GREEN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PINK_WHITE_GREEN")]
		PINK_WHITE_GREEN = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OVERLAY_TYPE_UNSPECIFIED")]
		OVERLAY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NONE")]
		NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ORIGINAL")]
		ORIGINAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GRAYSCALE")]
		GRAYSCALE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MASK_BLACK")]
		MASK_BLACK = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="POLARITY_UNSPECIFIED")]
		POLARITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="POSITIVE")]
		POSITIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEGATIVE")]
		NEGATIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOTH")]
		BOTH = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_UNSPECIFIED")]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIXELS")]
		PIXELS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUTLINES")]
		OUTLINES = 2,
	}
	
	/// <summary>
	/// Metadata of the prediction output to be explained.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
	{
		
		/// <summary>
		/// Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayNameMappingKey")]
		public string DisplayNameMappingKey { get; set; }
		
		/// <summary>
		/// Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexDisplayNameMapping")]
		public object IndexDisplayNameMapping { get; set; }
		
		/// <summary>
		/// Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputTensorName")]
		public string OutputTensorName { get; set; }
	}
	
	/// <summary>
	/// Parameters to configure explaining for Model's predictions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationParameters
	{
		
		/// <summary>
		/// Example-based explainability that returns the nearest neighbors from the provided dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="examples")]
		public GoogleCloudAiplatformV1Examples Examples { get; set; }
		
		/// <summary>
		/// An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integratedGradientsAttribution")]
		public GoogleCloudAiplatformV1IntegratedGradientsAttribution IntegratedGradientsAttribution { get; set; }
		
		/// <summary>
		/// If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputIndices")]
		public string[] OutputIndices { get; set; }
		
		/// <summary>
		/// An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampledShapleyAttribution")]
		public GoogleCloudAiplatformV1SampledShapleyAttribution SampledShapleyAttribution { get; set; }
		
		/// <summary>
		/// If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topK")]
		public System.Nullable<System.Int32> TopK { get; set; }
		
		/// <summary>
		/// An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xraiAttribution")]
		public GoogleCloudAiplatformV1XraiAttribution XraiAttribution { get; set; }
	}
	
	/// <summary>
	/// Example-based explainability that returns the nearest neighbors from the provided dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Examples
	{
		
		/// <summary>
		/// The Cloud Storage input instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exampleGcsSource")]
		public GoogleCloudAiplatformV1ExamplesExampleGcsSource ExampleGcsSource { get; set; }
		
		/// <summary>
		/// The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nearestNeighborSearchConfig")]
		public object NearestNeighborSearchConfig { get; set; }
		
		/// <summary>
		/// The number of neighbors to return when querying for examples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighborCount")]
		public System.Nullable<System.Int32> NeighborCount { get; set; }
		
		/// <summary>
		/// Preset configuration for example-based explanations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="presets")]
		public GoogleCloudAiplatformV1Presets Presets { get; set; }
	}
	
	/// <summary>
	/// The Cloud Storage input instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExamplesExampleGcsSource
	{
		
		/// <summary>
		/// The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataFormat")]
		public System.Nullable<GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat> DataFormat { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1GcsSource GcsSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_FORMAT_UNSPECIFIED")]
		DATA_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JSONL")]
		JSONL = 1,
	}
	
	/// <summary>
	/// Preset configuration for example-based explanations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Presets
	{
		
		/// <summary>
		/// The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modality")]
		public System.Nullable<GoogleCloudAiplatformV1PresetsModality> Modality { get; set; }
		
		/// <summary>
		/// Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public System.Nullable<GoogleCloudAiplatformV1PresetsQuery> Query { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PresetsModality
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODALITY_UNSPECIFIED")]
		MODALITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IMAGE")]
		IMAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TEXT")]
		TEXT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TABULAR")]
		TABULAR = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PresetsQuery
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRECISE")]
		PRECISE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAST")]
		FAST = 1,
	}
	
	/// <summary>
	/// An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IntegratedGradientsAttribution
	{
		
		/// <summary>
		/// Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blurBaselineConfig")]
		public GoogleCloudAiplatformV1BlurBaselineConfig BlurBaselineConfig { get; set; }
		
		/// <summary>
		/// Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smoothGradConfig")]
		public GoogleCloudAiplatformV1SmoothGradConfig SmoothGradConfig { get; set; }
		
		/// <summary>
		/// Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stepCount")]
		public System.Nullable<System.Int32> StepCount { get; set; }
	}
	
	/// <summary>
	/// Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BlurBaselineConfig
	{
		
		/// <summary>
		/// The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxBlurSigma")]
		public System.Nullable<System.Single> MaxBlurSigma { get; set; }
	}
	
	/// <summary>
	/// Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SmoothGradConfig
	{
		
		/// <summary>
		/// Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureNoiseSigma")]
		public GoogleCloudAiplatformV1FeatureNoiseSigma FeatureNoiseSigma { get; set; }
		
		/// <summary>
		/// This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noiseSigma")]
		public System.Nullable<System.Single> NoiseSigma { get; set; }
		
		/// <summary>
		/// The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noisySampleCount")]
		public System.Nullable<System.Int32> NoisySampleCount { get; set; }
	}
	
	/// <summary>
	/// Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureNoiseSigma
	{
		
		/// <summary>
		/// Noise sigma per feature. No noise is added to features that are not set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noiseSigma")]
		public GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature[] NoiseSigma { get; set; }
	}
	
	/// <summary>
	/// Noise sigma for a single feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature
	{
		
		/// <summary>
		/// The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sigma")]
		public System.Nullable<System.Single> Sigma { get; set; }
	}
	
	/// <summary>
	/// An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SampledShapleyAttribution
	{
		
		/// <summary>
		/// Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pathCount")]
		public System.Nullable<System.Int32> PathCount { get; set; }
	}
	
	/// <summary>
	/// An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1XraiAttribution
	{
		
		/// <summary>
		/// Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blurBaselineConfig")]
		public GoogleCloudAiplatformV1BlurBaselineConfig BlurBaselineConfig { get; set; }
		
		/// <summary>
		/// Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="smoothGradConfig")]
		public GoogleCloudAiplatformV1SmoothGradConfig SmoothGradConfig { get; set; }
		
		/// <summary>
		/// Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stepCount")]
		public System.Nullable<System.Int32> StepCount { get; set; }
	}
	
	/// <summary>
	/// Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchPredictionJobInputConfig
	{
		
		/// <summary>
		/// The BigQuery location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudAiplatformV1BigQuerySource BigquerySource { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1GcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Required. The format in which instances are given, must be one of the Model's supported_input_storage_formats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instancesFormat")]
		public string InstancesFormat { get; set; }
	}
	
	/// <summary>
	/// The BigQuery location for the input content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BigQuerySource
	{
		
		/// <summary>
		/// Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputUri")]
		public string InputUri { get; set; }
	}
	
	/// <summary>
	/// Configuration defining how to transform batch prediction input instances to the instances that the Model accepts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig
	{
		
		/// <summary>
		/// Fields that will be excluded in the prediction instance that is sent to the Model. Excluded will be attached to the batch prediction output if key_field is not specified. When excluded_fields is populated, included_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludedFields")]
		public string[] ExcludedFields { get; set; }
		
		/// <summary>
		/// Fields that will be included in the prediction instance that is sent to the Model. If instance_type is `array`, the order of field names in included_fields also determines the order of the values in the array. When included_fields is populated, excluded_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includedFields")]
		public string[] IncludedFields { get; set; }
		
		/// <summary>
		/// The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		/// <summary>
		/// The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyField")]
		public string KeyField { get; set; }
	}
	
	/// <summary>
	/// Manual batch tuning parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ManualBatchTuningParameters
	{
		
		/// <summary>
		/// Immutable. The number of the records (e.g. instances) of the operation given in each batch to a machine replica. Machine type, and size of a single record should be considered when setting this parameter, higher value speeds up the batch operation's execution, but too high value will result in a whole batch not fitting in a machine's memory, and the whole operation will fail. The default value is 64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batchSize")]
		public System.Nullable<System.Int32> BatchSize { get; set; }
	}
	
	/// <summary>
	/// Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchPredictionJobOutputConfig
	{
		
		/// <summary>
		/// The BigQuery location for the output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDestination")]
		public GoogleCloudAiplatformV1BigQueryDestination BigqueryDestination { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudAiplatformV1GcsDestination GcsDestination { get; set; }
		
		/// <summary>
		/// Required. The format in which Vertex AI gives the predictions, must be one of the Model's supported_output_storage_formats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionsFormat")]
		public string PredictionsFormat { get; set; }
	}
	
	/// <summary>
	/// The BigQuery location for the output content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BigQueryDestination
	{
		
		/// <summary>
		/// Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputUri")]
		public string OutputUri { get; set; }
	}
	
	/// <summary>
	/// The Google Cloud Storage location where the output is to be written to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GcsDestination
	{
		
		/// <summary>
		/// Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputUriPrefix")]
		public string OutputUriPrefix { get; set; }
	}
	
	/// <summary>
	/// Further describes this job's output. Supplements output_config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchPredictionJobOutputInfo
	{
		
		/// <summary>
		/// Output only. The path of the BigQuery dataset created, in `bq://projectId.bqDatasetId` format, into which the prediction output is written.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryOutputDataset")]
		public string BigqueryOutputDataset { get; set; }
		
		/// <summary>
		/// Output only. The name of the BigQuery table created, in `predictions_` format, into which the prediction output is written. Can be used by UI to generate the BigQuery output path, for example.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryOutputTable")]
		public string BigqueryOutputTable { get; set; }
		
		/// <summary>
		/// Output only. The full path of the Cloud Storage directory created, into which the prediction output is written.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsOutputDirectory")]
		public string GcsOutputDirectory { get; set; }
	}
	
	/// <summary>
	/// Statistics information about resource consumption.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ResourcesConsumed
	{
		
		/// <summary>
		/// Output only. The number of replica hours used. Note that many replicas may run in parallel, and additionally any given work may be queued for some time. Therefore this value is not strictly related to wall time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replicaHours")]
		public System.Nullable<System.Double> ReplicaHours { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1BatchPredictionJobState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_UNSPECIFIED")]
		JOB_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_QUEUED")]
		JOB_STATE_QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_PENDING")]
		JOB_STATE_PENDING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_RUNNING")]
		JOB_STATE_RUNNING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_SUCCEEDED")]
		JOB_STATE_SUCCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_FAILED")]
		JOB_STATE_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_CANCELLING")]
		JOB_STATE_CANCELLING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_CANCELLED")]
		JOB_STATE_CANCELLED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_PAUSED")]
		JOB_STATE_PAUSED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_EXPIRED")]
		JOB_STATE_EXPIRED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_UPDATING")]
		JOB_STATE_UPDATING = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JOB_STATE_PARTIALLY_SUCCEEDED")]
		JOB_STATE_PARTIALLY_SUCCEEDED = 11,
	}
	
	/// <summary>
	/// Contains model information necessary to perform batch prediction without requiring a full model import.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UnmanagedContainerModel
	{
		
		/// <summary>
		/// The path to the directory containing the Model artifact and any of its supporting files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactUri")]
		public string ArtifactUri { get; set; }
		
		/// <summary>
		/// Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerSpec")]
		public GoogleCloudAiplatformV1ModelContainerSpec ContainerSpec { get; set; }
		
		/// <summary>
		/// Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictSchemata")]
		public GoogleCloudAiplatformV1PredictSchemata PredictSchemata { get; set; }
	}
	
	/// <summary>
	/// Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelContainerSpec
	{
		
		/// <summary>
		/// Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`'s "default parameters" form. If you don't specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don't specify this field and don't specify the `command` field, then the container's [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD` determine what runs based on their default behavior. See the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		/// <summary>
		/// Immutable. Specifies the command that runs when the container starts. This overrides the container's [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you do not specify this field, then the container's `ENTRYPOINT` runs, in conjunction with the args field or the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container's `CMD` is ignored. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		/// <summary>
		/// Immutable. Deployment timeout. Limit for deployment timeout is 2 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentTimeout")]
		public string DeploymentTimeout { get; set; }
		
		/// <summary>
		/// Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="env")]
		public GoogleCloudAiplatformV1EnvVar[] Env { get; set; }
		
		/// <summary>
		/// Immutable. List of ports to expose from the container. Vertex AI sends gRPC prediction requests that it receives to the first port on this list. Vertex AI also sends liveness and health checks to this port. If you do not specify this field, gRPC requests to the container will be disabled. Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers v1 core API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="grpcPorts")]
		public GoogleCloudAiplatformV1Port[] GrpcPorts { get; set; }
		
		/// <summary>
		/// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthProbe")]
		public GoogleCloudAiplatformV1Probe HealthProbe { get; set; }
		
		/// <summary>
		/// Immutable. HTTP path on the container to send health checks to. Vertex AI intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health). For example, if you set this field to `/bar`, then Vertex AI intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthRoute")]
		public string HealthRoute { get; set; }
		
		/// <summary>
		/// Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the [container publishing requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing), including permissions requirements for the Vertex AI Service Agent. The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#). You can use the URI to one of Vertex AI's [pre-built container images for prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers) in this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageUri")]
		public string ImageUri { get; set; }
		
		/// <summary>
		/// Immutable. List of ports to expose from the container. Vertex AI sends any prediction requests that it receives to the first port on this list. Vertex AI also sends [liveness and health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness) to this port. If you do not specify this field, it defaults to following value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ports")]
		public GoogleCloudAiplatformV1Port[] Ports { get; set; }
		
		/// <summary>
		/// Immutable. HTTP path on the container to send prediction requests to. Vertex AI forwards requests sent using projects.locations.endpoints.predict to this path on the container's IP address and port. Vertex AI then returns the container's response in the API response. For example, if you set this field to `/foo`, then when Vertex AI receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictRoute")]
		public string PredictRoute { get; set; }
		
		/// <summary>
		/// Immutable. The amount of the VM memory to reserve as the shared memory for the model in megabytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedMemorySizeMb")]
		public string SharedMemorySizeMb { get; set; }
		
		/// <summary>
		/// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startupProbe")]
		public GoogleCloudAiplatformV1Probe StartupProbe { get; set; }
	}
	
	/// <summary>
	/// Represents an environment variable present in a Container or Python Module.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1EnvVar
	{
		
		/// <summary>
		/// Required. Name of the environment variable. Must be a valid C identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Represents a network port in a container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Port
	{
		
		/// <summary>
		/// The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerPort")]
		public System.Nullable<System.Int32> ContainerPort { get; set; }
	}
	
	/// <summary>
	/// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Probe
	{
		
		/// <summary>
		/// ExecAction specifies a command to execute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exec")]
		public GoogleCloudAiplatformV1ProbeExecAction Exec { get; set; }
		
		/// <summary>
		/// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeout_seconds. Maps to Kubernetes probe argument 'periodSeconds'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="periodSeconds")]
		public System.Nullable<System.Int32> PeriodSeconds { get; set; }
		
		/// <summary>
		/// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to period_seconds. Maps to Kubernetes probe argument 'timeoutSeconds'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeoutSeconds")]
		public System.Nullable<System.Int32> TimeoutSeconds { get; set; }
	}
	
	/// <summary>
	/// ExecAction specifies a command to execute.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ProbeExecAction
	{
		
		/// <summary>
		/// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
	}
	
	/// <summary>
	/// Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PredictSchemata
	{
		
		/// <summary>
		/// Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceSchemaUri")]
		public string InstanceSchemaUri { get; set; }
		
		/// <summary>
		/// Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parametersSchemaUri")]
		public string ParametersSchemaUri { get; set; }
		
		/// <summary>
		/// Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionSchemaUri")]
		public string PredictionSchemaUri { get; set; }
	}
	
	/// <summary>
	/// Details of operations that batch reads Feature values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreService.BatchReadFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchReadFeatureValuesRequest
	{
		
		/// <summary>
		/// The BigQuery location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryReadInstances")]
		public GoogleCloudAiplatformV1BigQuerySource BigqueryReadInstances { get; set; }
		
		/// <summary>
		/// The storage details for CSV input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvReadInstances")]
		public GoogleCloudAiplatformV1CsvSource CsvReadInstances { get; set; }
		
		/// <summary>
		/// A destination location for Feature values and format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public GoogleCloudAiplatformV1FeatureValueDestination Destination { get; set; }
		
		/// <summary>
		/// Required. Specifies EntityType grouping Features to read values of and settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityTypeSpecs")]
		public GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec[] EntityTypeSpecs { get; set; }
		
		/// <summary>
		/// When not empty, the specified fields in the *_read_instances source will be joined as-is in the output, in addition to those fields from the Featurestore Entity. For BigQuery source, the type of the pass-through values will be automatically inferred. For CSV source, the pass-through values will be passed as opaque bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passThroughFields")]
		public GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField[] PassThroughFields { get; set; }
		
		/// <summary>
		/// Optional. Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// The storage details for CSV input content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CsvSource
	{
		
		/// <summary>
		/// The Google Cloud Storage location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1GcsSource GcsSource { get; set; }
	}
	
	/// <summary>
	/// A destination location for Feature values and format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureValueDestination
	{
		
		/// <summary>
		/// The BigQuery location for the output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDestination")]
		public GoogleCloudAiplatformV1BigQueryDestination BigqueryDestination { get; set; }
		
		/// <summary>
		/// The storage details for CSV output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvDestination")]
		public GoogleCloudAiplatformV1CsvDestination CsvDestination { get; set; }
		
		/// <summary>
		/// The storage details for TFRecord output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tfrecordDestination")]
		public GoogleCloudAiplatformV1TFRecordDestination TfrecordDestination { get; set; }
	}
	
	/// <summary>
	/// The storage details for CSV output content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CsvDestination
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudAiplatformV1GcsDestination GcsDestination { get; set; }
	}
	
	/// <summary>
	/// The storage details for TFRecord output content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TFRecordDestination
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudAiplatformV1GcsDestination GcsDestination { get; set; }
	}
	
	/// <summary>
	/// Selects Features of an EntityType to read values of and specifies read settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec
	{
		
		/// <summary>
		/// Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityTypeId")]
		public string EntityTypeId { get; set; }
		
		/// <summary>
		/// Selector for Features of an EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureSelector")]
		public GoogleCloudAiplatformV1FeatureSelector FeatureSelector { get; set; }
		
		/// <summary>
		/// Per-Feature settings for the batch read.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GoogleCloudAiplatformV1DestinationFeatureSetting[] Settings { get; set; }
	}
	
	/// <summary>
	/// Selector for Features of an EntityType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureSelector
	{
		
		/// <summary>
		/// Matcher for Features of an EntityType by Feature ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idMatcher")]
		public GoogleCloudAiplatformV1IdMatcher IdMatcher { get; set; }
	}
	
	/// <summary>
	/// Matcher for Features of an EntityType by Feature ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IdMatcher
	{
		
		/// <summary>
		/// Required. The following are accepted as `ids`: * A single-element list containing only `*`, which selects all Features in the target EntityType, or * A list containing only Feature IDs, which selects only Features with those IDs in the target EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DestinationFeatureSetting
	{
		
		/// <summary>
		/// Specify the field name in the export destination. If not specified, Feature ID is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationField")]
		public string DestinationField { get; set; }
		
		/// <summary>
		/// Required. The ID of the Feature to apply the setting to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureId")]
		public string FeatureId { get; set; }
	}
	
	/// <summary>
	/// Describe pass-through fields in read_instance source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField
	{
		
		/// <summary>
		/// Required. The name of the field in the CSV header or the name of the column in BigQuery table. The naming restriction is the same as Feature.name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldName")]
		public string FieldName { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.BatchReadFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchReadFeatureValuesResponse
	{
	}
	
	/// <summary>
	/// Response message for TensorboardService.BatchReadTensorboardTimeSeriesData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse
	{
		
		/// <summary>
		/// The returned time series data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesData")]
		public GoogleCloudAiplatformV1TimeSeriesData[] TimeSeriesData { get; set; }
	}
	
	/// <summary>
	/// All the data stored in a TensorboardTimeSeries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TimeSeriesData
	{
		
		/// <summary>
		/// Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardTimeSeriesId")]
		public string TensorboardTimeSeriesId { get; set; }
		
		/// <summary>
		/// Required. Immutable. The value type of this time series. All the values in this time series data must match this value type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueType")]
		public GoogleCloudAiplatformV1TensorboardTimeSeriesValueType ValueType { get; set; }
		
		/// <summary>
		/// Required. Data points in this time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudAiplatformV1TimeSeriesDataPoint[] Values { get; set; }
	}
	
	/// <summary>
	/// A TensorboardTimeSeries data point.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TimeSeriesDataPoint
	{
		
		/// <summary>
		/// One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can't be used directly within `oneof` fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobs")]
		public GoogleCloudAiplatformV1TensorboardBlobSequence Blobs { get; set; }
		
		/// <summary>
		/// One point viewable on a scalar metric plot.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scalar")]
		public GoogleCloudAiplatformV1Scalar Scalar { get; set; }
		
		/// <summary>
		/// Step index of this data point within the run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="step")]
		public string Step { get; set; }
		
		/// <summary>
		/// One point viewable on a tensor metric plot.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensor")]
		public GoogleCloudAiplatformV1TensorboardTensor Tensor { get; set; }
		
		/// <summary>
		/// Wall clock timestamp when this data point is generated by the end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wallTime")]
		public string WallTime { get; set; }
	}
	
	/// <summary>
	/// One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can't be used directly within `oneof` fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardBlobSequence
	{
		
		/// <summary>
		/// List of blobs contained within the sequence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudAiplatformV1TensorboardBlob[] Values { get; set; }
	}
	
	/// <summary>
	/// One blob (e.g, image, graph) viewable on a blob metric plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardBlob
	{
		
		/// <summary>
		/// Optional. The bytes of the blob is not present unless it's returned by the ReadTensorboardBlobData endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Output only. A URI safe key uniquely identifying a blob. Can be used to locate the blob stored in the Cloud Storage bucket of the consumer project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// One point viewable on a scalar metric plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Scalar
	{
		
		/// <summary>
		/// Value of the point at this step / timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// One point viewable on a tensor metric plot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardTensor
	{
		
		/// <summary>
		/// Required. Serialized form of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		/// <summary>
		/// Optional. Version number of TensorProto used to serialize value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionNumber")]
		public System.Nullable<System.Int32> VersionNumber { get; set; }
	}
	
	/// <summary>
	/// Raw media bytes. Text should not be sent as raw bytes, use the 'text' field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Blob
	{
		
		/// <summary>
		/// Required. Raw bytes for media formats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Required. The IANA standard MIME type of the source data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// A list of boolean values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1BoolArray
	{
		
		/// <summary>
		/// A list of bool values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public bool[] Values { get; set; }
	}
	
	/// <summary>
	/// Request message for JobService.CancelBatchPredictionJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelBatchPredictionJobRequest
	{
	}
	
	/// <summary>
	/// Request message for JobService.CancelCustomJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelCustomJobRequest
	{
	}
	
	/// <summary>
	/// Request message for JobService.CancelDataLabelingJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelDataLabelingJobRequest
	{
	}
	
	/// <summary>
	/// Request message for JobService.CancelHyperparameterTuningJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest
	{
	}
	
	/// <summary>
	/// Request message for JobService.CancelNasJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelNasJobRequest
	{
	}
	
	/// <summary>
	/// Request message for PipelineService.CancelPipelineJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelPipelineJobRequest
	{
	}
	
	/// <summary>
	/// Request message for PipelineService.CancelTrainingPipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CancelTrainingPipelineRequest
	{
	}
	
	/// <summary>
	/// A response candidate generated from the model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Candidate
	{
		
		/// <summary>
		/// A collection of source attributions for a piece of content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="citationMetadata")]
		public GoogleCloudAiplatformV1CitationMetadata CitationMetadata { get; set; }
		
		/// <summary>
		/// The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public GoogleCloudAiplatformV1Content Content { get; set; }
		
		/// <summary>
		/// Output only. Describes the reason the mode stopped generating tokens in more detail. This is only filled when `finish_reason` is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finishMessage")]
		public string FinishMessage { get; set; }
		
		/// <summary>
		/// Output only. The reason why the model stopped generating tokens. If empty, the model has not stopped generating the tokens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finishReason")]
		public System.Nullable<GoogleCloudAiplatformV1CandidateFinishReason> FinishReason { get; set; }
		
		/// <summary>
		/// Output only. Index of the candidate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
		
		/// <summary>
		/// Output only. List of ratings for the safety of a response candidate. There is at most one rating per category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyRatings")]
		public GoogleCloudAiplatformV1SafetyRating[] SafetyRatings { get; set; }
	}
	
	/// <summary>
	/// A collection of source attributions for a piece of content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CitationMetadata
	{
		
		/// <summary>
		/// Output only. List of citations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="citations")]
		public GoogleCloudAiplatformV1Citation[] Citations { get; set; }
	}
	
	/// <summary>
	/// Source attributions for content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Citation
	{
		
		/// <summary>
		/// Output only. End index into the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public System.Nullable<System.Int32> EndIndex { get; set; }
		
		/// <summary>
		/// Output only. License of the attribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="license")]
		public string License { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicationDate")]
		public GoogleTypeDate PublicationDate { get; set; }
		
		/// <summary>
		/// Output only. Start index into the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
		
		/// <summary>
		/// Output only. Title of the attribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Output only. Url reference of the attribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Content
	{
		
		/// <summary>
		/// Required. Ordered `Parts` that constitute a single message. Parts may have different IANA MIME types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parts")]
		public GoogleCloudAiplatformV1Part[] Parts { get; set; }
		
		/// <summary>
		/// Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// A datatype containing media that is part of a multi-part `Content` message. A `Part` consists of data which has an associated datatype. A `Part` can only contain one of the accepted types in `Part.data`. A `Part` must have a fixed IANA MIME type identifying the type and subtype of the media if `inline_data` or `file_data` field is filled with raw bytes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Part
	{
		
		/// <summary>
		/// URI based data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileData")]
		public GoogleCloudAiplatformV1FileData FileData { get; set; }
		
		/// <summary>
		/// A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing the parameters and their values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionCall")]
		public GoogleCloudAiplatformV1FunctionCall FunctionCall { get; set; }
		
		/// <summary>
		/// The result output from a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function is used as context to the model. This should contain the result of a [FunctionCall] made based on model prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionResponse")]
		public GoogleCloudAiplatformV1FunctionResponse FunctionResponse { get; set; }
		
		/// <summary>
		/// Raw media bytes. Text should not be sent as raw bytes, use the 'text' field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineData")]
		public GoogleCloudAiplatformV1Blob InlineData { get; set; }
		
		/// <summary>
		/// Optional. Text part (can be code).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Metadata describes the input video content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoMetadata")]
		public GoogleCloudAiplatformV1VideoMetadata VideoMetadata { get; set; }
	}
	
	/// <summary>
	/// URI based data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FileData
	{
		
		/// <summary>
		/// Required. URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileUri")]
		public string FileUri { get; set; }
		
		/// <summary>
		/// Required. The IANA standard MIME type of the source data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing the parameters and their values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FunctionCall
	{
		
		/// <summary>
		/// Optional. Required. The function parameters and values in JSON object format. See [FunctionDeclaration.parameters] for parameter details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public System.Collections.Generic.Dictionary<string, object> Args { get; set; }
		
		/// <summary>
		/// Required. The name of the function to call. Matches [FunctionDeclaration.name].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The result output from a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function is used as context to the model. This should contain the result of a [FunctionCall] made based on model prediction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FunctionResponse
	{
		
		/// <summary>
		/// Required. The name of the function to call. Matches [FunctionDeclaration.name] and [FunctionCall.name].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The function response in JSON object format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// Metadata describes the input video content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1VideoMetadata
	{
		
		/// <summary>
		/// Optional. The end offset of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOffset")]
		public string EndOffset { get; set; }
		
		/// <summary>
		/// Optional. The start offset of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOffset")]
		public string StartOffset { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1CandidateFinishReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FINISH_REASON_UNSPECIFIED")]
		FINISH_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STOP")]
		STOP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MAX_TOKENS")]
		MAX_TOKENS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAFETY")]
		SAFETY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECITATION")]
		RECITATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OTHER")]
		OTHER = 5,
	}
	
	/// <summary>
	/// Safety rating corresponding to the generated content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SafetyRating
	{
		
		/// <summary>
		/// Output only. Indicates whether the content was filtered out because of this rating.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blocked")]
		public System.Nullable<System.Boolean> Blocked { get; set; }
		
		/// <summary>
		/// Output only. Harm category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public CloudAiNlLlmProtoServiceSafetyRatingCategory Category { get; set; }
		
		/// <summary>
		/// Output only. Harm probability levels in the content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="probability")]
		public CloudAiNlLlmProtoServiceSafetyRatingProbability Probability { get; set; }
	}
	
	/// <summary>
	/// This message will be placed in the metadata field of a google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// The name of the Study that the Trial belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="study")]
		public string Study { get; set; }
		
		/// <summary>
		/// The Trial name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trial")]
		public string Trial { get; set; }
	}
	
	/// <summary>
	/// Request message for VizierService.CheckTrialEarlyStoppingState.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest
	{
	}
	
	/// <summary>
	/// Response message for VizierService.CheckTrialEarlyStoppingState.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse
	{
		
		/// <summary>
		/// True if the Trial should stop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shouldStop")]
		public System.Nullable<System.Boolean> ShouldStop { get; set; }
	}
	
	/// <summary>
	/// Request message for VizierService.CompleteTrial.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CompleteTrialRequest
	{
		
		/// <summary>
		/// A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalMeasurement")]
		public GoogleCloudAiplatformV1Measurement FinalMeasurement { get; set; }
		
		/// <summary>
		/// Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infeasibleReason")]
		public string InfeasibleReason { get; set; }
		
		/// <summary>
		/// Optional. True if the Trial cannot be run with the given Parameter, and final_measurement will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trialInfeasible")]
		public System.Nullable<System.Boolean> TrialInfeasible { get; set; }
	}
	
	/// <summary>
	/// Request message for ComputeTokens RPC call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ComputeTokensRequest
	{
		
		/// <summary>
		/// Required. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public string[] Instances { get; set; }
	}
	
	/// <summary>
	/// Response message for ComputeTokens RPC call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ComputeTokensResponse
	{
		
		/// <summary>
		/// Lists of tokens info from the input. A ComputeTokensRequest could have multiple instances with a prompt in each instance. We also need to return lists of tokens info for the request with multiple instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokensInfo")]
		public GoogleCloudAiplatformV1TokensInfo[] TokensInfo { get; set; }
	}
	
	/// <summary>
	/// Tokens info with a list of tokens and the corresponding list of token ids.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TokensInfo
	{
		
		/// <summary>
		/// A list of token ids from the input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokenIds")]
		public string[] TokenIds { get; set; }
		
		/// <summary>
		/// A list of tokens from the input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tokens")]
		public string[] Tokens { get; set; }
	}
	
	/// <summary>
	/// The Container Registry location for the container image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ContainerRegistryDestination
	{
		
		/// <summary>
		/// Required. Container Registry URI of a container image. Only Google Container Registry and Artifact Registry are supported now. Accepted forms: * Google Container Registry path. For example: `gcr.io/projectId/imageName:tag`. * Artifact Registry path. For example: `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a tag is not specified, "latest" will be used as the default tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputUri")]
		public string OutputUri { get; set; }
	}
	
	/// <summary>
	/// The spec of a Container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ContainerSpec
	{
		
		/// <summary>
		/// The arguments to be passed when starting the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		/// <summary>
		/// The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		/// <summary>
		/// Environment variables to be passed to the container. Maximum limit is 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="env")]
		public GoogleCloudAiplatformV1EnvVar[] Env { get; set; }
		
		/// <summary>
		/// Required. The URI of a container image in the Container Registry that is to be run on each worker replica.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageUri")]
		public string ImageUri { get; set; }
	}
	
	/// <summary>
	/// Instance of a general context.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Context
	{
		
		/// <summary>
		/// Output only. Timestamp when this Context was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the Context
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// User provided display name of the Context. May be up to 128 Unicode characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the Context.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentContexts")]
		public string[] ParentContexts { get; set; }
		
		/// <summary>
		/// The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaTitle")]
		public string SchemaTitle { get; set; }
		
		/// <summary>
		/// The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaVersion")]
		public string SchemaVersion { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Context was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Details of ModelService.CopyModel operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CopyModelOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.CopyModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CopyModelRequest
	{
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModel")]
		public string ParentModel { get; set; }
		
		/// <summary>
		/// Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceModel")]
		public string SourceModel { get; set; }
	}
	
	/// <summary>
	/// Response message of ModelService.CopyModel operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CopyModelResponse
	{
		
		/// <summary>
		/// The name of the copied Model resource. Format: `projects/{project}/locations/{location}/models/{model}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Output only. The version ID of the model that is copied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersionId")]
		public string ModelVersionId { get; set; }
	}
	
	/// <summary>
	/// Request message for PredictionService.CountTokens.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CountTokensRequest
	{
		
		/// <summary>
		/// Required. Input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public GoogleCloudAiplatformV1Content[] Contents { get; set; }
		
		/// <summary>
		/// Required. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public string[] Instances { get; set; }
		
		/// <summary>
		/// Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
	}
	
	/// <summary>
	/// Response message for PredictionService.CountTokens.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CountTokensResponse
	{
		
		/// <summary>
		/// The total number of billable characters counted across all instances from the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalBillableCharacters")]
		public System.Nullable<System.Int32> TotalBillableCharacters { get; set; }
		
		/// <summary>
		/// The total number of tokens counted across all instances from the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalTokens")]
		public System.Nullable<System.Int32> TotalTokens { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for DatasetService.CreateDataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateDatasetOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for DatasetService.CreateDatasetVersion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for CreateDeploymentResourcePool method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateDeploymentResourcePoolOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for CreateDeploymentResourcePool method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest
	{
		
		/// <summary>
		/// A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentResourcePool")]
		public GoogleCloudAiplatformV1DeploymentResourcePool DeploymentResourcePool { get; set; }
		
		/// <summary>
		/// Required. The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentResourcePoolId")]
		public string DeploymentResourcePoolId { get; set; }
	}
	
	/// <summary>
	/// A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeploymentResourcePool
	{
		
		/// <summary>
		/// Output only. Timestamp when this DeploymentResourcePool was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dedicatedResources")]
		public GoogleCloudAiplatformV1DedicatedResources DedicatedResources { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DedicatedResources
	{
		
		/// <summary>
		/// Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator's duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator's duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autoscalingMetricSpecs")]
		public GoogleCloudAiplatformV1AutoscalingMetricSpec[] AutoscalingMetricSpecs { get; set; }
		
		/// <summary>
		/// Specification of a single machine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineSpec")]
		public GoogleCloudAiplatformV1MachineSpec MachineSpec { get; set; }
		
		/// <summary>
		/// Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxReplicaCount")]
		public System.Nullable<System.Int32> MaxReplicaCount { get; set; }
		
		/// <summary>
		/// Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minReplicaCount")]
		public System.Nullable<System.Int32> MinReplicaCount { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for EndpointService.CreateEndpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateEndpointOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create EntityType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create FeatureGroup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateFeatureGroupOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create FeatureOnlineStore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateFeatureOnlineStoreOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create Feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateFeatureOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create FeatureView.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateFeatureViewOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create Featurestore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for IndexEndpointService.CreateIndexEndpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for IndexService.CreateIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateIndexOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// Runtime operation metadata with regard to Matching Engine Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nearestNeighborSearchOperationMetadata")]
		public GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata NearestNeighborSearchOperationMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation metadata with regard to Matching Engine Index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata
	{
		
		/// <summary>
		/// The validation stats of the content (per file) to be inserted or updated on the Matching Engine Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentValidationStats")]
		public GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats[] ContentValidationStats { get; set; }
		
		/// <summary>
		/// The ingested data size in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataBytesCount")]
		public string DataBytesCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats
	{
		
		/// <summary>
		/// Number of records in this file we skipped due to validate errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidRecordCount")]
		public string InvalidRecordCount { get; set; }
		
		/// <summary>
		/// The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partialErrors")]
		public GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError[] PartialErrors { get; set; }
		
		/// <summary>
		/// Cloud Storage URI pointing to the original file in user's bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceGcsUri")]
		public string SourceGcsUri { get; set; }
		
		/// <summary>
		/// Number of records in this file that were successfully processed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validRecordCount")]
		public string ValidRecordCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError
	{
		
		/// <summary>
		/// Empty if the embedding id is failed to parse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="embeddingId")]
		public string EmbeddingId { get; set; }
		
		/// <summary>
		/// A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
		
		/// <summary>
		/// The error type of this record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorType")]
		public System.Nullable<GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordErrorErrorType> ErrorType { get; set; }
		
		/// <summary>
		/// The original content of this record.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawRecord")]
		public string RawRecord { get; set; }
		
		/// <summary>
		/// Cloud Storage URI pointing to the original file in user's bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceGcsUri")]
		public string SourceGcsUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordErrorErrorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ERROR_TYPE_UNSPECIFIED")]
		ERROR_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EMPTY_LINE")]
		EMPTY_LINE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_JSON_SYNTAX")]
		INVALID_JSON_SYNTAX = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_CSV_SYNTAX")]
		INVALID_CSV_SYNTAX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_AVRO_SYNTAX")]
		INVALID_AVRO_SYNTAX = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_EMBEDDING_ID")]
		INVALID_EMBEDDING_ID = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EMBEDDING_SIZE_MISMATCH")]
		EMBEDDING_SIZE_MISMATCH = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NAMESPACE_MISSING")]
		NAMESPACE_MISSING = 7,
	}
	
	/// <summary>
	/// Details of operations that perform MetadataService.CreateMetadataStore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Metadata information for NotebookService.CreateNotebookRuntimeTemplate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateNotebookRuntimeTemplateOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for PipelineService.CreatePipelineJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreatePipelineJobRequest
	{
		
		/// <summary>
		/// Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// An instance of a machine learning PipelineJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineJob")]
		public GoogleCloudAiplatformV1PipelineJob PipelineJob { get; set; }
		
		/// <summary>
		/// The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineJobId")]
		public string PipelineJobId { get; set; }
	}
	
	/// <summary>
	/// An instance of a machine learning PipelineJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineJob
	{
		
		/// <summary>
		/// Output only. Pipeline creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. Pipeline end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// The runtime detail of PipelineJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobDetail")]
		public GoogleCloudAiplatformV1PipelineJobDetail JobDetail { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the PipelineJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The spec of the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineSpec")]
		public System.Collections.Generic.Dictionary<string, object> PipelineSpec { get; set; }
		
		/// <summary>
		/// A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job's workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reservedIpRanges")]
		public string[] ReservedIpRanges { get; set; }
		
		/// <summary>
		/// The runtime config of a PipelineJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeConfig")]
		public GoogleCloudAiplatformV1PipelineJobRuntimeConfig RuntimeConfig { get; set; }
		
		/// <summary>
		/// Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleName")]
		public string ScheduleName { get; set; }
		
		/// <summary>
		/// The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Output only. Pipeline start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1PipelineJobState> State { get; set; }
		
		/// <summary>
		/// Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateMetadata")]
		public GoogleCloudAiplatformV1PipelineTemplateMetadata TemplateMetadata { get; set; }
		
		/// <summary>
		/// A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templateUri")]
		public string TemplateUri { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this PipelineJob was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The runtime detail of PipelineJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineJobDetail
	{
		
		/// <summary>
		/// Instance of a general context.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineContext")]
		public GoogleCloudAiplatformV1Context PipelineContext { get; set; }
		
		/// <summary>
		/// Instance of a general context.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineRunContext")]
		public GoogleCloudAiplatformV1Context PipelineRunContext { get; set; }
		
		/// <summary>
		/// Output only. The runtime details of the tasks under the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taskDetails")]
		public GoogleCloudAiplatformV1PipelineTaskDetail[] TaskDetails { get; set; }
	}
	
	/// <summary>
	/// The runtime detail of a task execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTaskDetail
	{
		
		/// <summary>
		/// Output only. Task create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Task end time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Instance of a general execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution")]
		public GoogleCloudAiplatformV1Execution Execution { get; set; }
		
		/// <summary>
		/// The runtime detail of a pipeline executor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executorDetail")]
		public GoogleCloudAiplatformV1PipelineTaskExecutorDetail ExecutorDetail { get; set; }
		
		/// <summary>
		/// Output only. The runtime input artifacts of the task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1PipelineTaskDetailArtifactList> Inputs { get; set; }
		
		/// <summary>
		/// Output only. The runtime output artifacts of the task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputs")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1PipelineTaskDetailArtifactList> Outputs { get; set; }
		
		/// <summary>
		/// Output only. The id of the parent task if the task is within a component scope. Empty if the task is at the root level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentTaskId")]
		public string ParentTaskId { get; set; }
		
		/// <summary>
		/// Output only. A list of task status. This field keeps a record of task status evolving over time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineTaskStatus")]
		public GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus[] PipelineTaskStatus { get; set; }
		
		/// <summary>
		/// Output only. Task start time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. State of the task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatusState State { get; set; }
		
		/// <summary>
		/// Output only. The system generated ID of the task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taskId")]
		public string TaskId { get; set; }
		
		/// <summary>
		/// Output only. The user specified name of the task that is defined in pipeline_spec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taskName")]
		public string TaskName { get; set; }
	}
	
	/// <summary>
	/// Instance of a general execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Execution
	{
		
		/// <summary>
		/// Output only. Timestamp when this Execution was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the Execution
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// User provided display name of the Execution. May be up to 128 Unicode characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaTitle")]
		public string SchemaTitle { get; set; }
		
		/// <summary>
		/// The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaVersion")]
		public string SchemaVersion { get; set; }
		
		/// <summary>
		/// The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1ExecutionState> State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Execution was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExecutionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEW")]
		NEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUNNING")]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMPLETE")]
		COMPLETE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILED")]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CACHED")]
		CACHED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CANCELLED")]
		CANCELLED = 6,
	}
	
	/// <summary>
	/// The runtime detail of a pipeline executor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTaskExecutorDetail
	{
		
		/// <summary>
		/// The detail of a container execution. It contains the job names of the lifecycle of a container execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerDetail")]
		public GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail ContainerDetail { get; set; }
		
		/// <summary>
		/// The detailed info for a custom job executor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customJobDetail")]
		public GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail CustomJobDetail { get; set; }
	}
	
	/// <summary>
	/// The detail of a container execution. It contains the job names of the lifecycle of a container execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail
	{
		
		/// <summary>
		/// Output only. The names of the previously failed CustomJob for the main container executions. The list includes the all attempts in chronological order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedMainJobs")]
		public string[] FailedMainJobs { get; set; }
		
		/// <summary>
		/// Output only. The names of the previously failed CustomJob for the pre-caching-check container executions. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. The list includes the all attempts in chronological order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedPreCachingCheckJobs")]
		public string[] FailedPreCachingCheckJobs { get; set; }
		
		/// <summary>
		/// Output only. The name of the CustomJob for the main container execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mainJob")]
		public string MainJob { get; set; }
		
		/// <summary>
		/// Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preCachingCheckJob")]
		public string PreCachingCheckJob { get; set; }
	}
	
	/// <summary>
	/// The detailed info for a custom job executor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail
	{
		
		/// <summary>
		/// Output only. The names of the previously failed CustomJob. The list includes the all attempts in chronological order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedJobs")]
		public string[] FailedJobs { get; set; }
		
		/// <summary>
		/// Output only. The name of the CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
	}
	
	/// <summary>
	/// A list of artifact metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTaskDetailArtifactList
	{
		
		/// <summary>
		/// Output only. A list of artifact metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifacts")]
		public GoogleCloudAiplatformV1Artifact[] Artifacts { get; set; }
	}
	
	/// <summary>
	/// A single record of the task status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus
	{
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Output only. The state of the task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatusState> State { get; set; }
		
		/// <summary>
		/// Output only. Update time of this status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PENDING")]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUNNING")]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SUCCEEDED")]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CANCEL_PENDING")]
		CANCEL_PENDING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CANCELLING")]
		CANCELLING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CANCELLED")]
		CANCELLED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILED")]
		FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SKIPPED")]
		SKIPPED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_TRIGGERED")]
		NOT_TRIGGERED = 9,
	}
	
	/// <summary>
	/// The runtime config of a PipelineJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineJobRuntimeConfig
	{
		
		/// <summary>
		/// Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failurePolicy")]
		public System.Nullable<GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy> FailurePolicy { get; set; }
		
		/// <summary>
		/// Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsOutputDirectory")]
		public string GcsOutputDirectory { get; set; }
		
		/// <summary>
		/// The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputArtifacts")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact> InputArtifacts { get; set; }
		
		/// <summary>
		/// The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterValues")]
		public System.Collections.Generic.Dictionary<string, object> ParameterValues { get; set; }
		
		/// <summary>
		/// Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1Value> Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_FAILURE_POLICY_UNSPECIFIED")]
		PIPELINE_FAILURE_POLICY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_FAILURE_POLICY_FAIL_SLOW")]
		PIPELINE_FAILURE_POLICY_FAIL_SLOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_FAILURE_POLICY_FAIL_FAST")]
		PIPELINE_FAILURE_POLICY_FAIL_FAST = 2,
	}
	
	/// <summary>
	/// The type of an input artifact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact
	{
		
		/// <summary>
		/// Artifact resource id from MLMD. Which is the last portion of an artifact resource name: `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`. The artifact must stay within the same project, location and default metadatastore as the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactId")]
		public string ArtifactId { get; set; }
	}
	
	/// <summary>
	/// Value is the value of the field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Value
	{
		
		/// <summary>
		/// A double value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// An integer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intValue")]
		public string IntValue { get; set; }
		
		/// <summary>
		/// A string value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PipelineJobState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_UNSPECIFIED")]
		PIPELINE_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_QUEUED")]
		PIPELINE_STATE_QUEUED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_PENDING")]
		PIPELINE_STATE_PENDING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_RUNNING")]
		PIPELINE_STATE_RUNNING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_SUCCEEDED")]
		PIPELINE_STATE_SUCCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_FAILED")]
		PIPELINE_STATE_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_CANCELLING")]
		PIPELINE_STATE_CANCELLING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_CANCELLED")]
		PIPELINE_STATE_CANCELLED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PIPELINE_STATE_PAUSED")]
		PIPELINE_STATE_PAUSED = 8,
	}
	
	/// <summary>
	/// Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PipelineTemplateMetadata
	{
		
		/// <summary>
		/// The version_name in artifact registry. Will always be presented in output if the PipelineJob.template_uri is from supported template registry. Format is "sha256:abcdef123456...".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create FeatureGroup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateRegistryFeatureOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for SpecialistPoolService.CreateSpecialistPool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform create Tensorboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CreateTensorboardOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CustomJob
	{
		
		/// <summary>
		/// Output only. Time when the CustomJob was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Represents the spec of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobSpec")]
		public GoogleCloudAiplatformV1CustomJobSpec JobSpec { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Resource name of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1BatchPredictionJobState State { get; set; }
		
		/// <summary>
		/// Output only. Time when the CustomJob was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webAccessUris")]
		public System.Collections.Generic.Dictionary<string, string> WebAccessUris { get; set; }
	}
	
	/// <summary>
	/// Represents the spec of a CustomJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1CustomJobSpec
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseOutputDirectory")]
		public GoogleCloudAiplatformV1GcsDestination BaseOutputDirectory { get; set; }
		
		/// <summary>
		/// Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableDashboardAccess")]
		public System.Nullable<System.Boolean> EnableDashboardAccess { get; set; }
		
		/// <summary>
		/// Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableWebAccess")]
		public System.Nullable<System.Boolean> EnableWebAccess { get; set; }
		
		/// <summary>
		/// Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="experiment")]
		public string Experiment { get; set; }
		
		/// <summary>
		/// Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="experimentRun")]
		public string ExperimentRun { get; set; }
		
		/// <summary>
		/// Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the "default" version will be returned. The "default" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="models")]
		public string[] Models { get; set; }
		
		/// <summary>
		/// Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protectedArtifactLocationId")]
		public string ProtectedArtifactLocationId { get; set; }
		
		/// <summary>
		/// Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reservedIpRanges")]
		public string[] ReservedIpRanges { get; set; }
		
		/// <summary>
		/// All parameters related to queuing and scheduling of custom jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduling")]
		public GoogleCloudAiplatformV1Scheduling Scheduling { get; set; }
		
		/// <summary>
		/// Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboard")]
		public string Tensorboard { get; set; }
		
		/// <summary>
		/// Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerPoolSpecs")]
		public GoogleCloudAiplatformV1WorkerPoolSpec[] WorkerPoolSpecs { get; set; }
	}
	
	/// <summary>
	/// All parameters related to queuing and scheduling of custom jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Scheduling
	{
		
		/// <summary>
		/// Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableRetries")]
		public System.Nullable<System.Boolean> DisableRetries { get; set; }
		
		/// <summary>
		/// Optional. This is the maximum time a user will wait in the QRM queue for resources. Default is 1 day
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxWaitDuration")]
		public string MaxWaitDuration { get; set; }
		
		/// <summary>
		/// Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restartJobOnWorkerRestart")]
		public System.Nullable<System.Boolean> RestartJobOnWorkerRestart { get; set; }
		
		/// <summary>
		/// The maximum job running time. The default is 7 days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
	}
	
	/// <summary>
	/// Represents the spec of a worker pool in a job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WorkerPoolSpec
	{
		
		/// <summary>
		/// The spec of a Container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerSpec")]
		public GoogleCloudAiplatformV1ContainerSpec ContainerSpec { get; set; }
		
		/// <summary>
		/// Represents the spec of disk options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSpec")]
		public GoogleCloudAiplatformV1DiskSpec DiskSpec { get; set; }
		
		/// <summary>
		/// Specification of a single machine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineSpec")]
		public GoogleCloudAiplatformV1MachineSpec MachineSpec { get; set; }
		
		/// <summary>
		/// Optional. List of NFS mount spec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nfsMounts")]
		public GoogleCloudAiplatformV1NfsMount[] NfsMounts { get; set; }
		
		/// <summary>
		/// The spec of a Python packaged code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pythonPackageSpec")]
		public GoogleCloudAiplatformV1PythonPackageSpec PythonPackageSpec { get; set; }
		
		/// <summary>
		/// Optional. The number of worker replicas to use for this worker pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replicaCount")]
		public string ReplicaCount { get; set; }
	}
	
	/// <summary>
	/// Represents the spec of disk options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DiskSpec
	{
		
		/// <summary>
		/// Size in GB of the boot disk (default is 100GB).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bootDiskSizeGb")]
		public System.Nullable<System.Int32> BootDiskSizeGb { get; set; }
		
		/// <summary>
		/// Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bootDiskType")]
		public string BootDiskType { get; set; }
	}
	
	/// <summary>
	/// Represents a mount configuration for Network File System (NFS) to mount.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NfsMount
	{
		
		/// <summary>
		/// Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mountPoint")]
		public string MountPoint { get; set; }
		
		/// <summary>
		/// Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required. IP address of the NFS server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
	}
	
	/// <summary>
	/// The spec of a Python packaged code.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PythonPackageSpec
	{
		
		/// <summary>
		/// Command line arguments to be passed to the Python task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		/// <summary>
		/// Environment variables to be passed to the python module. Maximum limit is 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="env")]
		public GoogleCloudAiplatformV1EnvVar[] Env { get; set; }
		
		/// <summary>
		/// Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executorImageUri")]
		public string ExecutorImageUri { get; set; }
		
		/// <summary>
		/// Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageUris")]
		public string[] PackageUris { get; set; }
		
		/// <summary>
		/// Required. The Python module name to run after installing the packages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pythonModule")]
		public string PythonModule { get; set; }
	}
	
	/// <summary>
	/// A piece of data in a Dataset. Could be an image, a video, a document or plain text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DataItem
	{
		
		/// <summary>
		/// Output only. Timestamp when this DataItem was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public object Payload { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this DataItem was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A container for a single DataItem and Annotations on it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DataItemView
	{
		
		/// <summary>
		/// The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public GoogleCloudAiplatformV1Annotation[] Annotations { get; set; }
		
		/// <summary>
		/// A piece of data in a Dataset. Could be an image, a video, a document or plain text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItem")]
		public GoogleCloudAiplatformV1DataItem DataItem { get; set; }
		
		/// <summary>
		/// True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request's annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasTruncatedAnnotations")]
		public System.Nullable<System.Boolean> HasTruncatedAnnotations { get; set; }
	}
	
	/// <summary>
	/// DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DataLabelingJob
	{
		
		/// <summary>
		/// Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activeLearningConfig")]
		public GoogleCloudAiplatformV1ActiveLearningConfig ActiveLearningConfig { get; set; }
		
		/// <summary>
		/// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationLabels")]
		public System.Collections.Generic.Dictionary<string, string> AnnotationLabels { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this DataLabelingJob was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Represents an amount of money with its currency type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentSpend")]
		public GoogleTypeMoney CurrentSpend { get; set; }
		
		/// <summary>
		/// Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasets")]
		public string[] Datasets { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Required. Input config parameters for the DataLabelingJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public object Inputs { get; set; }
		
		/// <summary>
		/// Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputsSchemaUri")]
		public string InputsSchemaUri { get; set; }
		
		/// <summary>
		/// Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instructionUri")]
		public string InstructionUri { get; set; }
		
		/// <summary>
		/// Required. Number of labelers to work on each DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelerCount")]
		public System.Nullable<System.Int32> LabelerCount { get; set; }
		
		/// <summary>
		/// Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labelingProgress")]
		public System.Nullable<System.Int32> LabelingProgress { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the DataLabelingJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The SpecialistPools' resource names associated with this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="specialistPools")]
		public string[] SpecialistPools { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1BatchPredictionJobState State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this DataLabelingJob was updated most recently.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents an amount of money with its currency type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeMoney
	{
		
		/// <summary>
		/// The three-letter currency code defined in ISO 4217.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currencyCode")]
		public string CurrencyCode { get; set; }
		
		/// <summary>
		/// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nanos")]
		public System.Nullable<System.Int32> Nanos { get; set; }
		
		/// <summary>
		/// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="units")]
		public string Units { get; set; }
	}
	
	/// <summary>
	/// A collection of DataItems and Annotations on them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Dataset
	{
		
		/// <summary>
		/// Output only. Timestamp when this Dataset was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemCount")]
		public string DataItemCount { get; set; }
		
		/// <summary>
		/// The description of the Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Required. Additional information about the Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public object Metadata { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataArtifact")]
		public string MetadataArtifact { get; set; }
		
		/// <summary>
		/// Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataSchemaUri")]
		public string MetadataSchemaUri { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="savedQueries")]
		public GoogleCloudAiplatformV1SavedQuery[] SavedQueries { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Dataset was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A SavedQuery is a view of the dataset. It references a subset of annotations by problem type and filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SavedQuery
	{
		
		/// <summary>
		/// Output only. Filters on the Annotations in the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationFilter")]
		public string AnnotationFilter { get; set; }
		
		/// <summary>
		/// Output only. Number of AnnotationSpecs in the context of the SavedQuery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecCount")]
		public System.Nullable<System.Int32> AnnotationSpecCount { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this SavedQuery was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Some additional information about the SavedQuery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public object Metadata { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the SavedQuery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="problemType")]
		public string ProblemType { get; set; }
		
		/// <summary>
		/// Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportAutomlTraining")]
		public System.Nullable<System.Boolean> SupportAutomlTraining { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when SavedQuery was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Describes the dataset version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DatasetVersion
	{
		
		/// <summary>
		/// Output only. Name of the associated BigQuery dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQueryDatasetName")]
		public string BigQueryDatasetName { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this DatasetVersion was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the DatasetVersion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this DatasetVersion was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Details of operations that delete Feature values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreService.DeleteFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesRequest
	{
		
		/// <summary>
		/// Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectEntity")]
		public GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity SelectEntity { get; set; }
		
		/// <summary>
		/// Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectTimeRangeAndFeature")]
		public GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature SelectTimeRangeAndFeature { get; set; }
	}
	
	/// <summary>
	/// Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity
	{
		
		/// <summary>
		/// Selector for entityId. Getting ids from the given source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityIdSelector")]
		public GoogleCloudAiplatformV1EntityIdSelector EntityIdSelector { get; set; }
	}
	
	/// <summary>
	/// Selector for entityId. Getting ids from the given source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1EntityIdSelector
	{
		
		/// <summary>
		/// The storage details for CSV input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvSource")]
		public GoogleCloudAiplatformV1CsvSource CsvSource { get; set; }
		
		/// <summary>
		/// Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityIdField")]
		public string EntityIdField { get; set; }
	}
	
	/// <summary>
	/// Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature
	{
		
		/// <summary>
		/// Selector for Features of an EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureSelector")]
		public GoogleCloudAiplatformV1FeatureSelector FeatureSelector { get; set; }
		
		/// <summary>
		/// If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skipOnlineStorageDelete")]
		public System.Nullable<System.Boolean> SkipOnlineStorageDelete { get; set; }
		
		/// <summary>
		/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public GoogleTypeInterval TimeRange { get; set; }
	}
	
	/// <summary>
	/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeInterval
	{
		
		/// <summary>
		/// Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.DeleteFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesResponse
	{
		
		/// <summary>
		/// Response message if the request uses the SelectEntity option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectEntity")]
		public GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity SelectEntity { get; set; }
		
		/// <summary>
		/// Response message if the request uses the SelectTimeRangeAndFeature option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectTimeRangeAndFeature")]
		public GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature SelectTimeRangeAndFeature { get; set; }
	}
	
	/// <summary>
	/// Response message if the request uses the SelectEntity option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity
	{
		
		/// <summary>
		/// The count of deleted entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offlineStorageDeletedEntityRowCount")]
		public string OfflineStorageDeletedEntityRowCount { get; set; }
		
		/// <summary>
		/// The count of deleted entities in the online storage. Each entity ID corresponds to one entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onlineStorageDeletedEntityCount")]
		public string OnlineStorageDeletedEntityCount { get; set; }
	}
	
	/// <summary>
	/// Response message if the request uses the SelectTimeRangeAndFeature option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature
	{
		
		/// <summary>
		/// The count of the features or columns impacted. This is the same as the feature count in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="impactedFeatureCount")]
		public string ImpactedFeatureCount { get; set; }
		
		/// <summary>
		/// The count of modified entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. Within each row, only the features specified in the request are deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offlineStorageModifiedEntityRowCount")]
		public string OfflineStorageModifiedEntityRowCount { get; set; }
		
		/// <summary>
		/// The count of modified entities in the online storage. Each entity ID corresponds to one entity. Within each entity, only the features specified in the request are deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onlineStorageModifiedEntityCount")]
		public string OnlineStorageModifiedEntityCount { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform MetadataService.DeleteMetadataStore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform deletes of any entities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeleteOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for IndexEndpointService.DeployIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployIndexOperationMetadata
	{
		
		/// <summary>
		/// The unique index id specified by user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexId")]
		public string DeployedIndexId { get; set; }
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for IndexEndpointService.DeployIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployIndexRequest
	{
		
		/// <summary>
		/// A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndex")]
		public GoogleCloudAiplatformV1DeployedIndex DeployedIndex { get; set; }
	}
	
	/// <summary>
	/// A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployedIndex
	{
		
		/// <summary>
		/// A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automaticResources")]
		public GoogleCloudAiplatformV1AutomaticResources AutomaticResources { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when the DeployedIndex was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dedicatedResources")]
		public GoogleCloudAiplatformV1DedicatedResources DedicatedResources { get; set; }
		
		/// <summary>
		/// Used to set up the auth on the DeployedIndex's private endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexAuthConfig")]
		public GoogleCloudAiplatformV1DeployedIndexAuthConfig DeployedIndexAuthConfig { get; set; }
		
		/// <summary>
		/// Optional. The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default' deployment group. Creating `deployment_groups` with `reserved_ip_ranges` is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. Note: we only support up to 5 deployment groups(not including 'default').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentGroup")]
		public string DeploymentGroup { get; set; }
		
		/// <summary>
		/// The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Optional. If true, private endpoint's access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each MatchRequest. Note that logs may incur a cost, especially if the deployed index receives a high queries per second rate (QPS). Estimate your costs before enabling this option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableAccessLogging")]
		public System.Nullable<System.Boolean> EnableAccessLogging { get; set; }
		
		/// <summary>
		/// Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's "original" Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index")]
		public string Index { get; set; }
		
		/// <summary>
		/// Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect these changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which it does not), one must list the operations that are running on the original Index. Only the successfully completed Operations with update_time equal or before this sync time are contained in this DeployedIndex.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexSyncTime")]
		public string IndexSyncTime { get; set; }
		
		/// <summary>
		/// IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateEndpoints")]
		public GoogleCloudAiplatformV1IndexPrivateEndpoints PrivateEndpoints { get; set; }
		
		/// <summary>
		/// Optional. A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reservedIpRanges")]
		public string[] ReservedIpRanges { get; set; }
	}
	
	/// <summary>
	/// Used to set up the auth on the DeployedIndex's private endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployedIndexAuthConfig
	{
		
		/// <summary>
		/// Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authProvider")]
		public GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider AuthProvider { get; set; }
	}
	
	/// <summary>
	/// Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider
	{
		
		/// <summary>
		/// A list of allowed JWT issuers. Each entry must be a valid Google service account, in the following format: `service-account-name@project-id.iam.gserviceaccount.com`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedIssuers")]
		public string[] AllowedIssuers { get; set; }
		
		/// <summary>
		/// The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="audiences")]
		public string[] Audiences { get; set; }
	}
	
	/// <summary>
	/// IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexPrivateEndpoints
	{
		
		/// <summary>
		/// Output only. The ip address used to send match gRPC requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchGrpcAddress")]
		public string MatchGrpcAddress { get; set; }
		
		/// <summary>
		/// Output only. The name of the service attachment resource. Populated if private service connect is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAttachment")]
		public string ServiceAttachment { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexEndpointService.DeployIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployIndexResponse
	{
		
		/// <summary>
		/// A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndex")]
		public GoogleCloudAiplatformV1DeployedIndex DeployedIndex { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for EndpointService.DeployModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployModelOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for EndpointService.DeployModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployModelRequest
	{
		
		/// <summary>
		/// A deployment of a Model. Endpoints contain one or more DeployedModels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModel")]
		public GoogleCloudAiplatformV1DeployedModel DeployedModel { get; set; }
		
		/// <summary>
		/// A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a "0" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trafficSplit")]
		public System.Collections.Generic.Dictionary<string, int> TrafficSplit { get; set; }
	}
	
	/// <summary>
	/// A deployment of a Model. Endpoints contain one or more DeployedModels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployedModel
	{
		
		/// <summary>
		/// A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automaticResources")]
		public GoogleCloudAiplatformV1AutomaticResources AutomaticResources { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when the DeployedModel was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dedicatedResources")]
		public GoogleCloudAiplatformV1DedicatedResources DedicatedResources { get; set; }
		
		/// <summary>
		/// For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableContainerLogging")]
		public System.Nullable<System.Boolean> DisableContainerLogging { get; set; }
		
		/// <summary>
		/// The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableAccessLogging")]
		public System.Nullable<System.Boolean> EnableAccessLogging { get; set; }
		
		/// <summary>
		/// Specification of Model explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationSpec")]
		public GoogleCloudAiplatformV1ExplanationSpec ExplanationSpec { get; set; }
		
		/// <summary>
		/// Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Output only. The version ID of the model that is deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersionId")]
		public string ModelVersionId { get; set; }
		
		/// <summary>
		/// PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateEndpoints")]
		public GoogleCloudAiplatformV1PrivateEndpoints PrivateEndpoints { get; set; }
		
		/// <summary>
		/// The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedResources")]
		public string SharedResources { get; set; }
	}
	
	/// <summary>
	/// PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PrivateEndpoints
	{
		
		/// <summary>
		/// Output only. Http(s) path to send explain requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explainHttpUri")]
		public string ExplainHttpUri { get; set; }
		
		/// <summary>
		/// Output only. Http(s) path to send health check requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthHttpUri")]
		public string HealthHttpUri { get; set; }
		
		/// <summary>
		/// Output only. Http(s) path to send prediction requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictHttpUri")]
		public string PredictHttpUri { get; set; }
		
		/// <summary>
		/// Output only. The name of the service attachment resource. Populated if private service connect is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAttachment")]
		public string ServiceAttachment { get; set; }
	}
	
	/// <summary>
	/// Response message for EndpointService.DeployModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployModelResponse
	{
		
		/// <summary>
		/// A deployment of a Model. Endpoints contain one or more DeployedModels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModel")]
		public GoogleCloudAiplatformV1DeployedModel DeployedModel { get; set; }
	}
	
	/// <summary>
	/// Points to a DeployedIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployedIndexRef
	{
		
		/// <summary>
		/// Immutable. The ID of the DeployedIndex in the above IndexEndpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexId")]
		public string DeployedIndexId { get; set; }
		
		/// <summary>
		/// Output only. The display name of the DeployedIndex.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Immutable. A resource name of the IndexEndpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexEndpoint")]
		public string IndexEndpoint { get; set; }
	}
	
	/// <summary>
	/// Points to a DeployedModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DeployedModelRef
	{
		
		/// <summary>
		/// Immutable. An ID of a DeployedModel in the above Endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// Immutable. A resource name of an Endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
	}
	
	/// <summary>
	/// Request message for PredictionService.DirectPredict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DirectPredictRequest
	{
		
		/// <summary>
		/// The prediction input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1Tensor[] Inputs { get; set; }
		
		/// <summary>
		/// A tensor value type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1Tensor Parameters { get; set; }
	}
	
	/// <summary>
	/// A tensor value type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Tensor
	{
		
		/// <summary>
		/// Type specific representations that make it easy to create tensor protos in all languages. Only the representation corresponding to "dtype" can be set. The values hold the flattened representation of the tensor in row major order. BOOL
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolVal")]
		public bool[] BoolVal { get; set; }
		
		/// <summary>
		/// STRING
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bytesVal")]
		public string[] BytesVal { get; set; }
		
		/// <summary>
		/// DOUBLE
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleVal")]
		public double[] DoubleVal { get; set; }
		
		/// <summary>
		/// The data type of tensor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dtype")]
		public System.Nullable<GoogleCloudAiplatformV1TensorDtype> Dtype { get; set; }
		
		/// <summary>
		/// FLOAT
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="floatVal")]
		public double[] FloatVal { get; set; }
		
		/// <summary>
		/// INT64
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="int64Val")]
		public string[] Int64Val { get; set; }
		
		/// <summary>
		/// INT_8 INT_16 INT_32
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intVal")]
		public int[] IntVal { get; set; }
		
		/// <summary>
		/// A list of tensor values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listVal")]
		public GoogleCloudAiplatformV1Tensor[] ListVal { get; set; }
		
		/// <summary>
		/// Shape of the tensor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shape")]
		public string[] Shape { get; set; }
		
		/// <summary>
		/// STRING
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringVal")]
		public string[] StringVal { get; set; }
		
		/// <summary>
		/// A map of string to tensor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="structVal")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1Tensor> StructVal { get; set; }
		
		/// <summary>
		/// Serialized raw tensor content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorVal")]
		public string TensorVal { get; set; }
		
		/// <summary>
		/// UINT64
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uint64Val")]
		public string[] Uint64Val { get; set; }
		
		/// <summary>
		/// UINT8 UINT16 UINT32
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uintVal")]
		public int[] UintVal { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1TensorDtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_TYPE_UNSPECIFIED")]
		DATA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOL")]
		BOOL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STRING")]
		STRING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLOAT")]
		FLOAT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DOUBLE")]
		DOUBLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INT8")]
		INT8 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INT16")]
		INT16 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INT32")]
		INT32 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INT64")]
		INT64 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UINT8")]
		UINT8 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UINT16")]
		UINT16 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UINT32")]
		UINT32 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UINT64")]
		UINT64 = 12,
	}
	
	/// <summary>
	/// Response message for PredictionService.DirectPredict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DirectPredictResponse
	{
		
		/// <summary>
		/// The prediction output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputs")]
		public GoogleCloudAiplatformV1Tensor[] Outputs { get; set; }
		
		/// <summary>
		/// A tensor value type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1Tensor Parameters { get; set; }
	}
	
	/// <summary>
	/// Request message for PredictionService.DirectRawPredict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DirectRawPredictRequest
	{
		
		/// <summary>
		/// The prediction input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
		
		/// <summary>
		/// Fully qualified name of the API method being invoked to perform predictions. Format: `/namespace.Service/Method/` Example: `/tensorflow.serving.PredictionService/Predict`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="methodName")]
		public string MethodName { get; set; }
	}
	
	/// <summary>
	/// Response message for PredictionService.DirectRawPredict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DirectRawPredictResponse
	{
		
		/// <summary>
		/// The prediction output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="output")]
		public string Output { get; set; }
	}
	
	/// <summary>
	/// A list of double values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1DoubleArray
	{
		
		/// <summary>
		/// A list of double values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public double[] Values { get; set; }
	}
	
	/// <summary>
	/// Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Endpoint
	{
		
		/// <summary>
		/// Output only. Timestamp when this Endpoint was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModels")]
		public GoogleCloudAiplatformV1DeployedModel[] DeployedModels { get; set; }
		
		/// <summary>
		/// The description of the Endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enablePrivateServiceConnect")]
		public System.Nullable<System.Boolean> EnablePrivateServiceConnect { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentMonitoringJob")]
		public string ModelDeploymentMonitoringJob { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// Configuration for logging request-response to a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictRequestResponseLoggingConfig")]
		public GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig PredictRequestResponseLoggingConfig { get; set; }
		
		/// <summary>
		/// A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trafficSplit")]
		public System.Collections.Generic.Dictionary<string, int> TrafficSplit { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Endpoint was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Configuration for logging request-response to a BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig
	{
		
		/// <summary>
		/// The BigQuery location for the output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDestination")]
		public GoogleCloudAiplatformV1BigQueryDestination BigqueryDestination { get; set; }
		
		/// <summary>
		/// If logging is enabled or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Percentage of requests to be logged, expressed as a fraction in range(0,1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplingRate")]
		public System.Nullable<System.Double> SamplingRate { get; set; }
	}
	
	/// <summary>
	/// An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1EntityType
	{
		
		/// <summary>
		/// Output only. Timestamp when this EntityType was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Description of the EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Configuration of how features in Featurestore are monitored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoringConfig")]
		public GoogleCloudAiplatformV1FeaturestoreMonitoringConfig MonitoringConfig { get; set; }
		
		/// <summary>
		/// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offlineStorageTtlDays")]
		public System.Nullable<System.Int32> OfflineStorageTtlDays { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this EntityType was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Configuration of how features in Featurestore are monitored.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
	{
		
		/// <summary>
		/// The config for Featurestore Monitoring threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoricalThresholdConfig")]
		public GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig CategoricalThresholdConfig { get; set; }
		
		/// <summary>
		/// Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importFeaturesAnalysis")]
		public GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis ImportFeaturesAnalysis { get; set; }
		
		/// <summary>
		/// The config for Featurestore Monitoring threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericalThresholdConfig")]
		public GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig NumericalThresholdConfig { get; set; }
		
		/// <summary>
		/// Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotAnalysis")]
		public GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis SnapshotAnalysis { get; set; }
	}
	
	/// <summary>
	/// The config for Featurestore Monitoring threshold.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig
	{
		
		/// <summary>
		/// Specify a threshold value that can trigger the alert. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis
	{
		
		/// <summary>
		/// The baseline used to do anomaly detection for the statistics generated by import features analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anomalyDetectionBaseline")]
		public System.Nullable<GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline> AnomalyDetectionBaseline { get; set; }
		
		/// <summary>
		/// Whether to enable / disable / inherite default hebavior for import features analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BASELINE_UNSPECIFIED")]
		BASELINE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LATEST_STATS")]
		LATEST_STATS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOST_RECENT_SNAPSHOT_STATS")]
		MOST_RECENT_SNAPSHOT_STATS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PREVIOUS_IMPORT_FEATURES_STATS")]
		PREVIOUS_IMPORT_FEATURES_STATS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEFAULT")]
		DEFAULT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENABLED")]
		ENABLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED")]
		DISABLED = 3,
	}
	
	/// <summary>
	/// Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis
	{
		
		/// <summary>
		/// The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disabled")]
		public System.Nullable<System.Boolean> Disabled { get; set; }
		
		/// <summary>
		/// Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoringIntervalDays")]
		public System.Nullable<System.Int32> MonitoringIntervalDays { get; set; }
		
		/// <summary>
		/// Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stalenessDays")]
		public System.Nullable<System.Int32> StalenessDays { get; set; }
	}
	
	/// <summary>
	/// Overrides for example-based explanations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExamplesOverride
	{
		
		/// <summary>
		/// The number of neighbors to return that have the same crowding tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crowdingCount")]
		public System.Nullable<System.Int32> CrowdingCount { get; set; }
		
		/// <summary>
		/// The format of the data being provided with each call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataFormat")]
		public System.Nullable<GoogleCloudAiplatformV1ExamplesOverrideDataFormat> DataFormat { get; set; }
		
		/// <summary>
		/// The number of neighbors to return.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighborCount")]
		public System.Nullable<System.Int32> NeighborCount { get; set; }
		
		/// <summary>
		/// Restrict the resulting nearest neighbors to respect these constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restrictions")]
		public GoogleCloudAiplatformV1ExamplesRestrictionsNamespace[] Restrictions { get; set; }
		
		/// <summary>
		/// If true, return the embeddings instead of neighbors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnEmbeddings")]
		public System.Nullable<System.Boolean> ReturnEmbeddings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExamplesOverrideDataFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_FORMAT_UNSPECIFIED")]
		DATA_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INSTANCES")]
		INSTANCES = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EMBEDDINGS")]
		EMBEDDINGS = 2,
	}
	
	/// <summary>
	/// Restrictions namespace for example-based explanations overrides.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExamplesRestrictionsNamespace
	{
		
		/// <summary>
		/// The list of allowed tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allow")]
		public string[] Allow { get; set; }
		
		/// <summary>
		/// The list of deny tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deny")]
		public string[] Deny { get; set; }
		
		/// <summary>
		/// The namespace name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespaceName")]
		public string NamespaceName { get; set; }
	}
	
	/// <summary>
	/// Request message for PredictionService.Explain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplainRequest
	{
		
		/// <summary>
		/// If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// The ExplanationSpec entries that can be overridden at online explanation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationSpecOverride")]
		public GoogleCloudAiplatformV1ExplanationSpecOverride ExplanationSpecOverride { get; set; }
		
		/// <summary>
		/// Required. The instances that are the input to the explanation call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the explanation call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public string[] Instances { get; set; }
		
		/// <summary>
		/// The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public object Parameters { get; set; }
	}
	
	/// <summary>
	/// The ExplanationSpec entries that can be overridden at online explanation time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationSpecOverride
	{
		
		/// <summary>
		/// Overrides for example-based explanations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="examplesOverride")]
		public GoogleCloudAiplatformV1ExamplesOverride ExamplesOverride { get; set; }
		
		/// <summary>
		/// The ExplanationMetadata entries that can be overridden at online explanation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1ExplanationMetadataOverride Metadata { get; set; }
		
		/// <summary>
		/// Parameters to configure explaining for Model's predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1ExplanationParameters Parameters { get; set; }
	}
	
	/// <summary>
	/// The ExplanationMetadata entries that can be overridden at online explanation time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadataOverride
	{
		
		/// <summary>
		/// Required. Overrides the input metadata of the features. The key is the name of the feature to be overridden. The keys specified here must exist in the input metadata to be overridden. If a feature is not specified here, the corresponding feature's input metadata is not overridden.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride> Inputs { get; set; }
	}
	
	/// <summary>
	/// The input metadata entries to be overridden.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride
	{
		
		/// <summary>
		/// Baseline inputs for this feature. This overrides the `input_baseline` field of the ExplanationMetadata.InputMetadata object of the corresponding feature's input metadata. If it's not specified, the original baselines are not overridden.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputBaselines")]
		public string[] InputBaselines { get; set; }
	}
	
	/// <summary>
	/// Response message for PredictionService.Explain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExplainResponse
	{
		
		/// <summary>
		/// ID of the Endpoint's DeployedModel that served this explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanations")]
		public GoogleCloudAiplatformV1Explanation[] Explanations { get; set; }
		
		/// <summary>
		/// The predictions that are the output of the predictions call. Same as PredictResponse.predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public string[] Predictions { get; set; }
	}
	
	/// <summary>
	/// Describes what part of the Dataset is to be exported, the destination of the export and how to export.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportDataConfig
	{
		
		/// <summary>
		/// The Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only used for custom training data export use cases. Only applicable to Datasets that have DataItems and Annotations. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSchemaUri")]
		public string AnnotationSchemaUri { get; set; }
		
		/// <summary>
		/// An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationsFilter")]
		public string AnnotationsFilter { get; set; }
		
		/// <summary>
		/// Indicates the usage of the exported files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportUse")]
		public System.Nullable<GoogleCloudAiplatformV1ExportDataConfigExportUse> ExportUse { get; set; }
		
		/// <summary>
		/// Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterSplit")]
		public GoogleCloudAiplatformV1ExportFilterSplit FilterSplit { get; set; }
		
		/// <summary>
		/// Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fractionSplit")]
		public GoogleCloudAiplatformV1ExportFractionSplit FractionSplit { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudAiplatformV1GcsDestination GcsDestination { get; set; }
		
		/// <summary>
		/// The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only used for custom training data export use cases. Only applicable to Datasets that have SavedQueries. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="savedQueryId")]
		public string SavedQueryId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ExportDataConfigExportUse
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXPORT_USE_UNSPECIFIED")]
		EXPORT_USE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUSTOM_CODE_TRAINING")]
		CUSTOM_CODE_TRAINING = 1,
	}
	
	/// <summary>
	/// Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFilterSplit
	{
		
		/// <summary>
		/// Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testFilter")]
		public string TestFilter { get; set; }
		
		/// <summary>
		/// Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingFilter")]
		public string TrainingFilter { get; set; }
		
		/// <summary>
		/// Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationFilter")]
		public string ValidationFilter { get; set; }
	}
	
	/// <summary>
	/// Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFractionSplit
	{
		
		/// <summary>
		/// The fraction of the input data that is to be used to evaluate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testFraction")]
		public System.Nullable<System.Double> TestFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to train the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingFraction")]
		public System.Nullable<System.Double> TrainingFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to validate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationFraction")]
		public System.Nullable<System.Double> ValidationFraction { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for DatasetService.ExportData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportDataOperationMetadata
	{
		
		/// <summary>
		/// A Google Cloud Storage directory which path ends with '/'. The exported data is stored in the directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsOutputDirectory")]
		public string GcsOutputDirectory { get; set; }
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for DatasetService.ExportData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportDataRequest
	{
		
		/// <summary>
		/// Describes what part of the Dataset is to be exported, the destination of the export and how to export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportConfig")]
		public GoogleCloudAiplatformV1ExportDataConfig ExportConfig { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ExportData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportDataResponse
	{
		
		/// <summary>
		/// Stats of data used for train or evaluate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataStats")]
		public GoogleCloudAiplatformV1ModelDataStats DataStats { get; set; }
		
		/// <summary>
		/// All of the files that are exported in this export operation. For custom code training export, only three (training, validation and test) Cloud Storage paths in wildcard format are populated (for example, gs://.../training-*).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportedFiles")]
		public string[] ExportedFiles { get; set; }
	}
	
	/// <summary>
	/// Stats of data used for train or evaluate the Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelDataStats
	{
		
		/// <summary>
		/// Number of Annotations that are used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test Annotations used by the first evaluation. If the Model is not evaluated, the number is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testAnnotationsCount")]
		public string TestAnnotationsCount { get; set; }
		
		/// <summary>
		/// Number of DataItems that were used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test DataItems used by the first evaluation. If the Model is not evaluated, the number is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testDataItemsCount")]
		public string TestDataItemsCount { get; set; }
		
		/// <summary>
		/// Number of Annotations that are used for training this Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingAnnotationsCount")]
		public string TrainingAnnotationsCount { get; set; }
		
		/// <summary>
		/// Number of DataItems that were used for training this Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingDataItemsCount")]
		public string TrainingDataItemsCount { get; set; }
		
		/// <summary>
		/// Number of Annotations that are used for validating this Model during training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationAnnotationsCount")]
		public string ValidationAnnotationsCount { get; set; }
		
		/// <summary>
		/// Number of DataItems that were used for validating this Model during training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationDataItemsCount")]
		public string ValidationDataItemsCount { get; set; }
	}
	
	/// <summary>
	/// Details of operations that exports Features values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreService.ExportFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFeatureValuesRequest
	{
		
		/// <summary>
		/// A destination location for Feature values and format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public GoogleCloudAiplatformV1FeatureValueDestination Destination { get; set; }
		
		/// <summary>
		/// Selector for Features of an EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureSelector")]
		public GoogleCloudAiplatformV1FeatureSelector FeatureSelector { get; set; }
		
		/// <summary>
		/// Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullExport")]
		public GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport FullExport { get; set; }
		
		/// <summary>
		/// Per-Feature export settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GoogleCloudAiplatformV1DestinationFeatureSetting[] Settings { get; set; }
		
		/// <summary>
		/// Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotExport")]
		public GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport SnapshotExport { get; set; }
	}
	
	/// <summary>
	/// Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time].
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport
	{
		
		/// <summary>
		/// Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time].
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport
	{
		
		/// <summary>
		/// Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snapshotTime")]
		public string SnapshotTime { get; set; }
		
		/// <summary>
		/// Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.ExportFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportFeatureValuesResponse
	{
	}
	
	/// <summary>
	/// Details of ModelService.ExportModel operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportModelOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputInfo")]
		public GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo OutputInfo { get; set; }
	}
	
	/// <summary>
	/// Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo
	{
		
		/// <summary>
		/// Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactOutputUri")]
		public string ArtifactOutputUri { get; set; }
		
		/// <summary>
		/// Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageOutputUri")]
		public string ImageOutputUri { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.ExportModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportModelRequest
	{
		
		/// <summary>
		/// Output configuration for the Model export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputConfig")]
		public GoogleCloudAiplatformV1ExportModelRequestOutputConfig OutputConfig { get; set; }
	}
	
	/// <summary>
	/// Output configuration for the Model export.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportModelRequestOutputConfig
	{
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactDestination")]
		public GoogleCloudAiplatformV1GcsDestination ArtifactDestination { get; set; }
		
		/// <summary>
		/// The ID of the format in which the Model must be exported. Each Model lists the export formats it supports. If no value is provided here, then the first from the list of the Model's supported formats is used by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportFormatId")]
		public string ExportFormatId { get; set; }
		
		/// <summary>
		/// The Container Registry location for the container image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageDestination")]
		public GoogleCloudAiplatformV1ContainerRegistryDestination ImageDestination { get; set; }
	}
	
	/// <summary>
	/// Response message of ModelService.ExportModel operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportModelResponse
	{
	}
	
	/// <summary>
	/// Request message for TensorboardService.ExportTensorboardTimeSeriesData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest
	{
		
		/// <summary>
		/// Exports the TensorboardTimeSeries' data that match the filter expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Field to use to sort the TensorboardTimeSeries' data. By default, TensorboardTimeSeries' data is returned in a pseudo random order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderBy")]
		public string OrderBy { get; set; }
		
		/// <summary>
		/// The maximum number of data points to return per page. The default page_size is 1000. Values must be between 1 and 10000. Values above 10000 are coerced to 10000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// A page token, received from a previous ExportTensorboardTimeSeriesData call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ExportTensorboardTimeSeriesData must match the call that provided the page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ExportTensorboardTimeSeriesData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse
	{
		
		/// <summary>
		/// A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The returned time series data points.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesDataPoints")]
		public GoogleCloudAiplatformV1TimeSeriesDataPoint[] TimeSeriesDataPoints { get; set; }
	}
	
	/// <summary>
	/// Vertex AI Feature Group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureGroup
	{
		
		/// <summary>
		/// Input source type for BigQuery Tables and Views.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQuery")]
		public GoogleCloudAiplatformV1FeatureGroupBigQuery BigQuery { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this FeatureGroup was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Description of the FeatureGroup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this FeatureGroup was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Input source type for BigQuery Tables and Views.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureGroupBigQuery
	{
		
		/// <summary>
		/// The BigQuery location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigQuerySource")]
		public GoogleCloudAiplatformV1BigQuerySource BigQuerySource { get; set; }
		
		/// <summary>
		/// Optional. Columns to construct entity_id / row keys. Currently only supports 1 entity_id_column. If not provided defaults to `entity_id`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityIdColumns")]
		public string[] EntityIdColumns { get; set; }
	}
	
	/// <summary>
	/// Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureOnlineStore
	{
		
		[System.Runtime.Serialization.DataMember(Name="bigtable")]
		public GoogleCloudAiplatformV1FeatureOnlineStoreBigtable Bigtable { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this FeatureOnlineStore was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. State of the featureOnlineStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1FeatureOnlineStoreState> State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this FeatureOnlineStore was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScaling")]
		public GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling AutoScaling { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling
	{
		
		/// <summary>
		/// Optional. A percentage of the cluster's CPU capacity. Can be from 10% to 80%. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set will default to 50%.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationTarget")]
		public System.Nullable<System.Int32> CpuUtilizationTarget { get; set; }
		
		/// <summary>
		/// Required. The maximum number of nodes to scale up to. Must be greater than or equal to min_node_count, and less than or equal to 10 times of 'min_node_count'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxNodeCount")]
		public System.Nullable<System.Int32> MaxNodeCount { get; set; }
		
		/// <summary>
		/// Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minNodeCount")]
		public System.Nullable<System.Int32> MinNodeCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1FeatureOnlineStoreState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STABLE")]
		STABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UPDATING")]
		UPDATING = 2,
	}
	
	/// <summary>
	/// Value for a feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureValue
	{
		
		/// <summary>
		/// A list of boolean values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolArrayValue")]
		public GoogleCloudAiplatformV1BoolArray BoolArrayValue { get; set; }
		
		/// <summary>
		/// Bool type feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Bytes feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bytesValue")]
		public string BytesValue { get; set; }
		
		/// <summary>
		/// A list of double values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleArrayValue")]
		public GoogleCloudAiplatformV1DoubleArray DoubleArrayValue { get; set; }
		
		/// <summary>
		/// Double type feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public System.Nullable<System.Double> DoubleValue { get; set; }
		
		/// <summary>
		/// A list of int64 values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="int64ArrayValue")]
		public GoogleCloudAiplatformV1Int64Array Int64ArrayValue { get; set; }
		
		/// <summary>
		/// Int64 feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="int64Value")]
		public string Int64Value { get; set; }
		
		/// <summary>
		/// Metadata of feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1FeatureValueMetadata Metadata { get; set; }
		
		/// <summary>
		/// A list of string values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringArrayValue")]
		public GoogleCloudAiplatformV1StringArray StringArrayValue { get; set; }
		
		/// <summary>
		/// String feature value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// A list of int64 values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Int64Array
	{
		
		/// <summary>
		/// A list of int64 values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Metadata of feature value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureValueMetadata
	{
		
		/// <summary>
		/// Feature generation timestamp. Typically, it is provided by user at feature ingestion time. If not, feature store will use the system timestamp when the data is ingested into feature store. For streaming ingestion, the time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generateTime")]
		public string GenerateTime { get; set; }
	}
	
	/// <summary>
	/// A list of string values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StringArray
	{
		
		/// <summary>
		/// A list of string values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Container for list of values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureValueList
	{
		
		/// <summary>
		/// A list of feature values. All of them should be the same data type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudAiplatformV1FeatureValue[] Values { get; set; }
	}
	
	/// <summary>
	/// FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureView
	{
		
		[System.Runtime.Serialization.DataMember(Name="bigQuerySource")]
		public GoogleCloudAiplatformV1FeatureViewBigQuerySource BigQuerySource { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this FeatureView was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// A Feature Registry source for features that need to be synced to Online Store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureRegistrySource")]
		public GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource FeatureRegistrySource { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Configuration for Sync. Only one option is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syncConfig")]
		public GoogleCloudAiplatformV1FeatureViewSyncConfig SyncConfig { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this FeatureView was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureViewBigQuerySource
	{
		
		/// <summary>
		/// Required. Columns to construct entity_id / row keys. Start by supporting 1 only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityIdColumns")]
		public string[] EntityIdColumns { get; set; }
		
		/// <summary>
		/// Required. The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// A Feature Registry source for features that need to be synced to Online Store.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource
	{
		
		/// <summary>
		/// Required. List of features that need to be synced to Online Store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureGroups")]
		public GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup[] FeatureGroups { get; set; }
	}
	
	/// <summary>
	/// Features belonging to a single feature group that will be synced to Online Store.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup
	{
		
		/// <summary>
		/// Required. Identifier of the feature group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureGroupId")]
		public string FeatureGroupId { get; set; }
		
		/// <summary>
		/// Required. Identifiers of features under the feature group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureIds")]
		public string[] FeatureIds { get; set; }
	}
	
	/// <summary>
	/// Configuration for Sync. Only one option is set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureViewSyncConfig
	{
		
		/// <summary>
		/// Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cron")]
		public string Cron { get; set; }
	}
	
	/// <summary>
	/// Lookup key for a feature view.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureViewDataKey
	{
		
		/// <summary>
		/// String key to use for lookup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// FeatureViewSync is a representation of sync operation which copies data from data source to Feature View in Online Store.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeatureViewSync
	{
		
		/// <summary>
		/// Output only. Time when this FeatureViewSync is created. Creation of a FeatureViewSync means that the job is pending / waiting for sufficient resources but may not have started the actual data transfer yet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalStatus")]
		public GoogleRpcStatus FinalStatus { get; set; }
		
		/// <summary>
		/// Identifier. Name of the FeatureViewSync. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runTime")]
		public GoogleTypeInterval RunTime { get; set; }
	}
	
	/// <summary>
	/// Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Featurestore
	{
		
		/// <summary>
		/// Output only. Timestamp when this Featurestore was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// OnlineServingConfig specifies the details for provisioning online serving resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onlineServingConfig")]
		public GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig OnlineServingConfig { get; set; }
		
		/// <summary>
		/// Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="onlineStorageTtlDays")]
		public System.Nullable<System.Int32> OnlineStorageTtlDays { get; set; }
		
		/// <summary>
		/// Output only. State of the featurestore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1FeatureOnlineStoreState State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Featurestore was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// OnlineServingConfig specifies the details for provisioning online serving resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig
	{
		
		/// <summary>
		/// The number of nodes for the online store. The number of nodes doesn't scale automatically, but you can manually update the number of nodes. If set to 0, the featurestore will not have an online store and cannot be used for online serving.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixedNodeCount")]
		public System.Nullable<System.Int32> FixedNodeCount { get; set; }
		
		/// <summary>
		/// Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaling")]
		public GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling Scaling { get; set; }
	}
	
	/// <summary>
	/// Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling
	{
		
		/// <summary>
		/// Optional. The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set or set to 0, default to 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationTarget")]
		public System.Nullable<System.Int32> CpuUtilizationTarget { get; set; }
		
		/// <summary>
		/// The maximum number of nodes to scale up to. Must be greater than min_node_count, and less than or equal to 10 times of 'min_node_count'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxNodeCount")]
		public System.Nullable<System.Int32> MaxNodeCount { get; set; }
		
		/// <summary>
		/// Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minNodeCount")]
		public System.Nullable<System.Int32> MinNodeCount { get; set; }
	}
	
	/// <summary>
	/// Request message for FeatureOnlineStoreService.FetchFeatureValues. All the features under the requested feature view will be returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FetchFeatureValuesRequest
	{
		
		/// <summary>
		/// Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataFormat")]
		public System.Nullable<GoogleCloudAiplatformV1FetchFeatureValuesRequestDataFormat> DataFormat { get; set; }
		
		/// <summary>
		/// Lookup key for a feature view.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataKey")]
		public GoogleCloudAiplatformV1FeatureViewDataKey DataKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1FetchFeatureValuesRequestDataFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED")]
		FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KEY_VALUE")]
		KEY_VALUE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PROTO_STRUCT")]
		PROTO_STRUCT = 2,
	}
	
	/// <summary>
	/// Response message for FeatureOnlineStoreService.FetchFeatureValues
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FetchFeatureValuesResponse
	{
		
		/// <summary>
		/// Response structure in the format of key (feature name) and (feature) value pair.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyValues")]
		public GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList KeyValues { get; set; }
		
		/// <summary>
		/// Feature values in proto Struct format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protoStruct")]
		public System.Collections.Generic.Dictionary<string, object> ProtoStruct { get; set; }
	}
	
	/// <summary>
	/// Response structure in the format of key (feature name) and (feature) value pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList
	{
		
		/// <summary>
		/// List of feature names and values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair[] Features { get; set; }
	}
	
	/// <summary>
	/// Feature name & value pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair
	{
		
		/// <summary>
		/// Feature short name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Value for a feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GoogleCloudAiplatformV1FeatureValue Value { get; set; }
	}
	
	/// <summary>
	/// Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FilterSplit
	{
		
		/// <summary>
		/// Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testFilter")]
		public string TestFilter { get; set; }
		
		/// <summary>
		/// Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingFilter")]
		public string TrainingFilter { get; set; }
		
		/// <summary>
		/// Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationFilter")]
		public string ValidationFilter { get; set; }
	}
	
	/// <summary>
	/// The request message for MatchService.FindNeighbors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FindNeighborsRequest
	{
		
		/// <summary>
		/// The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexId")]
		public string DeployedIndexId { get; set; }
		
		/// <summary>
		/// The list of queries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queries")]
		public GoogleCloudAiplatformV1FindNeighborsRequestQuery[] Queries { get; set; }
		
		/// <summary>
		/// If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnFullDatapoint")]
		public System.Nullable<System.Boolean> ReturnFullDatapoint { get; set; }
	}
	
	/// <summary>
	/// A query to find a number of the nearest neighbors (most similar vectors) of a vector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FindNeighborsRequestQuery
	{
		
		/// <summary>
		/// The number of neighbors to find via approximate search before exact reordering is performed. If not set, the default value from scam config is used; if set, this value must be > 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approximateNeighborCount")]
		public System.Nullable<System.Int32> ApproximateNeighborCount { get; set; }
		
		/// <summary>
		/// A datapoint of Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datapoint")]
		public GoogleCloudAiplatformV1IndexDatapoint Datapoint { get; set; }
		
		/// <summary>
		/// The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. If not set or set to 0.0, query uses the default value specified in NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fractionLeafNodesToSearchOverride")]
		public System.Nullable<System.Double> FractionLeafNodesToSearchOverride { get; set; }
		
		/// <summary>
		/// The number of nearest neighbors to be retrieved from database for each query. If not set, will use the default from the service configuration (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighborCount")]
		public System.Nullable<System.Int32> NeighborCount { get; set; }
		
		/// <summary>
		/// Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. This field is the maximum number of matches with the same crowding tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="perCrowdingAttributeNeighborCount")]
		public System.Nullable<System.Int32> PerCrowdingAttributeNeighborCount { get; set; }
	}
	
	/// <summary>
	/// A datapoint of Index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexDatapoint
	{
		
		/// <summary>
		/// Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crowdingTag")]
		public GoogleCloudAiplatformV1IndexDatapointCrowdingTag CrowdingTag { get; set; }
		
		/// <summary>
		/// Required. Unique identifier of the datapoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datapointId")]
		public string DatapointId { get; set; }
		
		/// <summary>
		/// Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureVector")]
		public double[] FeatureVector { get; set; }
		
		/// <summary>
		/// Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. This uses numeric comparisons.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numericRestricts")]
		public GoogleCloudAiplatformV1IndexDatapointNumericRestriction[] NumericRestricts { get; set; }
		
		/// <summary>
		/// Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. This uses categorical tokens. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restricts")]
		public GoogleCloudAiplatformV1IndexDatapointRestriction[] Restricts { get; set; }
	}
	
	/// <summary>
	/// Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexDatapointCrowdingTag
	{
		
		/// <summary>
		/// The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crowdingAttribute")]
		public string CrowdingAttribute { get; set; }
	}
	
	/// <summary>
	/// This field allows restricts to be based on numeric comparisons rather than categorical tokens.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexDatapointNumericRestriction
	{
		
		/// <summary>
		/// The namespace of this restriction. e.g.: cost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
		
		/// <summary>
		/// This MUST be specified for queries and must NOT be specified for datapoints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="op")]
		public System.Nullable<GoogleCloudAiplatformV1IndexDatapointNumericRestrictionOp> Op { get; set; }
		
		/// <summary>
		/// Represents 64 bit float.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueDouble")]
		public System.Nullable<System.Double> ValueDouble { get; set; }
		
		/// <summary>
		/// Represents 32 bit float.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueFloat")]
		public System.Nullable<System.Single> ValueFloat { get; set; }
		
		/// <summary>
		/// Represents 64 bit integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueInt")]
		public string ValueInt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1IndexDatapointNumericRestrictionOp
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OPERATOR_UNSPECIFIED")]
		OPERATOR_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LESS")]
		LESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LESS_EQUAL")]
		LESS_EQUAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EQUAL")]
		EQUAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GREATER_EQUAL")]
		GREATER_EQUAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GREATER")]
		GREATER = 5,
	}
	
	/// <summary>
	/// Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexDatapointRestriction
	{
		
		/// <summary>
		/// The attributes to allow in this namespace. e.g.: 'red'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowList")]
		public string[] AllowList { get; set; }
		
		/// <summary>
		/// The attributes to deny in this namespace. e.g.: 'blue'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="denyList")]
		public string[] DenyList { get; set; }
		
		/// <summary>
		/// The namespace of this restriction. e.g.: color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
	}
	
	/// <summary>
	/// The response message for MatchService.FindNeighbors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FindNeighborsResponse
	{
		
		/// <summary>
		/// The nearest neighbors of the query datapoints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nearestNeighbors")]
		public GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors[] NearestNeighbors { get; set; }
	}
	
	/// <summary>
	/// Nearest neighbors for one query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors
	{
		
		/// <summary>
		/// The ID of the query datapoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// All its neighbors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="neighbors")]
		public GoogleCloudAiplatformV1FindNeighborsResponseNeighbor[] Neighbors { get; set; }
	}
	
	/// <summary>
	/// A neighbor of the query vector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
	{
		
		/// <summary>
		/// A datapoint of Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datapoint")]
		public GoogleCloudAiplatformV1IndexDatapoint Datapoint { get; set; }
		
		/// <summary>
		/// The distance between the neighbor and the query vector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public System.Nullable<System.Double> Distance { get; set; }
	}
	
	/// <summary>
	/// Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FractionSplit
	{
		
		/// <summary>
		/// The fraction of the input data that is to be used to evaluate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testFraction")]
		public System.Nullable<System.Double> TestFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to train the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingFraction")]
		public System.Nullable<System.Double> TrainingFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to validate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationFraction")]
		public System.Nullable<System.Double> ValidationFraction { get; set; }
	}
	
	/// <summary>
	/// Structured representation of a function declaration as defined by the [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3). Included in this declaration are the function name and parameters. This FunctionDeclaration is a representation of a block of code that can be used as a `Tool` by the model and executed by the client.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1FunctionDeclaration
	{
		
		/// <summary>
		/// Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1Schema Parameters { get; set; }
	}
	
	/// <summary>
	/// Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Schema
	{
		
		/// <summary>
		/// Optional. The description of the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. Possible values of the element of Type.STRING with enum format. For example we can define an Enum Direction as : {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enum")]
		public string[] Enum { get; set; }
		
		/// <summary>
		/// Optional. Example of the object. Will only populated when the object is the root.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="example")]
		public object Example { get; set; }
		
		/// <summary>
		/// Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER type: int32, int64
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		/// <summary>
		/// Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public GoogleCloudAiplatformV1Schema Items { get; set; }
		
		/// <summary>
		/// Optional. Indicates if the value may be null.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nullable")]
		public System.Nullable<System.Boolean> Nullable { get; set; }
		
		/// <summary>
		/// Optional. Properties of Type.OBJECT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1Schema> Properties { get; set; }
		
		/// <summary>
		/// Optional. Required properties of Type.OBJECT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public string[] Required { get; set; }
		
		/// <summary>
		/// Optional. The type of the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TYPE_UNSPECIFIED")]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STRING")]
		STRING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NUMBER")]
		NUMBER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTEGER")]
		INTEGER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BOOLEAN")]
		BOOLEAN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ARRAY")]
		ARRAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OBJECT")]
		OBJECT = 6,
	}
	
	/// <summary>
	/// Request message for [PredictionService.GenerateContent].
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GenerateContentRequest
	{
		
		/// <summary>
		/// Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public GoogleCloudAiplatformV1Content[] Contents { get; set; }
		
		/// <summary>
		/// Generation config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generationConfig")]
		public GoogleCloudAiplatformV1GenerationConfig GenerationConfig { get; set; }
		
		/// <summary>
		/// Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetySettings")]
		public GoogleCloudAiplatformV1SafetySetting[] SafetySettings { get; set; }
		
		/// <summary>
		/// Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model. The only supported tool is currently `Function`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tools")]
		public GoogleCloudAiplatformV1Tool[] Tools { get; set; }
	}
	
	/// <summary>
	/// Generation config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GenerationConfig
	{
		
		/// <summary>
		/// Optional. Number of candidates to generate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidateCount")]
		public System.Nullable<System.Int32> CandidateCount { get; set; }
		
		/// <summary>
		/// Optional. The maximum number of output tokens to generate per message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxOutputTokens")]
		public System.Nullable<System.Int32> MaxOutputTokens { get; set; }
		
		/// <summary>
		/// Optional. Stop sequences.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stopSequences")]
		public string[] StopSequences { get; set; }
		
		/// <summary>
		/// Optional. Controls the randomness of predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="temperature")]
		public System.Nullable<System.Single> Temperature { get; set; }
		
		/// <summary>
		/// Optional. If specified, top-k sampling will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topK")]
		public System.Nullable<System.Single> TopK { get; set; }
		
		/// <summary>
		/// Optional. If specified, nucleus sampling will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topP")]
		public System.Nullable<System.Single> TopP { get; set; }
	}
	
	/// <summary>
	/// Safety settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SafetySetting
	{
		
		/// <summary>
		/// Required. Harm category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public CloudAiNlLlmProtoServiceSafetyRatingCategory Category { get; set; }
		
		/// <summary>
		/// Required. The harm block threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="threshold")]
		public System.Nullable<GoogleCloudAiplatformV1SafetySettingThreshold> Threshold { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SafetySettingThreshold
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HARM_BLOCK_THRESHOLD_UNSPECIFIED")]
		HARM_BLOCK_THRESHOLD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCK_LOW_AND_ABOVE")]
		BLOCK_LOW_AND_ABOVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCK_MEDIUM_AND_ABOVE")]
		BLOCK_MEDIUM_AND_ABOVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCK_ONLY_HIGH")]
		BLOCK_ONLY_HIGH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCK_NONE")]
		BLOCK_NONE = 4,
	}
	
	/// <summary>
	/// Tool details that the model may use to generate response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Tool
	{
		
		/// <summary>
		/// Optional. One or more function declarations to be passed to the model along with the current user query. Model may decide to call a subset of these functions by populating FunctionCall in the response. User should provide a FunctionResponse for each function call in the next turn. Based on the function responses, Model will generate the final response back to the user. Maximum 64 function declarations can be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionDeclarations")]
		public GoogleCloudAiplatformV1FunctionDeclaration[] FunctionDeclarations { get; set; }
	}
	
	/// <summary>
	/// Response message for [PredictionService.GenerateContent].
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GenerateContentResponse
	{
		
		/// <summary>
		/// Output only. Generated candidates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidates")]
		public GoogleCloudAiplatformV1Candidate[] Candidates { get; set; }
		
		/// <summary>
		/// Content filter results for a prompt sent in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promptFeedback")]
		public GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback PromptFeedback { get; set; }
		
		/// <summary>
		/// Usage metadata about response(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usageMetadata")]
		public GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata UsageMetadata { get; set; }
	}
	
	/// <summary>
	/// Content filter results for a prompt sent in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback
	{
		
		/// <summary>
		/// Output only. Blocked reason.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockReason")]
		public CloudAiNlLlmProtoServicePromptFeedbackBlockReason BlockReason { get; set; }
		
		/// <summary>
		/// Output only. A readable block reason message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockReasonMessage")]
		public string BlockReasonMessage { get; set; }
		
		/// <summary>
		/// Output only. Safety ratings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyRatings")]
		public GoogleCloudAiplatformV1SafetyRating[] SafetyRatings { get; set; }
	}
	
	/// <summary>
	/// Usage metadata about response(s).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata
	{
		
		/// <summary>
		/// Number of tokens in the response(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidatesTokenCount")]
		public System.Nullable<System.Int32> CandidatesTokenCount { get; set; }
		
		/// <summary>
		/// Number of tokens in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promptTokenCount")]
		public System.Nullable<System.Int32> PromptTokenCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalTokenCount")]
		public System.Nullable<System.Int32> TotalTokenCount { get; set; }
	}
	
	/// <summary>
	/// Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1HyperparameterTuningJob
	{
		
		/// <summary>
		/// Output only. Time when the HyperparameterTuningJob was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFailedTrialCount")]
		public System.Nullable<System.Int32> MaxFailedTrialCount { get; set; }
		
		/// <summary>
		/// Required. The desired total number of Trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxTrialCount")]
		public System.Nullable<System.Int32> MaxTrialCount { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the HyperparameterTuningJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The desired number of Trials to run in parallel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parallelTrialCount")]
		public System.Nullable<System.Int32> ParallelTrialCount { get; set; }
		
		/// <summary>
		/// Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1BatchPredictionJobState State { get; set; }
		
		/// <summary>
		/// Represents specification of a Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studySpec")]
		public GoogleCloudAiplatformV1StudySpec StudySpec { get; set; }
		
		/// <summary>
		/// Represents the spec of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trialJobSpec")]
		public GoogleCloudAiplatformV1CustomJobSpec TrialJobSpec { get; set; }
		
		/// <summary>
		/// Output only. Trials of the HyperparameterTuningJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trials")]
		public GoogleCloudAiplatformV1Trial[] Trials { get; set; }
		
		/// <summary>
		/// Output only. Time when the HyperparameterTuningJob was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents specification of a Study.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpec
	{
		
		/// <summary>
		/// The search algorithm specified for the Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="algorithm")]
		public System.Nullable<GoogleCloudAiplatformV1StudySpecAlgorithm> Algorithm { get; set; }
		
		/// <summary>
		/// Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="convexAutomatedStoppingSpec")]
		public GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec ConvexAutomatedStoppingSpec { get; set; }
		
		/// <summary>
		/// The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="decayCurveStoppingSpec")]
		public GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec DecayCurveStoppingSpec { get; set; }
		
		/// <summary>
		/// Describe which measurement selection type will be used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="measurementSelectionType")]
		public System.Nullable<GoogleCloudAiplatformV1StudySpecMeasurementSelectionType> MeasurementSelectionType { get; set; }
		
		/// <summary>
		/// The median automated stopping rule stops a pending Trial if the Trial's best objective_value is strictly below the median 'performance' of all completed Trials reported up to the Trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the Trial in each measurement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medianAutomatedStoppingSpec")]
		public GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec MedianAutomatedStoppingSpec { get; set; }
		
		/// <summary>
		/// Required. Metric specs for the Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public GoogleCloudAiplatformV1StudySpecMetricSpec[] Metrics { get; set; }
		
		/// <summary>
		/// The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observationNoise")]
		public System.Nullable<GoogleCloudAiplatformV1StudySpecObservationNoise> ObservationNoise { get; set; }
		
		/// <summary>
		/// Required. The set of parameters to tune.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1StudySpecParameterSpec[] Parameters { get; set; }
		
		/// <summary>
		/// The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studyStoppingConfig")]
		public GoogleCloudAiplatformV1StudySpecStudyStoppingConfig StudyStoppingConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1StudySpecAlgorithm
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALGORITHM_UNSPECIFIED")]
		ALGORITHM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GRID_SEARCH")]
		GRID_SEARCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RANDOM_SEARCH")]
		RANDOM_SEARCH = 2,
	}
	
	/// <summary>
	/// Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
	{
		
		/// <summary>
		/// The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="learningRateParameterName")]
		public string LearningRateParameterName { get; set; }
		
		/// <summary>
		/// Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. If not defined, it will learn it from the completed trials. When use_steps is false, this field is set to the maximum elapsed seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxStepCount")]
		public string MaxStepCount { get; set; }
		
		/// <summary>
		/// The minimal number of measurements in a Trial. Early-stopping checks will not trigger if less than min_measurement_count+1 completed trials or pending trials with less than min_measurement_count measurements. If not defined, the default value is 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minMeasurementCount")]
		public string MinMeasurementCount { get; set; }
		
		/// <summary>
		/// Minimum number of steps for a trial to complete. Trials which do not have a measurement with step_count > min_step_count won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_step_count is set to be one-tenth of the max_step_count. When use_elapsed_duration is true, this field is set to the minimum elapsed seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minStepCount")]
		public string MinStepCount { get; set; }
		
		/// <summary>
		/// ConvexAutomatedStoppingSpec by default only updates the trials that needs to be early stopped using a newly trained auto-regressive model. When this flag is set to True, all stopped trials from the beginning are potentially updated in terms of their `final_measurement`. Also, note that the training logic of autoregressive models is different in this case. Enabling this option has shown better results and this may be the default option in the future.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateAllStoppedTrials")]
		public System.Nullable<System.Boolean> UpdateAllStoppedTrials { get; set; }
		
		/// <summary>
		/// This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_elapsed_duration==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useElapsedDuration")]
		public System.Nullable<System.Boolean> UseElapsedDuration { get; set; }
	}
	
	/// <summary>
	/// The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
	{
		
		/// <summary>
		/// True if Measurement.elapsed_duration is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useElapsedDuration")]
		public System.Nullable<System.Boolean> UseElapsedDuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1StudySpecMeasurementSelectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEASUREMENT_SELECTION_TYPE_UNSPECIFIED")]
		MEASUREMENT_SELECTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAST_MEASUREMENT")]
		LAST_MEASUREMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BEST_MEASUREMENT")]
		BEST_MEASUREMENT = 2,
	}
	
	/// <summary>
	/// The median automated stopping rule stops a pending Trial if the Trial's best objective_value is strictly below the median 'performance' of all completed Trials reported up to the Trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the Trial in each measurement.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
	{
		
		/// <summary>
		/// True if median automated stopping rule applies on Measurement.elapsed_duration. It means that elapsed_duration field of latest measurement of current Trial is used to compute median objective value for each completed Trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useElapsedDuration")]
		public System.Nullable<System.Boolean> UseElapsedDuration { get; set; }
	}
	
	/// <summary>
	/// Represents a metric to optimize.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecMetricSpec
	{
		
		/// <summary>
		/// Required. The optimization goal of the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal")]
		public System.Nullable<GoogleCloudAiplatformV1StudySpecMetricSpecGoal> Goal { get; set; }
		
		/// <summary>
		/// Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricId")]
		public string MetricId { get; set; }
		
		/// <summary>
		/// Used in safe optimization to specify threshold levels and risk tolerance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyConfig")]
		public GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig SafetyConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1StudySpecMetricSpecGoal
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOAL_TYPE_UNSPECIFIED")]
		GOAL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MAXIMIZE")]
		MAXIMIZE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MINIMIZE")]
		MINIMIZE = 2,
	}
	
	/// <summary>
	/// Used in safe optimization to specify threshold levels and risk tolerance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig
	{
		
		/// <summary>
		/// Desired minimum fraction of safe trials (over total number of trials) that should be targeted by the algorithm at any time during the study (best effort). This should be between 0.0 and 1.0 and a value of 0.0 means that there is no minimum and an algorithm proceeds without targeting any specific fraction. A value of 1.0 means that the algorithm attempts to only Suggest safe Trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="desiredMinSafeTrialsFraction")]
		public System.Nullable<System.Double> DesiredMinSafeTrialsFraction { get; set; }
		
		/// <summary>
		/// Safety threshold (boundary value between safe and unsafe). NOTE that if you leave SafetyMetricConfig unset, a default value of 0 will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyThreshold")]
		public System.Nullable<System.Double> SafetyThreshold { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1StudySpecObservationNoise
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OBSERVATION_NOISE_UNSPECIFIED")]
		OBSERVATION_NOISE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOW")]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HIGH")]
		HIGH = 2,
	}
	
	/// <summary>
	/// Represents a single parameter to optimize.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpec
	{
		
		/// <summary>
		/// Value specification for a parameter in `CATEGORICAL` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoricalValueSpec")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec CategoricalValueSpec { get; set; }
		
		/// <summary>
		/// A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditionalParameterSpecs")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec[] ConditionalParameterSpecs { get; set; }
		
		/// <summary>
		/// Value specification for a parameter in `DISCRETE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discreteValueSpec")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec DiscreteValueSpec { get; set; }
		
		/// <summary>
		/// Value specification for a parameter in `DOUBLE` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="doubleValueSpec")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec DoubleValueSpec { get; set; }
		
		/// <summary>
		/// Value specification for a parameter in `INTEGER` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integerValueSpec")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec IntegerValueSpec { get; set; }
		
		/// <summary>
		/// Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterId")]
		public string ParameterId { get; set; }
		
		/// <summary>
		/// How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaleType")]
		public System.Nullable<GoogleCloudAiplatformV1StudySpecParameterSpecScaleType> ScaleType { get; set; }
	}
	
	/// <summary>
	/// Value specification for a parameter in `CATEGORICAL` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
	{
		
		/// <summary>
		/// A default value for a `CATEGORICAL` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// Required. The list of possible categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Represents a parameter spec with condition from its parent parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec
	{
		
		/// <summary>
		/// Represents a single parameter to optimize.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterSpec")]
		public GoogleCloudAiplatformV1StudySpecParameterSpec ParameterSpec { get; set; }
		
		/// <summary>
		/// Represents the spec to match categorical values from parent parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentCategoricalValues")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition ParentCategoricalValues { get; set; }
		
		/// <summary>
		/// Represents the spec to match discrete values from parent parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentDiscreteValues")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition ParentDiscreteValues { get; set; }
		
		/// <summary>
		/// Represents the spec to match integer values from parent parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentIntValues")]
		public GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition ParentIntValues { get; set; }
	}
	
	/// <summary>
	/// Represents the spec to match categorical values from parent parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition
	{
		
		/// <summary>
		/// Required. Matches values of the parent parameter of 'CATEGORICAL' type. All values must exist in `categorical_value_spec` of parent parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Represents the spec to match discrete values from parent parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition
	{
		
		/// <summary>
		/// Required. Matches values of the parent parameter of 'DISCRETE' type. All values must exist in `discrete_value_spec` of parent parameter. The Epsilon of the value matching is 1e-10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public double[] Values { get; set; }
	}
	
	/// <summary>
	/// Represents the spec to match integer values from parent parameter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition
	{
		
		/// <summary>
		/// Required. Matches values of the parent parameter of 'INTEGER' type. All values must lie in `integer_value_spec` of parent parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Value specification for a parameter in `DISCRETE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
	{
		
		/// <summary>
		/// A default value for a `DISCRETE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. It automatically rounds to the nearest feasible discrete point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public System.Nullable<System.Double> DefaultValue { get; set; }
		
		/// <summary>
		/// Required. A list of possible values. The list should be in increasing order and at least 1e-10 apart. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public double[] Values { get; set; }
	}
	
	/// <summary>
	/// Value specification for a parameter in `DOUBLE` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
	{
		
		/// <summary>
		/// A default value for a `DOUBLE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public System.Nullable<System.Double> DefaultValue { get; set; }
		
		/// <summary>
		/// Required. Inclusive maximum value of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public System.Nullable<System.Double> MaxValue { get; set; }
		
		/// <summary>
		/// Required. Inclusive minimum value of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public System.Nullable<System.Double> MinValue { get; set; }
	}
	
	/// <summary>
	/// Value specification for a parameter in `INTEGER` type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
	{
		
		/// <summary>
		/// A default value for an `INTEGER` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultValue")]
		public string DefaultValue { get; set; }
		
		/// <summary>
		/// Required. Inclusive maximum value of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxValue")]
		public string MaxValue { get; set; }
		
		/// <summary>
		/// Required. Inclusive minimum value of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minValue")]
		public string MinValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1StudySpecParameterSpecScaleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCALE_TYPE_UNSPECIFIED")]
		SCALE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIT_LINEAR_SCALE")]
		UNIT_LINEAR_SCALE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIT_LOG_SCALE")]
		UNIT_LOG_SCALE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIT_REVERSE_LOG_SCALE")]
		UNIT_REVERSE_LOG_SCALE = 3,
	}
	
	/// <summary>
	/// The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
	{
		
		/// <summary>
		/// If the objective value has not improved for this much time, stop the study. WARNING: Effective only for single-objective studies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDurationNoProgress")]
		public string MaxDurationNoProgress { get; set; }
		
		/// <summary>
		/// If there are more than this many trials, stop the study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxNumTrials")]
		public System.Nullable<System.Int32> MaxNumTrials { get; set; }
		
		/// <summary>
		/// If the objective value has not improved for this many consecutive trials, stop the study. WARNING: Effective only for single-objective studies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxNumTrialsNoProgress")]
		public System.Nullable<System.Int32> MaxNumTrialsNoProgress { get; set; }
		
		/// <summary>
		/// Time-based Constraint for Study
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximumRuntimeConstraint")]
		public GoogleCloudAiplatformV1StudyTimeConstraint MaximumRuntimeConstraint { get; set; }
		
		/// <summary>
		/// If there are fewer than this many COMPLETED trials, do not stop the study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minNumTrials")]
		public System.Nullable<System.Int32> MinNumTrials { get; set; }
		
		/// <summary>
		/// Time-based Constraint for Study
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimumRuntimeConstraint")]
		public GoogleCloudAiplatformV1StudyTimeConstraint MinimumRuntimeConstraint { get; set; }
		
		/// <summary>
		/// If true, a Study enters STOPPING_ASAP whenever it would normally enters STOPPING state. The bottom line is: set to true if you want to interrupt on-going evaluations of Trials as soon as the study stopping condition is met. (Please see Study.State documentation for the source of truth).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shouldStopAsap")]
		public System.Nullable<System.Boolean> ShouldStopAsap { get; set; }
	}
	
	/// <summary>
	/// Time-based Constraint for Study
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StudyTimeConstraint
	{
		
		/// <summary>
		/// Compares the wallclock time to this time. Must use UTC timezone.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Counts the wallclock time passed since the creation of this Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxDuration")]
		public string MaxDuration { get; set; }
	}
	
	/// <summary>
	/// A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Trial
	{
		
		/// <summary>
		/// Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customJob")]
		public string CustomJob { get; set; }
		
		/// <summary>
		/// Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalMeasurement")]
		public GoogleCloudAiplatformV1Measurement FinalMeasurement { get; set; }
		
		/// <summary>
		/// Output only. The identifier of the Trial assigned by the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infeasibleReason")]
		public string InfeasibleReason { get; set; }
		
		/// <summary>
		/// Output only. A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="measurements")]
		public GoogleCloudAiplatformV1Measurement[] Measurements { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the Trial assigned by the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The parameters of the Trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1TrialParameter[] Parameters { get; set; }
		
		/// <summary>
		/// Output only. Time when the Trial was started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the Trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1TrialState> State { get; set; }
		
		/// <summary>
		/// Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webAccessUris")]
		public System.Collections.Generic.Dictionary<string, string> WebAccessUris { get; set; }
	}
	
	/// <summary>
	/// A message representing a parameter to be tuned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TrialParameter
	{
		
		/// <summary>
		/// Output only. The ID of the parameter. The parameter should be defined in StudySpec's Parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameterId")]
		public string ParameterId { get; set; }
		
		/// <summary>
		/// Output only. The value of the parameter. `number_value` will be set if a parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'. `string_value` will be set if a parameter defined in StudySpec is in type 'CATEGORICAL'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public object Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1TrialState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REQUESTED")]
		REQUESTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTIVE")]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STOPPING")]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SUCCEEDED")]
		SUCCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INFEASIBLE")]
		INFEASIBLE = 5,
	}
	
	/// <summary>
	/// Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportDataConfig
	{
		
		/// <summary>
		/// Labels that will be applied to newly imported Annotations. If two Annotations are identical, one of them will be deduped. Two Annotations are considered identical if their payload, payload_schema_uri and all of their labels are the same. These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationLabels")]
		public System.Collections.Generic.Dictionary<string, string> AnnotationLabels { get; set; }
		
		/// <summary>
		/// Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemLabels")]
		public System.Collections.Generic.Dictionary<string, string> DataItemLabels { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1GcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importSchemaUri")]
		public string ImportSchemaUri { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for DatasetService.ImportData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportDataOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for DatasetService.ImportData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportDataRequest
	{
		
		/// <summary>
		/// Required. The desired input locations. The contents of all input locations will be imported in one batch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importConfigs")]
		public GoogleCloudAiplatformV1ImportDataConfig[] ImportConfigs { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ImportData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportDataResponse
	{
	}
	
	/// <summary>
	/// Details of operations that perform import Feature values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata
	{
		
		/// <summary>
		/// List of ImportFeatureValues operations running under a single EntityType that are blocking this operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockingOperationIds")]
		public string[] BlockingOperationIds { get; set; }
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// Number of entities that have been imported by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedEntityCount")]
		public string ImportedEntityCount { get; set; }
		
		/// <summary>
		/// Number of Feature values that have been imported by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedFeatureValueCount")]
		public string ImportedFeatureValueCount { get; set; }
		
		/// <summary>
		/// The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidRowCount")]
		public string InvalidRowCount { get; set; }
		
		/// <summary>
		/// The source URI from where Feature values are imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceUris")]
		public string[] SourceUris { get; set; }
		
		/// <summary>
		/// The number rows that weren't ingested due to having timestamps outside the retention boundary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampOutsideRetentionRowsCount")]
		public string TimestampOutsideRetentionRowsCount { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreService.ImportFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportFeatureValuesRequest
	{
		
		/// <summary>
		/// The storage details for Avro input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avroSource")]
		public GoogleCloudAiplatformV1AvroSource AvroSource { get; set; }
		
		/// <summary>
		/// The BigQuery location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudAiplatformV1BigQuerySource BigquerySource { get; set; }
		
		/// <summary>
		/// The storage details for CSV input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="csvSource")]
		public GoogleCloudAiplatformV1CsvSource CsvSource { get; set; }
		
		/// <summary>
		/// If true, API doesn't start ingestion analysis pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableIngestionAnalysis")]
		public System.Nullable<System.Boolean> DisableIngestionAnalysis { get; set; }
		
		/// <summary>
		/// If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableOnlineServing")]
		public System.Nullable<System.Boolean> DisableOnlineServing { get; set; }
		
		/// <summary>
		/// Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityIdField")]
		public string EntityIdField { get; set; }
		
		/// <summary>
		/// Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureSpecs")]
		public GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec[] FeatureSpecs { get; set; }
		
		/// <summary>
		/// Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureTime")]
		public string FeatureTime { get; set; }
		
		/// <summary>
		/// Source column that holds the Feature timestamp for all Feature values in each entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureTimeField")]
		public string FeatureTimeField { get; set; }
		
		/// <summary>
		/// Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public System.Nullable<System.Int32> WorkerCount { get; set; }
	}
	
	/// <summary>
	/// Defines the Feature value(s) to import.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec
	{
		
		/// <summary>
		/// Required. ID of the Feature to import values of. This Feature must exist in the target EntityType, or the request will fail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Source column to get the Feature values from. If not set, uses the column with the same name as the Feature ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceField")]
		public string SourceField { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.ImportFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportFeatureValuesResponse
	{
		
		/// <summary>
		/// Number of entities that have been imported by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedEntityCount")]
		public string ImportedEntityCount { get; set; }
		
		/// <summary>
		/// Number of Feature values that have been imported by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedFeatureValueCount")]
		public string ImportedFeatureValueCount { get; set; }
		
		/// <summary>
		/// The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidRowCount")]
		public string InvalidRowCount { get; set; }
		
		/// <summary>
		/// The number rows that weren't ingested due to having feature timestamps outside the retention boundary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampOutsideRetentionRowsCount")]
		public string TimestampOutsideRetentionRowsCount { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.ImportModelEvaluation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ImportModelEvaluationRequest
	{
		
		/// <summary>
		/// A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelEvaluation")]
		public GoogleCloudAiplatformV1ModelEvaluation ModelEvaluation { get; set; }
	}
	
	/// <summary>
	/// A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluation
	{
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing EvaluatedDataItemView.predictions, EvaluatedDataItemView.ground_truths, EvaluatedAnnotation.predictions, and EvaluatedAnnotation.ground_truths. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). This field is not populated if there are neither EvaluatedDataItemViews nor EvaluatedAnnotations under this ModelEvaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSchemaUri")]
		public string AnnotationSchemaUri { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this ModelEvaluation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing EvaluatedDataItemView.data_item_payload and EvaluatedAnnotation.data_item_payload. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). This field is not populated if there are neither EvaluatedDataItemViews nor EvaluatedAnnotations under this ModelEvaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemSchemaUri")]
		public string DataItemSchemaUri { get; set; }
		
		/// <summary>
		/// The display name of the ModelEvaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Describes the values of ExplanationSpec that are used for explaining the predicted values on the evaluated data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationSpecs")]
		public GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec[] ExplanationSpecs { get; set; }
		
		/// <summary>
		/// The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a structured value with keys of "pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path", "row_based_metrics_path".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public object Metadata { get; set; }
		
		/// <summary>
		/// Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public object Metrics { get; set; }
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricsSchemaUri")]
		public string MetricsSchemaUri { get; set; }
		
		/// <summary>
		/// Aggregated explanation metrics for a Model over a set of instances.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelExplanation")]
		public GoogleCloudAiplatformV1ModelExplanation ModelExplanation { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the ModelEvaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// All possible dimensions of ModelEvaluationSlices. The dimensions can be used as the filter of the ModelService.ListModelEvaluationSlices request, in the form of `slice.dimension = `.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sliceDimensions")]
		public string[] SliceDimensions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec
	{
		
		/// <summary>
		/// Specification of Model explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationSpec")]
		public GoogleCloudAiplatformV1ExplanationSpec ExplanationSpec { get; set; }
		
		/// <summary>
		/// Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationType")]
		public string ExplanationType { get; set; }
	}
	
	/// <summary>
	/// A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Index
	{
		
		/// <summary>
		/// Output only. Timestamp when this Index was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexes")]
		public GoogleCloudAiplatformV1DeployedIndexRef[] DeployedIndexes { get; set; }
		
		/// <summary>
		/// The description of the Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Stats of the Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexStats")]
		public GoogleCloudAiplatformV1IndexStats IndexStats { get; set; }
		
		/// <summary>
		/// Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexUpdateMethod")]
		public System.Nullable<GoogleCloudAiplatformV1IndexIndexUpdateMethod> IndexUpdateMethod { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// An additional information about the Index; the schema of the metadata can be found in metadata_schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public object Metadata { get; set; }
		
		/// <summary>
		/// Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataSchemaUri")]
		public string MetadataSchemaUri { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Stats of the Index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexStats
	{
		
		/// <summary>
		/// Output only. The number of shards in the Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shardsCount")]
		public System.Nullable<System.Int32> ShardsCount { get; set; }
		
		/// <summary>
		/// Output only. The number of vectors in the Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vectorsCount")]
		public string VectorsCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1IndexIndexUpdateMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INDEX_UPDATE_METHOD_UNSPECIFIED")]
		INDEX_UPDATE_METHOD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BATCH_UPDATE")]
		BATCH_UPDATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STREAM_UPDATE")]
		STREAM_UPDATE = 2,
	}
	
	/// <summary>
	/// Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1IndexEndpoint
	{
		
		/// <summary>
		/// Output only. Timestamp when this IndexEndpoint was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The indexes deployed in this endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexes")]
		public GoogleCloudAiplatformV1DeployedIndex[] DeployedIndexes { get; set; }
		
		/// <summary>
		/// The description of the IndexEndpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enablePrivateServiceConnect")]
		public System.Nullable<System.Boolean> EnablePrivateServiceConnect { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the IndexEndpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in '12345', and {network} is network name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// Represents configuration for private service connect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privateServiceConnectConfig")]
		public GoogleCloudAiplatformV1PrivateServiceConnectConfig PrivateServiceConnectConfig { get; set; }
		
		/// <summary>
		/// Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicEndpointDomainName")]
		public string PublicEndpointDomainName { get; set; }
		
		/// <summary>
		/// Optional. If true, the deployed index will be accessible through public endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicEndpointEnabled")]
		public System.Nullable<System.Boolean> PublicEndpointEnabled { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents configuration for private service connect.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PrivateServiceConnectConfig
	{
		
		/// <summary>
		/// Required. If true, expose the IndexEndpoint via private service connect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enablePrivateServiceConnect")]
		public System.Nullable<System.Boolean> EnablePrivateServiceConnect { get; set; }
		
		/// <summary>
		/// A list of Projects from which the forwarding rule will target the service attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectAllowlist")]
		public string[] ProjectAllowlist { get; set; }
	}
	
	/// <summary>
	/// Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1InputDataConfig
	{
		
		/// <summary>
		/// Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSchemaUri")]
		public string AnnotationSchemaUri { get; set; }
		
		/// <summary>
		/// Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationsFilter")]
		public string AnnotationsFilter { get; set; }
		
		/// <summary>
		/// The BigQuery location for the output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryDestination")]
		public GoogleCloudAiplatformV1BigQueryDestination BigqueryDestination { get; set; }
		
		/// <summary>
		/// Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline's training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filterSplit")]
		public GoogleCloudAiplatformV1FilterSplit FilterSplit { get; set; }
		
		/// <summary>
		/// Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fractionSplit")]
		public GoogleCloudAiplatformV1FractionSplit FractionSplit { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsDestination")]
		public GoogleCloudAiplatformV1GcsDestination GcsDestination { get; set; }
		
		/// <summary>
		/// Whether to persist the ML use assignment to data item system labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="persistMlUseAssignment")]
		public System.Nullable<System.Boolean> PersistMlUseAssignment { get; set; }
		
		/// <summary>
		/// Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predefinedSplit")]
		public GoogleCloudAiplatformV1PredefinedSplit PredefinedSplit { get; set; }
		
		/// <summary>
		/// Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="savedQueryId")]
		public string SavedQueryId { get; set; }
		
		/// <summary>
		/// Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stratifiedSplit")]
		public GoogleCloudAiplatformV1StratifiedSplit StratifiedSplit { get; set; }
		
		/// <summary>
		/// Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestampSplit")]
		public GoogleCloudAiplatformV1TimestampSplit TimestampSplit { get; set; }
	}
	
	/// <summary>
	/// Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PredefinedSplit
	{
		
		/// <summary>
		/// Required. The key is a name of one of the Dataset's data columns. The value of the key (either the label's value or value in the column) must be one of {`training`, `validation`, `test`}, and it defines to which set the given piece of data is assigned. If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StratifiedSplit
	{
		
		/// <summary>
		/// Required. The key is a name of one of the Dataset's data columns. The key provided must be for a categorical column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to evaluate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testFraction")]
		public System.Nullable<System.Double> TestFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to train the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingFraction")]
		public System.Nullable<System.Double> TrainingFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to validate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationFraction")]
		public System.Nullable<System.Double> ValidationFraction { get; set; }
	}
	
	/// <summary>
	/// Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TimestampSplit
	{
		
		/// <summary>
		/// Required. The key is a name of one of the Dataset's data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to evaluate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testFraction")]
		public System.Nullable<System.Double> TestFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to train the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingFraction")]
		public System.Nullable<System.Double> TrainingFraction { get; set; }
		
		/// <summary>
		/// The fraction of the input data that is to be used to validate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationFraction")]
		public System.Nullable<System.Double> ValidationFraction { get; set; }
	}
	
	/// <summary>
	/// Contains information about the Large Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1LargeModelReference
	{
		
		/// <summary>
		/// Required. The unique name of the large Foundation or pre-built model. Like "chat-bison", "text-bison". Or model name with version ID, like "chat-bison@001", "text-bison@005", etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A subgraph of the overall lineage graph. Event edges connect Artifact and Execution nodes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1LineageSubgraph
	{
		
		/// <summary>
		/// The Artifact nodes in the subgraph.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifacts")]
		public GoogleCloudAiplatformV1Artifact[] Artifacts { get; set; }
		
		/// <summary>
		/// The Event edges between Artifacts and Executions in the subgraph.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public GoogleCloudAiplatformV1Event[] Events { get; set; }
		
		/// <summary>
		/// The Execution nodes in the subgraph.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public GoogleCloudAiplatformV1Execution[] Executions { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ListAnnotations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListAnnotationsResponse
	{
		
		/// <summary>
		/// A list of Annotations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public GoogleCloudAiplatformV1Annotation[] Annotations { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.ListArtifacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListArtifactsResponse
	{
		
		/// <summary>
		/// The Artifacts retrieved from the MetadataStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifacts")]
		public GoogleCloudAiplatformV1Artifact[] Artifacts { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListArtifactsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListBatchPredictionJobs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListBatchPredictionJobsResponse
	{
		
		/// <summary>
		/// List of BatchPredictionJobs in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batchPredictionJobs")]
		public GoogleCloudAiplatformV1BatchPredictionJob[] BatchPredictionJobs { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListBatchPredictionJobsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.ListContexts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListContextsResponse
	{
		
		/// <summary>
		/// The Contexts retrieved from the MetadataStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contexts")]
		public GoogleCloudAiplatformV1Context[] Contexts { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListContextsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListCustomJobs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListCustomJobsResponse
	{
		
		/// <summary>
		/// List of CustomJobs in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customJobs")]
		public GoogleCloudAiplatformV1CustomJob[] CustomJobs { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListCustomJobsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ListDataItems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListDataItemsResponse
	{
		
		/// <summary>
		/// A list of DataItems that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItems")]
		public GoogleCloudAiplatformV1DataItem[] DataItems { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListDataLabelingJobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListDataLabelingJobsResponse
	{
		
		/// <summary>
		/// A list of DataLabelingJobs that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataLabelingJobs")]
		public GoogleCloudAiplatformV1DataLabelingJob[] DataLabelingJobs { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ListDatasetVersions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListDatasetVersionsResponse
	{
		
		/// <summary>
		/// A list of DatasetVersions that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetVersions")]
		public GoogleCloudAiplatformV1DatasetVersion[] DatasetVersions { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ListDatasets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListDatasetsResponse
	{
		
		/// <summary>
		/// A list of Datasets that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasets")]
		public GoogleCloudAiplatformV1Dataset[] Datasets { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ListDeploymentResourcePools method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse
	{
		
		/// <summary>
		/// The DeploymentResourcePools from the specified location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentResourcePools")]
		public GoogleCloudAiplatformV1DeploymentResourcePool[] DeploymentResourcePools { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for EndpointService.ListEndpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListEndpointsResponse
	{
		
		/// <summary>
		/// List of Endpoints in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoints")]
		public GoogleCloudAiplatformV1Endpoint[] Endpoints { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListEndpointsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.ListEntityTypes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListEntityTypesResponse
	{
		
		/// <summary>
		/// The EntityTypes matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityTypes")]
		public GoogleCloudAiplatformV1EntityType[] EntityTypes { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListEntityTypesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.ListExecutions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListExecutionsResponse
	{
		
		/// <summary>
		/// The Executions retrieved from the MetadataStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public GoogleCloudAiplatformV1Execution[] Executions { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListExecutionsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeatureRegistryService.ListFeatureGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListFeatureGroupsResponse
	{
		
		/// <summary>
		/// The FeatureGroups matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureGroups")]
		public GoogleCloudAiplatformV1FeatureGroup[] FeatureGroups { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListFeatureGroupsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeatureOnlineStoreAdminService.ListFeatureOnlineStores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse
	{
		
		/// <summary>
		/// The FeatureOnlineStores matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureOnlineStores")]
		public GoogleCloudAiplatformV1FeatureOnlineStore[] FeatureOnlineStores { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListFeatureOnlineStoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeatureOnlineStoreAdminService.ListFeatureViewSyncs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListFeatureViewSyncsResponse
	{
		
		/// <summary>
		/// The FeatureViewSyncs matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureViewSyncs")]
		public GoogleCloudAiplatformV1FeatureViewSync[] FeatureViewSyncs { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListFeatureViewSyncsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeatureOnlineStoreAdminService.ListFeatureViews.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListFeatureViewsResponse
	{
		
		/// <summary>
		/// The FeatureViews matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureViews")]
		public GoogleCloudAiplatformV1FeatureView[] FeatureViews { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListFeatureViewsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.ListFeatures. Response message for FeatureRegistryService.ListFeatures.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListFeaturesResponse
	{
		
		/// <summary>
		/// The Features matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public GoogleCloudAiplatformV1Feature[] Features { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.ListFeaturestores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListFeaturestoresResponse
	{
		
		/// <summary>
		/// The Featurestores matching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featurestores")]
		public GoogleCloudAiplatformV1Featurestore[] Featurestores { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListFeaturestoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListHyperparameterTuningJobs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse
	{
		
		/// <summary>
		/// List of HyperparameterTuningJobs in the requested page. HyperparameterTuningJob.trials of the jobs will be not be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hyperparameterTuningJobs")]
		public GoogleCloudAiplatformV1HyperparameterTuningJob[] HyperparameterTuningJobs { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListHyperparameterTuningJobsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexEndpointService.ListIndexEndpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListIndexEndpointsResponse
	{
		
		/// <summary>
		/// List of IndexEndpoints in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexEndpoints")]
		public GoogleCloudAiplatformV1IndexEndpoint[] IndexEndpoints { get; set; }
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListIndexEndpointsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexService.ListIndexes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListIndexesResponse
	{
		
		/// <summary>
		/// List of indexes in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexes")]
		public GoogleCloudAiplatformV1Index[] Indexes { get; set; }
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListIndexesRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.ListMetadataSchemas.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListMetadataSchemasResponse
	{
		
		/// <summary>
		/// The MetadataSchemas found for the MetadataStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataSchemas")]
		public GoogleCloudAiplatformV1MetadataSchema[] MetadataSchemas { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListMetadataSchemasRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Instance of a general MetadataSchema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MetadataSchema
	{
		
		/// <summary>
		/// Output only. Timestamp when this MetadataSchema was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the Metadata Schema
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the MetadataSchema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaType")]
		public System.Nullable<GoogleCloudAiplatformV1MetadataSchemaSchemaType> SchemaType { get; set; }
		
		/// <summary>
		/// The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaVersion")]
		public string SchemaVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1MetadataSchemaSchemaType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="METADATA_SCHEMA_TYPE_UNSPECIFIED")]
		METADATA_SCHEMA_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ARTIFACT_TYPE")]
		ARTIFACT_TYPE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXECUTION_TYPE")]
		EXECUTION_TYPE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONTEXT_TYPE")]
		CONTEXT_TYPE = 3,
	}
	
	/// <summary>
	/// Response message for MetadataService.ListMetadataStores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListMetadataStoresResponse
	{
		
		/// <summary>
		/// The MetadataStores found for the Location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataStores")]
		public GoogleCloudAiplatformV1MetadataStore[] MetadataStores { get; set; }
		
		/// <summary>
		/// A token, which can be sent as ListMetadataStoresRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Instance of a metadata store. Contains a set of metadata that can be queried.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MetadataStore
	{
		
		/// <summary>
		/// Output only. Timestamp when this MetadataStore was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the MetadataStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the MetadataStore instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents state information for a MetadataStore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1MetadataStoreMetadataStoreState State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this MetadataStore was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents state information for a MetadataStore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
	{
		
		/// <summary>
		/// The disk utilization of the MetadataStore in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskUtilizationBytes")]
		public string DiskUtilizationBytes { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListModelDeploymentMonitoringJobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse
	{
		
		/// <summary>
		/// A list of ModelDeploymentMonitoringJobs that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentMonitoringJobs")]
		public GoogleCloudAiplatformV1ModelDeploymentMonitoringJob[] ModelDeploymentMonitoringJobs { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelDeploymentMonitoringJob
	{
		
		/// <summary>
		/// YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="analysisInstanceSchemaUri")]
		public string AnalysisInstanceSchemaUri { get; set; }
		
		/// <summary>
		/// Output only. The created bigquery tables for the job under customer project. Customer could do their own query & analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryTables")]
		public GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable[] BigqueryTables { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this ModelDeploymentMonitoringJob was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableMonitoringPipelineLogs")]
		public System.Nullable<System.Boolean> EnableMonitoringPipelineLogs { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public string Endpoint { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// All metadata of most recent monitoring pipelines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestMonitoringPipelineMetadata")]
		public GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata LatestMonitoringPipelineMetadata { get; set; }
		
		/// <summary>
		/// The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logTtl")]
		public string LogTtl { get; set; }
		
		/// <summary>
		/// Sampling Strategy for logging, can be for both training and prediction dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loggingSamplingStrategy")]
		public GoogleCloudAiplatformV1SamplingStrategy LoggingSamplingStrategy { get; set; }
		
		/// <summary>
		/// Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentMonitoringObjectiveConfigs")]
		public GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig[] ModelDeploymentMonitoringObjectiveConfigs { get; set; }
		
		/// <summary>
		/// The config for scheduling monitoring job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDeploymentMonitoringScheduleConfig")]
		public GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig ModelDeploymentMonitoringScheduleConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelMonitoringAlertConfig")]
		public GoogleCloudAiplatformV1ModelMonitoringAlertConfig ModelMonitoringAlertConfig { get; set; }
		
		/// <summary>
		/// Output only. Resource name of a ModelDeploymentMonitoringJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextScheduleTime")]
		public string NextScheduleTime { get; set; }
		
		/// <summary>
		/// YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictInstanceSchemaUri")]
		public string PredictInstanceSchemaUri { get; set; }
		
		/// <summary>
		/// Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samplePredictInstance")]
		public object SamplePredictInstance { get; set; }
		
		/// <summary>
		/// Output only. Schedule state when the monitoring job is in Running state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduleState")]
		public System.Nullable<GoogleCloudAiplatformV1ModelDeploymentMonitoringJobScheduleState> ScheduleState { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1BatchPredictionJobState State { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statsAnomaliesBaseDirectory")]
		public GoogleCloudAiplatformV1GcsDestination StatsAnomaliesBaseDirectory { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as well as some information of the logs stored in this table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable
	{
		
		/// <summary>
		/// The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigqueryTablePath")]
		public string BigqueryTablePath { get; set; }
		
		/// <summary>
		/// The source of log.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logSource")]
		public System.Nullable<GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTableLogSource> LogSource { get; set; }
		
		/// <summary>
		/// The type of log.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTableLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTableLogSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOG_SOURCE_UNSPECIFIED")]
		LOG_SOURCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRAINING")]
		TRAINING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVING")]
		SERVING = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTableLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOG_TYPE_UNSPECIFIED")]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PREDICT")]
		PREDICT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXPLAIN")]
		EXPLAIN = 2,
	}
	
	/// <summary>
	/// All metadata of most recent monitoring pipelines.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata
	{
		
		/// <summary>
		/// The time that most recent monitoring pipelines that is related to this run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runTime")]
		public string RunTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// Sampling Strategy for logging, can be for both training and prediction dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SamplingStrategy
	{
		
		/// <summary>
		/// Requests are randomly selected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="randomSampleConfig")]
		public GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig RandomSampleConfig { get; set; }
	}
	
	/// <summary>
	/// Requests are randomly selected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig
	{
		
		/// <summary>
		/// Sample rate (0, 1]
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sampleRate")]
		public System.Nullable<System.Double> SampleRate { get; set; }
	}
	
	/// <summary>
	/// ModelDeploymentMonitoringObjectiveConfig contains the pair of deployed_model_id to ModelMonitoringObjectiveConfig.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig
	{
		
		/// <summary>
		/// The DeployedModel ID of the objective config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectiveConfig")]
		public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig ObjectiveConfig { get; set; }
	}
	
	/// <summary>
	/// The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig
	{
		
		/// <summary>
		/// The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationConfig")]
		public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig ExplanationConfig { get; set; }
		
		/// <summary>
		/// The config for Prediction data drift detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionDriftDetectionConfig")]
		public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig PredictionDriftDetectionConfig { get; set; }
		
		/// <summary>
		/// Training Dataset information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingDataset")]
		public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset TrainingDataset { get; set; }
		
		/// <summary>
		/// The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingPredictionSkewDetectionConfig")]
		public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig TrainingPredictionSkewDetectionConfig { get; set; }
	}
	
	/// <summary>
	/// The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig
	{
		
		/// <summary>
		/// If want to analyze the Vertex Explainable AI feature attribute scores or not. If set to true, Vertex AI will log the feature attributions from explain response and do the skew/drift detection for them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableFeatureAttributes")]
		public System.Nullable<System.Boolean> EnableFeatureAttributes { get; set; }
		
		/// <summary>
		/// Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationBaseline")]
		public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline ExplanationBaseline { get; set; }
	}
	
	/// <summary>
	/// Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
	{
		
		/// <summary>
		/// The BigQuery location for the output content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigquery")]
		public GoogleCloudAiplatformV1BigQueryDestination Bigquery { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location where the output is to be written to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcs")]
		public GoogleCloudAiplatformV1GcsDestination Gcs { get; set; }
		
		/// <summary>
		/// The storage format of the predictions generated BatchPrediction job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionFormat")]
		public System.Nullable<GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat> PredictionFormat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PREDICTION_FORMAT_UNSPECIFIED")]
		PREDICTION_FORMAT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JSONL")]
		JSONL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGQUERY")]
		BIGQUERY = 2,
	}
	
	/// <summary>
	/// The config for Prediction data drift detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
	{
		
		/// <summary>
		/// Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionScoreDriftThresholds")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ThresholdConfig> AttributionScoreDriftThresholds { get; set; }
		
		/// <summary>
		/// The config for feature monitoring threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultDriftThreshold")]
		public GoogleCloudAiplatformV1ThresholdConfig DefaultDriftThreshold { get; set; }
		
		/// <summary>
		/// Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driftThresholds")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ThresholdConfig> DriftThresholds { get; set; }
	}
	
	/// <summary>
	/// The config for feature monitoring threshold.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ThresholdConfig
	{
		
		/// <summary>
		/// Specify a threshold value that can trigger the alert. If this threshold config is for feature distribution distance: 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Training Dataset information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset
	{
		
		/// <summary>
		/// The BigQuery location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudAiplatformV1BigQuerySource BigquerySource { get; set; }
		
		/// <summary>
		/// Data format of the dataset, only applicable if the input is from Google Cloud Storage. The possible formats are: "tf-record" The source file is a TFRecord file. "csv" The source file is a CSV file. "jsonl" The source file is a JSONL file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataFormat")]
		public string DataFormat { get; set; }
		
		/// <summary>
		/// The resource name of the Dataset used to train this Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage location for the input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1GcsSource GcsSource { get; set; }
		
		/// <summary>
		/// Sampling Strategy for logging, can be for both training and prediction dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loggingSamplingStrategy")]
		public GoogleCloudAiplatformV1SamplingStrategy LoggingSamplingStrategy { get; set; }
		
		/// <summary>
		/// The target field name the model is to predict. This field will be excluded when doing Predict and (or) Explain for the training data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetField")]
		public string TargetField { get; set; }
	}
	
	/// <summary>
	/// The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig
	{
		
		/// <summary>
		/// Key is the feature name and value is the threshold. The threshold here is against attribution score distance between the training and prediction feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionScoreSkewThresholds")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ThresholdConfig> AttributionScoreSkewThresholds { get; set; }
		
		/// <summary>
		/// The config for feature monitoring threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultSkewThreshold")]
		public GoogleCloudAiplatformV1ThresholdConfig DefaultSkewThreshold { get; set; }
		
		/// <summary>
		/// Key is the feature name and value is the threshold. If a feature needs to be monitored for skew, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between the training and prediction feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skewThresholds")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ThresholdConfig> SkewThresholds { get; set; }
	}
	
	/// <summary>
	/// The config for scheduling monitoring job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
	{
		
		/// <summary>
		/// Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitorInterval")]
		public string MonitorInterval { get; set; }
		
		/// <summary>
		/// The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitorWindow")]
		public string MonitorWindow { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringAlertConfig
	{
		
		/// <summary>
		/// The config for email alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emailAlertConfig")]
		public GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig EmailAlertConfig { get; set; }
		
		/// <summary>
		/// Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableLogging")]
		public System.Nullable<System.Boolean> EnableLogging { get; set; }
		
		/// <summary>
		/// Resource names of the NotificationChannels to send alert. Must be of the format `projects//notificationChannels/`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notificationChannels")]
		public string[] NotificationChannels { get; set; }
	}
	
	/// <summary>
	/// The config for email alert.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig
	{
		
		/// <summary>
		/// The email addresses to send the alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEmails")]
		public string[] UserEmails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ModelDeploymentMonitoringJobScheduleState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MONITORING_SCHEDULE_STATE_UNSPECIFIED")]
		MONITORING_SCHEDULE_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PENDING")]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OFFLINE")]
		OFFLINE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUNNING")]
		RUNNING = 3,
	}
	
	/// <summary>
	/// Response message for ModelService.ListModelEvaluationSlices.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse
	{
		
		/// <summary>
		/// List of ModelEvaluations in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelEvaluationSlices")]
		public GoogleCloudAiplatformV1ModelEvaluationSlice[] ModelEvaluationSlices { get; set; }
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListModelEvaluationSlicesRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ModelService.ListModelEvaluations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListModelEvaluationsResponse
	{
		
		/// <summary>
		/// List of ModelEvaluations in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelEvaluations")]
		public GoogleCloudAiplatformV1ModelEvaluation[] ModelEvaluations { get; set; }
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for ModelService.ListModelVersions
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListModelVersionsResponse
	{
		
		/// <summary>
		/// List of Model versions in the requested page. In the returned Model name field, version ID instead of regvision tag will be included.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="models")]
		public GoogleCloudAiplatformV1Model[] Models { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListModelVersionsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A trained machine learning Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Model
	{
		
		/// <summary>
		/// Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not present for AutoML Models or Large Models.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactUri")]
		public string ArtifactUri { get; set; }
		
		/// <summary>
		/// Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerSpec")]
		public GoogleCloudAiplatformV1ModelContainerSpec ContainerSpec { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Model was uploaded into Vertex AI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Stats of data used for train or evaluate the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataStats")]
		public GoogleCloudAiplatformV1ModelDataStats DataStats { get; set; }
		
		/// <summary>
		/// Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModels")]
		public GoogleCloudAiplatformV1DeployedModelRef[] DeployedModels { get; set; }
		
		/// <summary>
		/// The description of the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specification of Model explanation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="explanationSpec")]
		public GoogleCloudAiplatformV1ExplanationSpec ExplanationSpec { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public object Metadata { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataArtifact")]
		public string MetadataArtifact { get; set; }
		
		/// <summary>
		/// Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadataSchemaUri")]
		public string MetadataSchemaUri { get; set; }
		
		/// <summary>
		/// Detail description of the source information of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelSourceInfo")]
		public GoogleCloudAiplatformV1ModelSourceInfo ModelSourceInfo { get; set; }
		
		/// <summary>
		/// The resource name of the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Contains information about the original Model if this Model is a copy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalModelInfo")]
		public GoogleCloudAiplatformV1ModelOriginalModelInfo OriginalModelInfo { get; set; }
		
		/// <summary>
		/// Optional. This field is populated if the model is produced by a pipeline job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineJob")]
		public string PipelineJob { get; set; }
		
		/// <summary>
		/// Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictSchemata")]
		public GoogleCloudAiplatformV1PredictSchemata PredictSchemata { get; set; }
		
		/// <summary>
		/// Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedDeploymentResourcesTypes")]
		public string[] SupportedDeploymentResourcesTypes { get; set; }
		
		/// <summary>
		/// Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedExportFormats")]
		public GoogleCloudAiplatformV1ModelExportFormat[] SupportedExportFormats { get; set; }
		
		/// <summary>
		/// Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedInputStorageFormats")]
		public string[] SupportedInputStorageFormats { get; set; }
		
		/// <summary>
		/// Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedOutputStorageFormats")]
		public string[] SupportedOutputStorageFormats { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingPipeline")]
		public string TrainingPipeline { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Model was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_id})`. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionAliases")]
		public string[] VersionAliases { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this version was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionCreateTime")]
		public string VersionCreateTime { get; set; }
		
		/// <summary>
		/// The description of this version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionDescription")]
		public string VersionDescription { get; set; }
		
		/// <summary>
		/// Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionId")]
		public string VersionId { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this version was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionUpdateTime")]
		public string VersionUpdateTime { get; set; }
	}
	
	/// <summary>
	/// Detail description of the source information of the model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelSourceInfo
	{
		
		/// <summary>
		/// If this Model is copy of another Model. If true then source_type pertains to the original.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copy")]
		public System.Nullable<System.Boolean> Copy { get; set; }
		
		/// <summary>
		/// Type of the model source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceType")]
		public System.Nullable<GoogleCloudAiplatformV1ModelSourceInfoSourceType> SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ModelSourceInfoSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_SOURCE_TYPE_UNSPECIFIED")]
		MODEL_SOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUTOML")]
		AUTOML = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUSTOM")]
		CUSTOM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BQML")]
		BQML = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_GARDEN")]
		MODEL_GARDEN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GENIE")]
		GENIE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUSTOM_TEXT_EMBEDDING")]
		CUSTOM_TEXT_EMBEDDING = 6,
	}
	
	/// <summary>
	/// Contains information about the original Model if this Model is a copy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelOriginalModelInfo
	{
		
		/// <summary>
		/// Output only. The resource name of the Model this Model is a copy of, including the revision. Format: `projects/{project}/locations/{location}/models/{model_id}@{version_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
	}
	
	/// <summary>
	/// Represents export format supported by the Model. All formats export to Google Cloud Storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelExportFormat
	{
		
		/// <summary>
		/// Output only. The content of this Model that may be exported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportableContents")]
		public string[] ExportableContents { get; set; }
		
		/// <summary>
		/// Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Response message for ModelService.ListModels
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListModelsResponse
	{
		
		/// <summary>
		/// List of Models in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="models")]
		public GoogleCloudAiplatformV1Model[] Models { get; set; }
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListNasJobs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListNasJobsResponse
	{
		
		/// <summary>
		/// List of NasJobs in the requested page. NasJob.nas_job_output of the jobs will not be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nasJobs")]
		public GoogleCloudAiplatformV1NasJob[] NasJobs { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListNasJobsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Represents a Neural Architecture Search (NAS) job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJob
	{
		
		/// <summary>
		/// Output only. Time when the NasJob was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Optional. Enable a separation of Custom model training and restricted image training for tenant project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableRestrictedImageTraining")]
		public System.Nullable<System.Boolean> EnableRestrictedImageTraining { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. Time when the NasJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the NasJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a uCAIP NasJob output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nasJobOutput")]
		public GoogleCloudAiplatformV1NasJobOutput NasJobOutput { get; set; }
		
		/// <summary>
		/// Represents the spec of a NasJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nasJobSpec")]
		public GoogleCloudAiplatformV1NasJobSpec NasJobSpec { get; set; }
		
		/// <summary>
		/// Output only. Time when the NasJob for the first time entered the `JOB_STATE_RUNNING` state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1BatchPredictionJobState State { get; set; }
		
		/// <summary>
		/// Output only. Time when the NasJob was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents a uCAIP NasJob output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobOutput
	{
		
		/// <summary>
		/// The output of a multi-trial Neural Architecture Search (NAS) jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiTrialJobOutput")]
		public GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput MultiTrialJobOutput { get; set; }
	}
	
	/// <summary>
	/// The output of a multi-trial Neural Architecture Search (NAS) jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput
	{
		
		/// <summary>
		/// Output only. List of NasTrials that were started as part of search stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTrials")]
		public GoogleCloudAiplatformV1NasTrial[] SearchTrials { get; set; }
		
		/// <summary>
		/// Output only. List of NasTrials that were started as part of train stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainTrials")]
		public GoogleCloudAiplatformV1NasTrial[] TrainTrials { get; set; }
	}
	
	/// <summary>
	/// Represents a uCAIP NasJob trial.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasTrial
	{
		
		/// <summary>
		/// Output only. Time when the NasTrial's status changed to `SUCCEEDED` or `INFEASIBLE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finalMeasurement")]
		public GoogleCloudAiplatformV1Measurement FinalMeasurement { get; set; }
		
		/// <summary>
		/// Output only. The identifier of the NasTrial assigned by the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Output only. Time when the NasTrial was started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the NasTrial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1TrialState State { get; set; }
	}
	
	/// <summary>
	/// Represents the spec of a NasJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobSpec
	{
		
		/// <summary>
		/// The spec of multi-trial Neural Architecture Search (NAS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiTrialAlgorithmSpec")]
		public GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec MultiTrialAlgorithmSpec { get; set; }
		
		/// <summary>
		/// The ID of the existing NasJob in the same Project and Location which will be used to resume search. search_space_spec and nas_algorithm_spec are obtained from previous NasJob hence should not provide them again for this NasJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resumeNasJobId")]
		public string ResumeNasJobId { get; set; }
		
		/// <summary>
		/// It defines the search space for Neural Architecture Search (NAS).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchSpaceSpec")]
		public string SearchSpaceSpec { get; set; }
	}
	
	/// <summary>
	/// The spec of multi-trial Neural Architecture Search (NAS).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec
	{
		
		/// <summary>
		/// Represents a metric to optimize.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metric")]
		public GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec Metric { get; set; }
		
		/// <summary>
		/// The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `REINFORCEMENT_LEARNING`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiTrialAlgorithm")]
		public System.Nullable<GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm> MultiTrialAlgorithm { get; set; }
		
		/// <summary>
		/// Represent spec for search trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTrialSpec")]
		public GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec SearchTrialSpec { get; set; }
		
		/// <summary>
		/// Represent spec for train trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainTrialSpec")]
		public GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec TrainTrialSpec { get; set; }
	}
	
	/// <summary>
	/// Represents a metric to optimize.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec
	{
		
		/// <summary>
		/// Required. The optimization goal of the metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal")]
		public GoogleCloudAiplatformV1StudySpecMetricSpecGoal Goal { get; set; }
		
		/// <summary>
		/// Required. The ID of the metric. Must not contain whitespaces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metricId")]
		public string MetricId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MULTI_TRIAL_ALGORITHM_UNSPECIFIED")]
		MULTI_TRIAL_ALGORITHM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REINFORCEMENT_LEARNING")]
		REINFORCEMENT_LEARNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GRID_SEARCH")]
		GRID_SEARCH = 2,
	}
	
	/// <summary>
	/// Represent spec for search trials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
	{
		
		/// <summary>
		/// The number of failed trials that need to be seen before failing the NasJob. If set to 0, Vertex AI decides how many trials must fail before the whole job fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFailedTrialCount")]
		public System.Nullable<System.Int32> MaxFailedTrialCount { get; set; }
		
		/// <summary>
		/// Required. The maximum number of trials to run in parallel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxParallelTrialCount")]
		public System.Nullable<System.Int32> MaxParallelTrialCount { get; set; }
		
		/// <summary>
		/// Required. The maximum number of Neural Architecture Search (NAS) trials to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxTrialCount")]
		public System.Nullable<System.Int32> MaxTrialCount { get; set; }
		
		/// <summary>
		/// Represents the spec of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTrialJobSpec")]
		public GoogleCloudAiplatformV1CustomJobSpec SearchTrialJobSpec { get; set; }
	}
	
	/// <summary>
	/// Represent spec for train trials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec
	{
		
		/// <summary>
		/// Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public System.Nullable<System.Int32> Frequency { get; set; }
		
		/// <summary>
		/// Required. The maximum number of trials to run in parallel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxParallelTrialCount")]
		public System.Nullable<System.Int32> MaxParallelTrialCount { get; set; }
		
		/// <summary>
		/// Represents the spec of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainTrialJobSpec")]
		public GoogleCloudAiplatformV1CustomJobSpec TrainTrialJobSpec { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.ListNasTrialDetails
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListNasTrialDetailsResponse
	{
		
		/// <summary>
		/// List of top NasTrials in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nasTrialDetails")]
		public GoogleCloudAiplatformV1NasTrialDetail[] NasTrialDetails { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListNasTrialDetailsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Represents a NasTrial details along with its parameters. If there is a corresponding train NasTrial, the train NasTrial is also returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NasTrialDetail
	{
		
		/// <summary>
		/// Output only. Resource name of the NasTrialDetail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The parameters for the NasJob NasTrial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public string Parameters { get; set; }
		
		/// <summary>
		/// Represents a uCAIP NasJob trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTrial")]
		public GoogleCloudAiplatformV1NasTrial SearchTrial { get; set; }
		
		/// <summary>
		/// Represents a uCAIP NasJob trial.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainTrial")]
		public GoogleCloudAiplatformV1NasTrial TrainTrial { get; set; }
	}
	
	/// <summary>
	/// Response message for NotebookService.ListNotebookRuntimeTemplates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse
	{
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListNotebookRuntimeTemplatesRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of NotebookRuntimeTemplates in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeTemplates")]
		public GoogleCloudAiplatformV1NotebookRuntimeTemplate[] NotebookRuntimeTemplates { get; set; }
	}
	
	/// <summary>
	/// A template that specifies runtime configurations such as machine type, runtime version, network configurations, etc. Multiple runtimes can be created from a runtime template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NotebookRuntimeTemplate
	{
		
		/// <summary>
		/// Output only. Timestamp when this NotebookRuntimeTemplate was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Represents the spec of persistent disk options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataPersistentDiskSpec")]
		public GoogleCloudAiplatformV1PersistentDiskSpec DataPersistentDiskSpec { get; set; }
		
		/// <summary>
		/// The description of the NotebookRuntimeTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The euc configuration of NotebookRuntimeTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eucConfig")]
		public GoogleCloudAiplatformV1NotebookEucConfig EucConfig { get; set; }
		
		/// <summary>
		/// The idle shutdown configuration of NotebookRuntimeTemplate, which contains the idle_timeout as required field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idleShutdownConfig")]
		public GoogleCloudAiplatformV1NotebookIdleShutdownConfig IdleShutdownConfig { get; set; }
		
		/// <summary>
		/// Output only. The default template to use if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDefault")]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Specification of a single machine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="machineSpec")]
		public GoogleCloudAiplatformV1MachineSpec MachineSpec { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the NotebookRuntimeTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Network spec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkSpec")]
		public GoogleCloudAiplatformV1NetworkSpec NetworkSpec { get; set; }
		
		/// <summary>
		/// Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkTags")]
		public string[] NetworkTags { get; set; }
		
		/// <summary>
		/// Optional. Immutable. The type of the notebook runtime template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimeType")]
		public GoogleCloudAiplatformV1NotebookRuntimeNotebookRuntimeType NotebookRuntimeType { get; set; }
		
		/// <summary>
		/// Notebook Reservation Affinity for consuming Zonal reservation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reservationAffinity")]
		public GoogleCloudAiplatformV1NotebookReservationAffinity ReservationAffinity { get; set; }
		
		/// <summary>
		/// The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shieldedVmConfig")]
		public GoogleCloudAiplatformV1ShieldedVmConfig ShieldedVmConfig { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this NotebookRuntimeTemplate was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Represents the spec of persistent disk options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PersistentDiskSpec
	{
		
		/// <summary>
		/// Size in GB of the disk (default is 100GB).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskSizeGb")]
		public string DiskSizeGb { get; set; }
		
		/// <summary>
		/// Type of the disk (default is "pd-standard"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk Hard Disk Drive) "pd-balanced" (Balanced Persistent Disk) "pd-extreme" (Extreme Persistent Disk)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskType")]
		public string DiskType { get; set; }
	}
	
	/// <summary>
	/// The euc configuration of NotebookRuntimeTemplate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NotebookEucConfig
	{
		
		/// <summary>
		/// Output only. Whether ActAs check is bypassed for service account attached to the VM. If false, we need ActAs check for the default Compute Engine Service account. When a Runtime is created, a VM is allocated using Default Compute Engine Service Account. Any user requesting to use this Runtime requires Service Account User (ActAs) permission over this SA. If true, Runtime owner is using EUC and does not require the above permission as VM no longer use default Compute Engine SA, but a P4SA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bypassActasCheck")]
		public System.Nullable<System.Boolean> BypassActasCheck { get; set; }
		
		/// <summary>
		/// Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3, the default value of a boolean is false. In this way, by default EUC will be enabled for NotebookRuntimeTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eucDisabled")]
		public System.Nullable<System.Boolean> EucDisabled { get; set; }
	}
	
	/// <summary>
	/// The idle shutdown configuration of NotebookRuntimeTemplate, which contains the idle_timeout as required field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NotebookIdleShutdownConfig
	{
		
		/// <summary>
		/// Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idleShutdownDisabled")]
		public System.Nullable<System.Boolean> IdleShutdownDisabled { get; set; }
		
		/// <summary>
		/// Required. Duration is accurate to the second. In Notebook, Idle Timeout is accurate to minute so the range of idle_timeout (second) is: 10 * 60 ~ 1440 * 60.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idleTimeout")]
		public string IdleTimeout { get; set; }
	}
	
	/// <summary>
	/// Network spec.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1NetworkSpec
	{
		
		/// <summary>
		/// Whether to enable public internet access. Default false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableInternetAccess")]
		public System.Nullable<System.Boolean> EnableInternetAccess { get; set; }
		
		/// <summary>
		/// The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The name of the subnet that this instance is in. Format: `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnetwork")]
		public string Subnetwork { get; set; }
	}
	
	/// <summary>
	/// A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ShieldedVmConfig
	{
		
		/// <summary>
		/// Defines whether the instance has [Secure Boot](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot) enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableSecureBoot")]
		public System.Nullable<System.Boolean> EnableSecureBoot { get; set; }
	}
	
	/// <summary>
	/// Response message for NotebookService.ListNotebookRuntimes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListNotebookRuntimesResponse
	{
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to ListNotebookRuntimesRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of NotebookRuntimes in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebookRuntimes")]
		public GoogleCloudAiplatformV1NotebookRuntime[] NotebookRuntimes { get; set; }
	}
	
	/// <summary>
	/// Request message for VizierService.ListOptimalTrials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListOptimalTrialsRequest
	{
	}
	
	/// <summary>
	/// Response message for VizierService.ListOptimalTrials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListOptimalTrialsResponse
	{
		
		/// <summary>
		/// The pareto-optimal Trials for multiple objective Study or the optimal trial for single objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimalTrials")]
		public GoogleCloudAiplatformV1Trial[] OptimalTrials { get; set; }
	}
	
	/// <summary>
	/// Response message for PipelineService.ListPipelineJobs
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListPipelineJobsResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListPipelineJobsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of PipelineJobs in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineJobs")]
		public GoogleCloudAiplatformV1PipelineJob[] PipelineJobs { get; set; }
	}
	
	/// <summary>
	/// Response message for DatasetService.ListSavedQueries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListSavedQueriesResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of SavedQueries that match the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="savedQueries")]
		public GoogleCloudAiplatformV1SavedQuery[] SavedQueries { get; set; }
	}
	
	/// <summary>
	/// Response message for ScheduleService.ListSchedules
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListSchedulesResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListSchedulesRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of Schedules in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedules")]
		public GoogleCloudAiplatformV1Schedule[] Schedules { get; set; }
	}
	
	/// <summary>
	/// An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Schedule
	{
		
		/// <summary>
		/// Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowQueueing")]
		public System.Nullable<System.Boolean> AllowQueueing { get; set; }
		
		/// <summary>
		/// Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catchUp")]
		public System.Nullable<System.Boolean> CatchUp { get; set; }
		
		/// <summary>
		/// Request message for PipelineService.CreatePipelineJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createPipelineJobRequest")]
		public GoogleCloudAiplatformV1CreatePipelineJobRequest CreatePipelineJobRequest { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Schedule was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cron")]
		public string Cron { get; set; }
		
		/// <summary>
		/// Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Schedule was last paused. Unset if never paused.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastPauseTime")]
		public string LastPauseTime { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastResumeTime")]
		public string LastResumeTime { get; set; }
		
		/// <summary>
		/// Status of a scheduled run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastScheduledRunResponse")]
		public GoogleCloudAiplatformV1ScheduleRunResponse LastScheduledRunResponse { get; set; }
		
		/// <summary>
		/// Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxConcurrentRunCount")]
		public string MaxConcurrentRunCount { get; set; }
		
		/// <summary>
		/// Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxRunCount")]
		public string MaxRunCount { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the Schedule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextRunTime")]
		public string NextRunTime { get; set; }
		
		/// <summary>
		/// Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The number of runs started by this schedule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startedRunCount")]
		public string StartedRunCount { get; set; }
		
		/// <summary>
		/// Output only. The state of this Schedule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1ScheduleState> State { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Schedule was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Status of a scheduled run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ScheduleRunResponse
	{
		
		/// <summary>
		/// The response of the scheduled run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runResponse")]
		public string RunResponse { get; set; }
		
		/// <summary>
		/// The scheduled run time based on the user-specified schedule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduledRunTime")]
		public string ScheduledRunTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ScheduleState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTIVE")]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAUSED")]
		PAUSED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMPLETED")]
		COMPLETED = 3,
	}
	
	/// <summary>
	/// Response message for SpecialistPoolService.ListSpecialistPools.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListSpecialistPoolsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of SpecialistPools that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="specialistPools")]
		public GoogleCloudAiplatformV1SpecialistPool[] SpecialistPools { get; set; }
	}
	
	/// <summary>
	/// SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SpecialistPool
	{
		
		/// <summary>
		/// Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. The resource name of the SpecialistPool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the pending data labeling jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pendingDataLabelingJobs")]
		public string[] PendingDataLabelingJobs { get; set; }
		
		/// <summary>
		/// The email addresses of the managers in the SpecialistPool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="specialistManagerEmails")]
		public string[] SpecialistManagerEmails { get; set; }
		
		/// <summary>
		/// Output only. The number of managers in this SpecialistPool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="specialistManagersCount")]
		public System.Nullable<System.Int32> SpecialistManagersCount { get; set; }
		
		/// <summary>
		/// The email addresses of workers in the SpecialistPool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="specialistWorkerEmails")]
		public string[] SpecialistWorkerEmails { get; set; }
	}
	
	/// <summary>
	/// Response message for VizierService.ListStudies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListStudiesResponse
	{
		
		/// <summary>
		/// Passes this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The studies associated with the project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studies")]
		public GoogleCloudAiplatformV1Study[] Studies { get; set; }
	}
	
	/// <summary>
	/// A message representing a Study.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Study
	{
		
		/// <summary>
		/// Output only. Time at which the study was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. Describes the Study, default value is empty string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inactiveReason")]
		public string InactiveReason { get; set; }
		
		/// <summary>
		/// Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of a Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudAiplatformV1StudyState> State { get; set; }
		
		/// <summary>
		/// Represents specification of a Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studySpec")]
		public GoogleCloudAiplatformV1StudySpec StudySpec { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1StudyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTIVE")]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INACTIVE")]
		INACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMPLETED")]
		COMPLETED = 3,
	}
	
	/// <summary>
	/// Response message for TensorboardService.ListTensorboardExperiments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListTensorboardExperimentsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as ListTensorboardExperimentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The TensorboardExperiments mathching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardExperiments")]
		public GoogleCloudAiplatformV1TensorboardExperiment[] TensorboardExperiments { get; set; }
	}
	
	/// <summary>
	/// A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TensorboardExperiment
	{
		
		/// <summary>
		/// Output only. Timestamp when this TensorboardExperiment was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of this TensorboardExperiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// User provided name of this TensorboardExperiment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. Source of the TensorboardExperiment. Example: a custom training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this TensorboardExperiment was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ListTensorboardRuns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListTensorboardRunsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as ListTensorboardRunsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The TensorboardRuns mathching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardRuns")]
		public GoogleCloudAiplatformV1TensorboardRun[] TensorboardRuns { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ListTensorboardTimeSeries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse
	{
		
		/// <summary>
		/// A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The TensorboardTimeSeries mathching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardTimeSeries")]
		public GoogleCloudAiplatformV1TensorboardTimeSeries[] TensorboardTimeSeries { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ListTensorboards.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListTensorboardsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as ListTensorboardsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The Tensorboards mathching the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboards")]
		public GoogleCloudAiplatformV1Tensorboard[] Tensorboards { get; set; }
	}
	
	/// <summary>
	/// Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1Tensorboard
	{
		
		/// <summary>
		/// Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobStoragePathPrefix")]
		public string BlobStoragePathPrefix { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Tensorboard was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of this Tensorboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. User provided name of this Tensorboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isDefault")]
		public System.Nullable<System.Boolean> IsDefault { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The number of Runs stored in this Tensorboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runCount")]
		public System.Nullable<System.Int32> RunCount { get; set; }
		
		/// <summary>
		/// Output only. Timestamp when this Tensorboard was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for PipelineService.ListTrainingPipelines
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListTrainingPipelinesResponse
	{
		
		/// <summary>
		/// A token to retrieve the next page of results. Pass to ListTrainingPipelinesRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of TrainingPipelines in the requested page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingPipelines")]
		public GoogleCloudAiplatformV1TrainingPipeline[] TrainingPipelines { get; set; }
	}
	
	/// <summary>
	/// The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI's Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TrainingPipeline
	{
		
		/// <summary>
		/// Output only. Time when the TrainingPipeline was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The user-defined name of this TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Represents a customer-managed encryption key spec that can be applied to a top-level resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionSpec")]
		public GoogleCloudAiplatformV1EncryptionSpec EncryptionSpec { get; set; }
		
		/// <summary>
		/// Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputDataConfig")]
		public GoogleCloudAiplatformV1InputDataConfig InputDataConfig { get; set; }
		
		/// <summary>
		/// The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// A trained machine learning Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelToUpload")]
		public GoogleCloudAiplatformV1Model ModelToUpload { get; set; }
		
		/// <summary>
		/// Output only. Resource name of the TrainingPipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModel")]
		public string ParentModel { get; set; }
		
		/// <summary>
		/// Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The detailed state of the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudAiplatformV1PipelineJobState State { get; set; }
		
		/// <summary>
		/// Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingTaskDefinition")]
		public string TrainingTaskDefinition { get; set; }
		
		/// <summary>
		/// Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingTaskInputs")]
		public object TrainingTaskInputs { get; set; }
		
		/// <summary>
		/// Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingTaskMetadata")]
		public object TrainingTaskMetadata { get; set; }
		
		/// <summary>
		/// Output only. Time when the TrainingPipeline was most recently updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for VizierService.ListTrials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ListTrialsResponse
	{
		
		/// <summary>
		/// Pass this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The Trials associated with the Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trials")]
		public GoogleCloudAiplatformV1Trial[] Trials { get; set; }
	}
	
	/// <summary>
	/// Request message for VizierService.LookupStudy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1LookupStudyRequest
	{
		
		/// <summary>
		/// Required. The user-defined display name of the Study
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.MergeVersionAliases.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MergeVersionAliasesRequest
	{
		
		/// <summary>
		/// Required. The set of version aliases to merge. The alias should be at most 128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-` prefix to an alias means removing that alias from the version. `-` is NOT counted in the 128 characters. Example: `-golden` means removing the `golden` alias from the version. There is NO ordering in aliases, which means 1) The aliases returned from GetModel API might not have the exactly same order from this MergeVersionAliases API. 2) Adding and deleting the same alias in the request is not recommended, and the 2 operations will be cancelled out.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionAliases")]
		public string[] VersionAliases { get; set; }
	}
	
	/// <summary>
	/// Statistics and anomalies generated by Model Monitoring.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies
	{
		
		/// <summary>
		/// Number of anomalies within all stats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anomalyCount")]
		public System.Nullable<System.Int32> AnomalyCount { get; set; }
		
		/// <summary>
		/// Deployed Model ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// A list of historical Stats and Anomalies generated for all Features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureStats")]
		public GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies[] FeatureStats { get; set; }
		
		/// <summary>
		/// Model Monitoring Objective those stats and anomalies belonging to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objective")]
		public System.Nullable<GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesObjective> Objective { get; set; }
	}
	
	/// <summary>
	/// Historical Stats (and Anomalies) for a specific Feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies
	{
		
		/// <summary>
		/// Display Name of the Feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureDisplayName")]
		public string FeatureDisplayName { get; set; }
		
		/// <summary>
		/// A list of historical stats generated by different time window's Prediction Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionStats")]
		public GoogleCloudAiplatformV1FeatureStatsAnomaly[] PredictionStats { get; set; }
		
		/// <summary>
		/// The config for feature monitoring threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="threshold")]
		public GoogleCloudAiplatformV1ThresholdConfig Threshold { get; set; }
		
		/// <summary>
		/// Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingStats")]
		public GoogleCloudAiplatformV1FeatureStatsAnomaly TrainingStats { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesObjective
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED")]
		MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RAW_FEATURE_SKEW")]
		RAW_FEATURE_SKEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RAW_FEATURE_DRIFT")]
		RAW_FEATURE_DRIFT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FEATURE_ATTRIBUTION_SKEW")]
		FEATURE_ATTRIBUTION_SKEW = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FEATURE_ATTRIBUTION_DRIFT")]
		FEATURE_ATTRIBUTION_DRIFT = 4,
	}
	
	/// <summary>
	/// Runtime operation information for IndexEndpointService.MutateDeployedIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata
	{
		
		/// <summary>
		/// The unique index id specified by user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexId")]
		public string DeployedIndexId { get; set; }
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexEndpointService.MutateDeployedIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MutateDeployedIndexResponse
	{
		
		/// <summary>
		/// A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndex")]
		public GoogleCloudAiplatformV1DeployedIndex DeployedIndex { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for EndpointService.MutateDeployedModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for EndpointService.MutateDeployedModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MutateDeployedModelRequest
	{
		
		/// <summary>
		/// A deployment of a Model. Endpoints contain one or more DeployedModels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModel")]
		public GoogleCloudAiplatformV1DeployedModel DeployedModel { get; set; }
		
		/// <summary>
		/// Required. The update mask applies to the resource. See google.protobuf.FieldMask.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Response message for EndpointService.MutateDeployedModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1MutateDeployedModelResponse
	{
		
		/// <summary>
		/// A deployment of a Model. Endpoints contain one or more DeployedModels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModel")]
		public GoogleCloudAiplatformV1DeployedModel DeployedModel { get; set; }
	}
	
	/// <summary>
	/// Request message for JobService.PauseModelDeploymentMonitoringJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest
	{
	}
	
	/// <summary>
	/// Request message for ScheduleService.PauseSchedule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PauseScheduleRequest
	{
	}
	
	/// <summary>
	/// Request message for PredictionService.Predict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PredictRequest
	{
		
		/// <summary>
		/// Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public string[] Instances { get; set; }
		
		/// <summary>
		/// The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public object Parameters { get; set; }
	}
	
	/// <summary>
	/// Response message for PredictionService.Predict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PredictResponse
	{
		
		/// <summary>
		/// ID of the Endpoint's DeployedModel that served this prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// Output only. Request-level metadata returned by the model. The metadata type will be dependent upon the model implementation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public object Metadata { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Model which is deployed as the DeployedModel that this prediction hits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Output only. The display name of the Model which is deployed as the DeployedModel that this prediction hits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDisplayName")]
		public string ModelDisplayName { get; set; }
		
		/// <summary>
		/// Output only. The version ID of the Model which is deployed as the DeployedModel that this prediction hits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersionId")]
		public string ModelVersionId { get; set; }
		
		/// <summary>
		/// The predictions that are the output of the predictions call. The schema of any single prediction may be specified via Endpoint's DeployedModels' Model's PredictSchemata's prediction_schema_uri.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictions")]
		public string[] Predictions { get; set; }
	}
	
	/// <summary>
	/// A Model Garden Publisher Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModel
	{
		
		/// <summary>
		/// Optional. Additional information about the model's Frameworks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frameworks")]
		public string[] Frameworks { get; set; }
		
		/// <summary>
		/// Optional. Indicates the launch stage of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchStage")]
		public System.Nullable<GoogleCloudAiplatformV1PublisherModelLaunchStage> LaunchStage { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the PublisherModel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Indicates the open source category of the publisher model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openSourceCategory")]
		public System.Nullable<GoogleCloudAiplatformV1PublisherModelOpenSourceCategory> OpenSourceCategory { get; set; }
		
		/// <summary>
		/// Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictSchemata")]
		public GoogleCloudAiplatformV1PredictSchemata PredictSchemata { get; set; }
		
		/// <summary>
		/// Optional. Output only. Immutable. Used to indicate this model has a publisher model and provide the template of the publisher model resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publisherModelTemplate")]
		public string PublisherModelTemplate { get; set; }
		
		/// <summary>
		/// Actions could take on this Publisher Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedActions")]
		public GoogleCloudAiplatformV1PublisherModelCallToAction SupportedActions { get; set; }
		
		/// <summary>
		/// Output only. Immutable. The version ID of the PublisherModel. A new version is committed when a new model version is uploaded under an existing model id. It is an auto-incrementing decimal number in string representation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionId")]
		public string VersionId { get; set; }
		
		/// <summary>
		/// Optional. Indicates the state of the model version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionState")]
		public System.Nullable<GoogleCloudAiplatformV1PublisherModelVersionState> VersionState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PublisherModelLaunchStage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAUNCH_STAGE_UNSPECIFIED")]
		LAUNCH_STAGE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EXPERIMENTAL")]
		EXPERIMENTAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRIVATE_PREVIEW")]
		PRIVATE_PREVIEW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBLIC_PREVIEW")]
		PUBLIC_PREVIEW = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GA")]
		GA = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PublisherModelOpenSourceCategory
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OPEN_SOURCE_CATEGORY_UNSPECIFIED")]
		OPEN_SOURCE_CATEGORY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PROPRIETARY")]
		PROPRIETARY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT")]
		GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT")]
		THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GOOGLE_OWNED_OSS")]
		GOOGLE_OWNED_OSS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="THIRD_PARTY_OWNED_OSS")]
		THIRD_PARTY_OWNED_OSS = 5,
	}
	
	/// <summary>
	/// Actions could take on this Publisher Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelCallToAction
	{
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createApplication")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences CreateApplication { get; set; }
		
		/// <summary>
		/// Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploy")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionDeploy Deploy { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openEvaluationPipeline")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences OpenEvaluationPipeline { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openFineTuningPipeline")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences OpenFineTuningPipeline { get; set; }
		
		/// <summary>
		/// Open fine tuning pipelines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openFineTuningPipelines")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines OpenFineTuningPipelines { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openGenerationAiStudio")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences OpenGenerationAiStudio { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openGenie")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences OpenGenie { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openNotebook")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences OpenNotebook { get; set; }
		
		/// <summary>
		/// Open notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openNotebooks")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks OpenNotebooks { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="openPromptTuningPipeline")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences OpenPromptTuningPipeline { get; set; }
		
		/// <summary>
		/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestAccess")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences RequestAccess { get; set; }
		
		/// <summary>
		/// Rest API docs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewRestApi")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi ViewRestApi { get; set; }
	}
	
	/// <summary>
	/// The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences
	{
		
		/// <summary>
		/// Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1PublisherModelResourceReference> References { get; set; }
		
		/// <summary>
		/// Optional. Description of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceDescription")]
		public string ResourceDescription { get; set; }
		
		/// <summary>
		/// Optional. Title of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceTitle")]
		public string ResourceTitle { get; set; }
		
		/// <summary>
		/// Optional. Use case (CUJ) of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceUseCase")]
		public string ResourceUseCase { get; set; }
		
		/// <summary>
		/// Required. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Reference to a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelResourceReference
	{
		
		/// <summary>
		/// Description of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The resource name of the Google Cloud resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// The URI of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// Use case (CUJ) of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useCase")]
		public string UseCase { get; set; }
	}
	
	/// <summary>
	/// Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelCallToActionDeploy
	{
		
		/// <summary>
		/// Optional. The path to the directory containing the Model artifact and any of its supporting files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactUri")]
		public string ArtifactUri { get; set; }
		
		/// <summary>
		/// A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automaticResources")]
		public GoogleCloudAiplatformV1AutomaticResources AutomaticResources { get; set; }
		
		/// <summary>
		/// Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerSpec")]
		public GoogleCloudAiplatformV1ModelContainerSpec ContainerSpec { get; set; }
		
		/// <summary>
		/// A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dedicatedResources")]
		public GoogleCloudAiplatformV1DedicatedResources DedicatedResources { get; set; }
		
		/// <summary>
		/// Contains information about the Large Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="largeModelReference")]
		public GoogleCloudAiplatformV1LargeModelReference LargeModelReference { get; set; }
		
		/// <summary>
		/// Optional. Default model display name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelDisplayName")]
		public string ModelDisplayName { get; set; }
		
		/// <summary>
		/// Optional. The signed URI for ephemeral Cloud Storage access to model artifact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="publicArtifactUri")]
		public string PublicArtifactUri { get; set; }
		
		/// <summary>
		/// The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sharedResources")]
		public string SharedResources { get; set; }
		
		/// <summary>
		/// Required. The title of the regional resource reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Open fine tuning pipelines.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines
	{
		
		/// <summary>
		/// Required. Regional resource references to fine tuning pipelines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fineTuningPipelines")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences[] FineTuningPipelines { get; set; }
	}
	
	/// <summary>
	/// Open notebooks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks
	{
		
		/// <summary>
		/// Required. Regional resource references to notebooks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notebooks")]
		public GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences[] Notebooks { get; set; }
	}
	
	/// <summary>
	/// Rest API docs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi
	{
		
		/// <summary>
		/// Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentations")]
		public GoogleCloudAiplatformV1PublisherModelDocumentation[] Documentations { get; set; }
		
		/// <summary>
		/// Required. The title of the view rest API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A named piece of documentation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PublisherModelDocumentation
	{
		
		/// <summary>
		/// Required. Content of this piece of document (in Markdown format).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA, NODE.JS, etc..
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1PublisherModelVersionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERSION_STATE_UNSPECIFIED")]
		VERSION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERSION_STATE_STABLE")]
		VERSION_STATE_STABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERSION_STATE_UNSTABLE")]
		VERSION_STATE_UNSTABLE = 2,
	}
	
	/// <summary>
	/// Details of operations that perform MetadataService.PurgeArtifacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeArtifactsMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for MetadataService.PurgeArtifacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeArtifactsRequest
	{
		
		/// <summary>
		/// Required. A required filter matching the Artifacts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Artifact names that would be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.PurgeArtifacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeArtifactsResponse
	{
		
		/// <summary>
		/// The number of Artifacts that this request deleted (or, if `force` is false, the number of Artifacts that will be deleted). This can be an estimate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
		
		/// <summary>
		/// A sample of the Artifact names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeSample")]
		public string[] PurgeSample { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform MetadataService.PurgeContexts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeContextsMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for MetadataService.PurgeContexts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeContextsRequest
	{
		
		/// <summary>
		/// Required. A required filter matching the Contexts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Context names that would be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.PurgeContexts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeContextsResponse
	{
		
		/// <summary>
		/// The number of Contexts that this request deleted (or, if `force` is false, the number of Contexts that will be deleted). This can be an estimate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
		
		/// <summary>
		/// A sample of the Context names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeSample")]
		public string[] PurgeSample { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform MetadataService.PurgeExecutions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeExecutionsMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for MetadataService.PurgeExecutions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeExecutionsRequest
	{
		
		/// <summary>
		/// Required. A required filter matching the Executions to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Execution names that would be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.PurgeExecutions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1PurgeExecutionsResponse
	{
		
		/// <summary>
		/// The number of Executions that this request deleted (or, if `force` is false, the number of Executions that will be deleted). This can be an estimate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
		
		/// <summary>
		/// A sample of the Execution names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeSample")]
		public string[] PurgeSample { get; set; }
	}
	
	/// <summary>
	/// Response message for QueryDeployedModels method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1QueryDeployedModelsResponse
	{
		
		/// <summary>
		/// References to the DeployedModels that share the specified deploymentResourcePool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelRefs")]
		public GoogleCloudAiplatformV1DeployedModelRef[] DeployedModelRefs { get; set; }
		
		/// <summary>
		/// DEPRECATED Use deployed_model_refs instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModels")]
		public GoogleCloudAiplatformV1DeployedModel[] DeployedModels { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The total number of DeployedModels on this DeploymentResourcePool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalDeployedModelCount")]
		public System.Nullable<System.Int32> TotalDeployedModelCount { get; set; }
		
		/// <summary>
		/// The total number of Endpoints that have DeployedModels on this DeploymentResourcePool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalEndpointCount")]
		public System.Nullable<System.Int32> TotalEndpointCount { get; set; }
	}
	
	/// <summary>
	/// Request message for PredictionService.RawPredict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1RawPredictRequest
	{
		
		/// <summary>
		/// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpBody")]
		public GoogleApiHttpBody HttpBody { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreOnlineServingService.ReadFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadFeatureValuesRequest
	{
		
		/// <summary>
		/// Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityId")]
		public string EntityId { get; set; }
		
		/// <summary>
		/// Selector for Features of an EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureSelector")]
		public GoogleCloudAiplatformV1FeatureSelector FeatureSelector { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreOnlineServingService.ReadFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadFeatureValuesResponse
	{
		
		/// <summary>
		/// Entity view with Feature values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityView")]
		public GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView EntityView { get; set; }
		
		/// <summary>
		/// Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader Header { get; set; }
	}
	
	/// <summary>
	/// Entity view with Feature values.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView
	{
		
		/// <summary>
		/// Each piece of data holds the k requested values for one requested Feature. If no values for the requested Feature exist, the corresponding cell will be empty. This has the same size and is in the same order as the features from the header ReadFeatureValuesResponse.header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData[] Data { get; set; }
		
		/// <summary>
		/// ID of the requested entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityId")]
		public string EntityId { get; set; }
	}
	
	/// <summary>
	/// Container to hold value(s), successive in time, for one Feature from the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData
	{
		
		/// <summary>
		/// Value for a feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public GoogleCloudAiplatformV1FeatureValue Value { get; set; }
		
		/// <summary>
		/// Container for list of values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudAiplatformV1FeatureValueList Values { get; set; }
	}
	
	/// <summary>
	/// Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader
	{
		
		/// <summary>
		/// The resource name of the EntityType from the ReadFeatureValuesRequest. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityType")]
		public string EntityType { get; set; }
		
		/// <summary>
		/// List of Feature metadata corresponding to each piece of ReadFeatureValuesResponse.EntityView.data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureDescriptors")]
		public GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor[] FeatureDescriptors { get; set; }
	}
	
	/// <summary>
	/// Metadata for requested Features.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor
	{
		
		/// <summary>
		/// Feature ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// The request message for MatchService.ReadIndexDatapoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadIndexDatapointsRequest
	{
		
		/// <summary>
		/// The ID of the DeployedIndex that will serve the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexId")]
		public string DeployedIndexId { get; set; }
		
		/// <summary>
		/// IDs of the datapoints to be searched for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
	}
	
	/// <summary>
	/// The response message for MatchService.ReadIndexDatapoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadIndexDatapointsResponse
	{
		
		/// <summary>
		/// The result list of datapoints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datapoints")]
		public GoogleCloudAiplatformV1IndexDatapoint[] Datapoints { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ReadTensorboardBlobData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse
	{
		
		/// <summary>
		/// Blob messages containing blob bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobs")]
		public GoogleCloudAiplatformV1TensorboardBlob[] Blobs { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ReadTensorboardSize.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadTensorboardSizeResponse
	{
		
		/// <summary>
		/// Payload storage size for the TensorBoard
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storageSizeByte")]
		public string StorageSizeByte { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ReadTensorboardTimeSeriesData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse
	{
		
		/// <summary>
		/// All the data stored in a TensorboardTimeSeries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesData")]
		public GoogleCloudAiplatformV1TimeSeriesData TimeSeriesData { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.ReadTensorboardUsage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadTensorboardUsageResponse
	{
		
		/// <summary>
		/// Maps year-month (YYYYMM) string to per month usage data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthlyUsageData")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData> MonthlyUsageData { get; set; }
	}
	
	/// <summary>
	/// Per month usage data
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData
	{
		
		/// <summary>
		/// Usage data for each user in the given month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userUsageData")]
		public GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData[] UserUsageData { get; set; }
	}
	
	/// <summary>
	/// Per user usage data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData
	{
		
		/// <summary>
		/// User's username
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
		
		/// <summary>
		/// Number of times the user has read data within the Tensorboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="viewCount")]
		public string ViewCount { get; set; }
	}
	
	/// <summary>
	/// Request message for MetadataService.DeleteContextChildrenRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1RemoveContextChildrenRequest
	{
		
		/// <summary>
		/// The resource names of the child Contexts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childContexts")]
		public string[] ChildContexts { get; set; }
	}
	
	/// <summary>
	/// Response message for MetadataService.RemoveContextChildren.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1RemoveContextChildrenResponse
	{
	}
	
	/// <summary>
	/// Request message for IndexService.RemoveDatapoints
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1RemoveDatapointsRequest
	{
		
		/// <summary>
		/// A list of datapoint ids to be deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datapointIds")]
		public string[] DatapointIds { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexService.RemoveDatapoints
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1RemoveDatapointsResponse
	{
	}
	
	/// <summary>
	/// Runtime operation information for DatasetService.RestoreDatasetVersion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for JobService.ResumeModelDeploymentMonitoringJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest
	{
	}
	
	/// <summary>
	/// Request message for ScheduleService.ResumeSchedule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1ResumeScheduleRequest
	{
		
		/// <summary>
		/// Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catchUp")]
		public System.Nullable<System.Boolean> CatchUp { get; set; }
	}
	
	/// <summary>
	/// An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaAnnotationSpecColor
	{
		
		/// <summary>
		/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="color")]
		public GoogleTypeColor Color { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec represented by the color in the segmentation mask.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The ID of the AnnotationSpec represented by the color in the segmentation mask.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeColor
	{
		
		/// <summary>
		/// The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alpha")]
		public System.Nullable<System.Single> Alpha { get; set; }
		
		/// <summary>
		/// The amount of blue in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blue")]
		public System.Nullable<System.Single> Blue { get; set; }
		
		/// <summary>
		/// The amount of green in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="green")]
		public System.Nullable<System.Single> Green { get; set; }
		
		/// <summary>
		/// The amount of red in the color as a value in the interval [0, 1].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="red")]
		public System.Nullable<System.Single> Red { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to image object detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The rightmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xMax")]
		public System.Nullable<System.Double> XMax { get; set; }
		
		/// <summary>
		/// The leftmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xMin")]
		public System.Nullable<System.Double> XMin { get; set; }
		
		/// <summary>
		/// The bottommost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yMax")]
		public System.Nullable<System.Double> YMax { get; set; }
		
		/// <summary>
		/// The topmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yMin")]
		public System.Nullable<System.Double> YMin { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to image classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageClassificationAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Payload of Image DataItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageDataItem
	{
		
		/// <summary>
		/// Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
		
		/// <summary>
		/// Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// The metadata of Datasets that contain Image DataItems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageDatasetMetadata
	{
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemSchemaUri")]
		public string DataItemSchemaUri { get; set; }
		
		/// <summary>
		/// Google Cloud Storage Bucket name that contains the blob data of this Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsBucket")]
		public string GcsBucket { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to image segmentation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation
	{
		
		/// <summary>
		/// The mask based segmentation annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maskAnnotation")]
		public GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation MaskAnnotation { get; set; }
		
		/// <summary>
		/// Represents a polygon in image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="polygonAnnotation")]
		public GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation PolygonAnnotation { get; set; }
		
		/// <summary>
		/// Represents a polyline in image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="polylineAnnotation")]
		public GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation PolylineAnnotation { get; set; }
	}
	
	/// <summary>
	/// The mask based segmentation annotation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation
	{
		
		/// <summary>
		/// The mapping between color and AnnotationSpec for this Annotation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecColors")]
		public GoogleCloudAiplatformV1SchemaAnnotationSpecColor[] AnnotationSpecColors { get; set; }
		
		/// <summary>
		/// Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maskGcsUri")]
		public string MaskGcsUri { get; set; }
	}
	
	/// <summary>
	/// Represents a polygon in image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexes")]
		public GoogleCloudAiplatformV1SchemaVertex[] Vertexes { get; set; }
	}
	
	/// <summary>
	/// A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVertex
	{
		
		/// <summary>
		/// X coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="x")]
		public System.Nullable<System.Double> X { get; set; }
		
		/// <summary>
		/// Y coordinate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="y")]
		public System.Nullable<System.Double> Y { get; set; }
	}
	
	/// <summary>
	/// Represents a polyline in image.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The vertexes are connected one by one and the last vertex in not connected to the first one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexes")]
		public GoogleCloudAiplatformV1SchemaVertex[] Vertexes { get; set; }
	}
	
	/// <summary>
	/// Bounding box matching model metrics for a single intersection-over-union threshold and multiple label match confidence thresholds.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics
	{
		
		/// <summary>
		/// Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics[] ConfidenceMetrics { get; set; }
		
		/// <summary>
		/// The intersection-over-union threshold value used to compute this metrics entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iouThreshold")]
		public System.Nullable<System.Single> IouThreshold { get; set; }
		
		/// <summary>
		/// The mean average precision, most often close to `auPrc`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAveragePrecision")]
		public System.Nullable<System.Single> MeanAveragePrecision { get; set; }
	}
	
	/// <summary>
	/// Metrics for a single confidence threshold.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics
	{
		
		/// <summary>
		/// The confidence threshold value used to compute the metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The harmonic mean of recall and precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1Score")]
		public System.Nullable<System.Single> F1Score { get; set; }
		
		/// <summary>
		/// Precision under the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precision")]
		public System.Nullable<System.Single> Precision { get; set; }
		
		/// <summary>
		/// Recall under the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recall")]
		public System.Nullable<System.Single> Recall { get; set; }
	}
	
	/// <summary>
	/// Metrics for classification evaluation results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics
	{
		
		/// <summary>
		/// The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auPrc")]
		public System.Nullable<System.Single> AuPrc { get; set; }
		
		/// <summary>
		/// The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auRoc")]
		public System.Nullable<System.Single> AuRoc { get; set; }
		
		/// <summary>
		/// Metrics for each `confidenceThreshold` in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and `positionThreshold` = INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated metrics are derived from them. The confidence metrics entries may also be supplied for additional values of `positionThreshold`, but from these no aggregated metrics are computed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics[] ConfidenceMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confusionMatrix")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix ConfusionMatrix { get; set; }
		
		/// <summary>
		/// The Log Loss metric.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logLoss")]
		public System.Nullable<System.Single> LogLoss { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics
	{
		
		/// <summary>
		/// Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confusionMatrix")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix ConfusionMatrix { get; set; }
		
		/// <summary>
		/// The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1Score")]
		public System.Nullable<System.Single> F1Score { get; set; }
		
		/// <summary>
		/// The harmonic mean of recallAt1 and precisionAt1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1ScoreAt1")]
		public System.Nullable<System.Single> F1ScoreAt1 { get; set; }
		
		/// <summary>
		/// Macro-averaged F1 Score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1ScoreMacro")]
		public System.Nullable<System.Single> F1ScoreMacro { get; set; }
		
		/// <summary>
		/// Micro-averaged F1 Score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1ScoreMicro")]
		public System.Nullable<System.Single> F1ScoreMicro { get; set; }
		
		/// <summary>
		/// The number of ground truth labels that are not matched by a Model created label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="falseNegativeCount")]
		public string FalseNegativeCount { get; set; }
		
		/// <summary>
		/// The number of Model created labels that do not match a ground truth label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="falsePositiveCount")]
		public string FalsePositiveCount { get; set; }
		
		/// <summary>
		/// False Positive Rate for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="falsePositiveRate")]
		public System.Nullable<System.Single> FalsePositiveRate { get; set; }
		
		/// <summary>
		/// The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="falsePositiveRateAt1")]
		public System.Nullable<System.Single> FalsePositiveRateAt1 { get; set; }
		
		/// <summary>
		/// Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPredictions")]
		public System.Nullable<System.Int32> MaxPredictions { get; set; }
		
		/// <summary>
		/// Precision for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precision")]
		public System.Nullable<System.Single> Precision { get; set; }
		
		/// <summary>
		/// The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precisionAt1")]
		public System.Nullable<System.Single> PrecisionAt1 { get; set; }
		
		/// <summary>
		/// Recall (True Positive Rate) for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recall")]
		public System.Nullable<System.Single> Recall { get; set; }
		
		/// <summary>
		/// The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recallAt1")]
		public System.Nullable<System.Single> RecallAt1 { get; set; }
		
		/// <summary>
		/// The number of labels that were not created by the Model, but if they would, they would not match a ground truth label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trueNegativeCount")]
		public string TrueNegativeCount { get; set; }
		
		/// <summary>
		/// The number of Model created labels that match a ground truth label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="truePositiveCount")]
		public string TruePositiveCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
	{
		
		/// <summary>
		/// AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of "NULL" will be added as the last element.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecs")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef[] AnnotationSpecs { get; set; }
		
		/// <summary>
		/// Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rows")]
		public string[] Rows { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
	{
		
		/// <summary>
		/// Display name of the AnnotationSpec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// ID of the AnnotationSpec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// Metrics for forecasting evaluation results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
	{
		
		/// <summary>
		/// Mean Absolute Error (MAE).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAbsoluteError")]
		public System.Nullable<System.Single> MeanAbsoluteError { get; set; }
		
		/// <summary>
		/// Mean absolute percentage error. Infinity when there are zeros in the ground truth.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAbsolutePercentageError")]
		public System.Nullable<System.Single> MeanAbsolutePercentageError { get; set; }
		
		/// <summary>
		/// The quantile metrics entries for each quantile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantileMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry[] QuantileMetrics { get; set; }
		
		/// <summary>
		/// Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rSquared")]
		public System.Nullable<System.Single> RSquared { get; set; }
		
		/// <summary>
		/// Root Mean Squared Error (RMSE).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rootMeanSquaredError")]
		public System.Nullable<System.Single> RootMeanSquaredError { get; set; }
		
		/// <summary>
		/// Root mean squared log error. Undefined when there are negative ground truth values or predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rootMeanSquaredLogError")]
		public System.Nullable<System.Single> RootMeanSquaredLogError { get; set; }
		
		/// <summary>
		/// Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rootMeanSquaredPercentageError")]
		public System.Nullable<System.Single> RootMeanSquaredPercentageError { get; set; }
		
		/// <summary>
		/// Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weightedAbsolutePercentageError")]
		public System.Nullable<System.Single> WeightedAbsolutePercentageError { get; set; }
	}
	
	/// <summary>
	/// Entry for the Quantiles loss type optimization objective.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry
	{
		
		/// <summary>
		/// This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedQuantile")]
		public System.Nullable<System.Double> ObservedQuantile { get; set; }
		
		/// <summary>
		/// The quantile for this entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantile")]
		public System.Nullable<System.Double> Quantile { get; set; }
		
		/// <summary>
		/// The scaled pinball loss of this quantile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaledPinballLoss")]
		public System.Nullable<System.Single> ScaledPinballLoss { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics
	{
		
		/// <summary>
		/// BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bleu")]
		public System.Nullable<System.Single> Bleu { get; set; }
		
		/// <summary>
		/// ROUGE-L (Longest Common Subsequence) scoring at summary level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rougeLSum")]
		public System.Nullable<System.Single> RougeLSum { get; set; }
	}
	
	/// <summary>
	/// Metrics for image object detection evaluation results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics
	{
		
		/// <summary>
		/// The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetricsEntries`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBoxMeanAveragePrecision")]
		public System.Nullable<System.Single> BoundingBoxMeanAveragePrecision { get; set; }
		
		/// <summary>
		/// The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBoxMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics[] BoundingBoxMetrics { get; set; }
		
		/// <summary>
		/// The total number of bounding boxes (i.e. summed over all images) the ground truth used to create this evaluation had.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedBoundingBoxCount")]
		public System.Nullable<System.Int32> EvaluatedBoundingBoxCount { get; set; }
	}
	
	/// <summary>
	/// Metrics for image segmentation evaluation results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics
	{
		
		/// <summary>
		/// Metrics for each confidenceThreshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 Precision-recall curve can be derived from it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMetricsEntries")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry[] ConfidenceMetricsEntries { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry
	{
		
		/// <summary>
		/// Metrics are computed with an assumption that the model never returns predictions with score lower than this value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confusionMatrix")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix ConfusionMatrix { get; set; }
		
		/// <summary>
		/// DSC or the F1 score, The harmonic mean of recall and precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diceScoreCoefficient")]
		public System.Nullable<System.Single> DiceScoreCoefficient { get; set; }
		
		/// <summary>
		/// The intersection-over-union score. The measure of overlap of the annotation's category mask with ground truth category mask on the DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iouScore")]
		public System.Nullable<System.Single> IouScore { get; set; }
		
		/// <summary>
		/// Precision for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precision")]
		public System.Nullable<System.Single> Precision { get; set; }
		
		/// <summary>
		/// Recall (True Positive Rate) for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recall")]
		public System.Nullable<System.Single> Recall { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics
	{
		
		/// <summary>
		/// The rate at which the input predicted strings exactly match their references.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactMatch")]
		public System.Nullable<System.Single> ExactMatch { get; set; }
	}
	
	/// <summary>
	/// Metrics for regression evaluation results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics
	{
		
		/// <summary>
		/// Mean Absolute Error (MAE).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAbsoluteError")]
		public System.Nullable<System.Single> MeanAbsoluteError { get; set; }
		
		/// <summary>
		/// Mean absolute percentage error. Infinity when there are zeros in the ground truth.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAbsolutePercentageError")]
		public System.Nullable<System.Single> MeanAbsolutePercentageError { get; set; }
		
		/// <summary>
		/// Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rSquared")]
		public System.Nullable<System.Single> RSquared { get; set; }
		
		/// <summary>
		/// Root Mean Squared Error (RMSE).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rootMeanSquaredError")]
		public System.Nullable<System.Single> RootMeanSquaredError { get; set; }
		
		/// <summary>
		/// Root mean squared log error. Undefined when there are negative ground truth values or predictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rootMeanSquaredLogError")]
		public System.Nullable<System.Single> RootMeanSquaredLogError { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics
	{
		
		/// <summary>
		/// ROUGE-L (Longest Common Subsequence) scoring at summary level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rougeLSum")]
		public System.Nullable<System.Single> RougeLSum { get; set; }
	}
	
	/// <summary>
	/// Metrics for text extraction evaluation results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics
	{
		
		/// <summary>
		/// Metrics that have confidence thresholds. Precision-recall curve can be derived from them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics[] ConfidenceMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="confusionMatrix")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix ConfusionMatrix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics
	{
		
		/// <summary>
		/// Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The harmonic mean of recall and precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1Score")]
		public System.Nullable<System.Single> F1Score { get; set; }
		
		/// <summary>
		/// Precision for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precision")]
		public System.Nullable<System.Single> Precision { get; set; }
		
		/// <summary>
		/// Recall (True Positive Rate) for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recall")]
		public System.Nullable<System.Single> Recall { get; set; }
	}
	
	/// <summary>
	/// Model evaluation metrics for text sentiment problems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics
	{
		
		[System.Runtime.Serialization.DataMember(Name="confusionMatrix")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix ConfusionMatrix { get; set; }
		
		/// <summary>
		/// The harmonic mean of recall and precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1Score")]
		public System.Nullable<System.Single> F1Score { get; set; }
		
		/// <summary>
		/// Linear weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linearKappa")]
		public System.Nullable<System.Single> LinearKappa { get; set; }
		
		/// <summary>
		/// Mean absolute error. Only set for ModelEvaluations, not for ModelEvaluationSlices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAbsoluteError")]
		public System.Nullable<System.Single> MeanAbsoluteError { get; set; }
		
		/// <summary>
		/// Mean squared error. Only set for ModelEvaluations, not for ModelEvaluationSlices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanSquaredError")]
		public System.Nullable<System.Single> MeanSquaredError { get; set; }
		
		/// <summary>
		/// Precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precision")]
		public System.Nullable<System.Single> Precision { get; set; }
		
		/// <summary>
		/// Quadratic weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quadraticKappa")]
		public System.Nullable<System.Single> QuadraticKappa { get; set; }
		
		/// <summary>
		/// Recall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recall")]
		public System.Nullable<System.Single> Recall { get; set; }
	}
	
	/// <summary>
	/// UNIMPLEMENTED. Track matching model metrics for a single track match threshold and multiple label match confidence thresholds.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics
	{
		
		/// <summary>
		/// Metrics for each label-match `confidenceThreshold` from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics[] ConfidenceMetrics { get; set; }
		
		/// <summary>
		/// The intersection-over-union threshold value between bounding boxes across frames used to compute this metric entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iouThreshold")]
		public System.Nullable<System.Single> IouThreshold { get; set; }
		
		/// <summary>
		/// The mean bounding box iou over all confidence thresholds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanBoundingBoxIou")]
		public System.Nullable<System.Single> MeanBoundingBoxIou { get; set; }
		
		/// <summary>
		/// The mean mismatch rate over all confidence thresholds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanMismatchRate")]
		public System.Nullable<System.Single> MeanMismatchRate { get; set; }
		
		/// <summary>
		/// The mean average precision over all confidence thresholds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanTrackingAveragePrecision")]
		public System.Nullable<System.Single> MeanTrackingAveragePrecision { get; set; }
	}
	
	/// <summary>
	/// Metrics for a single confidence threshold.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics
	{
		
		/// <summary>
		/// Bounding box intersection-over-union precision. Measures how well the bounding boxes overlap between each other (e.g. complete overlap or just barely above iou_threshold).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBoxIou")]
		public System.Nullable<System.Single> BoundingBoxIou { get; set; }
		
		/// <summary>
		/// The confidence threshold value used to compute the metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// Mismatch rate, which measures the tracking consistency, i.e. correctness of instance ID continuity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mismatchRate")]
		public System.Nullable<System.Single> MismatchRate { get; set; }
		
		/// <summary>
		/// Tracking precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingPrecision")]
		public System.Nullable<System.Single> TrackingPrecision { get; set; }
		
		/// <summary>
		/// Tracking recall.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingRecall")]
		public System.Nullable<System.Single> TrackingRecall { get; set; }
	}
	
	/// <summary>
	/// The Evaluation metrics given a specific precision_window_length.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics
	{
		
		/// <summary>
		/// Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics[] ConfidenceMetrics { get; set; }
		
		/// <summary>
		/// The mean average precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meanAveragePrecision")]
		public System.Nullable<System.Single> MeanAveragePrecision { get; set; }
		
		/// <summary>
		/// This VideoActionMetrics is calculated based on this prediction window length. If the predicted action's timestamp is inside the time window whose center is the ground truth action's timestamp with this specific length, the prediction result is treated as a true positive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precisionWindowLength")]
		public string PrecisionWindowLength { get; set; }
	}
	
	/// <summary>
	/// Metrics for a single confidence threshold.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics
	{
		
		/// <summary>
		/// Output only. The confidence threshold value used to compute the metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// Output only. The harmonic mean of recall and precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="f1Score")]
		public System.Nullable<System.Single> F1Score { get; set; }
		
		/// <summary>
		/// Output only. Precision for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="precision")]
		public System.Nullable<System.Single> Precision { get; set; }
		
		/// <summary>
		/// Output only. Recall for the given confidence threshold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recall")]
		public System.Nullable<System.Single> Recall { get; set; }
	}
	
	/// <summary>
	/// Model evaluation metrics for video action recognition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics
	{
		
		/// <summary>
		/// The number of ground truth actions used to create this evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedActionCount")]
		public System.Nullable<System.Int32> EvaluatedActionCount { get; set; }
		
		/// <summary>
		/// The metric entries for precision window lengths: 1s,2s,3s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="videoActionMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics[] VideoActionMetrics { get; set; }
	}
	
	/// <summary>
	/// Model evaluation metrics for video object tracking problems. Evaluates prediction quality of both labeled bounding boxes and labeled tracks (i.e. series of bounding boxes sharing same label and instance ID).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics
	{
		
		/// <summary>
		/// The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetrics`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBoxMeanAveragePrecision")]
		public System.Nullable<System.Single> BoundingBoxMeanAveragePrecision { get; set; }
		
		/// <summary>
		/// The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boundingBoxMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics[] BoundingBoxMetrics { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedBoundingBoxCount")]
		public System.Nullable<System.Int32> EvaluatedBoundingBoxCount { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The number of video frames used to create this evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedFrameCount")]
		public System.Nullable<System.Int32> EvaluatedFrameCount { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames) the ground truth used to create this evaluation had.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedTrackCount")]
		public System.Nullable<System.Int32> EvaluatedTrackCount { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the `meanAveragePrecision` averaged over all `trackMetrics`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackMeanAveragePrecision")]
		public System.Nullable<System.Single> TrackMeanAveragePrecision { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the `meanBoundingBoxIou` averaged over all `trackMetrics`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackMeanBoundingBoxIou")]
		public System.Nullable<System.Single> TrackMeanBoundingBoxIou { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The single metric for tracking consistency evaluation: the `meanMismatchRate` averaged over all `trackMetrics`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackMeanMismatchRate")]
		public System.Nullable<System.Single> TrackMeanMismatchRate { get; set; }
		
		/// <summary>
		/// UNIMPLEMENTED. The tracks match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackMetrics")]
		public GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics[] TrackMetrics { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Image Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance
	{
		
		/// <summary>
		/// The image bytes or Cloud Storage URI to make the prediction on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Image Object Detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance
	{
		
		/// <summary>
		/// The image bytes or Cloud Storage URI to make the prediction on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Image Segmentation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance
	{
		
		/// <summary>
		/// The image bytes to make the predictions on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/png
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Text Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance
	{
		
		/// <summary>
		/// The text snippet to make the predictions on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Text Extraction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance
	{
		
		/// <summary>
		/// The text snippet to make the predictions on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. Vertex AI will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Text Sentiment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance
	{
		
		/// <summary>
		/// The text snippet to make the predictions on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Video Action Recognition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance
	{
		
		/// <summary>
		/// The Google Cloud Storage location of the video on which to perform the prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentEnd")]
		public string TimeSegmentEnd { get; set; }
		
		/// <summary>
		/// The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentStart")]
		public string TimeSegmentStart { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Video Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance
	{
		
		/// <summary>
		/// The Google Cloud Storage location of the video on which to perform the prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentEnd")]
		public string TimeSegmentEnd { get; set; }
		
		/// <summary>
		/// The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentStart")]
		public string TimeSegmentStart { get; set; }
	}
	
	/// <summary>
	/// Prediction input format for Video Object Tracking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance
	{
		
		/// <summary>
		/// The Google Cloud Storage location of the video on which to perform the prediction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentEnd")]
		public string TimeSegmentEnd { get; set; }
		
		/// <summary>
		/// The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentStart")]
		public string TimeSegmentStart { get; set; }
	}
	
	/// <summary>
	/// The configuration for grounding checking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig
	{
		
		/// <summary>
		/// If set, skip finding claim attributions (i.e not generate grounding citation).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableAttribution")]
		public System.Nullable<System.Boolean> DisableAttribution { get; set; }
		
		/// <summary>
		/// The sources for the grounding checking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry[] Sources { get; set; }
	}
	
	/// <summary>
	/// Single source entry for the grounding checking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry
	{
		
		/// <summary>
		/// The uri of the Vertex AI Search data source. Deprecated. Use vertex_ai_search_datastore instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enterpriseDatastore")]
		public string EnterpriseDatastore { get; set; }
		
		/// <summary>
		/// The grounding text passed inline with the Predict API. It can support up to 1 million bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineContext")]
		public string InlineContext { get; set; }
		
		/// <summary>
		/// The type of the grounding checking source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntryType> Type { get; set; }
		
		/// <summary>
		/// The uri of the Vertex AI Search data source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vertexAiSearchDatastore")]
		public string VertexAiSearchDatastore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNSPECIFIED")]
		UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WEB")]
		WEB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENTERPRISE")]
		ENTERPRISE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VERTEX_AI_SEARCH")]
		VERTEX_AI_SEARCH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INLINE")]
		INLINE = 4,
	}
	
	/// <summary>
	/// Prediction model parameters for Image Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams
	{
		
		/// <summary>
		/// The Model only returns predictions with at least this confidence score. Default value is 0.0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPredictions")]
		public System.Nullable<System.Int32> MaxPredictions { get; set; }
	}
	
	/// <summary>
	/// Prediction model parameters for Image Object Detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams
	{
		
		/// <summary>
		/// The Model only returns predictions with at least this confidence score. Default value is 0.0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPredictions")]
		public System.Nullable<System.Int32> MaxPredictions { get; set; }
	}
	
	/// <summary>
	/// Prediction model parameters for Image Segmentation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams
	{
		
		/// <summary>
		/// When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
	}
	
	/// <summary>
	/// Prediction model parameters for Video Action Recognition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams
	{
		
		/// <summary>
		/// The Model only returns predictions with at least this confidence score. Default value is 0.0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPredictions")]
		public System.Nullable<System.Int32> MaxPredictions { get; set; }
	}
	
	/// <summary>
	/// Prediction model parameters for Video Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams
	{
		
		/// <summary>
		/// The Model only returns predictions with at least this confidence score. Default value is 0.0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPredictions")]
		public System.Nullable<System.Int32> MaxPredictions { get; set; }
		
		/// <summary>
		/// Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oneSecIntervalClassification")]
		public System.Nullable<System.Boolean> OneSecIntervalClassification { get; set; }
		
		/// <summary>
		/// Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segmentClassification")]
		public System.Nullable<System.Boolean> SegmentClassification { get; set; }
		
		/// <summary>
		/// Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shotClassification")]
		public System.Nullable<System.Boolean> ShotClassification { get; set; }
	}
	
	/// <summary>
	/// Prediction model parameters for Video Object Tracking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams
	{
		
		/// <summary>
		/// The Model only returns predictions with at least this confidence score. Default value is 0.0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceThreshold")]
		public System.Nullable<System.Single> ConfidenceThreshold { get; set; }
		
		/// <summary>
		/// The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxPredictions")]
		public System.Nullable<System.Int32> MaxPredictions { get; set; }
		
		/// <summary>
		/// Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minBoundingBoxSize")]
		public System.Nullable<System.Single> MinBoundingBoxSize { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Image and Text Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult
	{
		
		/// <summary>
		/// The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidences")]
		public double[] Confidences { get; set; }
		
		/// <summary>
		/// The display names of the AnnotationSpecs that had been identified, order matches the IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayNames")]
		public string[] DisplayNames { get; set; }
		
		/// <summary>
		/// The resource IDs of the AnnotationSpecs that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Image Object Detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult
	{
		
		/// <summary>
		/// Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bboxes")]
		public string[] Bboxes { get; set; }
		
		/// <summary>
		/// The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidences")]
		public double[] Confidences { get; set; }
		
		/// <summary>
		/// The display names of the AnnotationSpecs that had been identified, order matches the IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayNames")]
		public string[] DisplayNames { get; set; }
		
		/// <summary>
		/// The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Image Segmentation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult
	{
		
		/// <summary>
		/// A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model's metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categoryMask")]
		public string CategoryMask { get; set; }
		
		/// <summary>
		/// A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidenceMask")]
		public string ConfidenceMask { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Tabular Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult
	{
		
		/// <summary>
		/// The name of the classes being classified, contains all possible values of the target column.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="classes")]
		public string[] Classes { get; set; }
		
		/// <summary>
		/// The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public double[] Scores { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Tabular Regression.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult
	{
		
		/// <summary>
		/// The lower bound of the prediction interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowerBound")]
		public System.Nullable<System.Single> LowerBound { get; set; }
		
		/// <summary>
		/// Quantile predictions, in 1-1 correspondence with quantile_values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantilePredictions")]
		public double[] QuantilePredictions { get; set; }
		
		/// <summary>
		/// Quantile values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantileValues")]
		public double[] QuantileValues { get; set; }
		
		/// <summary>
		/// The upper bound of the prediction interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upperBound")]
		public System.Nullable<System.Single> UpperBound { get; set; }
		
		/// <summary>
		/// The regression value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Single> Value { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Text Extraction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult
	{
		
		/// <summary>
		/// The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidences")]
		public double[] Confidences { get; set; }
		
		/// <summary>
		/// The display names of the AnnotationSpecs that had been identified, order matches the IDs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayNames")]
		public string[] DisplayNames { get; set; }
		
		/// <summary>
		/// The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
		
		/// <summary>
		/// The end offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSegmentEndOffsets")]
		public string[] TextSegmentEndOffsets { get; set; }
		
		/// <summary>
		/// The start offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSegmentStartOffsets")]
		public string[] TextSegmentStartOffsets { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Text Sentiment
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult
	{
		
		/// <summary>
		/// The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public System.Nullable<System.Int32> Sentiment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributeColumns")]
		public string[] AttributeColumns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="attributeWeights")]
		public double[] AttributeWeights { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contextColumns")]
		public string[] ContextColumns { get; set; }
		
		/// <summary>
		/// TFT feature importance values. Each pair for {context/horizon/attribute} should have the same shape since the weight corresponds to the column names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextWeights")]
		public double[] ContextWeights { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horizonColumns")]
		public string[] HorizonColumns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horizonWeights")]
		public double[] HorizonWeights { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Time Series Forecasting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult
	{
		
		/// <summary>
		/// Quantile predictions, in 1-1 correspondence with quantile_values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantilePredictions")]
		public double[] QuantilePredictions { get; set; }
		
		/// <summary>
		/// Quantile values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantileValues")]
		public double[] QuantileValues { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tftFeatureImportance")]
		public GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance TftFeatureImportance { get; set; }
		
		/// <summary>
		/// The regression value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Single> Value { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Video Action Recognition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult
	{
		
		/// <summary>
		/// The Model's confidence in correction of this prediction, higher value means higher confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The resource ID of the AnnotationSpec that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentEnd")]
		public string TimeSegmentEnd { get; set; }
		
		/// <summary>
		/// The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentStart")]
		public string TimeSegmentStart { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Video Classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult
	{
		
		/// <summary>
		/// The Model's confidence in correction of this prediction, higher value means higher confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The resource ID of the AnnotationSpec that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentEnd' from the input instance, for other types it is the end of a shot or a 1 second interval respectively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentEnd")]
		public string TimeSegmentEnd { get; set; }
		
		/// <summary>
		/// The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentStart' from the input instance, for other types it is the start of a shot or a 1 second interval respectively.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentStart")]
		public string TimeSegmentStart { get; set; }
		
		/// <summary>
		/// The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Prediction output format for Video Object Tracking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult
	{
		
		/// <summary>
		/// The Model's confidence in correction of this prediction, higher value means higher confidence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidence")]
		public System.Nullable<System.Single> Confidence { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// All of the frames of the video in which a single object instance has been detected. The bounding boxes in the frames identify the same object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frames")]
		public GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame[] Frames { get; set; }
		
		/// <summary>
		/// The resource ID of the AnnotationSpec that had been identified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The end, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentEnd")]
		public string TimeSegmentEnd { get; set; }
		
		/// <summary>
		/// The beginning, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegmentStart")]
		public string TimeSegmentStart { get; set; }
	}
	
	/// <summary>
	/// The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame
	{
		
		/// <summary>
		/// A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeOffset")]
		public string TimeOffset { get; set; }
		
		/// <summary>
		/// The rightmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xMax")]
		public System.Nullable<System.Single> XMax { get; set; }
		
		/// <summary>
		/// The leftmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xMin")]
		public System.Nullable<System.Single> XMin { get; set; }
		
		/// <summary>
		/// The bottommost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yMax")]
		public System.Nullable<System.Single> YMax { get; set; }
		
		/// <summary>
		/// The topmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yMin")]
		public System.Nullable<System.Single> YMin { get; set; }
	}
	
	/// <summary>
	/// Represents a line of JSONL in the batch prediction output file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictionResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleCloudAiplatformV1SchemaPredictionResultError Error { get; set; }
		
		/// <summary>
		/// User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public System.Collections.Generic.Dictionary<string, object> Instance { get; set; }
		
		/// <summary>
		/// Optional user-provided key from the input instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prediction")]
		public object Prediction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaPredictionResultError
	{
		
		/// <summary>
		/// Error message with additional details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Error status. This will be serialized into the enum name e.g. "NOT_FOUND".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaPredictionResultErrorStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaPredictionResultErrorStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OK")]
		OK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CANCELLED")]
		CANCELLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNKNOWN")]
		UNKNOWN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_ARGUMENT")]
		INVALID_ARGUMENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEADLINE_EXCEEDED")]
		DEADLINE_EXCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NOT_FOUND")]
		NOT_FOUND = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALREADY_EXISTS")]
		ALREADY_EXISTS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PERMISSION_DENIED")]
		PERMISSION_DENIED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAUTHENTICATED")]
		UNAUTHENTICATED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESOURCE_EXHAUSTED")]
		RESOURCE_EXHAUSTED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILED_PRECONDITION")]
		FAILED_PRECONDITION = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ABORTED")]
		ABORTED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OUT_OF_RANGE")]
		OUT_OF_RANGE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIMPLEMENTED")]
		UNIMPLEMENTED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTERNAL")]
		INTERNAL = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNAVAILABLE")]
		UNAVAILABLE = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_LOSS")]
		DATA_LOSS = 16,
	}
	
	/// <summary>
	/// The metadata of Datasets that contain tables data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTablesDatasetMetadata
	{
		
		/// <summary>
		/// The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig InputConfig { get; set; }
	}
	
	/// <summary>
	/// The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource BigquerySource { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource GcsSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource
	{
		
		/// <summary>
		/// The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource
	{
		
		/// <summary>
		/// Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string[] Uri { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to text classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextClassificationAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Payload of Text DataItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextDataItem
	{
		
		/// <summary>
		/// Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
	}
	
	/// <summary>
	/// The metadata of Datasets that contain Text DataItems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextDatasetMetadata
	{
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemSchemaUri")]
		public string DataItemSchemaUri { get; set; }
		
		/// <summary>
		/// Google Cloud Storage Bucket name that contains the blob data of this Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsBucket")]
		public string GcsBucket { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to text extraction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextExtractionAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The text segment inside of DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textSegment")]
		public GoogleCloudAiplatformV1SchemaTextSegment TextSegment { get; set; }
	}
	
	/// <summary>
	/// The text segment inside of DataItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextSegment
	{
		
		/// <summary>
		/// The text content in the segment for output only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endOffset")]
		public string EndOffset { get; set; }
		
		/// <summary>
		/// Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startOffset")]
		public string StartOffset { get; set; }
	}
	
	/// <summary>
	/// The metadata of Datasets that contain Text Prompt data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata
	{
		
		/// <summary>
		/// Number of candidates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="candidateCount")]
		public string CandidateCount { get; set; }
		
		/// <summary>
		/// The Google Cloud Storage URI that stores the prompt data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
		
		/// <summary>
		/// The configuration for grounding checking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groundingConfig")]
		public GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig GroundingConfig { get; set; }
		
		/// <summary>
		/// Value of the maximum number of tokens generated set when the dataset was saved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxOutputTokens")]
		public string MaxOutputTokens { get; set; }
		
		/// <summary>
		/// User-created prompt note. Note size limit is 2KB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// Type of the prompt dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promptType")]
		public string PromptType { get; set; }
		
		/// <summary>
		/// Customized stop sequences.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stopSequences")]
		public string[] StopSequences { get; set; }
		
		/// <summary>
		/// Temperature value used for sampling set when the dataset was saved. This value is used to tune the degree of randomness.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="temperature")]
		public System.Nullable<System.Single> Temperature { get; set; }
		
		/// <summary>
		/// The content of the prompt dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		/// <summary>
		/// Top K value set when the dataset was saved. This value determines how many candidates with highest probability from the vocab would be selected for each decoding step.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topK")]
		public string TopK { get; set; }
		
		/// <summary>
		/// Top P value set when the dataset was saved. Given topK tokens for decoding, top candidates will be selected until the sum of their probabilities is topP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topP")]
		public System.Nullable<System.Single> TopP { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to text sentiment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextSentimentAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The sentiment score for text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentiment")]
		public System.Nullable<System.Int32> Sentiment { get; set; }
		
		/// <summary>
		/// The sentiment max score for text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentMax")]
		public System.Nullable<System.Int32> SentimentMax { get; set; }
	}
	
	/// <summary>
	/// The metadata of SavedQuery contains TextSentiment Annotations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata
	{
		
		/// <summary>
		/// The maximum sentiment of sentiment Anntoation in this SavedQuery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentMax")]
		public System.Nullable<System.Int32> SentimentMax { get; set; }
	}
	
	/// <summary>
	/// A time period inside of a DataItem that has a time dimension (e.g. video).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTimeSegment
	{
		
		/// <summary>
		/// End of the time segment (exclusive), represented as the duration since the start of the DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimeOffset")]
		public string EndTimeOffset { get; set; }
		
		/// <summary>
		/// Start of the time segment (inclusive), represented as the duration since the start of the DataItem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeOffset")]
		public string StartTimeOffset { get; set; }
	}
	
	/// <summary>
	/// The metadata of Datasets that contain time series data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata
	{
		
		/// <summary>
		/// The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputConfig")]
		public GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig InputConfig { get; set; }
		
		/// <summary>
		/// The column name of the time column that identifies time order in the time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeColumn")]
		public string TimeColumn { get; set; }
		
		/// <summary>
		/// The column name of the time series identifier column that identifies the time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesIdentifierColumn")]
		public string TimeSeriesIdentifierColumn { get; set; }
	}
	
	/// <summary>
	/// The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource BigquerySource { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource GcsSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource
	{
		
		/// <summary>
		/// The URI of a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource
	{
		
		/// <summary>
		/// Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string[] Uri { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Forecasting Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs Inputs { get; set; }
		
		/// <summary>
		/// Model metadata specific to AutoML Forecasting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs
	{
		
		/// <summary>
		/// Additional experiment flags for the time series forcasting training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalExperiments")]
		public string[] AdditionalExperiments { get; set; }
		
		/// <summary>
		/// Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableAtForecastColumns")]
		public string[] AvailableAtForecastColumns { get; set; }
		
		/// <summary>
		/// The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextWindow")]
		public string ContextWindow { get; set; }
		
		/// <summary>
		/// A duration of time expressed in time granularity units.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataGranularity")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity DataGranularity { get; set; }
		
		/// <summary>
		/// If probabilistic inference is enabled, the model will fit a distribution that captures the uncertainty of a prediction. At inference time, the predictive distribution is used to make a point prediction that minimizes the optimization objective. For example, the mean of a predictive distribution is the point prediction that minimizes RMSE loss. If quantiles are specified, then the quantiles of the distribution are also returned. The optimization objective cannot be minimize-quantile-loss.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableProbabilisticInference")]
		public System.Nullable<System.Boolean> EnableProbabilisticInference { get; set; }
		
		/// <summary>
		/// Configuration for exporting test set predictions to a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportEvaluatedDataItemsConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig ExportEvaluatedDataItemsConfig { get; set; }
		
		/// <summary>
		/// The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forecastHorizon")]
		public string ForecastHorizon { get; set; }
		
		/// <summary>
		/// Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hierarchyConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig HierarchyConfig { get; set; }
		
		/// <summary>
		/// The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holidayRegions")]
		public string[] HolidayRegions { get; set; }
		
		/// <summary>
		/// Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjective")]
		public string OptimizationObjective { get; set; }
		
		/// <summary>
		/// Quantiles to use for minimize-quantile-loss `optimization_objective`, or for probabilistic inference. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantiles")]
		public double[] Quantiles { get; set; }
		
		/// <summary>
		/// The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetColumn")]
		public string TargetColumn { get; set; }
		
		/// <summary>
		/// The name of the column that identifies time order in the time series. This column must be available at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeColumn")]
		public string TimeColumn { get; set; }
		
		/// <summary>
		/// Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesAttributeColumns")]
		public string[] TimeSeriesAttributeColumns { get; set; }
		
		/// <summary>
		/// The name of the column that identifies the time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesIdentifierColumn")]
		public string TimeSeriesIdentifierColumn { get; set; }
		
		/// <summary>
		/// Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainBudgetMilliNodeHours")]
		public string TrainBudgetMilliNodeHours { get; set; }
		
		/// <summary>
		/// Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformations")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation[] Transformations { get; set; }
		
		/// <summary>
		/// Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unavailableAtForecastColumns")]
		public string[] UnavailableAtForecastColumns { get; set; }
		
		/// <summary>
		/// Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationOptions")]
		public string ValidationOptions { get; set; }
		
		/// <summary>
		/// Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weightColumn")]
		public string WeightColumn { get; set; }
		
		/// <summary>
		/// Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig WindowConfig { get; set; }
	}
	
	/// <summary>
	/// A duration of time expressed in time granularity units.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity
	{
		
		/// <summary>
		/// The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public string Quantity { get; set; }
		
		/// <summary>
		/// The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	/// <summary>
	/// Configuration for exporting test set predictions to a BigQuery table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
	{
		
		/// <summary>
		/// URI of desired destination BigQuery table. Expected format: `bq://{project_id}:{dataset_id}:{table}` If not specified, then results are exported to the following auto-created BigQuery table: `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd'T'HH_mm_ss_SSS'Z'}.evaluated_examples`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationBigqueryUri")]
		public string DestinationBigqueryUri { get; set; }
		
		/// <summary>
		/// If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overrideExistingTable")]
		public System.Nullable<System.Boolean> OverrideExistingTable { get; set; }
	}
	
	/// <summary>
	/// Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig
	{
		
		/// <summary>
		/// A list of time series attribute column names that define the time series hierarchy. Only one level of hierarchy is supported, ex. 'region' for a hierarchy of stores or 'department' for a hierarchy of products. If multiple columns are specified, time series will be grouped by their combined values, ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted. If no group columns are specified, all time series are considered to be part of the same group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupColumns")]
		public string[] GroupColumns { get; set; }
		
		/// <summary>
		/// The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupTemporalTotalWeight")]
		public System.Nullable<System.Double> GroupTemporalTotalWeight { get; set; }
		
		/// <summary>
		/// The weight of the loss for predictions aggregated over time series in the same group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupTotalWeight")]
		public System.Nullable<System.Double> GroupTotalWeight { get; set; }
		
		/// <summary>
		/// The weight of the loss for predictions aggregated over the horizon for a single time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="temporalTotalWeight")]
		public System.Nullable<System.Double> TemporalTotalWeight { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation
	{
		
		/// <summary>
		/// Training pipeline will infer the proper transformation based on the statistic of dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation Auto { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categorical")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation Categorical { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numeric")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation Numeric { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation Text { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation Timestamp { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will infer the proper transformation based on the statistic of dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeFormat")]
		public string TimeFormat { get; set; }
	}
	
	/// <summary>
	/// Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig
	{
		
		/// <summary>
		/// Name of the column that should be used to generate sliding windows. The column should contain either booleans or string booleans; if the value of the row is True, generate a sliding window with the horizon starting at that row. The column will not be used as a feature in training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		/// <summary>
		/// Maximum number of windows that should be generated across all time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxCount")]
		public string MaxCount { get; set; }
		
		/// <summary>
		/// Stride length used to generate input examples. Within one time series, every {$STRIDE_LENGTH} rows will be used to generate a sliding window.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strideLength")]
		public string StrideLength { get; set; }
	}
	
	/// <summary>
	/// Model metadata specific to AutoML Forecasting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata
	{
		
		/// <summary>
		/// BigQuery destination uri for exported evaluated examples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedDataItemsBigqueryUri")]
		public string EvaluatedDataItemsBigqueryUri { get; set; }
		
		/// <summary>
		/// Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainCostMilliNodeHours")]
		public string TrainCostMilliNodeHours { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Image Classification Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
	{
		
		/// <summary>
		/// The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseModelId")]
		public string BaseModelId { get; set; }
		
		/// <summary>
		/// The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="budgetMilliNodeHours")]
		public string BudgetMilliNodeHours { get; set; }
		
		/// <summary>
		/// Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableEarlyStopping")]
		public System.Nullable<System.Boolean> DisableEarlyStopping { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsModelType> ModelType { get; set; }
		
		/// <summary>
		/// If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiLabel")]
		public System.Nullable<System.Boolean> MultiLabel { get; set; }
		
		/// <summary>
		/// A wrapper class which contains the tunable parameters in an AutoML Image training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tunableParameter")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter TunableParameter { get; set; }
		
		/// <summary>
		/// The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uptrainBaseModelId")]
		public string UptrainBaseModelId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputsModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_TYPE_UNSPECIFIED")]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD")]
		CLOUD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_1")]
		CLOUD_1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_LOW_LATENCY_1")]
		MOBILE_TF_LOW_LATENCY_1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_VERSATILE_1")]
		MOBILE_TF_VERSATILE_1 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_HIGH_ACCURACY_1")]
		MOBILE_TF_HIGH_ACCURACY_1 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EFFICIENTNET")]
		EFFICIENTNET = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MAXVIT")]
		MAXVIT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VIT")]
		VIT = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COCA")]
		COCA = 9,
	}
	
	/// <summary>
	/// A wrapper class which contains the tunable parameters in an AutoML Image training job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
	{
		
		/// <summary>
		/// Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkpointName")]
		public string CheckpointName { get; set; }
		
		/// <summary>
		/// Customizable dataset settings, used in the `model_garden_trainer`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetConfig")]
		public System.Collections.Generic.Dictionary<string, string> DatasetConfig { get; set; }
		
		/// <summary>
		/// Represents specification of a Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studySpec")]
		public GoogleCloudAiplatformV1StudySpec StudySpec { get; set; }
		
		/// <summary>
		/// Customizable trainer settings, used in the `model_garden_trainer`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainerConfig")]
		public System.Collections.Generic.Dictionary<string, string> TrainerConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainerType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterTrainerType> TrainerType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameterTrainerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TRAINER_TYPE_UNSPECIFIED")]
		TRAINER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUTOML_TRAINER")]
		AUTOML_TRAINER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_GARDEN_TRAINER")]
		MODEL_GARDEN_TRAINER = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata
	{
		
		/// <summary>
		/// The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costMilliNodeHours")]
		public string CostMilliNodeHours { get; set; }
		
		/// <summary>
		/// For successful job completions, this is the reason why the job has finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulStopReason")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason> SuccessfulStopReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SUCCESSFUL_STOP_REASON_UNSPECIFIED")]
		SUCCESSFUL_STOP_REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BUDGET_REACHED")]
		BUDGET_REACHED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_CONVERGED")]
		MODEL_CONVERGED = 2,
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Image Object Detection Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs
	{
		
		/// <summary>
		/// The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="budgetMilliNodeHours")]
		public string BudgetMilliNodeHours { get; set; }
		
		/// <summary>
		/// Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableEarlyStopping")]
		public System.Nullable<System.Boolean> DisableEarlyStopping { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsModelType> ModelType { get; set; }
		
		/// <summary>
		/// A wrapper class which contains the tunable parameters in an AutoML Image training job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tunableParameter")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter TunableParameter { get; set; }
		
		/// <summary>
		/// The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uptrainBaseModelId")]
		public string UptrainBaseModelId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputsModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_TYPE_UNSPECIFIED")]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_HIGH_ACCURACY_1")]
		CLOUD_HIGH_ACCURACY_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_LOW_LATENCY_1")]
		CLOUD_LOW_LATENCY_1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_1")]
		CLOUD_1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_LOW_LATENCY_1")]
		MOBILE_TF_LOW_LATENCY_1 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_VERSATILE_1")]
		MOBILE_TF_VERSATILE_1 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_HIGH_ACCURACY_1")]
		MOBILE_TF_HIGH_ACCURACY_1 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_STREAMING_1")]
		CLOUD_STREAMING_1 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SPINENET")]
		SPINENET = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="YOLO")]
		YOLO = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata
	{
		
		/// <summary>
		/// The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costMilliNodeHours")]
		public string CostMilliNodeHours { get; set; }
		
		/// <summary>
		/// For successful job completions, this is the reason why the job has finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulStopReason")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason SuccessfulStopReason { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Image Segmentation Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
	{
		
		/// <summary>
		/// The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseModelId")]
		public string BaseModelId { get; set; }
		
		/// <summary>
		/// The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actual_wall_clock_hours = train_budget_milli_node_hours / (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="budgetMilliNodeHours")]
		public string BudgetMilliNodeHours { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsModelType> ModelType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputsModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_TYPE_UNSPECIFIED")]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_HIGH_ACCURACY_1")]
		CLOUD_HIGH_ACCURACY_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_LOW_ACCURACY_1")]
		CLOUD_LOW_ACCURACY_1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_TF_LOW_LATENCY_1")]
		MOBILE_TF_LOW_LATENCY_1 = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata
	{
		
		/// <summary>
		/// The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="costMilliNodeHours")]
		public string CostMilliNodeHours { get; set; }
		
		/// <summary>
		/// For successful job completions, this is the reason why the job has finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulStopReason")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadataSuccessfulStopReason SuccessfulStopReason { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Tables Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs Inputs { get; set; }
		
		/// <summary>
		/// Model metadata specific to AutoML Tables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs
	{
		
		/// <summary>
		/// Additional experiment flags for the Tables training pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalExperiments")]
		public string[] AdditionalExperiments { get; set; }
		
		/// <summary>
		/// Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableEarlyStopping")]
		public System.Nullable<System.Boolean> DisableEarlyStopping { get; set; }
		
		/// <summary>
		/// Configuration for exporting test set predictions to a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportEvaluatedDataItemsConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig ExportEvaluatedDataItemsConfig { get; set; }
		
		/// <summary>
		/// Objective function the model is optimizing towards. The training process creates a model that maximizes/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): "maximize-au-roc" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. "minimize-log-loss" - Minimize log loss. "maximize-au-prc" - Maximize the area under the precision-recall curve. "maximize-precision-at-recall" - Maximize precision for a specified recall value. "maximize-recall-at-precision" - Maximize recall for a specified precision value. classification (multi-class): "minimize-log-loss" (default) - Minimize log loss. regression: "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute error (MAE). "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjective")]
		public string OptimizationObjective { get; set; }
		
		/// <summary>
		/// Required when optimization_objective is "maximize-recall-at-precision". Must be between 0 and 1, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjectivePrecisionValue")]
		public System.Nullable<System.Single> OptimizationObjectivePrecisionValue { get; set; }
		
		/// <summary>
		/// Required when optimization_objective is "maximize-precision-at-recall". Must be between 0 and 1, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjectiveRecallValue")]
		public System.Nullable<System.Single> OptimizationObjectiveRecallValue { get; set; }
		
		/// <summary>
		/// The type of prediction the Model is to produce. "classification" - Predict one out of multiple target values is picked for each row. "regression" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predictionType")]
		public string PredictionType { get; set; }
		
		/// <summary>
		/// The column name of the target column that the model is to predict.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetColumn")]
		public string TargetColumn { get; set; }
		
		/// <summary>
		/// Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainBudgetMilliNodeHours")]
		public string TrainBudgetMilliNodeHours { get; set; }
		
		/// <summary>
		/// Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformations")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation[] Transformations { get; set; }
		
		/// <summary>
		/// Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weightColumnName")]
		public string WeightColumnName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation
	{
		
		/// <summary>
		/// Training pipeline will infer the proper transformation based on the statistic of dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation Auto { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categorical")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation Categorical { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numeric")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation Numeric { get; set; }
		
		/// <summary>
		/// Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repeatedCategorical")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation RepeatedCategorical { get; set; }
		
		/// <summary>
		/// Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repeatedNumeric")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation RepeatedNumeric { get; set; }
		
		/// <summary>
		/// Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repeatedText")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation RepeatedText { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation Text { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation Timestamp { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will infer the proper transformation based on the statistic of dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidValuesAllowed")]
		public System.Nullable<System.Boolean> InvalidValuesAllowed { get; set; }
	}
	
	/// <summary>
	/// Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidValuesAllowed")]
		public System.Nullable<System.Boolean> InvalidValuesAllowed { get; set; }
	}
	
	/// <summary>
	/// Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidValuesAllowed")]
		public System.Nullable<System.Boolean> InvalidValuesAllowed { get; set; }
		
		/// <summary>
		/// The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeFormat")]
		public string TimeFormat { get; set; }
	}
	
	/// <summary>
	/// Model metadata specific to AutoML Tables.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata
	{
		
		/// <summary>
		/// BigQuery destination uri for exported evaluated examples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedDataItemsBigqueryUri")]
		public string EvaluatedDataItemsBigqueryUri { get; set; }
		
		/// <summary>
		/// Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainCostMilliNodeHours")]
		public string TrainCostMilliNodeHours { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Text Classification Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs Inputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs
	{
		
		[System.Runtime.Serialization.DataMember(Name="multiLabel")]
		public System.Nullable<System.Boolean> MultiLabel { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Text Extraction Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs Inputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs
	{
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Text Sentiment Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs Inputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs
	{
		
		/// <summary>
		/// A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentimentMax")]
		public System.Nullable<System.Int32> SentimentMax { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Video Action Recognition Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs Inputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs
	{
		
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsModelType> ModelType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputsModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_TYPE_UNSPECIFIED")]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD")]
		CLOUD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_VERSATILE_1")]
		MOBILE_VERSATILE_1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_JETSON_VERSATILE_1")]
		MOBILE_JETSON_VERSATILE_1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_CORAL_VERSATILE_1")]
		MOBILE_CORAL_VERSATILE_1 = 4,
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Video Classification Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs Inputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs
	{
		
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsModelType> ModelType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputsModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_TYPE_UNSPECIFIED")]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD")]
		CLOUD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_VERSATILE_1")]
		MOBILE_VERSATILE_1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_JETSON_VERSATILE_1")]
		MOBILE_JETSON_VERSATILE_1 = 3,
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs Inputs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs
	{
		
		[System.Runtime.Serialization.DataMember(Name="modelType")]
		public System.Nullable<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsModelType> ModelType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputsModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MODEL_TYPE_UNSPECIFIED")]
		MODEL_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD")]
		CLOUD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_VERSATILE_1")]
		MOBILE_VERSATILE_1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_CORAL_VERSATILE_1")]
		MOBILE_CORAL_VERSATILE_1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_CORAL_LOW_LATENCY_1")]
		MOBILE_CORAL_LOW_LATENCY_1 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_JETSON_VERSATILE_1")]
		MOBILE_JETSON_VERSATILE_1 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MOBILE_JETSON_LOW_LATENCY_1")]
		MOBILE_JETSON_LOW_LATENCY_1 = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata
	{
		
		/// <summary>
		/// The resource name of the CustomJob that has been created to carry out this custom task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backingCustomJob")]
		public string BackingCustomJob { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains a custom code Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask
	{
		
		/// <summary>
		/// Represents the spec of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1CustomJobSpec Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata
	{
		
		/// <summary>
		/// The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backingHyperparameterTuningJob")]
		public string BackingHyperparameterTuningJob { get; set; }
		
		/// <summary>
		/// The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bestTrialBackingCustomJob")]
		public string BestTrialBackingCustomJob { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec
	{
		
		/// <summary>
		/// The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxFailedTrialCount")]
		public System.Nullable<System.Int32> MaxFailedTrialCount { get; set; }
		
		/// <summary>
		/// The desired total number of Trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxTrialCount")]
		public System.Nullable<System.Int32> MaxTrialCount { get; set; }
		
		/// <summary>
		/// The desired number of Trials to run in parallel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parallelTrialCount")]
		public System.Nullable<System.Int32> ParallelTrialCount { get; set; }
		
		/// <summary>
		/// Represents specification of a Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studySpec")]
		public GoogleCloudAiplatformV1StudySpec StudySpec { get; set; }
		
		/// <summary>
		/// Represents the spec of a CustomJob.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trialJobSpec")]
		public GoogleCloudAiplatformV1CustomJobSpec TrialJobSpec { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that tunes Hypererparameters of a custom code Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata Metadata { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Forecasting Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs Inputs { get; set; }
		
		/// <summary>
		/// Model metadata specific to Seq2Seq Plus Forecasting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs
	{
		
		/// <summary>
		/// Additional experiment flags for the time series forcasting training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalExperiments")]
		public string[] AdditionalExperiments { get; set; }
		
		/// <summary>
		/// Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableAtForecastColumns")]
		public string[] AvailableAtForecastColumns { get; set; }
		
		/// <summary>
		/// The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextWindow")]
		public string ContextWindow { get; set; }
		
		/// <summary>
		/// A duration of time expressed in time granularity units.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataGranularity")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity DataGranularity { get; set; }
		
		/// <summary>
		/// Configuration for exporting test set predictions to a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportEvaluatedDataItemsConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig ExportEvaluatedDataItemsConfig { get; set; }
		
		/// <summary>
		/// The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forecastHorizon")]
		public string ForecastHorizon { get; set; }
		
		/// <summary>
		/// Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hierarchyConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig HierarchyConfig { get; set; }
		
		/// <summary>
		/// The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holidayRegions")]
		public string[] HolidayRegions { get; set; }
		
		/// <summary>
		/// Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjective")]
		public string OptimizationObjective { get; set; }
		
		/// <summary>
		/// Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantiles")]
		public double[] Quantiles { get; set; }
		
		/// <summary>
		/// The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetColumn")]
		public string TargetColumn { get; set; }
		
		/// <summary>
		/// The name of the column that identifies time order in the time series. This column must be available at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeColumn")]
		public string TimeColumn { get; set; }
		
		/// <summary>
		/// Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesAttributeColumns")]
		public string[] TimeSeriesAttributeColumns { get; set; }
		
		/// <summary>
		/// The name of the column that identifies the time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesIdentifierColumn")]
		public string TimeSeriesIdentifierColumn { get; set; }
		
		/// <summary>
		/// Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainBudgetMilliNodeHours")]
		public string TrainBudgetMilliNodeHours { get; set; }
		
		/// <summary>
		/// Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformations")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation[] Transformations { get; set; }
		
		/// <summary>
		/// Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unavailableAtForecastColumns")]
		public string[] UnavailableAtForecastColumns { get; set; }
		
		/// <summary>
		/// Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationOptions")]
		public string ValidationOptions { get; set; }
		
		/// <summary>
		/// Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weightColumn")]
		public string WeightColumn { get; set; }
		
		/// <summary>
		/// Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig WindowConfig { get; set; }
	}
	
	/// <summary>
	/// A duration of time expressed in time granularity units.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity
	{
		
		/// <summary>
		/// The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public string Quantity { get; set; }
		
		/// <summary>
		/// The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation
	{
		
		/// <summary>
		/// Training pipeline will infer the proper transformation based on the statistic of dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation Auto { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categorical")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation Categorical { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numeric")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation Numeric { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation Text { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation Timestamp { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will infer the proper transformation based on the statistic of dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeFormat")]
		public string TimeFormat { get; set; }
	}
	
	/// <summary>
	/// Model metadata specific to Seq2Seq Plus Forecasting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata
	{
		
		/// <summary>
		/// BigQuery destination uri for exported evaluated examples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedDataItemsBigqueryUri")]
		public string EvaluatedDataItemsBigqueryUri { get; set; }
		
		/// <summary>
		/// Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainCostMilliNodeHours")]
		public string TrainCostMilliNodeHours { get; set; }
	}
	
	/// <summary>
	/// A TrainingJob that trains and uploads an AutoML Forecasting Model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs Inputs { get; set; }
		
		/// <summary>
		/// Model metadata specific to TFT Forecasting.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs
	{
		
		/// <summary>
		/// Additional experiment flags for the time series forcasting training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalExperiments")]
		public string[] AdditionalExperiments { get; set; }
		
		/// <summary>
		/// Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availableAtForecastColumns")]
		public string[] AvailableAtForecastColumns { get; set; }
		
		/// <summary>
		/// The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextWindow")]
		public string ContextWindow { get; set; }
		
		/// <summary>
		/// A duration of time expressed in time granularity units.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataGranularity")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity DataGranularity { get; set; }
		
		/// <summary>
		/// Configuration for exporting test set predictions to a BigQuery table.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exportEvaluatedDataItemsConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig ExportEvaluatedDataItemsConfig { get; set; }
		
		/// <summary>
		/// The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forecastHorizon")]
		public string ForecastHorizon { get; set; }
		
		/// <summary>
		/// Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hierarchyConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig HierarchyConfig { get; set; }
		
		/// <summary>
		/// The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="holidayRegions")]
		public string[] HolidayRegions { get; set; }
		
		/// <summary>
		/// Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjective")]
		public string OptimizationObjective { get; set; }
		
		/// <summary>
		/// Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantiles")]
		public double[] Quantiles { get; set; }
		
		/// <summary>
		/// The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetColumn")]
		public string TargetColumn { get; set; }
		
		/// <summary>
		/// The name of the column that identifies time order in the time series. This column must be available at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeColumn")]
		public string TimeColumn { get; set; }
		
		/// <summary>
		/// Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesAttributeColumns")]
		public string[] TimeSeriesAttributeColumns { get; set; }
		
		/// <summary>
		/// The name of the column that identifies the time series.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesIdentifierColumn")]
		public string TimeSeriesIdentifierColumn { get; set; }
		
		/// <summary>
		/// Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainBudgetMilliNodeHours")]
		public string TrainBudgetMilliNodeHours { get; set; }
		
		/// <summary>
		/// Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transformations")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation[] Transformations { get; set; }
		
		/// <summary>
		/// Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unavailableAtForecastColumns")]
		public string[] UnavailableAtForecastColumns { get; set; }
		
		/// <summary>
		/// Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationOptions")]
		public string ValidationOptions { get; set; }
		
		/// <summary>
		/// Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weightColumn")]
		public string WeightColumn { get; set; }
		
		/// <summary>
		/// Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="windowConfig")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig WindowConfig { get; set; }
	}
	
	/// <summary>
	/// A duration of time expressed in time granularity units.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity
	{
		
		/// <summary>
		/// The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public string Quantity { get; set; }
		
		/// <summary>
		/// The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unit")]
		public string Unit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation
	{
		
		/// <summary>
		/// Training pipeline will infer the proper transformation based on the statistic of dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation Auto { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categorical")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation Categorical { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numeric")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation Numeric { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation Text { get; set; }
		
		/// <summary>
		/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation Timestamp { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will infer the proper transformation based on the statistic of dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
	}
	
	/// <summary>
	/// Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation
	{
		
		[System.Runtime.Serialization.DataMember(Name="columnName")]
		public string ColumnName { get; set; }
		
		/// <summary>
		/// The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeFormat")]
		public string TimeFormat { get; set; }
	}
	
	/// <summary>
	/// Model metadata specific to TFT Forecasting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata
	{
		
		/// <summary>
		/// BigQuery destination uri for exported evaluated examples.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluatedDataItemsBigqueryUri")]
		public string EvaluatedDataItemsBigqueryUri { get; set; }
		
		/// <summary>
		/// Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainCostMilliNodeHours")]
		public string TrainCostMilliNodeHours { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to video action recognition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A time period inside of a DataItem that has a time dimension (e.g. video).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegment")]
		public GoogleCloudAiplatformV1SchemaTimeSegment TimeSegment { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to video classification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A time period inside of a DataItem that has a time dimension (e.g. video).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSegment")]
		public GoogleCloudAiplatformV1SchemaTimeSegment TimeSegment { get; set; }
	}
	
	/// <summary>
	/// Payload of Video DataItem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVideoDataItem
	{
		
		/// <summary>
		/// Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsUri")]
		public string GcsUri { get; set; }
		
		/// <summary>
		/// Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video/mp4 - video/avi - video/quicktime
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
	}
	
	/// <summary>
	/// The metadata of Datasets that contain Video DataItems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVideoDatasetMetadata
	{
		
		/// <summary>
		/// Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemSchemaUri")]
		public string DataItemSchemaUri { get; set; }
		
		/// <summary>
		/// Google Cloud Storage Bucket name that contains the blob data of this Dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsBucket")]
		public string GcsBucket { get; set; }
	}
	
	/// <summary>
	/// Annotation details specific to video object tracking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation
	{
		
		/// <summary>
		/// The resource Id of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotationSpecId")]
		public string AnnotationSpecId { get; set; }
		
		/// <summary>
		/// The display name of the AnnotationSpec that this Annotation pertains to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The instance of the object, expressed as a positive integer. Used to track the same object across different frames.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceId")]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeOffset")]
		public string TimeOffset { get; set; }
		
		/// <summary>
		/// The rightmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xMax")]
		public System.Nullable<System.Double> XMax { get; set; }
		
		/// <summary>
		/// The leftmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="xMin")]
		public System.Nullable<System.Double> XMin { get; set; }
		
		/// <summary>
		/// The bottommost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yMax")]
		public System.Nullable<System.Double> YMax { get; set; }
		
		/// <summary>
		/// The topmost coordinate of the bounding box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yMin")]
		public System.Nullable<System.Double> YMin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata
	{
		
		/// <summary>
		/// Whether or not the classification label is multi_label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiLabel")]
		public System.Nullable<System.Boolean> MultiLabel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata
	{
	}
	
	/// <summary>
	/// Response message for DatasetService.SearchDataItems.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchDataItemsResponse
	{
		
		/// <summary>
		/// The DataItemViews read.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataItemViews")]
		public GoogleCloudAiplatformV1DataItemView[] DataItemViews { get; set; }
		
		/// <summary>
		/// A token to retrieve next page of results. Pass to SearchDataItemsRequest.page_token to obtain that page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreService.SearchFeatures.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchFeaturesResponse
	{
		
		/// <summary>
		/// The Features matching the request. Fields returned: * `name` * `description` * `labels` * `create_time` * `update_time`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="features")]
		public GoogleCloudAiplatformV1Feature[] Features { get; set; }
		
		/// <summary>
		/// A token, which can be sent as SearchFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Request message for MigrationService.SearchMigratableResources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchMigratableResourcesRequest
	{
		
		/// <summary>
		/// A filter for your search. You can use the following types of filters: * Resource type filters. The following strings filter for a specific type of MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters. The following strings filter for resources that either have or have not already been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT last_migrate_time:*` filters for not yet migrated resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// The standard page size. The default and maximum value is 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// The standard page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for MigrationService.SearchMigratableResources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchMigratableResourcesResponse
	{
		
		/// <summary>
		/// All migratable resources that can be migrated to the location specified in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="migratableResources")]
		public GoogleCloudAiplatformV1MigratableResource[] MigratableResources { get; set; }
		
		/// <summary>
		/// The standard next-page token. The migratable_resources may not fill page_size in SearchMigratableResourcesRequest even when there are subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest
	{
		
		/// <summary>
		/// Required. The DeployedModel ID of the [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// The latest timestamp of stats being generated. If not set, indicates feching stats till the latest possible one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The feature display name. If specified, only return the stats belonging to this feature. Format: ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name, example: "user_destination".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureDisplayName")]
		public string FeatureDisplayName { get; set; }
		
		/// <summary>
		/// Required. Objectives of the stats to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectives")]
		public GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective[] Objectives { get; set; }
		
		/// <summary>
		/// The standard list page size.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// A page token received from a previous JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// The earliest timestamp of stats being generated. If not set, indicates fetching stats till the earliest possible one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Stats requested for specific objective.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective
	{
		
		/// <summary>
		/// If set, all attribution scores between SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched, and page token doesn't take effect in this case. Only used to retrieve attribution score for the top Features which has the highest attribution score in the latest monitoring run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="topFeatureCount")]
		public System.Nullable<System.Int32> TopFeatureCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesObjective Type { get; set; }
	}
	
	/// <summary>
	/// Response message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse
	{
		
		/// <summary>
		/// Stats retrieved for requested objectives. There are at most 1000 ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monitoringStats")]
		public GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies[] MonitoringStats { get; set; }
		
		/// <summary>
		/// The page token that can be used by the next JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Metadata information for NotebookService.StartNotebookRuntime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StartNotebookRuntimeOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// A human-readable message that shows the intermediate progress details of NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="progressMessage")]
		public string ProgressMessage { get; set; }
	}
	
	/// <summary>
	/// Request message for NotebookService.StartNotebookRuntime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StartNotebookRuntimeRequest
	{
	}
	
	/// <summary>
	/// Request message for VizierService.StopTrial.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StopTrialRequest
	{
	}
	
	/// <summary>
	/// Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StreamingPredictRequest
	{
		
		/// <summary>
		/// The prediction input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputs")]
		public GoogleCloudAiplatformV1Tensor[] Inputs { get; set; }
		
		/// <summary>
		/// A tensor value type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1Tensor Parameters { get; set; }
	}
	
	/// <summary>
	/// Response message for PredictionService.StreamingPredict.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StreamingPredictResponse
	{
		
		/// <summary>
		/// The prediction output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputs")]
		public GoogleCloudAiplatformV1Tensor[] Outputs { get; set; }
		
		/// <summary>
		/// A tensor value type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1Tensor Parameters { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreOnlineServingService.StreamingFeatureValuesRead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest
	{
		
		/// <summary>
		/// Required. IDs of entities to read Feature values of. The maximum number of IDs is 100. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityIds")]
		public string[] EntityIds { get; set; }
		
		/// <summary>
		/// Selector for Features of an EntityType.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureSelector")]
		public GoogleCloudAiplatformV1FeatureSelector FeatureSelector { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform Trials suggestion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SuggestTrialsMetadata
	{
		
		/// <summary>
		/// The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for VizierService.SuggestTrials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SuggestTrialsRequest
	{
		
		/// <summary>
		/// Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientId")]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Optional. This allows you to specify the "context" for a Trial; a context is a slice (a subspace) of the search space. Typical uses for contexts: 1) You are using Vizier to tune a server for best performance, but there's a strong weekly cycle. The context specifies the day-of-week. This allows Tuesday to generalize from Wednesday without assuming that everything is identical. 2) Imagine you're optimizing some medical treatment for people. As they walk in the door, you know certain facts about them (e.g. sex, weight, height, blood-pressure). Put that information in the context, and Vizier will adapt its suggestions to the patient. 3) You want to do a fair A/B test efficiently. Specify the "A" and "B" conditions as contexts, and Vizier will generalize between "A" and "B" conditions. If they are similar, this will allow Vizier to converge to the optimum faster than if "A" and "B" were separate Studies. NOTE: You can also enter contexts as REQUESTED Trials, e.g. via the CreateTrial() RPC; that's the asynchronous option where you don't need a close association between contexts and suggestions. NOTE: All the Parameters you set in a context MUST be defined in the Study. NOTE: You must supply 0 or $suggestion_count contexts. If you don't supply any contexts, Vizier will make suggestions from the full search space specified in the StudySpec; if you supply a full set of context, each suggestion will match the corresponding context. NOTE: A Context with no features set matches anything, and allows suggestions from the full search space. NOTE: Contexts MUST lie within the search space specified in the StudySpec. It's an error if they don't. NOTE: Contexts preferentially match ACTIVE then REQUESTED trials before new suggestions are generated. NOTE: Generation of suggestions involves a match between a Context and (optionally) a REQUESTED trial; if that match is not fully specified, a suggestion will be geneated in the merged subspace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contexts")]
		public GoogleCloudAiplatformV1TrialContext[] Contexts { get; set; }
		
		/// <summary>
		/// Required. The number of suggestions requested. It must be positive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestionCount")]
		public System.Nullable<System.Int32> SuggestionCount { get; set; }
	}
	
	/// <summary>
	/// Next ID: 3
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1TrialContext
	{
		
		/// <summary>
		/// A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// If/when a Trial is generated or selected from this Context, its Parameters will match any parameters specified here. (I.e. if this context specifies parameter name:'a' int_value:3, then a resulting Trial will have int_value:3 for its parameter named 'a'.) Note that we first attempt to match existing REQUESTED Trials with contexts, and if there are no matches, we generate suggestions in the subspace defined by the parameters specified here. NOTE: a Context without any Parameters matches the entire feasible search space.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parameters")]
		public GoogleCloudAiplatformV1TrialParameter[] Parameters { get; set; }
	}
	
	/// <summary>
	/// Response message for VizierService.SuggestTrials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SuggestTrialsResponse
	{
		
		/// <summary>
		/// The time at which operation processing completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The time at which the operation was started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// The state of the Study.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="studyState")]
		public GoogleCloudAiplatformV1StudyState StudyState { get; set; }
		
		/// <summary>
		/// A list of Trials.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trials")]
		public GoogleCloudAiplatformV1Trial[] Trials { get; set; }
	}
	
	/// <summary>
	/// Request message for FeatureOnlineStoreAdminService.SyncFeatureView.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SyncFeatureViewRequest
	{
	}
	
	/// <summary>
	/// Respose message for FeatureOnlineStoreAdminService.SyncFeatureView.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1SyncFeatureViewResponse
	{
		
		/// <summary>
		/// Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureViewSync")]
		public string FeatureViewSync { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for IndexEndpointService.UndeployIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UndeployIndexOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for IndexEndpointService.UndeployIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UndeployIndexRequest
	{
		
		/// <summary>
		/// Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedIndexId")]
		public string DeployedIndexId { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexEndpointService.UndeployIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UndeployIndexResponse
	{
	}
	
	/// <summary>
	/// Runtime operation information for EndpointService.UndeployModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UndeployModelOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for EndpointService.UndeployModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UndeployModelRequest
	{
		
		/// <summary>
		/// Required. The ID of the DeployedModel to be undeployed from the Endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployedModelId")]
		public string DeployedModelId { get; set; }
		
		/// <summary>
		/// If this field is provided, then the Endpoint's traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn't have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trafficSplit")]
		public System.Collections.Generic.Dictionary<string, int> TrafficSplit { get; set; }
	}
	
	/// <summary>
	/// Response message for EndpointService.UndeployModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UndeployModelResponse
	{
	}
	
	/// <summary>
	/// Runtime operation information for UpdateDeploymentResourcePool method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateDeploymentResourcePoolOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for ModelService.UpdateExplanationDataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.UpdateExplanationDataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateExplanationDatasetRequest
	{
		
		/// <summary>
		/// Example-based explainability that returns the nearest neighbors from the provided dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="examples")]
		public GoogleCloudAiplatformV1Examples Examples { get; set; }
	}
	
	/// <summary>
	/// Response message of ModelService.UpdateExplanationDataset operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateExplanationDatasetResponse
	{
	}
	
	/// <summary>
	/// Details of operations that perform update FeatureGroup.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateFeatureGroupOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform update FeatureOnlineStore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateFeatureOnlineStoreOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform update Feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateFeatureOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform update FeatureView.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateFeatureViewOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform update Featurestore.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for IndexService.UpdateIndex.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateIndexOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// Runtime operation metadata with regard to Matching Engine Index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nearestNeighborSearchOperationMetadata")]
		public GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata NearestNeighborSearchOperationMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation information for JobService.UpdateModelDeploymentMonitoringJob.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="specialistPool")]
		public string SpecialistPool { get; set; }
	}
	
	/// <summary>
	/// Details of operations that perform update Tensorboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Metadata information for NotebookService.UpgradeNotebookRuntime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpgradeNotebookRuntimeOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
		
		/// <summary>
		/// A human-readable message that shows the intermediate progress details of NotebookRuntime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="progressMessage")]
		public string ProgressMessage { get; set; }
	}
	
	/// <summary>
	/// Request message for NotebookService.UpgradeNotebookRuntime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest
	{
	}
	
	/// <summary>
	/// Details of ModelService.UploadModel operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UploadModelOperationMetadata
	{
		
		/// <summary>
		/// Generic Metadata shared by all operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="genericMetadata")]
		public GoogleCloudAiplatformV1GenericOperationMetadata GenericMetadata { get; set; }
	}
	
	/// <summary>
	/// Request message for ModelService.UploadModel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UploadModelRequest
	{
		
		/// <summary>
		/// A trained machine learning Model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public GoogleCloudAiplatformV1Model Model { get; set; }
		
		/// <summary>
		/// Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelId")]
		public string ModelId { get; set; }
		
		/// <summary>
		/// Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentModel")]
		public string ParentModel { get; set; }
		
		/// <summary>
		/// Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used to access resources needed to upload the model. This account must belong to the target project where the model is uploaded to, i.e., the project specified in the `parent` field of this request and have necessary read permissions (to Google Cloud Storage, Artifact Registry, etc.).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
	}
	
	/// <summary>
	/// Response message of ModelService.UploadModel operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UploadModelResponse
	{
		
		/// <summary>
		/// The name of the uploaded Model resource. Format: `projects/{project}/locations/{location}/models/{model}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Output only. The version ID of the model that is uploaded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelVersionId")]
		public string ModelVersionId { get; set; }
	}
	
	/// <summary>
	/// Request message for IndexService.UpsertDatapoints
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpsertDatapointsRequest
	{
		
		/// <summary>
		/// A list of datapoints to be created/updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datapoints")]
		public GoogleCloudAiplatformV1IndexDatapoint[] Datapoints { get; set; }
	}
	
	/// <summary>
	/// Response message for IndexService.UpsertDatapoints
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1UpsertDatapointsResponse
	{
	}
	
	/// <summary>
	/// Contains Feature values to be written for a specific entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteFeatureValuesPayload
	{
		
		/// <summary>
		/// Required. The ID of the entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityId")]
		public string EntityId { get; set; }
		
		/// <summary>
		/// Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="featureValues")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudAiplatformV1FeatureValue> FeatureValues { get; set; }
	}
	
	/// <summary>
	/// Request message for FeaturestoreOnlineServingService.WriteFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteFeatureValuesRequest
	{
		
		/// <summary>
		/// Required. The entities to be written. Up to 100,000 feature values can be written across all `payloads`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payloads")]
		public GoogleCloudAiplatformV1WriteFeatureValuesPayload[] Payloads { get; set; }
	}
	
	/// <summary>
	/// Response message for FeaturestoreOnlineServingService.WriteFeatureValues.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteFeatureValuesResponse
	{
	}
	
	/// <summary>
	/// Request message for TensorboardService.WriteTensorboardExperimentData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest
	{
		
		/// <summary>
		/// Required. Requests containing per-run TensorboardTimeSeries data to write.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="writeRunDataRequests")]
		public GoogleCloudAiplatformV1WriteTensorboardRunDataRequest[] WriteRunDataRequests { get; set; }
	}
	
	/// <summary>
	/// Request message for TensorboardService.WriteTensorboardRunData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
	{
		
		/// <summary>
		/// Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tensorboardRun")]
		public string TensorboardRun { get; set; }
		
		/// <summary>
		/// Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeSeriesData")]
		public GoogleCloudAiplatformV1TimeSeriesData[] TimeSeriesData { get; set; }
	}
	
	/// <summary>
	/// Response message for TensorboardService.WriteTensorboardExperimentData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse
	{
	}
	
	/// <summary>
	/// Response message for TensorboardService.WriteTensorboardRunData.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudAiplatformV1WriteTensorboardRunDataResponse
	{
	}
	
	/// <summary>
	/// The response message for Locations.ListLocations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudLocationListLocationsResponse
	{
		
		/// <summary>
		/// A list of locations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public GoogleCloudLocationLocation[] Locations { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A resource that represents a Google Cloud location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudLocationLocation
	{
		
		/// <summary>
		/// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The canonical id for this location. For example: `"us-east1"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// Service-specific metadata. For example the available capacity at the given location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeExpr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Policy
	{
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1Policy Policy { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.
		/// Aiplatform_projects_locations_metadataStores_artifacts_queryArtifactLineageSubgraph v1/{artifact}:queryArtifactLineageSubgraph
		/// </summary>
		/// <param name="artifact">Required. The resource name of the Artifact whose Lineage needs to be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.</param>
		/// <param name="filter">Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the Lineage Subgraph. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = "test"` Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.</param>
		/// <param name="maxHops">Specifies the size of the lineage graph in terms of number of hops from the specified artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact is returned. No value: Transitive closure is performed to return the complete graph.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1LineageSubgraph> Aiplatform_projects_locations_metadataStores_artifacts_queryArtifactLineageSubgraphAsync(string artifact, string filter, int maxHops, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (artifact==null? "" : System.Uri.EscapeDataString(artifact))+":queryArtifactLineageSubgraph&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&maxHops="+maxHops;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1LineageSubgraph>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.
		/// Aiplatform_projects_locations_metadataStores_contexts_addContextArtifactsAndExecutions v1/{context}:addContextArtifactsAndExecutions
		/// </summary>
		/// <param name="context">Required. The resource name of the Context that the Artifacts and Executions belong to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse> Aiplatform_projects_locations_metadataStores_contexts_addContextArtifactsAndExecutionsAsync(string context, GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (context==null? "" : System.Uri.EscapeDataString(context))+":addContextArtifactsAndExecutions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.
		/// Aiplatform_projects_locations_metadataStores_contexts_addContextChildren v1/{context}:addContextChildren
		/// </summary>
		/// <param name="context">Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1AddContextChildrenResponse> Aiplatform_projects_locations_metadataStores_contexts_addContextChildrenAsync(string context, GoogleCloudAiplatformV1AddContextChildrenRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (context==null? "" : System.Uri.EscapeDataString(context))+":addContextChildren";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1AddContextChildrenResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.
		/// Aiplatform_projects_locations_metadataStores_contexts_queryContextLineageSubgraph v1/{context}:queryContextLineageSubgraph
		/// </summary>
		/// <param name="context">Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1LineageSubgraph> Aiplatform_projects_locations_metadataStores_contexts_queryContextLineageSubgraphAsync(string context, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (context==null? "" : System.Uri.EscapeDataString(context))+":queryContextLineageSubgraph";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1LineageSubgraph>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.
		/// Aiplatform_projects_locations_metadataStores_contexts_removeContextChildren v1/{context}:removeContextChildren
		/// </summary>
		/// <param name="context">Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1RemoveContextChildrenResponse> Aiplatform_projects_locations_metadataStores_contexts_removeContextChildrenAsync(string context, GoogleCloudAiplatformV1RemoveContextChildrenRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (context==null? "" : System.Uri.EscapeDataString(context))+":removeContextChildren";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1RemoveContextChildrenResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Searches DataItems in a Dataset.
		/// Aiplatform_projects_locations_datasets_searchDataItems v1/{dataset}:searchDataItems
		/// </summary>
		/// <param name="dataset">Required. The resource name of the Dataset from which to search DataItems. Format: `projects/{project}/locations/{location}/datasets/{dataset}`</param>
		/// <param name="annotationFilters">An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should belong to.</param>
		/// <param name="annotationsFilter">An expression for filtering the Annotations that will be returned per DataItem. * `annotation_spec_id` - for = or !=.</param>
		/// <param name="annotationsLimit">If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is 1000. If not set, the maximum value will be used.</param>
		/// <param name="dataItemFilter">An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`</param>
		/// <param name="dataLabelingJob">The resource name of a DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is set, all of the search will be done in the context of this DataLabelingJob.</param>
		/// <param name="fieldMask">Mask specifying which fields of DataItemView to read.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.</param>
		/// <param name="orderByAnnotation_orderBy">A comma-separated list of annotation fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Must also specify saved_query.</param>
		/// <param name="orderByAnnotation_savedQuery">Required. Saved query of the Annotation. Only Annotations belong to this saved query will be considered for ordering.</param>
		/// <param name="orderByDataItem">A comma-separated list of data item fields to order by, sorted in ascending order. Use "desc" after a field name for descending.</param>
		/// <param name="pageSize">Requested page size. Server may return fewer results than requested. Default and maximum page size is 100.</param>
		/// <param name="pageToken">A token identifying a page of results for the server to return Typically obtained via SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call.</param>
		/// <param name="savedQuery">The resource name of a SavedQuery(annotation set in UI). Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the search will be done in the context of this SavedQuery.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1SearchDataItemsResponse> Aiplatform_projects_locations_datasets_searchDataItemsAsync(string dataset, string[] annotationFilters, string annotationsFilter, int annotationsLimit, string dataItemFilter, string dataLabelingJob, string fieldMask, string orderBy, string orderByAnnotation_orderBy, string orderByAnnotation_savedQuery, string orderByDataItem, int pageSize, string pageToken, string savedQuery, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (dataset==null? "" : System.Uri.EscapeDataString(dataset))+":searchDataItems&"+string.Join("&", annotationFilters.Select(z => $"annotationFilters={System.Uri.EscapeDataString(z.ToString())}"))+"&annotationsFilter=" + (annotationsFilter==null? "" : System.Uri.EscapeDataString(annotationsFilter))+"&annotationsLimit="+annotationsLimit+"&dataItemFilter=" + (dataItemFilter==null? "" : System.Uri.EscapeDataString(dataItemFilter))+"&dataLabelingJob=" + (dataLabelingJob==null? "" : System.Uri.EscapeDataString(dataLabelingJob))+"&fieldMask=" + (fieldMask==null? "" : System.Uri.EscapeDataString(fieldMask))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&orderByAnnotation.orderBy=" + (orderByAnnotation_orderBy==null? "" : System.Uri.EscapeDataString(orderByAnnotation_orderBy))+"&orderByAnnotation.savedQuery=" + (orderByAnnotation_savedQuery==null? "" : System.Uri.EscapeDataString(orderByAnnotation_savedQuery))+"&orderByDataItem=" + (orderByDataItem==null? "" : System.Uri.EscapeDataString(orderByDataItem))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&savedQuery=" + (savedQuery==null? "" : System.Uri.EscapeDataString(savedQuery));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1SearchDataItemsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List DeployedModels that have been deployed on this DeploymentResourcePool.
		/// Aiplatform_projects_locations_deploymentResourcePools_queryDeployedModels v1/{deploymentResourcePool}:queryDeployedModels
		/// </summary>
		/// <param name="deploymentResourcePool">Required. The name of the target DeploymentResourcePool to query. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`</param>
		/// <param name="pageSize">The maximum number of DeployedModels to return. The service may return fewer than this value.</param>
		/// <param name="pageToken">A page token, received from a previous `QueryDeployedModels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `QueryDeployedModels` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1QueryDeployedModelsResponse> Aiplatform_projects_locations_deploymentResourcePools_queryDeployedModelsAsync(string deploymentResourcePool, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (deploymentResourcePool==null? "" : System.Uri.EscapeDataString(deploymentResourcePool))+":queryDeployedModels&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1QueryDeployedModelsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return a list of tokens based on the input text.
		/// Aiplatform_projects_locations_publishers_models_computeTokens v1/{endpoint}:computeTokens
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to get lists of tokens and token ids.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ComputeTokensResponse> Aiplatform_projects_locations_publishers_models_computeTokensAsync(string endpoint, GoogleCloudAiplatformV1ComputeTokensRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":computeTokens";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ComputeTokensResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform a token counting.
		/// Aiplatform_projects_locations_publishers_models_countTokens v1/{endpoint}:countTokens
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1CountTokensResponse> Aiplatform_projects_locations_publishers_models_countTokensAsync(string endpoint, GoogleCloudAiplatformV1CountTokensRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":countTokens";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1CountTokensResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deploys a Model into this Endpoint, creating a DeployedModel within it.
		/// Aiplatform_projects_locations_endpoints_deployModel v1/{endpoint}:deployModel
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint resource into which to deploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_endpoints_deployModelAsync(string endpoint, GoogleCloudAiplatformV1DeployModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":deployModel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform an unary online prediction request for Vertex first-party products and frameworks.
		/// Aiplatform_projects_locations_endpoints_directPredict v1/{endpoint}:directPredict
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1DirectPredictResponse> Aiplatform_projects_locations_endpoints_directPredictAsync(string endpoint, GoogleCloudAiplatformV1DirectPredictRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":directPredict";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1DirectPredictResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform an online prediction request through gRPC.
		/// Aiplatform_projects_locations_endpoints_directRawPredict v1/{endpoint}:directRawPredict
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1DirectRawPredictResponse> Aiplatform_projects_locations_endpoints_directRawPredictAsync(string endpoint, GoogleCloudAiplatformV1DirectRawPredictRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":directRawPredict";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1DirectRawPredictResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.
		/// Aiplatform_projects_locations_endpoints_explain v1/{endpoint}:explain
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to serve the explanation. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ExplainResponse> Aiplatform_projects_locations_endpoints_explainAsync(string endpoint, GoogleCloudAiplatformV1ExplainRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":explain";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ExplainResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates an existing deployed model. Updatable fields include `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and `enable_container_logging` (v1beta1 only).
		/// Aiplatform_projects_locations_endpoints_mutateDeployedModel v1/{endpoint}:mutateDeployedModel
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_endpoints_mutateDeployedModelAsync(string endpoint, GoogleCloudAiplatformV1MutateDeployedModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":mutateDeployedModel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform an online prediction.
		/// Aiplatform_projects_locations_publishers_models_predict v1/{endpoint}:predict
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1PredictResponse> Aiplatform_projects_locations_publishers_models_predictAsync(string endpoint, GoogleCloudAiplatformV1PredictRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":predict";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1PredictResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.
		/// Aiplatform_projects_locations_publishers_models_rawPredict v1/{endpoint}:rawPredict
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleApiHttpBody> Aiplatform_projects_locations_publishers_models_rawPredictAsync(string endpoint, GoogleCloudAiplatformV1RawPredictRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":rawPredict";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleApiHttpBody>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Perform a server-side streaming online prediction request for Vertex LLM streaming.
		/// Aiplatform_projects_locations_publishers_models_serverStreamingPredict v1/{endpoint}:serverStreamingPredict
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1StreamingPredictResponse> Aiplatform_projects_locations_publishers_models_serverStreamingPredictAsync(string endpoint, GoogleCloudAiplatformV1StreamingPredictRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":serverStreamingPredict";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1StreamingPredictResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it's using.
		/// Aiplatform_projects_locations_endpoints_undeployModel v1/{endpoint}:undeployModel
		/// </summary>
		/// <param name="endpoint">Required. The name of the Endpoint resource from which to undeploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_endpoints_undeployModelAsync(string endpoint, GoogleCloudAiplatformV1UndeployModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (endpoint==null? "" : System.Uri.EscapeDataString(endpoint))+":undeployModel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.
		/// Aiplatform_projects_locations_featurestores_entityTypes_deleteFeatureValues v1/{entityType}:deleteFeatureValues
		/// </summary>
		/// <param name="entityType">Required. The resource name of the EntityType grouping the Features for which values are being deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_entityTypes_deleteFeatureValuesAsync(string entityType, GoogleCloudAiplatformV1DeleteFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entityType==null? "" : System.Uri.EscapeDataString(entityType))+":deleteFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Exports Feature values from all the entities of a target EntityType.
		/// Aiplatform_projects_locations_featurestores_entityTypes_exportFeatureValues v1/{entityType}:exportFeatureValues
		/// </summary>
		/// <param name="entityType">Required. The resource name of the EntityType from which to export Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_entityTypes_exportFeatureValuesAsync(string entityType, GoogleCloudAiplatformV1ExportFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entityType==null? "" : System.Uri.EscapeDataString(entityType))+":exportFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.
		/// Aiplatform_projects_locations_featurestores_entityTypes_importFeatureValues v1/{entityType}:importFeatureValues
		/// </summary>
		/// <param name="entityType">Required. The resource name of the EntityType grouping the Features for which values are being imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_entityTypes_importFeatureValuesAsync(string entityType, GoogleCloudAiplatformV1ImportFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entityType==null? "" : System.Uri.EscapeDataString(entityType))+":importFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.
		/// Aiplatform_projects_locations_featurestores_entityTypes_readFeatureValues v1/{entityType}:readFeatureValues
		/// </summary>
		/// <param name="entityType">Required. The resource name of the EntityType for the entity being read. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadFeatureValuesResponse> Aiplatform_projects_locations_featurestores_entityTypes_readFeatureValuesAsync(string entityType, GoogleCloudAiplatformV1ReadFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entityType==null? "" : System.Uri.EscapeDataString(entityType))+":readFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadFeatureValuesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.
		/// Aiplatform_projects_locations_featurestores_entityTypes_streamingReadFeatureValues v1/{entityType}:streamingReadFeatureValues
		/// </summary>
		/// <param name="entityType">Required. The resource name of the entities' type. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadFeatureValuesResponse> Aiplatform_projects_locations_featurestores_entityTypes_streamingReadFeatureValuesAsync(string entityType, GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entityType==null? "" : System.Uri.EscapeDataString(entityType))+":streamingReadFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadFeatureValuesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.
		/// Aiplatform_projects_locations_featurestores_entityTypes_writeFeatureValues v1/{entityType}:writeFeatureValues
		/// </summary>
		/// <param name="entityType">Required. The resource name of the EntityType for the entities being written. Value format: `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1WriteFeatureValuesResponse> Aiplatform_projects_locations_featurestores_entityTypes_writeFeatureValuesAsync(string entityType, GoogleCloudAiplatformV1WriteFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (entityType==null? "" : System.Uri.EscapeDataString(entityType))+":writeFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1WriteFeatureValuesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.
		/// Aiplatform_projects_locations_metadataStores_executions_addExecutionEvents v1/{execution}:addExecutionEvents
		/// </summary>
		/// <param name="execution">Required. The resource name of the Execution that the Events connect Artifacts with. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1AddExecutionEventsResponse> Aiplatform_projects_locations_metadataStores_executions_addExecutionEventsAsync(string execution, GoogleCloudAiplatformV1AddExecutionEventsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (execution==null? "" : System.Uri.EscapeDataString(execution))+":addExecutionEvents";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1AddExecutionEventsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.
		/// Aiplatform_projects_locations_metadataStores_executions_queryExecutionInputsAndOutputs v1/{execution}:queryExecutionInputsAndOutputs
		/// </summary>
		/// <param name="execution">Required. The resource name of the Execution whose input and output Artifacts should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1LineageSubgraph> Aiplatform_projects_locations_metadataStores_executions_queryExecutionInputsAndOutputsAsync(string execution, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (execution==null? "" : System.Uri.EscapeDataString(execution))+":queryExecutionInputsAndOutputs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1LineageSubgraph>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch feature values under a FeatureView.
		/// Aiplatform_projects_locations_featureOnlineStores_featureViews_fetchFeatureValues v1/{featureView}:fetchFeatureValues
		/// </summary>
		/// <param name="featureView">Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1FetchFeatureValuesResponse> Aiplatform_projects_locations_featureOnlineStores_featureViews_fetchFeatureValuesAsync(string featureView, GoogleCloudAiplatformV1FetchFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (featureView==null? "" : System.Uri.EscapeDataString(featureView))+":fetchFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1FetchFeatureValuesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Triggers on-demand sync for the FeatureView.
		/// Aiplatform_projects_locations_featureOnlineStores_featureViews_sync v1/{featureView}:sync
		/// </summary>
		/// <param name="featureView">Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1SyncFeatureViewResponse> Aiplatform_projects_locations_featureOnlineStores_featureViews_syncAsync(string featureView, GoogleCloudAiplatformV1SyncFeatureViewRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (featureView==null? "" : System.Uri.EscapeDataString(featureView))+":sync";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1SyncFeatureViewResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance's read timestamp.
		/// Aiplatform_projects_locations_featurestores_batchReadFeatureValues v1/{featurestore}:batchReadFeatureValues
		/// </summary>
		/// <param name="featurestore">Required. The resource name of the Featurestore from which to query Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_batchReadFeatureValuesAsync(string featurestore, GoogleCloudAiplatformV1BatchReadFeatureValuesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (featurestore==null? "" : System.Uri.EscapeDataString(featurestore))+":batchReadFeatureValues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty Indexes can be deployed.
		/// Aiplatform_projects_locations_indexEndpoints_deployIndex v1/{indexEndpoint}:deployIndex
		/// </summary>
		/// <param name="indexEndpoint">Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_indexEndpoints_deployIndexAsync(string indexEndpoint, GoogleCloudAiplatformV1DeployIndexRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (indexEndpoint==null? "" : System.Uri.EscapeDataString(indexEndpoint))+":deployIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Finds the nearest neighbors of each vector within the request.
		/// Aiplatform_projects_locations_indexEndpoints_findNeighbors v1/{indexEndpoint}:findNeighbors
		/// </summary>
		/// <param name="indexEndpoint">Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1FindNeighborsResponse> Aiplatform_projects_locations_indexEndpoints_findNeighborsAsync(string indexEndpoint, GoogleCloudAiplatformV1FindNeighborsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (indexEndpoint==null? "" : System.Uri.EscapeDataString(indexEndpoint))+":findNeighbors";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1FindNeighborsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Update an existing DeployedIndex under an IndexEndpoint.
		/// Aiplatform_projects_locations_indexEndpoints_mutateDeployedIndex v1/{indexEndpoint}:mutateDeployedIndex
		/// </summary>
		/// <param name="indexEndpoint">Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_indexEndpoints_mutateDeployedIndexAsync(string indexEndpoint, GoogleCloudAiplatformV1DeployedIndex requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (indexEndpoint==null? "" : System.Uri.EscapeDataString(indexEndpoint))+":mutateDeployedIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.
		/// Aiplatform_projects_locations_indexEndpoints_readIndexDatapoints v1/{indexEndpoint}:readIndexDatapoints
		/// </summary>
		/// <param name="indexEndpoint">Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadIndexDatapointsResponse> Aiplatform_projects_locations_indexEndpoints_readIndexDatapointsAsync(string indexEndpoint, GoogleCloudAiplatformV1ReadIndexDatapointsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (indexEndpoint==null? "" : System.Uri.EscapeDataString(indexEndpoint))+":readIndexDatapoints";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadIndexDatapointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it's using.
		/// Aiplatform_projects_locations_indexEndpoints_undeployIndex v1/{indexEndpoint}:undeployIndex
		/// </summary>
		/// <param name="indexEndpoint">Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_indexEndpoints_undeployIndexAsync(string indexEndpoint, GoogleCloudAiplatformV1UndeployIndexRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (indexEndpoint==null? "" : System.Uri.EscapeDataString(indexEndpoint))+":undeployIndex";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Remove Datapoints from an Index.
		/// Aiplatform_projects_locations_indexes_removeDatapoints v1/{index}:removeDatapoints
		/// </summary>
		/// <param name="index">Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1RemoveDatapointsResponse> Aiplatform_projects_locations_indexes_removeDatapointsAsync(string index, GoogleCloudAiplatformV1RemoveDatapointsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (index==null? "" : System.Uri.EscapeDataString(index))+":removeDatapoints";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1RemoveDatapointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Add/update Datapoints into an Index.
		/// Aiplatform_projects_locations_indexes_upsertDatapoints v1/{index}:upsertDatapoints
		/// </summary>
		/// <param name="index">Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1UpsertDatapointsResponse> Aiplatform_projects_locations_indexes_upsertDatapointsAsync(string index, GoogleCloudAiplatformV1UpsertDatapointsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (index==null? "" : System.Uri.EscapeDataString(index))+":upsertDatapoints";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1UpsertDatapointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Searches Features matching a query in a given project.
		/// Aiplatform_projects_locations_featurestores_searchFeatures v1/{location}/featurestores:searchFeatures
		/// </summary>
		/// <param name="location">Required. The resource name of the Location to search Features. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 100 Features will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.</param>
		/// <param name="pageToken">A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.SearchFeatures, except `page_size`, must match the call that provided the page token.</param>
		/// <param name="query">Query string that is a conjunction of field-restricted queries and/or field-restricted filters. Field-restricted queries and filters can be combined using `AND` to form a conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to a sequence of words (i.e. tokens) for comparison. This is done by: * Removing leading/trailing whitespace and tokenizing the search value. Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as delimiters for tokens. `*` is treated as a wildcard that matches characters within a token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk to the last token in QUERY. A QUERY must be either a singular token or a phrase. A phrase is one or multiple words enclosed in double quotation marks ("). With phrases, the order of the words is important. Words in the phrase must be matching in order and consecutively. Supported FIELDs for field-restricted queries: * `feature_id` * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` --> Matches a Feature with ID containing the substring `foo` and description containing the substring `bar`. Besides field queries, the following exact-match filters are supported. The exact-match filters do not support wildcards. Unlike field-restricted queries, exact-match filters are case-sensitive. * `feature_id`: Supports = comparisons. * `description`: Supports = comparisons. Multi-token filters should be enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`: Supports = and != comparisons. * `labels`: Supports key-value equality as well as key presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = "foo bar"` --> Any Feature with description exactly equal to `foo bar` * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with `env` as the key.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1SearchFeaturesResponse> Aiplatform_projects_locations_featurestores_searchFeaturesAsync(string location, int pageSize, string pageToken, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (location==null? "" : System.Uri.EscapeDataString(location))+"/featurestores:searchFeatures&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1SearchFeaturesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches Model Monitoring Statistics generated within a given time window.
		/// Aiplatform_projects_locations_modelDeploymentMonitoringJobs_searchModelDeploymentMonitoringStatsAnomalies v1/{modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies
		/// </summary>
		/// <param name="modelDeploymentMonitoringJob">Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse> Aiplatform_projects_locations_modelDeploymentMonitoringJobs_searchModelDeploymentMonitoringStatsAnomaliesAsync(string modelDeploymentMonitoringJob, GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (modelDeploymentMonitoringJob==null? "" : System.Uri.EscapeDataString(modelDeploymentMonitoringJob))+":searchModelDeploymentMonitoringStatsAnomalies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Generate content with multimodal inputs with streaming support.
		/// Aiplatform_projects_locations_publishers_models_streamGenerateContent v1/{model}:streamGenerateContent
		/// </summary>
		/// <param name="model">Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1GenerateContentResponse> Aiplatform_projects_locations_publishers_models_streamGenerateContentAsync(string model, GoogleCloudAiplatformV1GenerateContentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (model==null? "" : System.Uri.EscapeDataString(model))+":streamGenerateContent";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1GenerateContentResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Incrementally update the dataset used for an examples model.
		/// Aiplatform_projects_locations_models_updateExplanationDataset v1/{model}:updateExplanationDataset
		/// </summary>
		/// <param name="model">Required. The resource name of the Model to update. Format: `projects/{project}/locations/{location}/models/{model}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_models_updateExplanationDatasetAsync(string model, GoogleCloudAiplatformV1UpdateExplanationDatasetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (model==null? "" : System.Uri.EscapeDataString(model))+":updateExplanationDataset";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		/// Aiplatform_projects_locations_trainingPipelines_operations_delete v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource to be deleted.</param>
		/// <param name="force">If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise, the request will only work if the SpecialistPool has no specialist managers.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Aiplatform_projects_locations_trainingPipelines_operations_deleteAsync(string name, bool force, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&force="+force;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a Model Garden publisher model.
		/// Aiplatform_publishers_models_get v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the PublisherModel resource. Format: `publishers/{publisher}/models/{publisher_model}`</param>
		/// <param name="languageCode">Optional. The IETF BCP-47 language code representing the language in which the publisher model's text information should be written in (see go/bcp47).</param>
		/// <param name="view">Optional. PublisherModel view specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1PublisherModel> Aiplatform_publishers_models_getAsync(string name, string languageCode, Aiplatform_publishers_models_getView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&languageCode=" + (languageCode==null? "" : System.Uri.EscapeDataString(languageCode))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1PublisherModel>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a TensorboardTimeSeries.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_patch v1/{name}
		/// </summary>
		/// <param name="name">Output only. Name of the TensorboardTimeSeries.</param>
		/// <param name="updateMask">Required. Field mask is used to specify the fields to be overwritten in the TensorboardTimeSeries resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1TensorboardTimeSeries> Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_patchAsync(string name, string updateMask, GoogleCloudAiplatformV1TensorboardTimeSeries requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1TensorboardTimeSeries>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists information about the supported locations for this service.
		/// Aiplatform_projects_locations_list v1/{name}/locations
		/// </summary>
		/// <param name="name">The resource that owns the locations collection, if applicable.</param>
		/// <param name="filter">A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).</param>
		/// <param name="pageSize">The maximum number of results to return. If not set, the service selects a default.</param>
		/// <param name="pageToken">A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudLocationListLocationsResponse> Aiplatform_projects_locations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/locations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudLocationListLocationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Aiplatform_projects_locations_trainingPipelines_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Aiplatform_projects_locations_trainingPipelines_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Aiplatform_projects_locations_trainingPipelines_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Aiplatform_projects_locations_trainingPipelines_operations_cancelAsync(string name, GoogleCloudAiplatformV1CancelTrainingPipelineRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Marks a Trial as complete.
		/// Aiplatform_projects_locations_studies_trials_complete v1/{name}:complete
		/// </summary>
		/// <param name="name">Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Trial> Aiplatform_projects_locations_studies_trials_completeAsync(string name, GoogleCloudAiplatformV1CompleteTrialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":complete";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Trial>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.
		/// Aiplatform_projects_locations_models_deleteVersion v1/{name}:deleteVersion
		/// </summary>
		/// <param name="name">Required. The name of the model version to be deleted, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_models_deleteVersionAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":deleteVersion";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.
		/// Aiplatform_projects_locations_models_export v1/{name}:export
		/// </summary>
		/// <param name="name">Required. The resource name of the Model to export. The resource name may contain version id or version alias to specify the version, if no version is specified, the default version will be exported.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_models_exportAsync(string name, GoogleCloudAiplatformV1ExportModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":export";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Imports data into a Dataset.
		/// Aiplatform_projects_locations_datasets_import v1/{name}:import
		/// </summary>
		/// <param name="name">Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_datasets_importAsync(string name, GoogleCloudAiplatformV1ImportDataRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists versions of the specified model.
		/// Aiplatform_projects_locations_models_listVersions v1/{name}:listVersions
		/// </summary>
		/// <param name="name">Required. The name of the model to list versions for.</param>
		/// <param name="filter">An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `labels.myKey="myValue"`</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `create_time` * `update_time` Example: `update_time asc, create_time desc`.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via next_page_token of the previous ListModelVersions call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListModelVersionsResponse> Aiplatform_projects_locations_models_listVersionsAsync(string name, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":listVersions&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListModelVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Merges a set of aliases for a Model version.
		/// Aiplatform_projects_locations_models_mergeVersionAliases v1/{name}:mergeVersionAliases
		/// </summary>
		/// <param name="name">Required. The name of the model version to merge aliases, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Model> Aiplatform_projects_locations_models_mergeVersionAliasesAsync(string name, GoogleCloudAiplatformV1MergeVersionAliasesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":mergeVersionAliases";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Model>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.
		/// Aiplatform_projects_locations_schedules_pause v1/{name}:pause
		/// </summary>
		/// <param name="name">Required. The name of the Schedule resource to be paused. Format: `projects/{project}/locations/{location}/schedules/{schedule}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Aiplatform_projects_locations_schedules_pauseAsync(string name, GoogleCloudAiplatformV1PauseScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":pause";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Restores a dataset version.
		/// Aiplatform_projects_locations_datasets_datasetVersions_restore v1/{name}:restore
		/// </summary>
		/// <param name="name">Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_datasets_datasetVersions_restoreAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":restore";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill first.
		/// Aiplatform_projects_locations_schedules_resume v1/{name}:resume
		/// </summary>
		/// <param name="name">Required. The name of the Schedule resource to be resumed. Format: `projects/{project}/locations/{location}/schedules/{schedule}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleProtobufEmpty> Aiplatform_projects_locations_schedules_resumeAsync(string name, GoogleCloudAiplatformV1ResumeScheduleRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":resume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleProtobufEmpty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts a NotebookRuntime.
		/// Aiplatform_projects_locations_notebookRuntimes_start v1/{name}:start
		/// </summary>
		/// <param name="name">Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_notebookRuntimes_startAsync(string name, GoogleCloudAiplatformV1StartNotebookRuntimeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":start";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Stops a Trial.
		/// Aiplatform_projects_locations_studies_trials_stop v1/{name}:stop
		/// </summary>
		/// <param name="name">Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Trial> Aiplatform_projects_locations_studies_trials_stopAsync(string name, GoogleCloudAiplatformV1StopTrialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":stop";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Trial>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Upgrades a NotebookRuntime.
		/// Aiplatform_projects_locations_notebookRuntimes_upgrade v1/{name}:upgrade
		/// </summary>
		/// <param name="name">Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_notebookRuntimes_upgradeAsync(string name, GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":upgrade";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Aiplatform_projects_locations_featureOnlineStores_operations_listWait v1/{name}:wait
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Aiplatform_projects_locations_featureOnlineStores_operations_listWaitAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":wait&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
		/// Aiplatform_projects_locations_trainingPipelines_operations_wait v1/{name}:wait
		/// </summary>
		/// <param name="name">The name of the operation resource to wait on.</param>
		/// <param name="timeout">The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_trainingPipelines_operations_waitAsync(string name, string timeout, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":wait&timeout=" + (timeout==null? "" : System.Uri.EscapeDataString(timeout));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Annotations belongs to a dataitem
		/// Aiplatform_projects_locations_datasets_dataItems_annotations_list v1/{parent}/annotations
		/// </summary>
		/// <param name="parent">Required. The resource name of the DataItem to list Annotations from. Format: `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListAnnotationsResponse> Aiplatform_projects_locations_datasets_dataItems_annotations_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/annotations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListAnnotationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Artifacts in the MetadataStore.
		/// Aiplatform_projects_locations_metadataStores_artifacts_list v1/{parent}/artifacts
		/// </summary>
		/// <param name="parent">Required. The MetadataStore whose Artifacts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="filter">Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Artifacts based on the contexts to which they belong, use the function operator with the full resource name `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.</param>
		/// <param name="orderBy">How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">The maximum number of Artifacts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.</param>
		/// <param name="pageToken">A page token, received from a previous MetadataService.ListArtifacts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListArtifactsResponse> Aiplatform_projects_locations_metadataStores_artifacts_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/artifacts&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListArtifactsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Artifact associated with a MetadataStore.
		/// Aiplatform_projects_locations_metadataStores_artifacts_create v1/{parent}/artifacts
		/// </summary>
		/// <param name="parent">Required. The resource name of the MetadataStore where the Artifact should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="artifactId">The {artifact} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Artifacts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Artifact.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Artifact> Aiplatform_projects_locations_metadataStores_artifacts_createAsync(string parent, string artifactId, GoogleCloudAiplatformV1Artifact requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/artifacts&artifactId=" + (artifactId==null? "" : System.Uri.EscapeDataString(artifactId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Artifact>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Purges Artifacts.
		/// Aiplatform_projects_locations_metadataStores_artifacts_purge v1/{parent}/artifacts:purge
		/// </summary>
		/// <param name="parent">Required. The metadata store to purge Artifacts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_metadataStores_artifacts_purgeAsync(string parent, GoogleCloudAiplatformV1PurgeArtifactsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/artifacts:purge";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists BatchPredictionJobs in a Location.
		/// Aiplatform_projects_locations_batchPredictionJobs_list v1/{parent}/batchPredictionJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListBatchPredictionJobsResponse> Aiplatform_projects_locations_batchPredictionJobs_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/batchPredictionJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListBatchPredictionJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
		/// Aiplatform_projects_locations_batchPredictionJobs_create v1/{parent}/batchPredictionJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1BatchPredictionJob> Aiplatform_projects_locations_batchPredictionJobs_createAsync(string parent, GoogleCloudAiplatformV1BatchPredictionJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/batchPredictionJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1BatchPredictionJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Contexts on the MetadataStore.
		/// Aiplatform_projects_locations_metadataStores_contexts_list v1/{parent}/contexts
		/// </summary>
		/// <param name="parent">Required. The MetadataStore whose Contexts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="filter">Filter specifying the boolean condition for the Contexts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`. In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Parent Child filtering**: To filter Contexts based on parent-child relationship use the HAS operator as follows: ``` parent_contexts: "projects//locations//metadataStores//contexts/" child_contexts: "projects//locations//metadataStores//contexts/" ``` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.</param>
		/// <param name="orderBy">How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">The maximum number of Contexts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.</param>
		/// <param name="pageToken">A page token, received from a previous MetadataService.ListContexts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListContextsResponse> Aiplatform_projects_locations_metadataStores_contexts_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/contexts&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListContextsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Context associated with a MetadataStore.
		/// Aiplatform_projects_locations_metadataStores_contexts_create v1/{parent}/contexts
		/// </summary>
		/// <param name="parent">Required. The resource name of the MetadataStore where the Context should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="contextId">The {context} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided, the Context's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Context.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Context> Aiplatform_projects_locations_metadataStores_contexts_createAsync(string parent, string contextId, GoogleCloudAiplatformV1Context requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/contexts&contextId=" + (contextId==null? "" : System.Uri.EscapeDataString(contextId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Context>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Purges Contexts.
		/// Aiplatform_projects_locations_metadataStores_contexts_purge v1/{parent}/contexts:purge
		/// </summary>
		/// <param name="parent">Required. The metadata store to purge Contexts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_metadataStores_contexts_purgeAsync(string parent, GoogleCloudAiplatformV1PurgeContextsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/contexts:purge";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists CustomJobs in a Location.
		/// Aiplatform_projects_locations_customJobs_list v1/{parent}/customJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the CustomJobs from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListCustomJobsResponse> Aiplatform_projects_locations_customJobs_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListCustomJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a CustomJob. A created CustomJob right away will be attempted to be run.
		/// Aiplatform_projects_locations_customJobs_create v1/{parent}/customJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1CustomJob> Aiplatform_projects_locations_customJobs_createAsync(string parent, GoogleCloudAiplatformV1CustomJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1CustomJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists DataItems in a Dataset.
		/// Aiplatform_projects_locations_datasets_dataItems_list v1/{parent}/dataItems
		/// </summary>
		/// <param name="parent">Required. The resource name of the Dataset to list DataItems from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListDataItemsResponse> Aiplatform_projects_locations_datasets_dataItems_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/dataItems&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListDataItemsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists DataLabelingJobs in a Location.
		/// Aiplatform_projects_locations_dataLabelingJobs_list v1/{parent}/dataLabelingJobs
		/// </summary>
		/// <param name="parent">Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc` after a field name for descending.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="readMask">Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For example, the mask can be `paths: "name"`. The "name" here is a field in DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListDataLabelingJobsResponse> Aiplatform_projects_locations_dataLabelingJobs_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/dataLabelingJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListDataLabelingJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a DataLabelingJob.
		/// Aiplatform_projects_locations_dataLabelingJobs_create v1/{parent}/dataLabelingJobs
		/// </summary>
		/// <param name="parent">Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1DataLabelingJob> Aiplatform_projects_locations_dataLabelingJobs_createAsync(string parent, GoogleCloudAiplatformV1DataLabelingJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/dataLabelingJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1DataLabelingJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists DatasetVersions in a Dataset.
		/// Aiplatform_projects_locations_datasets_datasetVersions_list v1/{parent}/datasetVersions
		/// </summary>
		/// <param name="parent">Required. The resource name of the Dataset to list DatasetVersions from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`</param>
		/// <param name="filter">Optional. The standard list filter.</param>
		/// <param name="orderBy">Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.</param>
		/// <param name="pageSize">Optional. The standard list page size.</param>
		/// <param name="pageToken">Optional. The standard list page token.</param>
		/// <param name="readMask">Optional. Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListDatasetVersionsResponse> Aiplatform_projects_locations_datasets_datasetVersions_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/datasetVersions&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListDatasetVersionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a version from a Dataset.
		/// Aiplatform_projects_locations_datasets_datasetVersions_create v1/{parent}/datasetVersions
		/// </summary>
		/// <param name="parent">Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_datasets_datasetVersions_createAsync(string parent, GoogleCloudAiplatformV1DatasetVersion requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/datasetVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Datasets in a Location.
		/// Aiplatform_projects_locations_datasets_list v1/{parent}/datasets
		/// </summary>
		/// <param name="parent">Required. The name of the Dataset's parent resource. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `displayName="myDisplayName"` * `labels.myKey="myValue"`</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListDatasetsResponse> Aiplatform_projects_locations_datasets_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/datasets&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListDatasetsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Dataset.
		/// Aiplatform_projects_locations_datasets_create v1/{parent}/datasets
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the Dataset in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_datasets_createAsync(string parent, GoogleCloudAiplatformV1Dataset requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/datasets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List DeploymentResourcePools in a location.
		/// Aiplatform_projects_locations_deploymentResourcePools_list v1/{parent}/deploymentResourcePools
		/// </summary>
		/// <param name="parent">Required. The parent Location which owns this collection of DeploymentResourcePools. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">The maximum number of DeploymentResourcePools to return. The service may return fewer than this value.</param>
		/// <param name="pageToken">A page token, received from a previous `ListDeploymentResourcePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDeploymentResourcePools` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse> Aiplatform_projects_locations_deploymentResourcePools_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deploymentResourcePools&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a DeploymentResourcePool.
		/// Aiplatform_projects_locations_deploymentResourcePools_create v1/{parent}/deploymentResourcePools
		/// </summary>
		/// <param name="parent">Required. The parent location resource where this DeploymentResourcePool will be created. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_deploymentResourcePools_createAsync(string parent, GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deploymentResourcePools";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Endpoints in a Location.
		/// Aiplatform_projects_locations_endpoints_list v1/{parent}/endpoints
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location from which to list the Endpoints. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `endpoint` supports = and !=. `endpoint` represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports = and, != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `endpoint=1` * `displayName="myDisplayName"` * `labels.myKey="myValue"`</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.</param>
		/// <param name="pageSize">Optional. The standard list page size.</param>
		/// <param name="pageToken">Optional. The standard list page token. Typically obtained via ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.</param>
		/// <param name="readMask">Optional. Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListEndpointsResponse> Aiplatform_projects_locations_endpoints_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/endpoints&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListEndpointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Endpoint.
		/// Aiplatform_projects_locations_endpoints_create v1/{parent}/endpoints
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the Endpoint in. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="endpointId">Immutable. The ID to use for endpoint, which will become the final component of the endpoint resource name. If not provided, Vertex AI will generate a value for this ID. If the first character is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last character must be a letter or number. If the first character is a number, this value may be up to 9 characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the fallback for fields that are not included in either the URI or the body.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_endpoints_createAsync(string parent, string endpointId, GoogleCloudAiplatformV1Endpoint requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/endpoints&endpointId=" + (endpointId==null? "" : System.Uri.EscapeDataString(endpointId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists EntityTypes in a given Featurestore.
		/// Aiplatform_projects_locations_featurestores_entityTypes_list v1/{parent}/entityTypes
		/// </summary>
		/// <param name="parent">Required. The resource name of the Featurestore to list EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`</param>
		/// <param name="filter">Lists the EntityTypes that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `entity_type_id` * `create_time` * `update_time`</param>
		/// <param name="pageSize">The maximum number of EntityTypes to return. The service may return fewer than this value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous FeaturestoreService.ListEntityTypes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListEntityTypes must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListEntityTypesResponse> Aiplatform_projects_locations_featurestores_entityTypes_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entityTypes&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListEntityTypesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new EntityType in a given Featurestore.
		/// Aiplatform_projects_locations_featurestores_entityTypes_create v1/{parent}/entityTypes
		/// </summary>
		/// <param name="parent">Required. The resource name of the Featurestore to create EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`</param>
		/// <param name="entityTypeId">Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_entityTypes_createAsync(string parent, string entityTypeId, GoogleCloudAiplatformV1EntityType requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/entityTypes&entityTypeId=" + (entityTypeId==null? "" : System.Uri.EscapeDataString(entityTypeId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists ModelEvaluations in a Model.
		/// Aiplatform_projects_locations_models_evaluations_list v1/{parent}/evaluations
		/// </summary>
		/// <param name="parent">Required. The resource name of the Model to list the ModelEvaluations from. Format: `projects/{project}/locations/{location}/models/{model}`</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token of the previous ModelService.ListModelEvaluations call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListModelEvaluationsResponse> Aiplatform_projects_locations_models_evaluations_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/evaluations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListModelEvaluationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Imports an externally generated ModelEvaluation.
		/// Aiplatform_projects_locations_models_evaluations_import v1/{parent}/evaluations:import
		/// </summary>
		/// <param name="parent">Required. The name of the parent model resource. Format: `projects/{project}/locations/{location}/models/{model}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ModelEvaluation> Aiplatform_projects_locations_models_evaluations_importAsync(string parent, GoogleCloudAiplatformV1ImportModelEvaluationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/evaluations:import";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ModelEvaluation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Executions in the MetadataStore.
		/// Aiplatform_projects_locations_metadataStores_executions_list v1/{parent}/executions
		/// </summary>
		/// <param name="parent">Required. The MetadataStore whose Executions should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="filter">Filter specifying the boolean condition for the Executions to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Executions based on the contexts to which they belong use the function operator with the full resource name: `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.</param>
		/// <param name="orderBy">How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">The maximum number of Executions to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.</param>
		/// <param name="pageToken">A page token, received from a previous MetadataService.ListExecutions call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with an INVALID_ARGUMENT error.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListExecutionsResponse> Aiplatform_projects_locations_metadataStores_executions_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/executions&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListExecutionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Execution associated with a MetadataStore.
		/// Aiplatform_projects_locations_metadataStores_executions_create v1/{parent}/executions
		/// </summary>
		/// <param name="parent">Required. The resource name of the MetadataStore where the Execution should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="executionId">The {execution} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not provided, the Execution's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Executions in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Execution.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Execution> Aiplatform_projects_locations_metadataStores_executions_createAsync(string parent, string executionId, GoogleCloudAiplatformV1Execution requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/executions&executionId=" + (executionId==null? "" : System.Uri.EscapeDataString(executionId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Execution>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Purges Executions.
		/// Aiplatform_projects_locations_metadataStores_executions_purge v1/{parent}/executions:purge
		/// </summary>
		/// <param name="parent">Required. The metadata store to purge Executions from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_metadataStores_executions_purgeAsync(string parent, GoogleCloudAiplatformV1PurgeExecutionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/executions:purge";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists TensorboardExperiments in a Location.
		/// Aiplatform_projects_locations_tensorboards_experiments_list v1/{parent}/experiments
		/// </summary>
		/// <param name="parent">Required. The resource name of the Tensorboard to list TensorboardExperiments. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`</param>
		/// <param name="filter">Lists the TensorboardExperiments that match the filter expression.</param>
		/// <param name="orderBy">Field to use to sort the list.</param>
		/// <param name="pageSize">The maximum number of TensorboardExperiments to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardExperiments are returned. The maximum value is 1000; values above 1000 are coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous TensorboardService.ListTensorboardExperiments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardExperiments must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListTensorboardExperimentsResponse> Aiplatform_projects_locations_tensorboards_experiments_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/experiments&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListTensorboardExperimentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a TensorboardExperiment.
		/// Aiplatform_projects_locations_tensorboards_experiments_create v1/{parent}/experiments
		/// </summary>
		/// <param name="parent">Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`</param>
		/// <param name="tensorboardExperimentId">Required. The ID to use for the Tensorboard experiment, which becomes the final component of the Tensorboard experiment's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1TensorboardExperiment> Aiplatform_projects_locations_tensorboards_experiments_createAsync(string parent, string tensorboardExperimentId, GoogleCloudAiplatformV1TensorboardExperiment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/experiments&tensorboardExperimentId=" + (tensorboardExperimentId==null? "" : System.Uri.EscapeDataString(tensorboardExperimentId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1TensorboardExperiment>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists FeatureGroups in a given project and location.
		/// Aiplatform_projects_locations_featureGroups_list v1/{parent}/featureGroups
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list FeatureGroups. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Lists the FeatureGroups that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureGroups created or updated after 2020-01-01. * `labels.env = "prod"` FeatureGroups with label "env" set to "prod".</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time`</param>
		/// <param name="pageSize">The maximum number of FeatureGroups to return. The service may return fewer than this value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.</param>
		/// <param name="pageToken">A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureGroupAdminService.ListFeatureGroups must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListFeatureGroupsResponse> Aiplatform_projects_locations_featureGroups_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureGroups&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListFeatureGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new FeatureGroup in a given project and location.
		/// Aiplatform_projects_locations_featureGroups_create v1/{parent}/featureGroups
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create FeatureGroups. Format: `projects/{project}/locations/{location}'`</param>
		/// <param name="featureGroupId">Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featureGroups_createAsync(string parent, string featureGroupId, GoogleCloudAiplatformV1FeatureGroup requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureGroups&featureGroupId=" + (featureGroupId==null? "" : System.Uri.EscapeDataString(featureGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists FeatureOnlineStores in a given project and location.
		/// Aiplatform_projects_locations_featureOnlineStores_list v1/{parent}/featureOnlineStores
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list FeatureOnlineStores. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Lists the FeatureOnlineStores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureOnlineStores created or updated after 2020-01-01. * `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time`</param>
		/// <param name="pageSize">The maximum number of FeatureOnlineStores to return. The service may return fewer than this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.</param>
		/// <param name="pageToken">A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse> Aiplatform_projects_locations_featureOnlineStores_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureOnlineStores&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new FeatureOnlineStore in a given project and location.
		/// Aiplatform_projects_locations_featureOnlineStores_create v1/{parent}/featureOnlineStores
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create FeatureOnlineStores. Format: `projects/{project}/locations/{location}'`</param>
		/// <param name="featureOnlineStoreId">Required. The ID to use for this FeatureOnlineStore, which will become the final component of the FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featureOnlineStores_createAsync(string parent, string featureOnlineStoreId, GoogleCloudAiplatformV1FeatureOnlineStore requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureOnlineStores&featureOnlineStoreId=" + (featureOnlineStoreId==null? "" : System.Uri.EscapeDataString(featureOnlineStoreId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists FeatureViewSyncs in a given FeatureView.
		/// Aiplatform_projects_locations_featureOnlineStores_featureViews_featureViewSyncs_list v1/{parent}/featureViewSyncs
		/// </summary>
		/// <param name="parent">Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`</param>
		/// <param name="filter">Lists the FeatureViewSyncs that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\"` --> FeatureViewSyncs created after 2020-01-31T15:30:00.000000Z.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `create_time`</param>
		/// <param name="pageSize">The maximum number of FeatureViewSyncs to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListFeatureViewSyncsResponse> Aiplatform_projects_locations_featureOnlineStores_featureViews_featureViewSyncs_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureViewSyncs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListFeatureViewSyncsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists FeatureViews in a given FeatureOnlineStore.
		/// Aiplatform_projects_locations_featureOnlineStores_featureViews_list v1/{parent}/featureViews
		/// </summary>
		/// <param name="parent">Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`</param>
		/// <param name="filter">Lists the FeatureViews that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the key.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `feature_view_id` * `create_time` * `update_time`</param>
		/// <param name="pageSize">The maximum number of FeatureViews to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListFeatureViewsResponse> Aiplatform_projects_locations_featureOnlineStores_featureViews_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureViews&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListFeatureViewsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new FeatureView in a given FeatureOnlineStore.
		/// Aiplatform_projects_locations_featureOnlineStores_featureViews_create v1/{parent}/featureViews
		/// </summary>
		/// <param name="parent">Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`</param>
		/// <param name="featureViewId">Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.</param>
		/// <param name="runSyncImmediately">Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featureOnlineStores_featureViews_createAsync(string parent, string featureViewId, bool runSyncImmediately, GoogleCloudAiplatformV1FeatureView requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featureViews&featureViewId=" + (featureViewId==null? "" : System.Uri.EscapeDataString(featureViewId))+"&runSyncImmediately="+runSyncImmediately;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Features in a given EntityType.
		/// Aiplatform_projects_locations_featurestores_entityTypes_features_list v1/{parent}/features
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list Features. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`</param>
		/// <param name="filter">Lists the Features that match the filter expression. The following filters are supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time > \"2020-01-31T15:30:00.000000Z\" OR update_time > \"2020-01-31T15:30:00.000000Z\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.</param>
		/// <param name="latestStatsCount">Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`</param>
		/// <param name="pageSize">The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous FeaturestoreService.ListFeatures call or FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListFeaturesResponse> Aiplatform_projects_locations_featurestores_entityTypes_features_listAsync(string parent, string filter, int latestStatsCount, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/features&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&latestStatsCount="+latestStatsCount+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListFeaturesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Feature in a given EntityType.
		/// Aiplatform_projects_locations_featurestores_entityTypes_features_create v1/{parent}/features
		/// </summary>
		/// <param name="parent">Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`</param>
		/// <param name="featureId">Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_entityTypes_features_createAsync(string parent, string featureId, GoogleCloudAiplatformV1Feature requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/features&featureId=" + (featureId==null? "" : System.Uri.EscapeDataString(featureId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a batch of Features in a given EntityType.
		/// Aiplatform_projects_locations_featurestores_entityTypes_features_batchCreate v1/{parent}/features:batchCreate
		/// </summary>
		/// <param name="parent">Required. The resource name of the EntityType to create the batch of Features under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_entityTypes_features_batchCreateAsync(string parent, GoogleCloudAiplatformV1BatchCreateFeaturesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/features:batchCreate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Featurestores in a given project and location.
		/// Aiplatform_projects_locations_featurestores_list v1/{parent}/featurestores
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list Featurestores. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Lists the featurestores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` Featurestores created or updated after 2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to "prod".</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time` * `online_serving_config.fixed_node_count`</param>
		/// <param name="pageSize">The maximum number of Featurestores to return. The service may return fewer than this value. If unspecified, at most 100 Featurestores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.</param>
		/// <param name="pageToken">A page token, received from a previous FeaturestoreService.ListFeaturestores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeaturestores must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListFeaturestoresResponse> Aiplatform_projects_locations_featurestores_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featurestores&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListFeaturestoresResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Featurestore in a given project and location.
		/// Aiplatform_projects_locations_featurestores_create v1/{parent}/featurestores
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create Featurestores. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="featurestoreId">Required. The ID to use for this Featurestore, which will become the final component of the Featurestore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_featurestores_createAsync(string parent, string featurestoreId, GoogleCloudAiplatformV1Featurestore requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/featurestores&featurestoreId=" + (featurestoreId==null? "" : System.Uri.EscapeDataString(featurestoreId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists HyperparameterTuningJobs in a Location.
		/// Aiplatform_projects_locations_hyperparameterTuningJobs_list v1/{parent}/hyperparameterTuningJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListHyperparameterTuningJobsResponse.next_page_token of the previous JobService.ListHyperparameterTuningJobs call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse> Aiplatform_projects_locations_hyperparameterTuningJobs_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/hyperparameterTuningJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a HyperparameterTuningJob
		/// Aiplatform_projects_locations_hyperparameterTuningJobs_create v1/{parent}/hyperparameterTuningJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the HyperparameterTuningJob in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1HyperparameterTuningJob> Aiplatform_projects_locations_hyperparameterTuningJobs_createAsync(string parent, GoogleCloudAiplatformV1HyperparameterTuningJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/hyperparameterTuningJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1HyperparameterTuningJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists IndexEndpoints in a Location.
		/// Aiplatform_projects_locations_indexEndpoints_list v1/{parent}/indexEndpoints
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location from which to list the IndexEndpoints. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `index_endpoint` supports = and !=. `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* or labels:key - key existence A key including a space must be quoted. `labels."a key"`. Some examples: * `index_endpoint="1"` * `display_name="myDisplayName"` * `regex(display_name, "^A") -> The display name starts with an A. * `labels.myKey="myValue"`</param>
		/// <param name="pageSize">Optional. The standard list page size.</param>
		/// <param name="pageToken">Optional. The standard list page token. Typically obtained via ListIndexEndpointsResponse.next_page_token of the previous IndexEndpointService.ListIndexEndpoints call.</param>
		/// <param name="readMask">Optional. Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListIndexEndpointsResponse> Aiplatform_projects_locations_indexEndpoints_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/indexEndpoints&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListIndexEndpointsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an IndexEndpoint.
		/// Aiplatform_projects_locations_indexEndpoints_create v1/{parent}/indexEndpoints
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the IndexEndpoint in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_indexEndpoints_createAsync(string parent, GoogleCloudAiplatformV1IndexEndpoint requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/indexEndpoints";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Indexes in a Location.
		/// Aiplatform_projects_locations_indexes_list v1/{parent}/indexes
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location from which to list the Indexes. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListIndexesResponse> Aiplatform_projects_locations_indexes_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/indexes&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListIndexesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Index.
		/// Aiplatform_projects_locations_indexes_create v1/{parent}/indexes
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the Index in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_indexes_createAsync(string parent, GoogleCloudAiplatformV1Index requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/indexes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists MetadataSchemas.
		/// Aiplatform_projects_locations_metadataStores_metadataSchemas_list v1/{parent}/metadataSchemas
		/// </summary>
		/// <param name="parent">Required. The MetadataStore whose MetadataSchemas should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="filter">A query to filter available MetadataSchemas for matching results.</param>
		/// <param name="pageSize">The maximum number of MetadataSchemas to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.</param>
		/// <param name="pageToken">A page token, received from a previous MetadataService.ListMetadataSchemas call. Provide this to retrieve the next page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListMetadataSchemasResponse> Aiplatform_projects_locations_metadataStores_metadataSchemas_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/metadataSchemas&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListMetadataSchemasResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a MetadataSchema.
		/// Aiplatform_projects_locations_metadataStores_metadataSchemas_create v1/{parent}/metadataSchemas
		/// </summary>
		/// <param name="parent">Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`</param>
		/// <param name="metadataSchemaId">The {metadata_schema} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataSchemas in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataSchema.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1MetadataSchema> Aiplatform_projects_locations_metadataStores_metadataSchemas_createAsync(string parent, string metadataSchemaId, GoogleCloudAiplatformV1MetadataSchema requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/metadataSchemas&metadataSchemaId=" + (metadataSchemaId==null? "" : System.Uri.EscapeDataString(metadataSchemaId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1MetadataSchema>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists MetadataStores for a Location.
		/// Aiplatform_projects_locations_metadataStores_list v1/{parent}/metadataStores
		/// </summary>
		/// <param name="parent">Required. The Location whose MetadataStores should be listed. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">The maximum number of Metadata Stores to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.</param>
		/// <param name="pageToken">A page token, received from a previous MetadataService.ListMetadataStores call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListMetadataStoresResponse> Aiplatform_projects_locations_metadataStores_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/metadataStores&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListMetadataStoresResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Initializes a MetadataStore, including allocation of resources.
		/// Aiplatform_projects_locations_metadataStores_create v1/{parent}/metadataStores
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location where the MetadataStore should be created. Format: `projects/{project}/locations/{location}/`</param>
		/// <param name="metadataStoreId">The {metadatastore} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataStores in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataStore.)</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_metadataStores_createAsync(string parent, string metadataStoreId, GoogleCloudAiplatformV1MetadataStore requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/metadataStores&metadataStoreId=" + (metadataStoreId==null? "" : System.Uri.EscapeDataString(metadataStoreId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.
		/// Aiplatform_projects_locations_migratableResources_batchMigrate v1/{parent}/migratableResources:batchMigrate
		/// </summary>
		/// <param name="parent">Required. The location of the migrated resource will live in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_migratableResources_batchMigrateAsync(string parent, GoogleCloudAiplatformV1BatchMigrateResourcesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/migratableResources:batchMigrate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI's given location.
		/// Aiplatform_projects_locations_migratableResources_search v1/{parent}/migratableResources:search
		/// </summary>
		/// <param name="parent">Required. The location that the migratable resources should be searched from. It's the Vertex AI location that the resources can be migrated to, not the resources' original location. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1SearchMigratableResourcesResponse> Aiplatform_projects_locations_migratableResources_searchAsync(string parent, GoogleCloudAiplatformV1SearchMigratableResourcesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/migratableResources:search";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1SearchMigratableResourcesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists ModelDeploymentMonitoringJobs in a Location.
		/// Aiplatform_projects_locations_modelDeploymentMonitoringJobs_list v1/{parent}/modelDeploymentMonitoringJobs
		/// </summary>
		/// <param name="parent">Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="readMask">Mask specifying which fields to read</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse> Aiplatform_projects_locations_modelDeploymentMonitoringJobs_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/modelDeploymentMonitoringJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
		/// Aiplatform_projects_locations_modelDeploymentMonitoringJobs_create v1/{parent}/modelDeploymentMonitoringJobs
		/// </summary>
		/// <param name="parent">Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ModelDeploymentMonitoringJob> Aiplatform_projects_locations_modelDeploymentMonitoringJobs_createAsync(string parent, GoogleCloudAiplatformV1ModelDeploymentMonitoringJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/modelDeploymentMonitoringJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ModelDeploymentMonitoringJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Models in a Location.
		/// Aiplatform_projects_locations_models_list v1/{parent}/models
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the Models from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `model` supports = and !=. `model` represents the Model ID, i.e. the last segment of the Model's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `model=1234` * `displayName="myDisplayName"` * `labels.myKey="myValue"`</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListModelsResponse.next_page_token of the previous ModelService.ListModels call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListModelsResponse> Aiplatform_projects_locations_models_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/models&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListModelsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.
		/// Aiplatform_projects_locations_models_copy v1/{parent}/models:copy
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location into which to copy the Model. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_models_copyAsync(string parent, GoogleCloudAiplatformV1CopyModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/models:copy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Uploads a Model artifact into Vertex AI.
		/// Aiplatform_projects_locations_models_upload v1/{parent}/models:upload
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location into which to upload the Model. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_models_uploadAsync(string parent, GoogleCloudAiplatformV1UploadModelRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/models:upload";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists NasJobs in a Location.
		/// Aiplatform_projects_locations_nasJobs_list v1/{parent}/nasJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the NasJobs from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListNasJobsResponse> Aiplatform_projects_locations_nasJobs_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/nasJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListNasJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a NasJob
		/// Aiplatform_projects_locations_nasJobs_create v1/{parent}/nasJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the NasJob in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1NasJob> Aiplatform_projects_locations_nasJobs_createAsync(string parent, GoogleCloudAiplatformV1NasJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/nasJobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1NasJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List top NasTrialDetails of a NasJob.
		/// Aiplatform_projects_locations_nasJobs_nasTrialDetails_list v1/{parent}/nasTrialDetails
		/// </summary>
		/// <param name="parent">Required. The name of the NasJob resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListNasTrialDetailsResponse.next_page_token of the previous JobService.ListNasTrialDetails call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListNasTrialDetailsResponse> Aiplatform_projects_locations_nasJobs_nasTrialDetails_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/nasTrialDetails&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListNasTrialDetailsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists NotebookRuntimeTemplates in a Location.
		/// Aiplatform_projects_locations_notebookRuntimeTemplates_list v1/{parent}/notebookRuntimeTemplates
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName="myDisplayName"` * `labels.myKey="myValue"` * `notebookRuntimeType=USER_DEFINED`</param>
		/// <param name="orderBy">Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.</param>
		/// <param name="pageSize">Optional. The standard list page size.</param>
		/// <param name="pageToken">Optional. The standard list page token. Typically obtained via ListNotebookRuntimeTemplatesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimeTemplates call.</param>
		/// <param name="readMask">Optional. Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse> Aiplatform_projects_locations_notebookRuntimeTemplates_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/notebookRuntimeTemplates&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a NotebookRuntimeTemplate.
		/// Aiplatform_projects_locations_notebookRuntimeTemplates_create v1/{parent}/notebookRuntimeTemplates
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="notebookRuntimeTemplateId">Optional. User specified ID for the notebook runtime template.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_notebookRuntimeTemplates_createAsync(string parent, string notebookRuntimeTemplateId, GoogleCloudAiplatformV1NotebookRuntimeTemplate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/notebookRuntimeTemplates&notebookRuntimeTemplateId=" + (notebookRuntimeTemplateId==null? "" : System.Uri.EscapeDataString(notebookRuntimeTemplateId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists NotebookRuntimes in a Location.
		/// Aiplatform_projects_locations_notebookRuntimes_list v1/{parent}/notebookRuntimes
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location from which to list the NotebookRuntimes. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntime` supports = and !=. `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the NotebookRuntime's resource name. * `displayName` supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED, BEING_UPGRADED]. * `runtimeUser` supports = and !=. * API version is UI only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntime="notebookRuntime123"` * `displayName="myDisplayName"` and `displayName=~"myDisplayNameRegex"` * `notebookRuntimeTemplate="notebookRuntimeTemplate321"` * `healthState=HEALTHY` * `runtimeState=RUNNING` * `runtimeUser="test@google.com"` * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`</param>
		/// <param name="orderBy">Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.</param>
		/// <param name="pageSize">Optional. The standard list page size.</param>
		/// <param name="pageToken">Optional. The standard list page token. Typically obtained via ListNotebookRuntimesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimes call.</param>
		/// <param name="readMask">Optional. Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListNotebookRuntimesResponse> Aiplatform_projects_locations_notebookRuntimes_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/notebookRuntimes&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListNotebookRuntimesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.
		/// Aiplatform_projects_locations_notebookRuntimes_assign v1/{parent}/notebookRuntimes:assign
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to get the NotebookRuntime assignment. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_notebookRuntimes_assignAsync(string parent, GoogleCloudAiplatformV1AssignNotebookRuntimeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/notebookRuntimes:assign";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists PipelineJobs in a Location.
		/// Aiplatform_projects_locations_pipelineJobs_list v1/{parent}/pipelineJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the PipelineJobs from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Lists the PipelineJobs that match the filter expression. The following fields are supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's display_name contains *step* by doing display_name:\"*step*\" * `state`: Supports `=` and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. * `template_uri`: Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`: Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined together using logical operators (`AND` & `OR`). For example: `pipeline_name="test" AND create_time>"2020-05-18T13:30:00Z"`. The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `create_time>"2021-05-18T00:00:00Z" OR update_time>"2020-05-18T00:00:00Z"` PipelineJobs created or updated after 2020-05-18 00:00:00 UTC. * `labels.env = "prod"` PipelineJobs with label "env" set to "prod".</param>
		/// <param name="orderBy">A comma-separated list of fields to order by. The default sort order is in ascending order. Use "desc" after a field name for descending. You can have multiple order_by fields provided e.g. "create_time desc, end_time", "end_time, start_time, update_time" For example, using "create_time desc, end_time" will order results by create time in descending order, and if there are multiple jobs having the same create time, order them by the end time in ascending order. if order_by is not specified, it will order by default order is create time in descending order. Supported fields: * `create_time` * `update_time` * `end_time` * `start_time`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListPipelineJobsResponse.next_page_token of the previous PipelineService.ListPipelineJobs call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListPipelineJobsResponse> Aiplatform_projects_locations_pipelineJobs_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/pipelineJobs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListPipelineJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a PipelineJob. A PipelineJob will run immediately when created.
		/// Aiplatform_projects_locations_pipelineJobs_create v1/{parent}/pipelineJobs
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pipelineJobId">The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1PipelineJob> Aiplatform_projects_locations_pipelineJobs_createAsync(string parent, string pipelineJobId, GoogleCloudAiplatformV1PipelineJob requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/pipelineJobs&pipelineJobId=" + (pipelineJobId==null? "" : System.Uri.EscapeDataString(pipelineJobId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1PipelineJob>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists TensorboardRuns in a Location.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_list v1/{parent}/runs
		/// </summary>
		/// <param name="parent">Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`</param>
		/// <param name="filter">Lists the TensorboardRuns that match the filter expression.</param>
		/// <param name="orderBy">Field to use to sort the list.</param>
		/// <param name="pageSize">The maximum number of TensorboardRuns to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum value is 1000; values above 1000 are coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous TensorboardService.ListTensorboardRuns call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardRuns must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListTensorboardRunsResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/runs&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListTensorboardRunsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a TensorboardRun.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_create v1/{parent}/runs
		/// </summary>
		/// <param name="parent">Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`</param>
		/// <param name="tensorboardRunId">Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1TensorboardRun> Aiplatform_projects_locations_tensorboards_experiments_runs_createAsync(string parent, string tensorboardRunId, GoogleCloudAiplatformV1TensorboardRun requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/runs&tensorboardRunId=" + (tensorboardRunId==null? "" : System.Uri.EscapeDataString(tensorboardRunId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1TensorboardRun>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Batch create TensorboardRuns.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_batchCreate v1/{parent}/runs:batchCreate
		/// </summary>
		/// <param name="parent">Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The parent field in the CreateTensorboardRunRequest messages must match this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_batchCreateAsync(string parent, GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/runs:batchCreate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists SavedQueries in a Dataset.
		/// Aiplatform_projects_locations_datasets_savedQueries_list v1/{parent}/savedQueries
		/// </summary>
		/// <param name="parent">Required. The resource name of the Dataset to list SavedQueries from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListSavedQueriesResponse> Aiplatform_projects_locations_datasets_savedQueries_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/savedQueries&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListSavedQueriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Schedules in a Location.
		/// Aiplatform_projects_locations_schedules_list v1/{parent}/schedules
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the Schedules from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Lists the Schedules that match the filter expression. The following fields are supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the check. (e.g. `create_pipeline_job_request:*` --> Schedule has create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `state="ACTIVE" AND display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` * `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*` * `create_pipeline_job_request:*`</param>
		/// <param name="orderBy">A comma-separated list of fields to order by. The default sort order is in ascending order. Use "desc" after a field name for descending. You can have multiple order_by fields provided. For example, using "create_time desc, end_time" will order results by create time in descending order, and if there are multiple schedules having the same create time, order them by the end time in ascending order. If order_by is not specified, it will order by default with create_time in descending order. Supported fields: * `create_time` * `start_time` * `end_time` * `next_run_time`</param>
		/// <param name="pageSize">The standard list page size. Default to 100 if not specified.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListSchedulesResponse> Aiplatform_projects_locations_schedules_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/schedules&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListSchedulesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Schedule.
		/// Aiplatform_projects_locations_schedules_create v1/{parent}/schedules
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the Schedule in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Schedule> Aiplatform_projects_locations_schedules_createAsync(string parent, GoogleCloudAiplatformV1Schedule requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/schedules";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Schedule>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists ModelEvaluationSlices in a ModelEvaluation.
		/// Aiplatform_projects_locations_models_evaluations_slices_list v1/{parent}/slices
		/// </summary>
		/// <param name="parent">Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`</param>
		/// <param name="filter">The standard list filter. * `slice.dimension` - for =.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListModelEvaluationSlicesResponse.next_page_token of the previous ModelService.ListModelEvaluationSlices call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse> Aiplatform_projects_locations_models_evaluations_slices_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/slices&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists SpecialistPools in a Location.
		/// Aiplatform_projects_locations_specialistPools_list v1/{parent}/specialistPools
		/// </summary>
		/// <param name="parent">Required. The name of the SpecialistPool's parent resource. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.</param>
		/// <param name="readMask">Mask specifying which fields to read. FieldMask represents a set of</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListSpecialistPoolsResponse> Aiplatform_projects_locations_specialistPools_listAsync(string parent, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/specialistPools&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListSpecialistPoolsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a SpecialistPool.
		/// Aiplatform_projects_locations_specialistPools_create v1/{parent}/specialistPools
		/// </summary>
		/// <param name="parent">Required. The parent Project name for the new SpecialistPool. The form is `projects/{project}/locations/{location}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_specialistPools_createAsync(string parent, GoogleCloudAiplatformV1SpecialistPool requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/specialistPools";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all the studies in a region for an associated project.
		/// Aiplatform_projects_locations_studies_list v1/{parent}/studies
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the Study from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="pageSize">Optional. The maximum number of studies to return per "page" of results. If unspecified, service will pick an appropriate default.</param>
		/// <param name="pageToken">Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListStudiesResponse> Aiplatform_projects_locations_studies_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/studies&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListStudiesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Study. A resource name will be generated after creation of the Study.
		/// Aiplatform_projects_locations_studies_create v1/{parent}/studies
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Study> Aiplatform_projects_locations_studies_createAsync(string parent, GoogleCloudAiplatformV1Study requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/studies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Study>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Looks a study up using the user-defined display_name field instead of the fully qualified resource name.
		/// Aiplatform_projects_locations_studies_lookup v1/{parent}/studies:lookup
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to get the Study from. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Study> Aiplatform_projects_locations_studies_lookupAsync(string parent, GoogleCloudAiplatformV1LookupStudyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/studies:lookup";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Study>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Tensorboards in a Location.
		/// Aiplatform_projects_locations_tensorboards_list v1/{parent}/tensorboards
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list Tensorboards. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">Lists the Tensorboards that match the filter expression.</param>
		/// <param name="orderBy">Field to use to sort the list.</param>
		/// <param name="pageSize">The maximum number of Tensorboards to return. The service may return fewer than this value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100; values above 100 are coerced to 100.</param>
		/// <param name="pageToken">A page token, received from a previous TensorboardService.ListTensorboards call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboards must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListTensorboardsResponse> Aiplatform_projects_locations_tensorboards_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tensorboards&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListTensorboardsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Tensorboard.
		/// Aiplatform_projects_locations_tensorboards_create v1/{parent}/tensorboards
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the Tensorboard in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_tensorboards_createAsync(string parent, GoogleCloudAiplatformV1Tensorboard requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tensorboards";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists TensorboardTimeSeries in a Location.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_list v1/{parent}/timeSeries
		/// </summary>
		/// <param name="parent">Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`</param>
		/// <param name="filter">Lists the TensorboardTimeSeries that match the filter expression.</param>
		/// <param name="orderBy">Field to use to sort the list.</param>
		/// <param name="pageSize">The maximum number of TensorboardTimeSeries to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are returned. The maximum value is 1000; values above 1000 are coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardTimeSeries must match the call that provided the page token.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/timeSeries&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a TensorboardTimeSeries.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_create v1/{parent}/timeSeries
		/// </summary>
		/// <param name="parent">Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`</param>
		/// <param name="tensorboardTimeSeriesId">Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}"</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1TensorboardTimeSeries> Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_createAsync(string parent, string tensorboardTimeSeriesId, GoogleCloudAiplatformV1TensorboardTimeSeries requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/timeSeries&tensorboardTimeSeriesId=" + (tensorboardTimeSeriesId==null? "" : System.Uri.EscapeDataString(tensorboardTimeSeriesId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1TensorboardTimeSeries>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists TrainingPipelines in a Location.
		/// Aiplatform_projects_locations_trainingPipelines_list v1/{parent}/trainingPipelines
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to list the TrainingPipelines from. Format: `projects/{project}/locations/{location}`</param>
		/// <param name="filter">The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` * `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT display_name="my_pipeline"` * `create_time>"2021-05-18T00:00:00Z"` * `training_task_definition:"*automl_text_classification*"`</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token of the previous PipelineService.ListTrainingPipelines call.</param>
		/// <param name="readMask">Mask specifying which fields to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListTrainingPipelinesResponse> Aiplatform_projects_locations_trainingPipelines_listAsync(string parent, string filter, int pageSize, string pageToken, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/trainingPipelines&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListTrainingPipelinesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
		/// Aiplatform_projects_locations_trainingPipelines_create v1/{parent}/trainingPipelines
		/// </summary>
		/// <param name="parent">Required. The resource name of the Location to create the TrainingPipeline in. Format: `projects/{project}/locations/{location}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1TrainingPipeline> Aiplatform_projects_locations_trainingPipelines_createAsync(string parent, GoogleCloudAiplatformV1TrainingPipeline requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/trainingPipelines";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1TrainingPipeline>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the Trials associated with a Study.
		/// Aiplatform_projects_locations_studies_trials_list v1/{parent}/trials
		/// </summary>
		/// <param name="parent">Required. The resource name of the Study to list the Trial from. Format: `projects/{project}/locations/{location}/studies/{study}`</param>
		/// <param name="pageSize">Optional. The number of Trials to retrieve per "page" of results. If unspecified, the service will pick an appropriate default.</param>
		/// <param name="pageToken">Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListTrialsResponse> Aiplatform_projects_locations_studies_trials_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/trials&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListTrialsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a user provided Trial to a Study.
		/// Aiplatform_projects_locations_studies_trials_create v1/{parent}/trials
		/// </summary>
		/// <param name="parent">Required. The resource name of the Study to create the Trial in. Format: `projects/{project}/locations/{location}/studies/{study}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Trial> Aiplatform_projects_locations_studies_trials_createAsync(string parent, GoogleCloudAiplatformV1Trial requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/trials";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Trial>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
		/// Aiplatform_projects_locations_studies_trials_listOptimalTrials v1/{parent}/trials:listOptimalTrials
		/// </summary>
		/// <param name="parent">Required. The name of the Study that the optimal Trial belongs to.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ListOptimalTrialsResponse> Aiplatform_projects_locations_studies_trials_listOptimalTrialsAsync(string parent, GoogleCloudAiplatformV1ListOptimalTrialsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/trials:listOptimalTrials";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ListOptimalTrialsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.
		/// Aiplatform_projects_locations_studies_trials_suggest v1/{parent}/trials:suggest
		/// </summary>
		/// <param name="parent">Required. The project and location that the Study belongs to. Format: `projects/{project}/locations/{location}/studies/{study}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_studies_trials_suggestAsync(string parent, GoogleCloudAiplatformV1SuggestTrialsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/trials:suggest";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
		/// Aiplatform_projects_locations_tensorboards_experiments_batchCreate v1/{parent}:batchCreate
		/// </summary>
		/// <param name="parent">Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub resources of this TensorboardExperiment.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse> Aiplatform_projects_locations_tensorboards_experiments_batchCreateAsync(string parent, GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":batchCreate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Imports a list of externally generated EvaluatedAnnotations.
		/// Aiplatform_projects_locations_models_evaluations_slices_batchImport v1/{parent}:batchImport
		/// </summary>
		/// <param name="parent">Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse> Aiplatform_projects_locations_models_evaluations_slices_batchImportAsync(string parent, GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":batchImport";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
		/// Aiplatform_projects_locations_notebookRuntimeTemplates_getIamPolicy v1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Aiplatform_projects_locations_notebookRuntimeTemplates_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
		/// Aiplatform_projects_locations_notebookRuntimeTemplates_setIamPolicy v1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Aiplatform_projects_locations_notebookRuntimeTemplates_setIamPolicyAsync(string resource, GoogleIamV1SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
		/// Aiplatform_projects_locations_notebookRuntimeTemplates_testIamPermissions v1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <param name="permissions">The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1TestIamPermissionsResponse> Aiplatform_projects_locations_notebookRuntimeTemplates_testIamPermissionsAsync(string resource, string[] permissions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions&"+string.Join("&", permissions.Select(z => $"permissions={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's. If any data fail to be ingested, an error is returned.
		/// Aiplatform_projects_locations_tensorboards_experiments_write v1/{tensorboardExperiment}:write
		/// </summary>
		/// <param name="tensorboardExperiment">Required. The resource name of the TensorboardExperiment to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse> Aiplatform_projects_locations_tensorboards_experiments_writeAsync(string tensorboardExperiment, GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboardExperiment==null? "" : System.Uri.EscapeDataString(tensorboardExperiment))+":write";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_write v1/{tensorboardRun}:write
		/// </summary>
		/// <param name="tensorboardRun">Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1WriteTensorboardRunDataResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_writeAsync(string tensorboardRun, GoogleCloudAiplatformV1WriteTensorboardRunDataRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboardRun==null? "" : System.Uri.EscapeDataString(tensorboardRun))+":write";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1WriteTensorboardRunDataResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_exportTensorboardTimeSeries v1/{tensorboardTimeSeries}:exportTensorboardTimeSeries
		/// </summary>
		/// <param name="tensorboardTimeSeries">Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_exportTensorboardTimeSeriesAsync(string tensorboardTimeSeries, GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboardTimeSeries==null? "" : System.Uri.EscapeDataString(tensorboardTimeSeries))+":exportTensorboardTimeSeries";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can't be greater than 10k.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_read v1/{tensorboardTimeSeries}:read
		/// </summary>
		/// <param name="tensorboardTimeSeries">Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`</param>
		/// <param name="filter">Reads the TensorboardTimeSeries' data that match the filter expression.</param>
		/// <param name="maxDataPoints">The maximum number of TensorboardTimeSeries' data to return. This value should be a positive integer. This value can be set to -1 to return all data.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_readAsync(string tensorboardTimeSeries, string filter, int maxDataPoints, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboardTimeSeries==null? "" : System.Uri.EscapeDataString(tensorboardTimeSeries))+":read&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&maxDataPoints="+maxDataPoints;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.
		/// Aiplatform_projects_locations_tensorboards_batchRead v1/{tensorboard}:batchRead
		/// </summary>
		/// <param name="tensorboard">Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.</param>
		/// <param name="timeSeries">Required. The resource names of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse> Aiplatform_projects_locations_tensorboards_batchReadAsync(string tensorboard, string[] timeSeries, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboard==null? "" : System.Uri.EscapeDataString(tensorboard))+":batchRead&"+string.Join("&", timeSeries.Select(z => $"timeSeries={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the storage size for a given TensorBoard instance.
		/// Aiplatform_projects_locations_tensorboards_readSize v1/{tensorboard}:readSize
		/// </summary>
		/// <param name="tensorboard">Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadTensorboardSizeResponse> Aiplatform_projects_locations_tensorboards_readSizeAsync(string tensorboard, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboard==null? "" : System.Uri.EscapeDataString(tensorboard))+":readSize";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadTensorboardSizeResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of monthly active users for a given TensorBoard instance.
		/// Aiplatform_projects_locations_tensorboards_readUsage v1/{tensorboard}:readUsage
		/// </summary>
		/// <param name="tensorboard">Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadTensorboardUsageResponse> Aiplatform_projects_locations_tensorboards_readUsageAsync(string tensorboard, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (tensorboard==null? "" : System.Uri.EscapeDataString(tensorboard))+":readUsage";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadTensorboardUsageResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's Cloud Storage bucket without users having to obtain Cloud Storage access permission.
		/// Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_readBlobData v1/{timeSeries}:readBlobData
		/// </summary>
		/// <param name="timeSeries">Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`</param>
		/// <param name="blobIds">IDs of the blobs to read.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse> Aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_readBlobDataAsync(string timeSeries, string[] blobIds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (timeSeries==null? "" : System.Uri.EscapeDataString(timeSeries))+":readBlobData&"+string.Join("&", blobIds.Select(z => $"blobIds={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.
		/// Aiplatform_projects_locations_studies_trials_addTrialMeasurement v1/{trialName}:addTrialMeasurement
		/// </summary>
		/// <param name="trialName">Required. The name of the trial to add measurement. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudAiplatformV1Trial> Aiplatform_projects_locations_studies_trials_addTrialMeasurementAsync(string trialName, GoogleCloudAiplatformV1AddTrialMeasurementRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (trialName==null? "" : System.Uri.EscapeDataString(trialName))+":addTrialMeasurement";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudAiplatformV1Trial>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
		/// Aiplatform_projects_locations_studies_trials_checkTrialEarlyStoppingState v1/{trialName}:checkTrialEarlyStoppingState
		/// </summary>
		/// <param name="trialName">Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Aiplatform_projects_locations_studies_trials_checkTrialEarlyStoppingStateAsync(string trialName, GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (trialName==null? "" : System.Uri.EscapeDataString(trialName))+":checkTrialEarlyStoppingState";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum Aiplatform_publishers_models_getView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBLISHER_MODEL_VIEW_UNSPECIFIED")]
		PUBLISHER_MODEL_VIEW_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBLISHER_MODEL_VIEW_BASIC")]
		PUBLISHER_MODEL_VIEW_BASIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBLISHER_MODEL_VIEW_FULL")]
		PUBLISHER_MODEL_VIEW_FULL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PUBLISHER_MODEL_VERSION_VIEW_BASIC")]
		PUBLISHER_MODEL_VERSION_VIEW_BASIC = 3,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Address_AutoComplete
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Caller_ID
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Contact_Enrichment
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Email_ID
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ID_Verification
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SearchBodyAddress Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Age { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Dob { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MiddleName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
	}
	
	public class SearchBodyAddress
	{
		
		[System.Runtime.Serialization.DataMember(Name="addressLine1")]
		public string AddressLine1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addressLine2")]
		public string AddressLine2 { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Search
		/// ###### *Click on the grey search box above, to view sample request/response objects for Address Autocomplete Search*
		/// 
		/// Perform a search:
		/// 
		/// 1. Add your key and key secret to the request headers.
		/// + galaxy-ap-name: [Key]
		/// + galaxy-ap-password: [Secret]
		/// + galaxy-search-type: DevAPIAddressAutoComplete
		/// 
		/// 2.  Add search criteria to your request.
		/// ~~~html
		/// {
		/// "Input":"1821 Q"
		/// }
		/// ~~~
		/// 
		/// 3.  Submit your search
		/// 
		/// The JSON request should have parts of the address.
		/// 
		/// + <code>Input</code> = null (optional, string) ... address.
		/// AddressAutocompletePost address/autocomplete
		/// </summary>
		/// <returns>OK</returns>
		public async Task AddressAutocompletePostAsync(AddressAutocompletePostPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "address/autocomplete";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Search
		/// ###### *Click on the grey search box above, to view sample request/response objects for Contact Enrichment Search*
		/// 
		/// Perform a search:
		/// 
		/// 1. Add your key and key secret to the request headers.
		/// + galaxy-ap-name: [Key]
		/// + galaxy-ap-password: [Secret]
		/// + galaxy-search-type: DevAPIContactEnrich
		/// 
		/// 2.  Add search criteria to your request. At least two are required: Name, Phone, Address, or Email.
		/// ~~~html
		/// {
		/// "FirstName": "John",
		/// "MiddleName": "T",
		/// "LastName": "Lawrence",
		/// "Dob":"",
		/// "Age": 0,
		/// "Address": {
		/// "addressLine1":"123 Q Street",
		/// "addressLine2":"Sacramento, CA"
		/// },
		/// "PhoneNumber":"",
		/// "Email":""
		/// }
		/// ~~~
		/// 
		/// 3.  Submit your search
		/// 
		/// A complete list of JSON request properties follows.
		/// 
		/// + <code>FirstName</code>= null (optional, string) ... First name.
		/// 
		/// + <code>MiddleName</code> = null (optional, string) ... Middle name or middle initial.
		/// 
		/// + <code>LastName</code> = null (optional, string) ... Last name.
		/// 
		/// + <code>Dob</code> = null (optional, string) ... Date of birth (format: MM/DD/YYYY).
		/// 
		/// + <code>Age</code> = null (optional, int) ... Age.
		/// 
		/// + <code>Addresses</code> = null (optional, Addresses[]) ... List of addresses.
		/// + <code>Members</code>
		/// + <code>AddressLine1</code> = null (optional, string) ... House number, street name and Unit number (i.e. 123 Q Street, Unit 102) or PO Box (i.e. 1821 Q Street).
		/// + <code>AddressLine2</code> = null (optional, string) ... State or City and State or Zip (i.e. Sacramento, CA).
		/// 
		/// + <code>Phone</code> = null (optional, string) ... Phone number (formats: ###-###-####, (###) ###-####).
		/// 
		/// + <code>Email</code> = null (optional, string) ... E-mail address.
		/// ContactEnrichPost contact/enrich
		/// </summary>
		/// <returns>OK</returns>
		public async Task ContactEnrichPostAsync(SearchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/enrich";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Search
		/// ###### *Click on the grey search box above, to view sample request/response objects for Email Enrichment Search*
		/// 
		/// Perform a search:
		/// 
		/// 1. Add your Access Profile username and password to the request headers.
		/// + galaxy-ap-name: [Key]
		/// + galaxy-ap-password: [Secret]
		/// + galaxy-search-type: DevAPIEmailID
		/// 
		/// 2.  Add search criteria to your request.
		/// ~~~html
		/// {
		/// "Email":"johnsmith@somedomain"
		/// }
		/// ~~~
		/// 
		/// 3.  Submit your search
		/// 
		/// The JSON request should have an email.
		/// 
		/// + <code>Email</code> = null (optional, string) ... E-mail address.
		/// EmailEnrichPost email/enrich
		/// </summary>
		/// <returns>OK</returns>
		public async Task EmailEnrichPostAsync(EmailEnrichPostPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "email/enrich";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Search
		/// ###### *Click on the grey search box above, to view sample request/response objects for the Identity Verification Search*
		/// 
		/// Perform a search:
		/// 
		/// 1. Add your key and key secret to the request headers.
		/// + galaxy-ap-name: [Key]
		/// + galaxy-ap-password: [Secret]
		/// + galaxy-search-type: DevAPIIDVerification
		/// 
		/// 2.  Add search criteria to your request. At least two are required: SSN, Name, Phone, Address or Email.
		/// ~~~html
		/// {
		/// "FirstName": "John",
		/// "MiddleName": "T",
		/// "LastName": "Lawrence",
		/// "Dob":"",
		/// "Age": 0,
		/// "Address": {
		/// "addressLine1":"123 Q Street, Unit 102",
		/// "addressLine2":"Sacramento, CA"
		/// },
		/// "PhoneNumber":"",
		/// "Email":""
		/// }
		/// ~~~
		/// 
		/// 3.  Submit your search
		/// 
		/// A complete list of JSON request properties follows.
		/// 
		/// + <code>FirstName</code>= null (optional, string) ... First name.
		/// 
		/// + <code>MiddleName</code> = null (optional, string) ... Middle name or middle initial.
		/// 
		/// + <code>LastName</code> = null (optional, string) ... Last name.
		/// 
		/// + <code>Dob</code> = null (optional, string) ... Date of birth (format: MM/DD/YYYY).
		/// 
		/// + <code>Age</code> = null (optional, int) ... Age.
		/// 
		/// + <code>Addresses</code> = null (optional, Addresses[]) ... List of addresses.
		/// + <code>Members</code>
		/// + <code>AddressLine1</code> = null (optional, string) ... House number, street name and Unit number (i.e. 123 Q Street, Unit 102) or PO Box (i.e. 1821 Q Street).
		/// + <code>AddressLine2</code> = null (optional, string) ... State or City and State or Zip (i.e. Sacramento, CA).
		/// 
		/// + <code>Phone</code> = null (optional, string) ... Phone number (formats: ###-###-####, (###) ###-####).
		/// 
		/// + <code>Email</code> = null (optional, string) ... E-mail address.
		/// IdentityVerify_idPost identity/verify_id
		/// </summary>
		/// <returns>OK</returns>
		public async Task IdentityVerify_idPostAsync(SearchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "identity/verify_id";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Search
		/// ###### *Click on the grey search box above, to view sample request/response objects for Phone Enrichment Search*
		/// 
		/// Perform a search:
		/// 
		/// 1. Add your key and key secret to the request headers.
		/// + galaxy-ap-name: [Key]
		/// + galaxy-ap-password: [Secret]
		/// + galaxy-search-type: DevAPICallerID
		/// 
		/// 2.  Add search criteria to your request.
		/// ~~~html
		/// {
		/// "Phone":"(123) 456-7890"
		/// }
		/// ~~~
		/// 
		/// 3.  Submit your search
		/// 
		/// The JSON request should have a phone number.
		/// 
		/// + <code>Phone</code> = null (optional, string) ... Phone number (formats: ###-###-####, (###) ###-####).
		/// PhoneEnrichPost phone/enrich
		/// </summary>
		/// <returns>OK</returns>
		public async Task PhoneEnrichPostAsync(PhoneEnrichPostPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone/enrich";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			using var requestWriter = new System.IO.StringWriter();
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class AddressAutocompletePostPostBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Input { get; set; }
	}
	
	public class EmailEnrichPostPostBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
	}
	
	public class PhoneEnrichPostPostBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Phone { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

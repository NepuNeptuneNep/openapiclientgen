//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CoursesPage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="courses")]
		public App__models__courses__Course[] Courses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public int Total { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__courses__Course
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region_code")]
		public string Region_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dam
	{
		
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam1 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DamClassAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="classes")]
		public App__models__dams__Class[] Classes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__dams__Class
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DamDistanceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public App__models__dams__Distance[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__dams__Distance
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dams
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public Dam[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Damsire
	{
		
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire1 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DamsireClassAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="classes")]
		public App__models__damsires__Class[] Classes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__damsires__Class
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DamsireDistanceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public App__models__damsires__Distance[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__damsires__Distance
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Damsires
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public Damsire[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Distances
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runs")]
		public int Runs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="times")]
		public TimesGoing[] Times { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimesGoing
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="going")]
		public string Going { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="position")]
		public string Position { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="time")]
		public string Time { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntriesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="meet_id")]
		public string Meet_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="races")]
		public App__models__na_entries__RaceResponse[] Races { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="track_id")]
		public string Track_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="track_name")]
		public string Track_name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="weather")]
		public App__models__na_entries__WeatherResponse Weather { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_entries__RaceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="age_restriction")]
		public string Age_restriction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="age_restriction_description")]
		public string Age_restriction_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="breed")]
		public string Breed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="changes")]
		public ChangeResponse[] Changes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="course_type")]
		public string Course_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="course_type_class")]
		public string Course_type_class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_description")]
		public string Distance_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_unit")]
		public string Distance_unit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_value")]
		public System.Nullable<System.Int32> Distance_value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="grade")]
		public string Grade { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="handicapper_name")]
		public string Handicapper_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="has_finished")]
		public System.Nullable<System.Boolean> Has_finished { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="has_results")]
		public System.Nullable<System.Boolean> Has_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="is_cancelled")]
		public System.Nullable<System.Boolean> Is_cancelled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="max_claim_price")]
		public System.Nullable<System.Int32> Max_claim_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="min_claim_price")]
		public System.Nullable<System.Int32> Min_claim_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mtp")]
		public System.Nullable<System.Int32> Mtp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="post_time")]
		public string Post_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="post_time_long")]
		public string Post_time_long { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="purse")]
		public System.Nullable<System.Int32> Purse { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_class")]
		public string Race_class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_key")]
		public App__models__na_entries__RaceKeyResponse Race_key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_pools")]
		public RacePoolResponse[] Race_pools { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_restriction")]
		public string Race_restriction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_restriction_description")]
		public string Race_restriction_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_type")]
		public string Race_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_type_description")]
		public string Race_type_description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public App__models__na_entries__RunnerResponse[] Runners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_restriction")]
		public string Sex_restriction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_restriction_description")]
		public string Sex_restriction_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surface_description")]
		public string Surface_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time_zone")]
		public string Time_zone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tote_track_id")]
		public string Tote_track_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="track_condition")]
		public string Track_condition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="track_name")]
		public string Track_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_entries__RaceKeyResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="day_evening")]
		public string Day_evening { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_number")]
		public string Race_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacePoolResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="maximum_wager_amount")]
		public System.Nullable<System.Int32> Maximum_wager_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimum_box_amount")]
		public System.Nullable<System.Int32> Minimum_box_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimum_wager_amount")]
		public System.Nullable<System.Int32> Minimum_wager_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimum_wheel_amount")]
		public System.Nullable<System.Int32> Minimum_wheel_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pool_code")]
		public string Pool_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="pool_name")]
		public string Pool_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_list")]
		public string Race_list { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_entries__RunnerResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="claiming")]
		public System.Nullable<System.Int32> Claiming { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="coupled_type")]
		public string Coupled_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dam_name")]
		public string Dam_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dam_sire_name")]
		public string Dam_sire_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="equipment")]
		public string Equipment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="handicapper_name")]
		public string Handicapper_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horse_name")]
		public string Horse_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public JockeyResponse Jockey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="live_odds")]
		public string Live_odds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="medication")]
		public string Medication { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="morning_line_odds")]
		public string Morning_line_odds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="post_pos")]
		public string Post_pos { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="program_number")]
		public string Program_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="program_number_stripped")]
		public System.Nullable<System.Int32> Program_number_stripped { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scratch_indicator")]
		public string Scratch_indicator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sire_name")]
		public string Sire_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public TrainerResponse Trainer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public string Weight { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JockeyResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="alias")]
		public string Alias { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_name_initial")]
		public string First_name_initial { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrainerResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="alias")]
		public string Alias { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_name_initial")]
		public string First_name_initial { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_entries__WeatherResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="current_weather_description")]
		public string Current_weather_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_high")]
		public System.Nullable<System.Int32> Forecast_high { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_low")]
		public System.Nullable<System.Int32> Forecast_low { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_precipitation")]
		public System.Nullable<System.Int32> Forecast_precipitation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_weather_description")]
		public string Forecast_weather_description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FractionResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fraction_1")]
		public TimeDataResponse Fraction_1 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fraction_2")]
		public TimeDataResponse Fraction_2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fraction_3")]
		public TimeDataResponse Fraction_3 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fraction_4")]
		public TimeDataResponse Fraction_4 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fraction_5")]
		public TimeDataResponse Fraction_5 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="winning_time")]
		public TimeDataResponse Winning_time { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeDataResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="fifths")]
		public System.Nullable<System.Int32> Fifths { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="hundredths")]
		public System.Nullable<System.Int32> Hundredths { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="milliseconds")]
		public System.Nullable<System.Int32> Milliseconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minutes")]
		public System.Nullable<System.Int32> Minutes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seconds")]
		public System.Nullable<System.Int32> Seconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="str_fifths")]
		public string Str_fifths { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time_in_fifths")]
		public string Time_in_fifths { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time_in_hundredths")]
		public string Time_in_hundredths { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HTTPValidationError
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public ValidationError[] Detail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loc")]
		public string[] Loc { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="msg")]
		public string Msg { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Horse
	{
		
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dam_id")]
		public string Dam_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="damsire_id")]
		public string Damsire_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horse")]
		public string Horse1 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sire_id")]
		public string Sire_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HorseAges
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse_age")]
		public string Horse_age { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HorseDistanceTimeAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam_id")]
		public string Dam_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire_id")]
		public string Damsire_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public Distances[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse")]
		public string Horse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire_id")]
		public string Sire_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runs")]
		public int Total_runs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Horses
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public Horse[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JockeyCourseAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="courses")]
		public App__models__jockeys__Course[] Courses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_rides")]
		public int Total_rides { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__jockeys__Course
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rides")]
		public int Rides { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JockeyDistanceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public App__models__jockeys__Distance[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_rides")]
		public int Total_rides { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__jockeys__Distance
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rides")]
		public int Rides { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JockeyOwnerAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owners")]
		public App__models__jockeys__Owner[] Owners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_rides")]
		public int Total_rides { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__jockeys__Owner
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rides")]
		public int Rides { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JockeyTrainerAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_rides")]
		public int Total_rides { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainers")]
		public App__models__jockeys__Trainer[] Trainers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__jockeys__Trainer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rides")]
		public int Rides { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer_id")]
		public string Trainer_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Jockeys
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public App__models__jockeys__Jockey[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__jockeys__Jockey
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MeetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="meet_id")]
		public string Meet_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="track_id")]
		public string Track_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="track_name")]
		public string Track_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MeetsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public int Limit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meets")]
		public MeetResponse[] Meets { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="skip")]
		public int Skip { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OwnerCourseAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="courses")]
		public App__models__owners__Course[] Courses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__owners__Course
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OwnerDistanceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public App__models__owners__Distance[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__owners__Distance
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OwnerJockeyAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockeys")]
		public App__models__owners__Jockey[] Jockeys { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__owners__Jockey
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey_id")]
		public string Jockey_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OwnerTrainerAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainers")]
		public App__models__owners__Trainer[] Trainers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__owners__Trainer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer_id")]
		public string Trainer_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Owners
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public App__models__owners__Owner[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__owners__Owner
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayoffResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_amount")]
		public System.Nullable<System.Double> Base_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="carryover")]
		public System.Nullable<System.Double> Carryover { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_of_rights")]
		public System.Nullable<System.Int32> Number_of_rights { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_of_tickets_bet")]
		public System.Nullable<System.Int32> Number_of_tickets_bet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payoff_amount")]
		public System.Nullable<System.Double> Payoff_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_pool")]
		public System.Nullable<System.Int32> Total_pool { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wager_name")]
		public string Wager_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wager_type")]
		public string Wager_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="winning_numbers")]
		public string Winning_numbers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Racecard
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="age_band")]
		public string Age_band { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="big_race")]
		public System.Nullable<System.Boolean> Big_race { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course_id")]
		public string Course_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public string Distance { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance_f")]
		public string Distance_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance_round")]
		public string Distance_round { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="field_size")]
		public string Field_size { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="going")]
		public string Going { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="going_detailed")]
		public string Going_detailed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="is_abandoned")]
		public System.Nullable<System.Boolean> Is_abandoned { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="off_dt")]
		public string Off_dt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="off_time")]
		public string Off_time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pattern")]
		public string Pattern { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prize")]
		public string Prize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_class")]
		public string Race_class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_id")]
		public string Race_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rail_movements")]
		public string Rail_movements { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating_band")]
		public string Rating_band { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public App__models__racecards__Runner[] Runners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stalls")]
		public string Stalls { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surface")]
		public string Surface { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weather")]
		public string Weather { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__racecards__Runner
	{
		
		[System.Runtime.Serialization.DataMember(Name="age")]
		public string Age { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="breeder")]
		public string Breeder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="colour")]
		public string Colour { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		public string Comment { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam_id")]
		public string Dam_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="dam_region")]
		public string Dam_region { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire_id")]
		public string Damsire_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="damsire_region")]
		public string Damsire_region { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="dob")]
		public string Dob { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="draw")]
		public string Draw { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="form")]
		public string Form { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="headgear")]
		public string Headgear { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="headgear_run")]
		public string Headgear_run { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse")]
		public string Horse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse_id")]
		public string Horse_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey_id")]
		public string Jockey_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_run")]
		public string Last_run { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lbs")]
		public string Lbs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="medical")]
		public RunnerMedical[] Medical { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ofr")]
		public string Ofr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="past_results_flags")]
		public string[] Past_results_flags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prev_owners")]
		public RunnerPrevOwner[] Prev_owners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prev_trainers")]
		public RunnerPrevTrainer[] Prev_trainers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="quotes")]
		public RunnerQuote[] Quotes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rpr")]
		public string Rpr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex")]
		public string Sex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_code")]
		public string Sex_code { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="silk_url")]
		public string Silk_url { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire_id")]
		public string Sire_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="sire_region")]
		public string Sire_region { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="spotlight")]
		public string Spotlight { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="stable_tour")]
		public RunnerStableTour[] Stable_tour { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainer_14_days")]
		public RunnerTrainer14Days Trainer_14_days { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer_id")]
		public string Trainer_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="trainer_location")]
		public string Trainer_location { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="trainer_rtf")]
		public string Trainer_rtf { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ts")]
		public string Ts { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="wind_surgery")]
		public string Wind_surgery { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="wind_surgery_run")]
		public string Wind_surgery_run { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerMedical
	{
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerPrevOwner
	{
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="change_date")]
		public string Change_date { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerPrevTrainer
	{
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="change_date")]
		public string Change_date { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="trainer_id")]
		public string Trainer_id { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerQuote
	{
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="course_id")]
		public string Course_id { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="distance_f")]
		public string Distance_f { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="distance_y")]
		public string Distance_y { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="quote")]
		public string Quote { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="race")]
		public string Race { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerStableTour
	{
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="quote")]
		public string Quote { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerTrainer14Days
	{
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="percent")]
		public string Percent { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="runs")]
		public string Runs { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="wins")]
		public string Wins { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacecardBasic
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="age_band")]
		public string Age_band { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance_f")]
		public string Distance_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="field_size")]
		public string Field_size { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="going")]
		public string Going { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="off_dt")]
		public string Off_dt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="off_time")]
		public string Off_time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pattern")]
		public string Pattern { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prize")]
		public string Prize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_class")]
		public string Race_class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating_band")]
		public string Rating_band { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public RunnerBasic[] Runners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surface")]
		public string Surface { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerBasic
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="age")]
		public string Age { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="colour")]
		public string Colour { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="draw")]
		public string Draw { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="form")]
		public string Form { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="headgear")]
		public string Headgear { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse")]
		public string Horse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_run")]
		public string Last_run { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lbs")]
		public string Lbs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ofr")]
		public string Ofr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex")]
		public string Sex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_code")]
		public string Sex_code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacecardOdds
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="age_band")]
		public string Age_band { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="big_race")]
		public System.Nullable<System.Boolean> Big_race { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course_id")]
		public string Course_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance")]
		public string Distance { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance_f")]
		public string Distance_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distance_round")]
		public string Distance_round { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="field_size")]
		public string Field_size { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="going")]
		public string Going { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="going_detailed")]
		public string Going_detailed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="is_abandoned")]
		public System.Nullable<System.Boolean> Is_abandoned { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="jumps")]
		public string Jumps { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="off_dt")]
		public string Off_dt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="off_time")]
		public string Off_time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pattern")]
		public string Pattern { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prize")]
		public string Prize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_class")]
		public string Race_class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_id")]
		public string Race_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rail_movements")]
		public string Rail_movements { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating_band")]
		public string Rating_band { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public RunnerOdds[] Runners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stalls")]
		public string Stalls { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surface")]
		public string Surface { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weather")]
		public string Weather { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunnerOdds
	{
		
		[System.Runtime.Serialization.DataMember(Name="age")]
		public string Age { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="breeder")]
		public string Breeder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="colour")]
		public string Colour { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		public string Comment { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam_id")]
		public string Dam_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="dam_region")]
		public string Dam_region { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire_id")]
		public string Damsire_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="damsire_region")]
		public string Damsire_region { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="dob")]
		public string Dob { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="draw")]
		public string Draw { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="form")]
		public string Form { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="headgear")]
		public string Headgear { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="headgear_run")]
		public string Headgear_run { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse")]
		public string Horse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse_id")]
		public string Horse_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey_id")]
		public string Jockey_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_run")]
		public string Last_run { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lbs")]
		public string Lbs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="medical")]
		public RunnerMedical[] Medical { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="odds")]
		public string[] Odds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ofr")]
		public string Ofr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="past_results_flags")]
		public string[] Past_results_flags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prev_owners")]
		public RunnerPrevOwner[] Prev_owners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prev_trainers")]
		public RunnerPrevTrainer[] Prev_trainers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="quotes")]
		public RunnerQuote[] Quotes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rpr")]
		public string Rpr { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex")]
		public string Sex { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_code")]
		public string Sex_code { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="silk_url")]
		public string Silk_url { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire_id")]
		public string Sire_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="sire_region")]
		public string Sire_region { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="spotlight")]
		public string Spotlight { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="stable_tour")]
		public RunnerStableTour[] Stable_tour { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainer_14_days")]
		public RunnerTrainer14Days Trainer_14_days { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer_id")]
		public string Trainer_id { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="trainer_location")]
		public string Trainer_location { get; set; } = "";
		
		[System.Runtime.Serialization.DataMember(Name="trainer_rtf")]
		public string Trainer_rtf { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ts")]
		public string Ts { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="wind_surgery")]
		public string Wind_surgery { get; set; } = "";
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="wind_surgery_run")]
		public string Wind_surgery_run { get; set; } = "";
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacecardSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="big_race")]
		public System.Nullable<System.Boolean> Big_race { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course_id")]
		public string Course_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="off_time")]
		public string Off_time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_class")]
		public string Race_class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_id")]
		public string Race_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Racecards
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="racecards")]
		public Racecard[] Racecards1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacecardsBasic
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="racecards")]
		public RacecardBasic[] Racecards { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacecardsOdds
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="racecards")]
		public RacecardOdds[] Racecards { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RacecardsSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="racecard_summaries")]
		public RacecardSummary[] Racecard_summaries { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Region
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region1 { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region_code")]
		public string Region_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Result
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="age_band")]
		public string Age_band { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course_id")]
		public string Course_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="going")]
		public string Going { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="jumps")]
		public string Jumps { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="off")]
		public string Off { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="off_dt")]
		public string Off_dt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pattern")]
		public string Pattern { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_id")]
		public string Race_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating_band")]
		public string Rating_band { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public App__models__result__Runner[] Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sex_rest")]
		public string Sex_rest { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__result__Runner
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="age")]
		public string Age { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="btn")]
		public string Btn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="comment")]
		public string Comment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam")]
		public string Dam { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dam_id")]
		public string Dam_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire")]
		public string Damsire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="damsire_id")]
		public string Damsire_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="draw")]
		public string Draw { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="headgear")]
		public string Headgear { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse")]
		public string Horse { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse_id")]
		public string Horse_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey_id")]
		public string Jockey_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="or")]
		public string Or { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ovr_btn")]
		public string Ovr_btn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="position")]
		public string Position { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="prize")]
		public string Prize { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rpr")]
		public string Rpr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sex")]
		public string Sex { get; set; }
		
		[System.ComponentModel.DefaultValue("")]
		[System.Runtime.Serialization.DataMember(Name="silk_url")]
		public string Silk_url { get; set; } = "";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire_id")]
		public string Sire_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sp")]
		public string Sp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sp_dec")]
		public string Sp_dec { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="time")]
		public string Time { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer_id")]
		public string Trainer_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tsr")]
		public string Tsr { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public string Weight { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="weight_lbs")]
		public string Weight_lbs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResultsPage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public int Limit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Result[] Results { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="skip")]
		public int Skip { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public int Total { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResultsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="meet_id")]
		public string Meet_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="races")]
		public App__models__na_results__RaceResponse[] Races { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="track_id")]
		public string Track_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="track_name")]
		public string Track_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weather")]
		public App__models__na_results__WeatherResponse Weather { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_results__RaceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="age_restriction")]
		public string Age_restriction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="age_restriction_description")]
		public string Age_restriction_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="also_ran")]
		public string Also_ran { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="breed")]
		public string Breed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_description")]
		public string Distance_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_unit")]
		public string Distance_unit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="distance_value")]
		public System.Nullable<System.Int32> Distance_value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fraction")]
		public FractionResponse Fraction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="grade")]
		public string Grade { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maximum_claim_price")]
		public string Maximum_claim_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minimum_claim_price")]
		public string Minimum_claim_price { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="off_time")]
		public System.Nullable<System.Int32> Off_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payoffs")]
		public PayoffResponse[] Payoffs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="post_time")]
		public string Post_time { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="post_time_long")]
		public System.Nullable<System.Int32> Post_time_long { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_class")]
		public string Race_class { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_key")]
		public App__models__na_results__RaceKeyResponse Race_key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_name")]
		public string Race_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_restriction")]
		public string Race_restriction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_restriction_description")]
		public string Race_restriction_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_type")]
		public string Race_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_type_description")]
		public string Race_type_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public App__models__na_results__RunnerResponse[] Runners { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scratches")]
		public string[] Scratches { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_restriction")]
		public string Sex_restriction { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sex_restriction_description")]
		public string Sex_restriction_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surface")]
		public string Surface { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="surface_description")]
		public string Surface_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="time_zone")]
		public string Time_zone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_purse")]
		public string Total_purse { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="track_condition_description")]
		public string Track_condition_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="track_name")]
		public string Track_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wager_types")]
		public WagerTypeResponse[] Wager_types { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_results__RaceKeyResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="day_evening")]
		public string Day_evening { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="race_number")]
		public string Race_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_results__RunnerResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="breeder_name")]
		public string Breeder_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horse_name")]
		public string Horse_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jockey_first_name")]
		public string Jockey_first_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jockey_first_name_initial")]
		public string Jockey_first_name_initial { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="jockey_last_name")]
		public string Jockey_last_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner_first_name")]
		public string Owner_first_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="owner_last_name")]
		public string Owner_last_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="place_payoff")]
		public System.Nullable<System.Double> Place_payoff { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="program_number")]
		public string Program_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="program_number_stripped")]
		public System.Nullable<System.Int32> Program_number_stripped { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="show_payoff")]
		public System.Nullable<System.Double> Show_payoff { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sire_name")]
		public string Sire_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainer_first_name")]
		public string Trainer_first_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainer_last_name")]
		public string Trainer_last_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weight_carried")]
		public string Weight_carried { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="win_payoff")]
		public System.Nullable<System.Double> Win_payoff { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WagerTypeResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="base_amount")]
		public string Base_amount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wager_description")]
		public string Wager_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="wager_type")]
		public string Wager_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__na_results__WeatherResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="current_temperature")]
		public string Current_temperature { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="current_weather_description")]
		public string Current_weather_description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_high")]
		public System.Nullable<System.Int32> Forecast_high { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_low")]
		public System.Nullable<System.Int32> Forecast_low { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_precipitation")]
		public System.Nullable<System.Int32> Forecast_precipitation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forecast_weather_description")]
		public string Forecast_weather_description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Sire
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SireClassAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="classes")]
		public App__models__sires__Class[] Classes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__sires__Class
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="class")]
		public string Class { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SireDistanceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public App__models__sires__Distance[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sire")]
		public string Sire { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__sires__Distance
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Sires
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public Sire[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrainerCourseAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="courses")]
		public App__models__trainers__Course[] Courses { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__trainers__Course
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="course")]
		public string Course { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrainerDistanceAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="distances")]
		public App__models__trainers__Distance[] Distances { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__trainers__Distance
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist")]
		public string Dist { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_f")]
		public string Dist_f { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_m")]
		public string Dist_m { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="dist_y")]
		public string Dist_y { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrainerHorseAgeAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="horse_ages")]
		public HorseAges[] Horse_ages { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrainerJockeyAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockeys")]
		public App__models__trainers__Jockey[] Jockeys { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__trainers__Jockey
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey")]
		public string Jockey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jockey_id")]
		public string Jockey_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrainerOwnerAnalysis
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owners")]
		public App__models__trainers__Owner[] Owners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string[] Query { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total_runners")]
		public int Total_runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__trainers__Owner
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1_pl")]
		public double _1_pl { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="1st")]
		public int _1st { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="2nd")]
		public int _2nd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="3rd")]
		public int _3rd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="4th")]
		public int _4th { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="a/e")]
		public double ASlashe { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public string Owner { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="runners")]
		public int Runners { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="win_%")]
		public double Win_Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Trainers
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="search_results")]
		public App__models__trainers__Trainer[] Search_results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App__models__trainers__Trainer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="trainer")]
		public string Trainer { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List Courses
		/// List courses (FREE PLAN)
		/// List_courses_v1_courses_get v1/courses
		/// </summary>
		/// <param name="region_codes">Filter courses by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<CoursesPage> List_courses_v1_courses_getAsync(string[] region_codes, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/courses?"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CoursesPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Regions
		/// List regions (FREE PLAN)
		/// List_regions_v1_courses_regions_get v1/courses/regions
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Region[]> List_regions_v1_courses_regions_getAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/courses/regions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Region[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Dams
		/// Search dams by name (STANDARD PLAN)
		/// Search_dams_v1_dams_search_get v1/dams/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Dams> Search_dams_v1_dams_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/dams/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Dams>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Dam Class Analysis
		/// <p>Offspring class statistics for dam (STANDARD PLAN).</p><p>For dam results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dam_' dam id prefix with 'hrs_'.</p>
		/// Dam_class_analysis_v1_dams__dam_id__analysis_classes_get v1/dams/{dam_id}/analysis/classes
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<DamClassAnalysis> Dam_class_analysis_v1_dams__dam_id__analysis_classes_getAsync(string dam_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/dams/"+ (dam_id==null? "" : System.Uri.EscapeDataString(dam_id))+"/analysis/classes&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DamClassAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Dam Distance Analysis
		/// <p>Offspring distance statistics for dam (STANDARD PLAN). .</p><p>For dam results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dam_' dam id prefix with 'hrs_'.</p>
		/// Dam_distance_analysis_v1_dams__dam_id__analysis_distances_get v1/dams/{dam_id}/analysis/distances
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<DamDistanceAnalysis> Dam_distance_analysis_v1_dams__dam_id__analysis_distances_getAsync(string dam_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/dams/"+ (dam_id==null? "" : System.Uri.EscapeDataString(dam_id))+"/analysis/distances&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DamDistanceAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Dam Results
		/// <p>Full historic results for dam offspring (PRO PLAN).</p><p>For dam results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dam_' dam id prefix with 'hrs_'.</p>
		/// Dam_results_v1_dams__dam_id__results_get v1/dams/{dam_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Dam_results_v1_dams__dam_id__results_getAsync(string dam_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/dams/"+ (dam_id==null? "" : System.Uri.EscapeDataString(dam_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Damsires
		/// Search damsires by name (STANDARD PLAN)
		/// Search_damsires_v1_damsires_search_get v1/damsires/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Damsires> Search_damsires_v1_damsires_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/damsires/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Damsires>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Damsire Class Analysis
		/// <p>Grandoffspring class statistics for damsire (STANDARD PLAN).</p><p>For damsire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dsi_' damsire id prefix with 'hrs_'.</p>
		/// Damsire_class_analysis_v1_damsires__damsire_id__analysis_classes_get v1/damsires/{damsire_id}/analysis/classes
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<DamsireClassAnalysis> Damsire_class_analysis_v1_damsires__damsire_id__analysis_classes_getAsync(string damsire_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/damsires/"+ (damsire_id==null? "" : System.Uri.EscapeDataString(damsire_id))+"/analysis/classes&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DamsireClassAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Damsire Distance Analysis
		/// <p>Grandoffspring distance statistics for damsire (STANDARD PLAN).</p><p>For damsire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dsi_' damsire id prefix with 'hrs_'.</p>
		/// Damsire_distance_analysis_v1_damsires__damsire_id__analysis_distances_get v1/damsires/{damsire_id}/analysis/distances
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<DamsireDistanceAnalysis> Damsire_distance_analysis_v1_damsires__damsire_id__analysis_distances_getAsync(string damsire_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/damsires/"+ (damsire_id==null? "" : System.Uri.EscapeDataString(damsire_id))+"/analysis/distances&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DamsireDistanceAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Damsire Results
		/// <p>Full historic results for damsire grandoffspring (PRO PLAN). .</p><p>For damsire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dsi_' damsire id prefix with 'hrs_'.</p>
		/// Damsire_results_v1_damsires__damsire_id__results_get v1/damsires/{damsire_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Damsire_results_v1_damsires__damsire_id__results_getAsync(string damsire_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/damsires/"+ (damsire_id==null? "" : System.Uri.EscapeDataString(damsire_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Horses
		/// Search horses by name (STANDARD PLAN)
		/// Search_horses_v1_horses_search_get v1/horses/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Horses> Search_horses_v1_horses_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/horses/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Horses>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Horse Distance Time Analysis
		/// Distance statistics for a horse, with times and going (STANDARD PLAN)
		/// Horse_distance_time_analysis_v1_horses__horse_id__analysis_distance_times_get v1/horses/{horse_id}/analysis/distance-times
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<HorseDistanceTimeAnalysis> Horse_distance_time_analysis_v1_horses__horse_id__analysis_distance_times_getAsync(string horse_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/horses/"+ (horse_id==null? "" : System.Uri.EscapeDataString(horse_id))+"/analysis/distance-times&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<HorseDistanceTimeAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Horse Results
		/// Full historic results for a horse (PRO PLAN)
		/// Horse_results_v1_horses__horse_id__results_get v1/horses/{horse_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Horse_results_v1_horses__horse_id__results_getAsync(string horse_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/horses/"+ (horse_id==null? "" : System.Uri.EscapeDataString(horse_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Jockeys
		/// Search jockeys by name (STANDARD PLAN)
		/// Search_jockeys_v1_jockeys_search_get v1/jockeys/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Jockeys> Search_jockeys_v1_jockeys_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jockeys/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Jockeys>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Jockey Course Analysis
		/// Course statistics for a jockey (STANDARD PLAN)
		/// Jockey_course_analysis_v1_jockeys__jockey_id__analysis_courses_get v1/jockeys/{jockey_id}/analysis/courses
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<JockeyCourseAnalysis> Jockey_course_analysis_v1_jockeys__jockey_id__analysis_courses_getAsync(string jockey_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jockeys/"+ (jockey_id==null? "" : System.Uri.EscapeDataString(jockey_id))+"/analysis/courses&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JockeyCourseAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Jockey Distance Analysis
		/// Distance statistics for a jockey (STANDARD PLAN)
		/// Jockey_distance_analysis_v1_jockeys__jockey_id__analysis_distances_get v1/jockeys/{jockey_id}/analysis/distances
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<JockeyDistanceAnalysis> Jockey_distance_analysis_v1_jockeys__jockey_id__analysis_distances_getAsync(string jockey_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jockeys/"+ (jockey_id==null? "" : System.Uri.EscapeDataString(jockey_id))+"/analysis/distances&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JockeyDistanceAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Jockey Owner Analysis
		/// Owner statistics for a jockey (STANDARD PLAN)
		/// Jockey_owner_analysis_v1_jockeys__jockey_id__analysis_owners_get v1/jockeys/{jockey_id}/analysis/owners
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<JockeyOwnerAnalysis> Jockey_owner_analysis_v1_jockeys__jockey_id__analysis_owners_getAsync(string jockey_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jockeys/"+ (jockey_id==null? "" : System.Uri.EscapeDataString(jockey_id))+"/analysis/owners&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JockeyOwnerAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Jockey Trainer Analysis
		/// Trainer statistics for a jockey (STANDARD PLAN)
		/// Jockey_trainer_analysis_v1_jockeys__jockey_id__analysis_trainers_get v1/jockeys/{jockey_id}/analysis/trainers
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<JockeyTrainerAnalysis> Jockey_trainer_analysis_v1_jockeys__jockey_id__analysis_trainers_getAsync(string jockey_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jockeys/"+ (jockey_id==null? "" : System.Uri.EscapeDataString(jockey_id))+"/analysis/trainers&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<JockeyTrainerAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Jockey Results
		/// Full historic results for a jockey (PRO PLAN)
		/// Jockey_results_v1_jockeys__jockey_id__results_get v1/jockeys/{jockey_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Jockey_results_v1_jockeys__jockey_id__results_getAsync(string jockey_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/jockeys/"+ (jockey_id==null? "" : System.Uri.EscapeDataString(jockey_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Meets
		/// <p>Get a list of north american race meets (STANDARD PLAN)</p><p><b>Standard Plan Regional Add-on:</b> £49.99 p/m North American racing add-on subscription required to access this endpoint.</p><p><b>Tracking began 1st July 2023.</b></p><p><a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
		/// List_meets_v1_north_america_meets_get v1/north-america/meets
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<MeetsResponse> List_meets_v1_north_america_meets_getAsync(string start_date, string end_date, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/north-america/meets?start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<MeetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Meet Entries
		/// <p>Get entries for a north american meet by meet id (STANDARD PLAN)</p><p><b>Standard Plan Regional Add-on:</b> £49.99 p/m North American racing add-on subscription required to access this endpoint.</p><p><b>Tracking began 1st July 2023.</b></p><p><a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
		/// Meet_entries_v1_north_america_meets__meet_id__entries_get v1/north-america/meets/{meet_id}/entries
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<EntriesResponse> Meet_entries_v1_north_america_meets__meet_id__entries_getAsync(string meet_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/north-america/meets/"+ (meet_id==null? "" : System.Uri.EscapeDataString(meet_id))+"/entries";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<EntriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Meet Results
		/// <p>Get results for a north american meet by meet id (STANDARD PLAN)</p><p><b>Standard Plan Regional Add-on:</b> £49.99 p/m North American racing add-on subscription required to access this endpoint.</p><p><b>Tracking began 1st July 2023.</b></p><p><a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
		/// Meet_results_v1_north_america_meets__meet_id__results_get v1/north-america/meets/{meet_id}/results
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<ResultsResponse> Meet_results_v1_north_america_meets__meet_id__results_getAsync(string meet_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/north-america/meets/"+ (meet_id==null? "" : System.Uri.EscapeDataString(meet_id))+"/results";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Owners
		/// Search owners by name (STANDARD PLAN)
		/// Search_owners_v1_owners_search_get v1/owners/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Owners> Search_owners_v1_owners_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/owners/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Owners>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Owner Course Analysis
		/// Course statistics for an owner (STANDARD PLAN)
		/// Owner_course_analysis_v1_owners__owner_id__analysis_courses_get v1/owners/{owner_id}/analysis/courses
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<OwnerCourseAnalysis> Owner_course_analysis_v1_owners__owner_id__analysis_courses_getAsync(string owner_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/owners/"+ (owner_id==null? "" : System.Uri.EscapeDataString(owner_id))+"/analysis/courses&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OwnerCourseAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Owner Distance Analysis
		/// Distance statistics for an owner (STANDARD PLAN)
		/// Owner_distance_analysis_v1_owners__owner_id__analysis_distances_get v1/owners/{owner_id}/analysis/distances
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<OwnerDistanceAnalysis> Owner_distance_analysis_v1_owners__owner_id__analysis_distances_getAsync(string owner_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/owners/"+ (owner_id==null? "" : System.Uri.EscapeDataString(owner_id))+"/analysis/distances&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OwnerDistanceAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Owner Jockey Analysis
		/// Jockey statistics for an owner (STANDARD PLAN)
		/// Owner_jockey_analysis_v1_owners__owner_id__analysis_jockeys_get v1/owners/{owner_id}/analysis/jockeys
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<OwnerJockeyAnalysis> Owner_jockey_analysis_v1_owners__owner_id__analysis_jockeys_getAsync(string owner_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/owners/"+ (owner_id==null? "" : System.Uri.EscapeDataString(owner_id))+"/analysis/jockeys&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OwnerJockeyAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Owner Trainer Analysis
		/// Trainer statistics for an owner (STANDARD PLAN)
		/// Owner_trainer_analysis_v1_owners__owner_id__analysis_trainers_get v1/owners/{owner_id}/analysis/trainers
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<OwnerTrainerAnalysis> Owner_trainer_analysis_v1_owners__owner_id__analysis_trainers_getAsync(string owner_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/owners/"+ (owner_id==null? "" : System.Uri.EscapeDataString(owner_id))+"/analysis/trainers&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<OwnerTrainerAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Owner Results
		/// Full historic results for an owner (PRO PLAN)
		/// Owner_results_v1_owners__owner_id__results_get v1/owners/{owner_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Owner_results_v1_owners__owner_id__results_getAsync(string owner_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/owners/"+ (owner_id==null? "" : System.Uri.EscapeDataString(owner_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecards Basic
		/// Get today and tomorrows advanced racecards (BASIC PLAN)
		/// List_racecards_basic_v1_racecards_basic_get v1/racecards/basic
		/// </summary>
		/// <param name="day">Query racecards by day:<br> today, tomorrow</param>
		/// <param name="region_codes"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course_ids">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<Racecards> List_racecards_basic_v1_racecards_basic_getAsync(string day, string[] region_codes, string[] course_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/basic?day=" + (day==null? "" : System.Uri.EscapeDataString(day))+"&"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course_ids.Select(z => $"course_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Racecards>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecards Big Races
		/// Get future big race's racecards, such as Cheltenham, The Grand National and The Derby (STANDARD PLAN)
		/// List_racecards_big_races_v1_racecards_big_races_get v1/racecards/big-races
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p><p>Date must be today or greater, defaults to today.</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region_codes"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course_ids">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<RacecardsOdds> List_racecards_big_races_v1_racecards_big_races_getAsync(string start_date, string end_date, string[] region_codes, string[] course_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/big-races?start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course_ids.Select(z => $"course_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardsOdds>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecards Free
		/// Get today and tomorrows basic racecards (FREE PLAN)
		/// List_racecards_free_v1_racecards_free_get v1/racecards/free
		/// </summary>
		/// <param name="day">Query racecards by day:<br> today, tomorrow</param>
		/// <param name="region_codes"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course_ids">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<RacecardsBasic> List_racecards_free_v1_racecards_free_getAsync(string day, string[] region_codes, string[] course_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/free?day=" + (day==null? "" : System.Uri.EscapeDataString(day))+"&"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course_ids.Select(z => $"course_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardsBasic>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecards Pro
		/// Get past and future advanced racecards by date, including runner odds for UK & IRE racing. (PRO PLAN)<br> (Past racecards available from 2023-01-23. Future racecards available up to 1 week in advance.)
		/// List_racecards_pro_v1_racecards_pro_get v1/racecards/pro
		/// </summary>
		/// <param name="date">Query racecards by date with format YYYY-MM-DD (e.g 2023-04-05)</param>
		/// <param name="region_codes"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course_ids">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<RacecardsOdds> List_racecards_pro_v1_racecards_pro_getAsync(string date, string[] region_codes, string[] course_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/pro?date=" + (date==null? "" : System.Uri.EscapeDataString(date))+"&"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course_ids.Select(z => $"course_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardsOdds>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecards Standard
		/// Get today and tomorrows advanced racecards, including runner odds for UK & IRE racing. (STANDARD PLAN)
		/// List_racecards_standard_v1_racecards_standard_get v1/racecards/standard
		/// </summary>
		/// <param name="day">Query racecards by day:<br> today, tomorrow</param>
		/// <param name="region_codes"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course_ids">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<RacecardsOdds> List_racecards_standard_v1_racecards_standard_getAsync(string day, string[] region_codes, string[] course_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/standard?day=" + (day==null? "" : System.Uri.EscapeDataString(day))+"&"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course_ids.Select(z => $"course_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardsOdds>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecard Summaries
		/// List racecard summaries for a given date (BASIC PLAN)
		/// List_racecard_summaries_v1_racecards_summaries_get v1/racecards/summaries
		/// </summary>
		/// <param name="date">Query racecard summaries by date with format YYYY-MM-DD (e.g 2023-04-05)</param>
		/// <param name="region_codes"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course_ids">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <returns>Successful Response</returns>
		public async Task<RacecardsSummary> List_racecard_summaries_v1_racecards_summaries_getAsync(string date, string[] region_codes, string[] course_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/summaries?date=" + (date==null? "" : System.Uri.EscapeDataString(date))+"&"+string.Join("&", region_codes.Select(z => $"region_codes={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course_ids.Select(z => $"course_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardsSummary>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Racecard Horse Results
		/// Get full historic results for a horse on today or tomorrow's racecards (BASIC PLAN)
		/// List_racecard_horse_results_v1_racecards__horse_id__results_get v1/racecards/{horse_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> List_racecard_horse_results_v1_racecards__horse_id__results_getAsync(string horse_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/"+ (horse_id==null? "" : System.Uri.EscapeDataString(horse_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Race Pro
		/// Get any past or future race by race id, including runner odds for UK & IRE racing. (PRO PLAN)<br> (Past racecards available from 2023-01-23. Future racecards available up to 1 week in advance.)
		/// Race_pro_v1_racecards__race_id__pro_get v1/racecards/{race_id}/pro
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<RacecardOdds> Race_pro_v1_racecards__race_id__pro_getAsync(string race_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/"+ (race_id==null? "" : System.Uri.EscapeDataString(race_id))+"/pro";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardOdds>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Race Standard
		/// Get any race for today or tomorrow (or if classified as a 'big race') by race id, including runner odds for UK & IRE racing. (STANDARD PLAN)
		/// Race_standard_v1_racecards__race_id__standard_get v1/racecards/{race_id}/standard
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<RacecardOdds> Race_standard_v1_racecards__race_id__standard_getAsync(string race_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/racecards/"+ (race_id==null? "" : System.Uri.EscapeDataString(race_id))+"/standard";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RacecardOdds>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Results
		/// <p>All historic results, up to 12 months in the past (STANDARD PLAN)</p><p><b>Pro Plan Add-on:</b> users on the Pro Plan can pay a one-time fee of £249 to remove the 12 month restriction and access the entire results database from this endpoint. <a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
		/// List_results_v1_results_get v1/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> List_results_v1_results_getAsync(string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/results?start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List Todays Results
		/// Today's results (BASIC PLAN)
		/// List_todays_results_v1_results_today_get v1/results/today
		/// </summary>
		/// <param name="region"><p>Query results by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> List_todays_results_v1_results_today_getAsync(string[] region, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/results/today?"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Result
		/// <p>Get a result by race id (STANDARD PLAN)</p>
		/// Result_v1_results__race_id__get v1/results/{race_id}
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Result> Result_v1_results__race_id__getAsync(string race_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/results/"+ (race_id==null? "" : System.Uri.EscapeDataString(race_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Result>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Sires
		/// Search sires by name (STANDARD PLAN)
		/// Search_sires_v1_sires_search_get v1/sires/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Sires> Search_sires_v1_sires_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/sires/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Sires>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sire Class Analysis
		/// <p>Offspring class statistics for sire (STANDARD PLAN).</p><p>For sire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'sir_' sire id prefix with 'hrs_'.</p>
		/// Sire_class_analysis_v1_sires__sire_id__analysis_classes_get v1/sires/{sire_id}/analysis/classes
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<SireClassAnalysis> Sire_class_analysis_v1_sires__sire_id__analysis_classes_getAsync(string sire_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/sires/"+ (sire_id==null? "" : System.Uri.EscapeDataString(sire_id))+"/analysis/classes&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SireClassAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sire Distance Analysis
		/// <p>Offspring distance statistics for sire (STANDARD PLAN).</p><p>For sire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'sir_' sire id prefix with 'hrs_'.</p>
		/// Sire_distance_analysis_v1_sires__sire_id__analysis_distances_get v1/sires/{sire_id}/analysis/distances
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<SireDistanceAnalysis> Sire_distance_analysis_v1_sires__sire_id__analysis_distances_getAsync(string sire_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/sires/"+ (sire_id==null? "" : System.Uri.EscapeDataString(sire_id))+"/analysis/distances&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SireDistanceAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sire Results
		/// <p>Full historic results for sire offspring (PRO PLAN).</p><p>For sire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'sir_' sire id prefix with 'hrs_'.</p>
		/// Sire_results_v1_sires__sire_id__results_get v1/sires/{sire_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Sire_results_v1_sires__sire_id__results_getAsync(string sire_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/sires/"+ (sire_id==null? "" : System.Uri.EscapeDataString(sire_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search Trainers
		/// Search trainers by name (STANDARD PLAN)
		/// Search_trainers_v1_trainers_search_get v1/trainers/search
		/// </summary>
		/// <returns>Successful Response</returns>
		public async Task<Trainers> Search_trainers_v1_trainers_search_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/search?name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Trainers>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Trainer Course Analysis
		/// Course statistics for a trainer (STANDARD PLAN)
		/// Trainer_course_analysis_v1_trainers__trainer_id__analysis_courses_get v1/trainers/{trainer_id}/analysis/courses
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<TrainerCourseAnalysis> Trainer_course_analysis_v1_trainers__trainer_id__analysis_courses_getAsync(string trainer_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/"+ (trainer_id==null? "" : System.Uri.EscapeDataString(trainer_id))+"/analysis/courses&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TrainerCourseAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Trainer Distance Analysis
		/// Distance statistics for a trainer (STANDARD PLAN)
		/// Trainer_distance_analysis_v1_trainers__trainer_id__analysis_distances_get v1/trainers/{trainer_id}/analysis/distances
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<TrainerDistanceAnalysis> Trainer_distance_analysis_v1_trainers__trainer_id__analysis_distances_getAsync(string trainer_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/"+ (trainer_id==null? "" : System.Uri.EscapeDataString(trainer_id))+"/analysis/distances&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TrainerDistanceAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Trainer Horse Age Analysis
		/// Horse age statistics for a trainer (STANDARD PLAN)
		/// Trainer_horse_age_analysis_v1_trainers__trainer_id__analysis_horse_age_get v1/trainers/{trainer_id}/analysis/horse-age
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<TrainerHorseAgeAnalysis> Trainer_horse_age_analysis_v1_trainers__trainer_id__analysis_horse_age_getAsync(string trainer_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/"+ (trainer_id==null? "" : System.Uri.EscapeDataString(trainer_id))+"/analysis/horse-age&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TrainerHorseAgeAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Trainer Jockey Analysis
		/// Jockey statistics for a trainer (STANDARD PLAN)
		/// Trainer_jockey_analysis_v1_trainers__trainer_id__analysis_jockeys_get v1/trainers/{trainer_id}/analysis/jockeys
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<TrainerJockeyAnalysis> Trainer_jockey_analysis_v1_trainers__trainer_id__analysis_jockeys_getAsync(string trainer_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/"+ (trainer_id==null? "" : System.Uri.EscapeDataString(trainer_id))+"/analysis/jockeys&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TrainerJockeyAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Trainer Owner Analysis
		/// Owner statistics for a trainer (STANDARD PLAN)
		/// Trainer_owner_analysis_v1_trainers__trainer_id__analysis_owners_get v1/trainers/{trainer_id}/analysis/owners
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <returns>Successful Response</returns>
		public async Task<TrainerOwnerAnalysis> Trainer_owner_analysis_v1_trainers__trainer_id__analysis_owners_getAsync(string trainer_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/"+ (trainer_id==null? "" : System.Uri.EscapeDataString(trainer_id))+"/analysis/owners&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TrainerOwnerAnalysis>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Trainer Results
		/// Full historic results for a trainer (PRO PLAN)
		/// Trainer_results_v1_trainers__trainer_id__results_get v1/trainers/{trainer_id}/results
		/// </summary>
		/// <param name="start_date"><p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="end_date"><p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p></param>
		/// <param name="region"><p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p></param>
		/// <param name="course">Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.</param>
		/// <param name="type"><p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p></param>
		/// <param name="going"><p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p></param>
		/// <param name="race_class"><p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p></param>
		/// <param name="min_distance_y"><p>Query by minimum race distance (yards)</p></param>
		/// <param name="max_distance_y"><p>Query by maximum race distance (yards)</p></param>
		/// <param name="age_band"><p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p></param>
		/// <param name="sex_restriction"><p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p></param>
		/// <param name="limit">Minimum: 1
		/// Maximum: 50
		// </param>
		/// <returns>Successful Response</returns>
		public async Task<ResultsPage> Trainer_results_v1_trainers__trainer_id__results_getAsync(string trainer_id, string start_date, string end_date, string[] region, string[] course, string[] type, string[] going, string[] race_class, int min_distance_y, int max_distance_y, string[] age_band, string[] sex_restriction, int limit, int skip, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/trainers/"+ (trainer_id==null? "" : System.Uri.EscapeDataString(trainer_id))+"/results&start_date=" + (start_date==null? "" : System.Uri.EscapeDataString(start_date))+"&end_date=" + (end_date==null? "" : System.Uri.EscapeDataString(end_date))+"&"+string.Join("&", region.Select(z => $"region={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", course.Select(z => $"course={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", type.Select(z => $"type={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", going.Select(z => $"going={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", race_class.Select(z => $"race_class={System.Uri.EscapeDataString(z.ToString())}"))+"&min_distance_y="+min_distance_y+"&max_distance_y="+max_distance_y+"&"+string.Join("&", age_band.Select(z => $"age_band={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sex_restriction.Select(z => $"sex_restriction={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&skip="+skip;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResultsPage>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

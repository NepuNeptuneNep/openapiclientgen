//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APIResponseSimilarity
	{
		
		/// <summary>
		/// Whether or not the request was successfully processed or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public System.Nullable<System.Boolean> Error { get; set; }
		
		/// <summary>
		/// Error message if the request was unsuccessful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Contains the response data if the request was successful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public APIResponseSimilarityResponse Response { get; set; }
	}
	
	public class APIResponseSimilarityResponse
	{
		
		/// <summary>
		/// Contains all the similarity items representing songs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="similarity_list")]
		public APIResponseSimilarityResponseSimilarity_list[] APIResponseSimilarityResponseSimilarity_list { get; set; }
	}
	
	public class APIResponseSimilarityResponseSimilarity_list
	{
		
		/// <summary>
		/// Artist's song name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artist_name")]
		public string Artist_name { get; set; }
		
		/// <summary>
		/// Artist URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artist_url")]
		public string Artist_url { get; set; }
		
		/// <summary>
		/// Song internal identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Index internal identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index_id")]
		public System.Nullable<System.Int32> Index_id { get; set; }
		
		/// <summary>
		/// Song lyrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lyrics")]
		public string Lyrics { get; set; }
		
		/// <summary>
		/// Similarity percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentage")]
		public System.Nullable<System.Single> Percentage { get; set; }
		
		/// <summary>
		/// Song name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="song_name")]
		public string Song_name { get; set; }
		
		/// <summary>
		/// Song URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="song_url")]
		public string Song_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APIResponseSong
	{
		
		/// <summary>
		/// Whether or not the request was successfully processed or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public System.Nullable<System.Boolean> Error { get; set; }
		
		/// <summary>
		/// Error message if the request was unsuccessful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Contains the response data if the request was successful.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public APIResponseSongResponse Response { get; set; }
	}
	
	public class APIResponseSongResponse
	{
		
		/// <summary>
		/// Contains all the songs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public APIResponseSongResponseResults[] APIResponseSongResponseResults { get; set; }
	}
	
	public class APIResponseSongResponseResults
	{
		
		/// <summary>
		/// Song internal identifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Song and Artist name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// API endpoint to search similarity using content
		/// Endpoint for an end-user client to search similarity by content.
		/// 
		/// If you want to run the /similarity/by_content operation, you can do so via an HTTP POST command to the following URL:
		/// 
		/// ```
		/// https://searchly.asuarez.dev/api/v1/similarity/by_content
		/// ```
		/// 
		/// Src_searchly_api_v1_controllers_similarity_by_content similarity/by_content
		/// </summary>
		/// <param name="requestBody">Body wrapper for the request.</param>
		/// <returns>Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error.</returns>
		public async Task<APIResponseSimilarity> Src_searchly_api_v1_controllers_similarity_by_contentAsync(Src_searchly_api_v1_controllers_similarity_by_contentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "similarity/by_content";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<APIResponseSimilarity>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// API endpoint to search similarity using a song identifier
		/// Endpoint for an end-user client to search similarity by song identifier.
		/// 
		/// If you want to run the /similarity/by_song operation, you can do so via an HTTP GET command to the following URL:
		/// 
		/// ```
		/// https://searchly.asuarez.dev/api/v1/similarity/by_song
		/// ```
		/// 
		/// Src_searchly_api_v1_controllers_similarity_by_song similarity/by_song
		/// </summary>
		/// <param name="song_id">Song identifier.</param>
		/// <returns>Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error.</returns>
		public async Task<APIResponseSimilarity> Src_searchly_api_v1_controllers_similarity_by_songAsync(int song_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "similarity/by_song?song_id="+song_id;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<APIResponseSimilarity>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// API endpoint to search songs from the database given a query
		/// Endpoint for an end-user client to search songs from the database given a String query.
		/// 
		/// If you want to run the /song/search operation, you can do so via an HTTP GET command to the following URL:
		/// 
		/// ```
		/// https://searchly.asuarez.dev/api/v1/song/search
		/// ```
		/// 
		/// Src_searchly_api_v1_controllers_song_search song/search
		/// </summary>
		/// <param name="query">Query.</param>
		/// <returns>Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error.</returns>
		public async Task<APIResponseSong> Src_searchly_api_v1_controllers_song_searchAsync(string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "song/search?query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<APIResponseSong>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class Src_searchly_api_v1_controllers_similarity_by_contentPostBody
	{
		
		/// <summary>
		/// Content for searching similarity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
